/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import"../chunks/ArrayPool.js";import{clone as e}from"../core/lang.js";import{a as o}from"../chunks/deprecate.js";import"../chunks/object.js";import"../config.js";import{L as r,b as s}from"../chunks/Logger.js";import"../chunks/string.js";import"../chunks/metadata.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"../chunks/PropertyOrigin.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../chunks/Message.js";import n from"../core/Error.js";import{e as p}from"../chunks/ensureType.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{a}from"../chunks/JSONSupport.js";import"../core/urlUtils.js";import{cast as c}from"../core/accessorSupport/decorators/cast.js";import"../chunks/jsonMap.js";import{r as u}from"../chunks/reader.js";import"../chunks/writer.js";import"../chunks/resourceExtension.js";import"../geometry/SpatialReference.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../chunks/Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import l from"../geometry/Extent.js";import"../chunks/mathUtils2.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../chunks/vec3.js";import"../chunks/mathUtils.js";import"../Camera.js";import"../chunks/zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry.js";import{I as j}from"../chunks/Identifiable.js";import h from"../Viewpoint.js";import{T as y}from"../chunks/Thumbnail2.js";var k;const w=r.getLogger("esri.webmap.Bookmark");let g=k=class extends(j(a)){constructor(t){super(t),this.name=null,this.thumbnail=new y}set extent(t){o(w,"extent",{replacement:"viewpoint",version:"4.17"}),this._set("viewpoint",new h({targetGeometry:t.clone()})),this._set("extent",t)}castThumbnail(t){return"string"==typeof t?new y({url:t}):p(y,t)}set viewpoint(t){const e=t.targetGeometry;if(s(e)||"extent"!==e.type){const e=new n("invalid-viewpoint","'viewpoint.targetGeometry' should be an extent",{viewpoint:t});w.error(e)}else this._set("extent",e.clone()),this._set("viewpoint",t)}readViewpoint(t,e){const{extent:o,viewpoint:r}=e;return h.fromJSON(r||{targetGeometry:o})}clone(){return new k(e({name:this.name,thumbnail:this.thumbnail,viewpoint:this.viewpoint}))}};t([i({type:l,nonNullable:!0,json:{read:!1,write:{isRequired:!0}}})],g.prototype,"extent",null),t([i({type:String,nonNullable:!0,json:{write:{isRequired:!0}}})],g.prototype,"name",void 0),t([i({type:y,json:{write:{overridePolicy:t=>({enabled:!(!t||!t.url)})}}})],g.prototype,"thumbnail",void 0),t([c("thumbnail")],g.prototype,"castThumbnail",null),t([i({type:h,nonNullable:!0,json:{write:!0}})],g.prototype,"viewpoint",null),t([u("viewpoint",["extent","viewpoint"])],g.prototype,"readViewpoint",null),g=k=t([m("esri.webmap.Bookmark")],g);var f=g;export default f;
