/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import{h as e}from"../lang.js";import"../../chunks/deprecate.js";import"../../chunks/object.js";import{revision as s,version as t,buildDate as r}from"../../kernel.js";import"../../config.js";import{i as o,r as n}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import"../accessorSupport/decorators/property.js";import"../Accessor.js";import"../../chunks/PropertyOrigin.js";import"../scheduling.js";import{onAbortOrThrow as i,createAbortError as a,createAbortController as c,isPromiseLike as l,isAbortError as h,o as p}from"../promiseUtils.js";import"../../chunks/Message.js";import u from"../Error.js";import"../../chunks/ensureType.js";import"../accessorSupport/decorators/subclass.js";import"../urlUtils.js";import"../../chunks/resourceExtension.js";import"../watchUtils.js";import{T as m}from"../../chunks/Scheduler.js";const _={geometryEngineWorker:()=>import("../../chunks/geometryEngineWorker.js"),CSVSourceWorker:()=>import("../../chunks/CSVSourceWorker.js"),EdgeProcessingWorker:()=>import("../../chunks/EdgeProcessingWorker.js").then((function(e){return e.b})),ElevationSamplerWorker:()=>import("../../chunks/ElevationSamplerWorker.js"),GeoJSONSourceWorker:()=>import("../../chunks/GeoJSONSourceWorker.js"),LercWorker:()=>import("../../chunks/LercWorker.js"),MemorySourceWorker:()=>import("../../chunks/MemorySourceWorker.js"),PBFDecoderWorker:()=>import("../../chunks/PBFDecoderWorker.js"),Pipeline:()=>import("../../chunks/Pipeline.js"),PointCloudWorker:()=>import("../../chunks/PointCloudWorker.js"),RasterWorker:()=>import("../../chunks/RasterWorker.js"),SceneLayerWorker:()=>import("../../chunks/SceneLayerWorker.js"),WorkerTileHandler:()=>import("../../chunks/WorkerTileHandler.js"),FeatureServiceSnappingSourceWorker:()=>import("../../chunks/FeatureServiceSnappingSourceWorker.js")};var g;!function(e){e[e.HANDSHAKE=0]="HANDSHAKE",e[e.OPEN=1]="OPEN",e[e.OPENED=2]="OPENED",e[e.RESPONSE=3]="RESPONSE",e[e.INVOKE=4]="INVOKE",e[e.ABORT=5]="ABORT",e[e.CLOSE=6]="CLOSE",e[e.OPEN_PORT=7]="OPEN_PORT",e[e.ON=8]="ON"}(g||(g={}));let d=0;function k(){return d++}function f(e){return e?"string"==typeof e?JSON.stringify({name:"message",message:e}):e.toJSON?JSON.stringify(e):JSON.stringify({name:e.name,message:e.message,details:e.details||{stack:e.stack}}):null}function b(e,s,t,r){if(s.type===g.OPEN_PORT)return void e.postMessage(s,[s.port]);if(s.type!==g.INVOKE&&s.type!==g.RESPONSE)return void e.postMessage(s);let o;var n;(n=t)&&"object"==typeof n&&("result"in n||"transferList"in n)?(o=O(t.transferList),s.data=t.result):(o=O(r),s.data=t),o?e.postMessage(s,o):e.postMessage(s)}function j(e){if(!e)return null;const s=e.data;return s?"string"==typeof s?JSON.parse(s):s:null}function O(s){if(!s||!s.length)return null;if(e("esri-workers-arraybuffer-transfer"))return s;const t=s.filter((e=>{return!((s=e)instanceof ArrayBuffer||s&&s.constructor&&"ArrayBuffer"===s.constructor.name);var s}));return t.length?t:null}const{CLOSE:v,ABORT:y,INVOKE:E,RESPONSE:S,OPEN_PORT:M,ON:N}=g;class P{constructor(e){this._timer=null,this._cancelledJobIds=new Set,this._invokeMessages=[],this._invoke=e,this._timer=null,this._process=this._process.bind(this)}push(e){e.type===g.ABORT?this._cancelledJobIds.add(e.jobId):(this._invokeMessages.push(e),null===this._timer&&(this._timer=setTimeout(this._process,0)))}clear(){this._invokeMessages.length=0,this._cancelledJobIds.clear(),this._timer=null}_process(){this._timer=null;for(const e of this._invokeMessages)this._cancelledJobIds.has(e.jobId)||this._invoke(e);this._cancelledJobIds.clear(),this._invokeMessages.length=0}}class W{constructor(e,s){this._port=e,this._outJobs=new Map,this._inJobs=new Map,this._invokeQueue=new P((e=>this._onInvokeMessage(e))),this._messageQueue=new Array,this._client=s.client,this._onMessage=this._onMessage.bind(this),this._channel=s.channel,o(s.scheduler)&&(this._frameTask=s.scheduler.registerTask(m.REMOTE_CLIENT,(e=>this._update(e)),(()=>this._messageQueue.length>0))),this._port.addEventListener("message",this._onMessage),this._port.start()}static connect(e){const s=new MessageChannel;let t;t="function"==typeof e?new e:"default"in e&&"function"==typeof e.default?new e.default:e;const r=new W(s.port1,{channel:s,client:t});return"object"==typeof t&&"remoteClient"in t&&(t.remoteClient=r),W.clients.set(r,t),s.port2}static loadWorker(e){const s=_[e];return s?s():Promise.resolve(null)}close(){this._post({type:v}),this._close()}isBusy(){return this._outJobs.size>0}invoke(e,s,t){const r=t&&t.signal,o=t&&t.transferList;if(!this._port)return Promise.reject(new u("worker:port-closed",`Cannot call invoke('${e}'), port is closed`,{methodName:e,data:s}));const n=k();return new Promise(((t,c)=>{const l=i(r,(()=>{var e;const s=this._outJobs.get(n);s&&(this._outJobs.delete(n),null==(e=s.abortHandle)||e.remove(),this._post({type:y,jobId:n}),c(a()))})),h={resolve:t,reject:c,abortHandle:l,debugInfo:e};this._outJobs.set(n,h),this._post({type:E,jobId:n,methodName:e,abortable:null!=r},s,o)}))}on(e,s){const t=new MessageChannel;function r(e){s(e.data)}return this._port.postMessage({type:g.ON,eventType:e,port:t.port2},[t.port2]),t.port1.addEventListener("message",r),t.port1.start(),{remove(){t.port1.postMessage({type:g.CLOSE}),t.port1.close(),t.port1.removeEventListener("message",r)}}}openPort(){const e=new MessageChannel;return this._post({type:M,port:e.port2}),e.port1}_close(){this._channel&&(this._channel=null),this._port.removeEventListener("message",this._onMessage),this._port.close(),this._outJobs.forEach((e=>{var s;null==(s=e.abortHandle)||s.remove(),e.reject(a(`Worker closing, aborting job calling '${e.debugInfo}'`))})),this._inJobs.clear(),this._outJobs.clear(),this._invokeQueue.clear(),this._port=this._client=null,this._frameTask=n(this._frameTask)}_onMessage(e){o(this._frameTask)?this._messageQueue.push(e):this._processMessage(e)}_processMessage(e){const s=j(e);if(s)switch(s.type){case S:this._onResponseMessage(s);break;case E:this._invokeQueue.push(s);break;case y:this._onAbortMessage(s);break;case v:this._onCloseMessage();break;case M:this._onOpenPortMessage(s);break;case N:this._onOnMessage(s)}}_onAbortMessage(e){const s=this._inJobs,t=e.jobId,r=s.get(t);this._invokeQueue.push(e),r&&(r.controller&&r.controller.abort(),s.delete(t))}_onCloseMessage(){const e=this._client;this._close(),e&&"destroy"in e&&W.clients.get(this)===e&&e.destroy(),W.clients.delete(this),e&&e.remoteClient&&(e.remoteClient=null)}_onInvokeMessage(e){const{methodName:s,jobId:t,data:r,abortable:o}=e,n=o?c():null,i=this._inJobs;let a,p=this._client,u=p[s];try{if(!u&&s&&-1!==s.indexOf(".")){const e=s.split(".");for(let s=0;s<e.length-1;s++)p=p[e[s]],u=p[e[s+1]]}if("function"!=typeof u)throw new TypeError(`${s} is not a function`);a=u.call(p,r,{client:this,signal:n?n.signal:null})}catch(e){return void this._post({type:S,jobId:t,error:f(e)})}l(a)?(i.set(t,{controller:n,promise:a}),a.then((e=>{i.has(t)&&(i.delete(t),this._post({type:S,jobId:t},e))}),(e=>{i.has(t)&&(i.delete(t),h(e)||this._post({type:S,jobId:t,error:f(e||{message:`Error encountered at method ${s}`})}))}))):this._post({type:S,jobId:t},a)}_onOpenPortMessage(e){new W(e.port,{client:this._client})}_onOnMessage(e){const{port:s}=e,t=this._client.on(e.eventType,(e=>{s.postMessage(e)})),r=p(e.port,"message",(e=>{j(e).type===g.CLOSE&&(r.remove(),t.remove(),s.close())}))}_onResponseMessage(e){var s;const{jobId:t,error:r,data:o}=e,n=this._outJobs;if(!n.has(t))return;const i=n.get(t);n.delete(t),null==(s=i.abortHandle)||s.remove(),r?i.reject(u.fromJSON(JSON.parse(r))):i.resolve(o)}_update(e){for(;!e.done&&this._messageQueue.length>0;)this._processMessage(this._messageQueue.shift()),e.madeProgress()}_post(e,s,t){return b(this._port,e,s,t)}}W.kernelInfo={revision:s,version:t,buildDate:r},W.clients=new Map;export default W;export{g as M,k as n,b as p,j as r,f as t};
