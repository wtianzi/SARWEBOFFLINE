/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import{clone as r}from"../../core/lang.js";import"../../chunks/deprecate.js";import"../../chunks/object.js";import"../../config.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/ensureType.js";import{subclass as t}from"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/JSONSupport.js";import"../../core/urlUtils.js";import"../../core/accessorSupport/decorators/aliasOf.js";import"../../chunks/jsonMap.js";import{r as i}from"../../chunks/reader.js";import{w as s}from"../../chunks/writer.js";import"../../chunks/resourceExtension.js";import a from"./Content.js";import{M as p}from"../../chunks/MediaInfo.js";import"./support/ChartMediaInfoValueSeries.js";import"./support/ChartMediaInfoValue.js";import"../../chunks/chartMediaInfoUtils.js";import n from"./BarChartMediaInfo.js";import m from"./ColumnChartMediaInfo.js";import"./support/ImageMediaInfoValue.js";import c from"./ImageMediaInfo.js";import d from"./LineChartMediaInfo.js";import u from"./PieChartMediaInfo.js";const f={base:p,key:"type",defaultKeyValue:"image",typeMap:{"bar-chart":n,"column-chart":m,"line-chart":d,"pie-chart":u,image:c}};var l;let h=l=class extends a{constructor(o){super(o),this.activeMediaInfoIndex=null,this.description=null,this.mediaInfos=null,this.title=null,this.type="media"}readMediaInfos(o){return o&&o.map((o=>"image"===o.type?c.fromJSON(o):"barchart"===o.type?n.fromJSON(o):"columnchart"===o.type?m.fromJSON(o):"linechart"===o.type?d.fromJSON(o):"piechart"===o.type?u.fromJSON(o):void 0)).filter(Boolean)}writeMediaInfos(o,r){r.mediaInfos=o&&o.map((o=>o.toJSON()))}clone(){return new l({activeMediaInfoIndex:this.activeMediaInfoIndex,description:this.description,mediaInfos:this.mediaInfos?r(this.mediaInfos):null,title:this.title})}};o([e()],h.prototype,"activeMediaInfoIndex",void 0),o([e({json:{write:!0,origins:{"web-scene":{write:!1,read:!1}}}})],h.prototype,"description",void 0),o([e({types:[f]})],h.prototype,"mediaInfos",void 0),o([i("mediaInfos")],h.prototype,"readMediaInfos",null),o([s("mediaInfos")],h.prototype,"writeMediaInfos",null),o([e({json:{write:!0,origins:{"web-scene":{write:!1,read:!1}}}})],h.prototype,"title",void 0),o([e({type:["media"],readOnly:!0,json:{read:!1,write:!0}})],h.prototype,"type",void 0),h=l=o([t("esri.popup.content.MediaContent")],h);var j=h;export default j;export{f as t};
