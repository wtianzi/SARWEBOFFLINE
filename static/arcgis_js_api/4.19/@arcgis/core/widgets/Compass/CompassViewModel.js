/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../core/lang.js";import"../../chunks/deprecate.js";import"../../chunks/object.js";import"../../config.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import e from"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/ensureType.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Evented.js";import"../../core/Collection.js";import"../../core/urlUtils.js";import"../../chunks/resourceExtension.js";import s from"../../core/Handles.js";import{init as i}from"../../core/watchUtils.js";import{G as a}from"../../chunks/GoTo.js";let n=class extends(a(e)){constructor(t){super(t),this._handles=new s,this.orientation={x:0,y:0,z:0},this.view=null,this._updateForCamera=this._updateForCamera.bind(this),this._updateForRotation=this._updateForRotation.bind(this),this._updateRotationWatcher=this._updateRotationWatcher.bind(this)}initialize(){this._handles.add(i(this,"view",this._updateRotationWatcher))}destroy(){this._handles.destroy(),this._handles=null,this.view=null}get canShowNorth(){const t=this.get("view.spatialReference");return!(!t||!t.isWebMercator&&!t.isGeographic)}get state(){return this.get("view.ready")?this.canShowNorth?"compass":"rotation":"disabled"}reset(){if(!this.get("view.ready"))return;const t={};"2d"===this.view.type?t.rotation=0:t.heading=0,this.callGoTo({target:t})}_updateForRotation(t){null!=t&&(this.orientation={z:t})}_updateForCamera(t){if(!t)return;const o=-t.heading;this.orientation={x:0,y:0,z:o}}_updateRotationWatcher(t){this._handles.removeAll(),t&&("2d"===t.type?this._handles.add(i(this,"view.rotation",this._updateForRotation)):this._handles.add(i(this,"view.camera",this._updateForCamera)))}};t([o({readOnly:!0})],n.prototype,"canShowNorth",null),t([o()],n.prototype,"orientation",void 0),t([o({readOnly:!0})],n.prototype,"state",null),t([o()],n.prototype,"view",void 0),n=t([r("esri.widgets.CompassViewModel")],n);var h=n;export default h;
