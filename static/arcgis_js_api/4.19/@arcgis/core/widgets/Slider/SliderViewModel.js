/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../core/lang.js";import"../../chunks/deprecate.js";import"../../chunks/object.js";import"../../config.js";import{L as e,i as s}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import i from"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/Message.js";import o from"../../core/Error.js";import"../../chunks/ensureType.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../chunks/resourceExtension.js";const l=e.getLogger("esri.widgets.Slider.SliderViewModel");let a=class extends i{constructor(t){super(t),this.precision=4,this.thumbsConstrained=!0}set labelFormatFunction(t){this._set("labelFormatFunction",t)}set inputFormatFunction(t){this._set("inputFormatFunction",t)}set inputParseFunction(t){this._set("inputParseFunction",t)}get labels(){const{max:t,min:e,values:s}=this,r=s&&s.length?s.map(((t,e)=>this.getLabelForValue(t,"value",e))):[];return{max:this.getLabelForValue(t,"max"),min:this.getLabelForValue(e,"min"),values:r}}set max(t){this.setMax(t)}set min(t){this.setMin(t)}get state(){const{max:t,min:e}=this;return s(t)&&s(e)?"ready":"disabled"}set values(t){const{max:e,min:r}=this,i=this.values;i&&t&&i.length===t.length&&i.every(((e,s)=>e===t[s]))||(this._set("values",null),t&&t.length&&(s(r)&&t.some((t=>t<r))&&(this.min=Math.min(...t)),s(e)&&t.some((t=>t>e))&&(this.max=Math.max(...t))),this._set("values",t))}toPrecision(t){return parseFloat(t.toFixed(this.precision))}defaultLabelFormatFunction(t){const{max:e,min:s,precision:r}=this,i=e-s>10?2:r;return parseFloat(t.toFixed(i)).toString()}defaultInputFormatFunction(t){return t.toString()}defaultInputParseFunction(t){return parseFloat(t)}getBoundsForValueAtIndex(t){const{thumbsConstrained:e,max:r,min:i,values:o}=this;if(e){const e=t-1,n=t+1;return{min:s(o[e])?o[e]:i,max:s(o[n])?o[n]:r}}return{min:i,max:r}}getLabelForValue(t,e,r){return s(t)?this.labelFormatFunction?this.labelFormatFunction(t,e,r):this.defaultLabelFormatFunction(t):null}setMax(t){const{max:e,values:s}=this;if(isNaN(t))return void this._logError("slider:invalid-value","Property 'max' must of type 'number'.");if(null===t)return void this._set("max",null);const r=this.toPrecision(t);if(e!==r&&(this._set("max",r),s&&s.length))for(let t=0;t<s.length;t++)r<s[t]&&this.setValue(t,r)}setMin(t){const{min:e,values:s}=this;if(isNaN(t))return void this._logError("slider:invalid-value","Property 'min' must of type 'number'.");if(null===t)return void this._set("min",null);const r=this.toPrecision(t);if(e!==r&&(this._set("min",r),s&&s.length))for(let t=0;t<s.length;t++)r>s[t]&&this.setValue(t,r)}setValue(t,e){if(isNaN(e))return void this._logError("slider:invalid-value","Members of property 'values' must of type 'number'.");const{values:s}=this,r=s[t],i=this.toPrecision(e);if(r===i)return;const o=[...s];o[t]=i,this._set("values",o),this.notifyChange("labels")}_logError(t,e,s){l.error(new o(t,e,s))}};t([r()],a.prototype,"labelFormatFunction",null),t([r()],a.prototype,"inputFormatFunction",null),t([r()],a.prototype,"inputParseFunction",null),t([r({readOnly:!0})],a.prototype,"labels",null),t([r()],a.prototype,"max",null),t([r()],a.prototype,"min",null),t([r()],a.prototype,"precision",void 0),t([r({readOnly:!0})],a.prototype,"state",null),t([r()],a.prototype,"thumbsConstrained",void 0),t([r()],a.prototype,"values",null),a=t([n("esri.widgets.Slider.SliderViewModel")],a);var u=a;export default u;
