/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../core/lang.js";import"../../chunks/deprecate.js";import"../../chunks/object.js";import"../../config.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import s from"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/ensureType.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Evented.js";import"../../core/Collection.js";import"../../core/urlUtils.js";import"../../chunks/resourceExtension.js";import o from"../../core/Handles.js";import{on as r,whenTrueOnce as n,pausable as p}from"../../core/watchUtils.js";let a=class extends s{constructor(e){super(e),this._viewpointHandle=null,this._handles=new o,this.group=null}initialize(){this._handles.add(r(this,"view.ui","expand",(e=>{const{target:t}=e;t&&t!==this&&t.expanded&&t.group&&t.group===this.group&&this._collapse()})))}destroy(){this._viewpointHandle=null,this.view=null,this._handles.destroy(),this._handles=null}set autoCollapse(e){this._set("autoCollapse",e),this._watchViewpoint()}set expanded(e){const t=!!e;this._set("expanded",t);const s=this.get("view.ui");s&&s.emit("expand",{target:this}),this._viewpointHandleChange(t)}get state(){return this.get("view.ready")?"ready":"disabled"}set view(e){this._get("view")!==e&&(this._set("view",e),e&&n(e,"ready",(()=>{this.view===e&&this._watchViewpoint()})))}_viewpointHandleChange(e){this._viewpointHandle&&(e?n(this.view,"stationary",(()=>this._viewpointHandle.resume())):this._viewpointHandle.pause())}_watchViewpoint(){const e="viewpoint";this._handles.remove(e),this._viewpointHandle=null;const{autoCollapse:t,view:s}=this;if(s&&t){const t="3d"===s.type?"camera":"viewpoint",i=p(s,t,(()=>this._collapse()));this._handles.add(i,e),this._viewpointHandle=i}}_collapse(){this.expanded=!1}};e([t({value:!1})],a.prototype,"autoCollapse",null),e([t({value:!1})],a.prototype,"expanded",null),e([t()],a.prototype,"group",void 0),e([t({readOnly:!0})],a.prototype,"state",null),e([t({value:null})],a.prototype,"view",null),a=e([i("esri.widgets.Expand.ExpandViewModel")],a);var l=a;export default l;
