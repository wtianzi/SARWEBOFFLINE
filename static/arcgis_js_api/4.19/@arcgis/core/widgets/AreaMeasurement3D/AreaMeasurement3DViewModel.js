/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../core/lang.js";import"../../chunks/deprecate.js";import"../../chunks/object.js";import"../../kernel.js";import"../../config.js";import{b as t,u as s,i,L as r}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import n from"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/compilerUtils.js";import"../../chunks/ensureType.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{E as l}from"../../chunks/Evented.js";import"../../core/Collection.js";import"../../chunks/collectionUtils.js";import"../../chunks/JSONSupport.js";import"../../chunks/Promise.js";import"../../chunks/Loadable.js";import"../../chunks/asyncUtils.js";import"../../core/urlUtils.js";import{aliasOf as h}from"../../core/accessorSupport/decorators/aliasOf.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/jsonMap.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../chunks/shared.js";import"../../chunks/writer.js";import"../../chunks/resourceExtension.js";import"../../chunks/persistableUrlUtils.js";import p from"../../geometry/SpatialReference.js";import{o as m}from"../../chunks/locale.js";import"../../chunks/number.js";import{fetchMessageBundle as c}from"../../intl.js";import"../../request.js";import"../../chunks/assets.js";import"../../geometry/Geometry.js";import u from"../../geometry/Point.js";import"../../chunks/Ellipsoid.js";import"../../geometry/support/webMercatorUtils.js";import{s as d}from"../../geometry/Extent.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalFolder.js";import"../../portal/PortalGroup.js";import"../../portal/PortalUser.js";import"../../portal/Portal.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../portal/PortalItem.js";import{d as g,p as _}from"../../chunks/mathUtils2.js";import{c as y}from"../../chunks/vec3f64.js";import"../../chunks/common.js";import{s as f,a as j,e as v,b,h as L,d as w,k,c as S,n as P,g as C,o as M}from"../../chunks/vec3.js";import{p as x,k as D,t as V}from"../../chunks/mathUtils.js";import"../../chunks/colorUtils.js";import"../../Color.js";import"../../chunks/zmUtils.js";import"../../geometry/Multipoint.js";import U from"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../geometry.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/domains.js";import"../../chunks/arcadeOnDemand.js";import"../../layers/support/fieldUtils.js";import"../../popup/content/Content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/CustomContent.js";import"../../chunks/date.js";import"../../popup/support/FieldInfoFormat.js";import"../../popup/FieldInfo.js";import"../../popup/content/FieldsContent.js";import"../../chunks/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/MediaContent.js";import"../../popup/content/TextContent.js";import"../../popup/content.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/RelatedRecordsInfo.js";import"../../chunks/Identifiable.js";import"../../support/actions/ActionBase.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../PopupTemplate.js";import"../../symbols/Symbol.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol3DLayer.js";import{s as A}from"../../chunks/screenUtils.js";import"../../chunks/opacityUtils.js";import"../../chunks/materialUtils.js";import"../../symbols/edges/Edges3D.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/utils.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/FillSymbol.js";import"../../symbols/patterns/StylePattern3D.js";import"../../symbols/FillSymbol3DLayer.js";import"../../chunks/colors.js";import"../../chunks/Symbol3DOutline.js";import"../../symbols/Font.js";import"../../symbols/IconSymbol3DLayer.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/Symbol3D.js";import"../../chunks/Thumbnail.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../chunks/Symbol3DVerticalOffset.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/MeshSymbol3D.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureFillSymbol.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../symbols.js";import"../../chunks/uid.js";import"../../Graphic.js";import R from"../../core/Handles.js";import"../../layers/Layer.js";import"../../chunks/LegendOptions.js";import"../../renderers/visualVariables/support/ColorStop.js";import"../../renderers/support/AuthoringInfo.js";import"../../renderers/support/AuthoringInfoVisualVariable.js";import"../../tasks/support/ColorRamp.js";import"../../tasks/support/AlgorithmicColorRamp.js";import"../../tasks/support/MultipartColorRamp.js";import"../../chunks/colorRamps.js";import"../../renderers/Renderer.js";import"../../renderers/visualVariables/VisualVariable.js";import"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../renderers/visualVariables/support/SizeStop.js";import"../../renderers/visualVariables/SizeVariable.js";import"../../chunks/sizeVariableUtils.js";import{f as O,e as G,c as I,t as E,s as T,q as z,p as F,S as q,W,w as H}from"../../chunks/unitUtils.js";import"../../chunks/lengthUtils.js";import"../../chunks/visualVariableUtils.js";import"../../chunks/VisualVariablesMixin.js";import"../../chunks/symbolConversion.js";import"../../symbols/support/jsonUtils.js";import"../../renderers/support/ClassBreakInfo.js";import"../../chunks/commonProperties.js";import"../../renderers/ClassBreaksRenderer.js";import"../../chunks/diffUtils.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/devEnvironmentUtils.js";import"../../chunks/styleUtils.js";import"../../renderers/UniqueValueRenderer.js";import"../../chunks/normalizeUtilsCommon.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/MemCache.js";import"../../chunks/ItemCache.js";import"../../chunks/utils3.js";import"../../symbols/support/cimSymbolUtils.js";import"../../chunks/utils2.js";import"../../chunks/LRUCache.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/support/AttributeColorInfo.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/support/HeatmapColorStop.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/support/jsonUtils.js";import"../../chunks/timeUtils.js";import"../../TimeExtent.js";import"../../TimeInterval.js";import"../../chunks/ReadOnlyMultiOriginJSONSupport.js";import"../../chunks/MultiOriginJSONSupport.js";import{init as B,whenTrue as N}from"../../core/watchUtils.js";import"../../chunks/arcgisLayerUrl.js";import"../../chunks/fieldType.js";import"../../geometry/HeightModelInfo.js";import{n as Q,i as $,t as J}from"../../chunks/mat4.js";import"../../chunks/pe.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../geometry/support/GeographicTransformation.js";import{projectPointToVector as K,projectPointToWGS84ComparableLonLat as Z,projectVectorToWGS84ComparableLonLat as X,canProjectWithoutEngine as Y,canProjectToWGS84ComparableLonLat as ee,projectDirection as te,projectVectorToVector as se}from"../../geometry/projection.js";import"../../chunks/OperationalLayer.js";import"../../chunks/ElevationInfo.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/commonProperties2.js";import"../../chunks/Scheduler.js";import"../../core/HandleOwner.js";import"../../chunks/_commonjsHelpers.js";import"../../core/workers/RemoteClient.js";import"../../core/workers/Connection.js";import"../../core/workers/workers.js";import"../../form/ExpressionInfo.js";import"../../form/elements/FieldElement.js";import"../../form/support/elements.js";import"../../form/elements/inputs/Input.js";import"../../form/elements/inputs/TextInput.js";import"../../form/elements/inputs/BarcodeScannerInput.js";import"../../form/elements/inputs/ComboBoxInput.js";import"../../form/elements/inputs/DateTimePickerInput.js";import"../../form/elements/inputs/RadioButtonsInput.js";import"../../form/elements/inputs/TextAreaInput.js";import"../../form/elements/inputs/TextBoxInput.js";import"../../form/elements/support/inputs.js";import"../../form/elements/GroupElement.js";import"../../form/FormTemplate.js";import{inverseGeodeticSolver as ie}from"../../geometry/support/geodesicUtils.js";import"../../chunks/geometryEngineBase.js";import"../../chunks/hydrated.js";import{geodesicArea as re}from"../../geometry/geometryEngine.js";import{c as oe}from"../../chunks/vec4f64.js";import{e as ne}from"../../chunks/earcut.js";import"../../chunks/deduplicate.js";import"../../chunks/triangulationUtils.js";import{c as ae}from"../../chunks/quatf64.js";import"../../chunks/mat3.js";import"../../chunks/BufferView.js";import{s as le,d as he}from"../../chunks/vec2.js";import"../../chunks/vec4.js";import"../../chunks/quat.js";import"../../chunks/domUtils.js";import"../../chunks/widgetUtils.js";import"../../chunks/projector.js";import{L as pe,G as me,E as ce,f as ue}from"../../chunks/quantityFormatUtils.js";import"../../chunks/accessibleHandler.js";import"../../chunks/messageBundle.js";import"../support/widget.js";import"../../chunks/vmEvent.js";import"../../chunks/index.js";import"../Widget.js";import"../../chunks/zscale.js";import"../../chunks/queryZScale.js";import"../../layers/support/Field.js";import"../../tasks/support/FeatureSet.js";import"../../layers/FeatureLayer.js";import"../../chunks/ArcGISService.js";import"../../chunks/BlendLayer.js";import"../../chunks/CustomParametersMixin.js";import"../../chunks/PortalLayer.js";import"../../chunks/RefreshableLayer.js";import"../../chunks/ScaleRangeLayer.js";import"../../layers/support/TimeInfo.js";import"../../chunks/TemporalLayer.js";import"../../layers/support/FeatureReductionSelection.js";import"../../layers/support/FeatureReductionCluster.js";import"../../chunks/labelUtils.js";import"../../layers/support/LabelClass.js";import"../../chunks/defaultsJSON.js";import"../../chunks/defaults.js";import"../../chunks/featureReductionUtils.js";import"../../layers/support/FeatureTemplate.js";import"../../layers/support/FeatureType.js";import"../../chunks/fieldProperties.js";import"../../layers/support/FieldsIndex.js";import"../../layers/support/GeometryFieldsInfo.js";import"../../chunks/labelingInfo.js";import"../../layers/support/LayerFloorInfo.js";import"../../layers/support/Relationship.js";import"../../chunks/DataLayerSource.js";import"../../chunks/styleUtils2.js";import"../../support/popupUtils.js";import"../../tasks/support/AttachmentQuery.js";import"../../tasks/support/Query.js";import"../../tasks/support/StatisticDefinition.js";import"../../tasks/support/RelationshipQuery.js";import"../../chunks/utils4.js";import"../../tasks/Task.js";import"../../rest/query/support/AttachmentInfo.js";import"../../chunks/query.js";import"../../chunks/executeRelationshipQuery.js";import"../../chunks/pbf.js";import"../../chunks/OptimizedFeatureSet.js";import"../../chunks/pbfQueryUtils.js";import"../../chunks/featureConversionUtils.js";import"../../tasks/QueryTask.js";import"../../chunks/aaBoundingBox.js";import"../../chunks/vec4f32.js";import"../../chunks/quantizationUtils.js";import"../../symbols/support/symbolUtils.js";import"../../chunks/byteSizeEstimations.js";import"../../chunks/dehydratedFeatures.js";import"../../chunks/ElevationProvider.js";import"../../chunks/interactiveToolUtils.js";import"../../chunks/throttle.js";import"../Attachments.js";import"../Attachments/AttachmentsViewModel.js";import"../Feature/FeatureViewModel.js";import"../Feature.js";import"../../chunks/AnchorElementViewModel.js";import"../Spinner/SpinnerViewModel.js";import"../Popup.js";import"../../chunks/Queue.js";import"../../chunks/InputManager.js";import"../../chunks/layerViewUtils.js";import"../../chunks/actions.js";import"../Popup/PopupViewModel.js";import"../../chunks/GoTo.js";import"../../chunks/MapUtils.js";import{b as de}from"../../chunks/screenUtils2.js";import{c as ge}from"../../chunks/vec2f64.js";import{S as _e,g as ye,l as fe,n as je,C as ve,p as be,a as Le,b as we,D as ke,V as Se,q as Pe,s as Ce,t as Me,F as xe,R as De,M as Ve,K as Ue,G as Ae,m as Re}from"../../chunks/VertexColor.glsl.js";import{P as Oe}from"../../chunks/Program.js";import"../../chunks/FramebufferObject.js";import{s as Ge,m as Ie,a as Ee,d as Te}from"../../chunks/renderState.js";import"../../chunks/glUtil.js";import"../../chunks/InterleavedLayout.js";import"../../chunks/mat4f32.js";import"../../chunks/vec3f32.js";import"../../chunks/stack.js";import"../../chunks/geometryUtils.js";import{D as ze,P as Fe,G as qe,k as We}from"../../chunks/ColorMaterial.js";import"../../chunks/Util.js";import{G as He}from"../../chunks/glUtil3D.js";import"../../chunks/Object3D.js";import"../../chunks/VertexArrayObject.js";import{u as Be}from"../../chunks/lineUtils.js";import"../../chunks/intersectorUtils.js";import{I as Ne}from"../../chunks/Intersector.js";import"../../chunks/Camera.js";import"../../chunks/PiUtils.glsl.js";import"../../chunks/RibbonLineMaterial.js";import"../../chunks/PhysicallyBasedRendering.glsl.js";import"../../chunks/CameraSpace.glsl.js";import"../../chunks/elevationInfoUtils.js";import{E as Qe,c as $e,C as Je,A as Ke}from"../../chunks/AppendVertex.js";import{M as Ze,c as Xe,I as Ye}from"../../chunks/InteractiveToolBase.js";import"../../chunks/VisualElement.js";import{L as et}from"../../chunks/LaserlineVisualElement.js";import{O as tt}from"../../chunks/Object3DVisualElement.js";import{d as st}from"../../chunks/commonProperties4.js";import{I as it}from"../../chunks/InteractiveToolViewModel.js";import{s as rt,h as ot}from"../../chunks/dragEventPipeline3D.js";import{c as nt}from"../../chunks/manipulatorUtils.js";import{c as at,p as lt,m as ht,r as pt}from"../../chunks/viewUtils.js";import{L as mt}from"../../chunks/LineVisualElement.js";import{Q as ct,U as ut}from"../../chunks/UnitNormalizer.js";class dt{constructor(e,t,s){this.editGeometry=e,this.vertex=t,this.pos=s}apply(){let e="redo";t(this.originalPosition)&&(e="apply",this.originalPosition=this.vertex.pos),this._apply(e)}undo(){this.vertex.pos=s(this.originalPosition);const e={updatedVertices:[this.vertex],operation:"undo"};this.editGeometry.emit("change",e)}accumulate(e){return e instanceof dt&&e.vertex===this.vertex&&(this.pos=e.pos,this._apply("apply"),!0)}_apply(e){this.vertex.pos=this.pos,this.editGeometry.components.forEach((e=>e.unnormalizeVertexPositions()));const t={updatedVertices:[this.vertex],operation:e};this.editGeometry.emit("change",t)}}var gt=Object.freeze({__proto__:null,build:function(e){const t=new _e;return t.extensions.add("GL_OES_standard_derivatives"),t.attributes.add("position","vec3"),t.attributes.add("uv0","vec2"),t.vertex.uniforms.add("proj","mat4").add("view","mat4"),t.varyings.add("vUV","vec2"),e.multipassTerrainEnabled&&t.varyings.add("depth","float"),t.vertex.code.add(ye`
    void main(void) {
      vUV = uv0;
      ${e.multipassTerrainEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.multipassTerrainEnabled&&(t.fragment.include(fe),t.include(je,e)),t.fragment.uniforms.add("size","vec2").add("color1","vec4").add("color2","vec4"),t.fragment.include(ve),t.fragment.code.add(ye`
    void main() {
      ${e.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${e.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),t}});class _t extends we{initializeProgram(e){const t=_t.shader.get(),s=this.configuration,i=t.build({OITEnabled:0===s.transparencyPassType,multipassTerrainEnabled:s.multipassTerrainEnabled,cullAboveGround:s.cullAboveGround});return new Oe(e.rctx,i.generateSource("vertex"),i.generateSource("fragment"),ke)}bindPass(e,t,s){Se.bindProjectionMatrix(this.program,s.camera.projectionMatrix),this.program.setUniform2fv("size",t.size),this.program.setUniform4fv("color1",t.color1),this.program.setUniform4fv("color2",t.color2),s.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",s.camera.nearFar),this.program.setUniform2fv("inverseViewport",s.inverseViewport),Pe(this.program,e,s))}bindDraw(e){Se.bindView(this.program,e)}setPipelineState(e){const t=this.configuration,s=3===e,i=2===e;return Ie({blending:t.transparent?s?ft:Ce(e):null,depthTest:{func:Me(e)},depthWrite:s?t.writeDepth&&Ee:xe(e),colorWrite:Te,polygonOffset:s||i?t.polygonOffset&&yt:{factor:-1,units:-25}})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}_t.shader=new De(gt,(()=>Promise.resolve().then((function(){return gt}))));const yt={factor:0,units:-25},ft=Ge(770,1,771,771);class jt extends Le{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!0}}e([be()],jt.prototype,"transparent",void 0),e([be()],jt.prototype,"writeDepth",void 0),e([be()],jt.prototype,"polygonOffset",void 0),e([be({count:4})],jt.prototype,"transparencyPassType",void 0),e([be()],jt.prototype,"multipassTerrainEnabled",void 0),e([be()],jt.prototype,"cullAboveGround",void 0);class vt extends Ve{constructor(e){super(e,Lt),this.techniqueConfig=new jt}dispose(){}getPassParameters(){return this.params}getTechniqueConfig(e){return this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.transparencyPassType=e?e.transparencyPassType:3,this.techniqueConfig.multipassTerrainEnabled=!!e&&e.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!e||e.cullAboveGround,this.techniqueConfig}intersect(e,t,s,i,r,o,n){return Ue(e,t,i,r,o,void 0,n)}getGLMaterial(e){return 0===e.output||7===e.output?new bt(e):void 0}createBufferWriter(){return new ze(Fe)}}class bt extends Ae{constructor(e){super(e),this.updateParameters()}updateParameters(e){this.technique=this.techniqueRep.acquireAndReleaseExisting(_t,this.material.getTechniqueConfig(e),this.technique)}beginSlot(e){let t=3;return this.technique.configuration.transparent&&(t=this.technique.configuration.writeDepth?5:8),e===t}ensureParameters(e){this.updateParameters(e)}bind(e,t){e.bindProgram(this.technique.program),this.technique.bindPass(e,this.material.getPassParameters(),t)}}const Lt={size:[1,1],color1:[.75,.75,.75,1],color2:[.5,.5,.5,1],transparent:!1,writeDepth:!0,polygonOffset:!1,...Re};class wt extends tt{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=4,this._geometry=null,this._size=[1,1],this._color1=[1,.5,0,.5],this._color2=[1,1,1,.5],this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged()}get size(){return this._size}set size(e){this._size=e,this.updateMaterial()}get color1(){return this._color1}set color1(e){this._color1=e,this.updateMaterial()}get color2(){return this._color2}set color2(e){this._color2=e,this.updateMaterial()}updateMaterial(){i(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameterValues({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new vt({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:4})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){i(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(t(this._geometry)||t(this._checkerBoardMaterial))return;const s=kt;Q(s,this.transform);const i=this._geometry,r=[],o=y();i.position.forEach((e=>{f(o,e,s),r.push(o[0],o[1],o[2])}));const n=[];i.uv.forEach((e=>{n.push(e[0],e[1])}));const a=new He([["position",{size:3,data:r,exclusive:!0}],["uv0",{size:2,data:n,exclusive:!0}]],[["position",i.triangleIndices],["uv0",i.triangleIndices]]);e.addGeometry(a,this._checkerBoardMaterial)}geometryChanged(){this.recreateGeometry()}}const kt=y(),St={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};class Pt{constructor(e,t=new Ze,s={}){this._model=e,this._manipulators=t,this.vertexManipulators=[],this._visible=!1,this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._laserLine=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._cursorManipulator=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._listenerHandles=null,this._origin=y(),this._originTransform=ae(),this._tempHandlePosition=y(),this._cursorPositionRenderSpace=y(),this._view=this._model.sceneView,this._params=at(St,s),this._intersector=new Ne(this._view.state.mode),this._intersector.options.store=0;const i=nt(this._view,this._params.handleColor,this._params.handleOpacity);i.available=!1,i.radius=this._params.handleRadius,i.interactive=!1,this._manipulators.add(i),this._cursorManipulator=i,this._path=new mt({view:this._view,attached:!0,width:this._params.pathLineWidth,color:this._params.pathLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPath=new mt({view:this._view,attached:!0,width:this._params.pathLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._perimeter=new mt({view:this._view,attached:!0,width:this._params.perimeterLineWidth,color:this._params.perimeterLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPerimeter=new mt({view:this._view,attached:!0,width:this._params.perimeterLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._projectionLines=new mt({view:this._view,attached:!0,width:this._params.projectionLineWidth,color:this._params.projectionLineColor,stipplePattern:Be(this._params.projectionLineStippleSize),stippleIntegerRepeats:!1,polygonOffset:!0,renderOccluded:4}),this._laserLine=new et({view:this._view,attached:!0,style:{glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,globalAlpha:this._params.laserLineGlobalAlpha}}),this._measurementArea=new wt({view:this._view,attached:!0,color1:this._params.areaColor1,color2:this._params.areaColor2}),this._areaLabel=new pe({view:this._view,attached:!0,fontSize:16}),this._pathLengthLabel=new pe({view:this._view,attached:!0,fontSize:12}),this._cursorSegmentLengthLabel=new pe({view:this._view,attached:!0,fontSize:12}),this._perimeterLengthLabel=new pe({view:this._view,attached:!0,fontSize:12})}destroy(){this.hide(),this._laserLine.destroy(),this._laserLine=null,this._measurementArea.destroy(),this._measurementArea=null,this._path.destroy(),this._path=null,this._intersectedPath.destroy(),this._intersectedPath=null,this._perimeter.destroy(),this._perimeter=null,this._intersectedPerimeter.destroy(),this._intersectedPerimeter=null,this._areaLabel.destroy(),this._areaLabel=null,this._pathLengthLabel.destroy(),this._pathLengthLabel=null,this._cursorSegmentLengthLabel.destroy(),this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel.destroy(),this._perimeterLengthLabel=null}get requiresCursorPoint(){return("initial"===this._model.state||"drawing"===this._model.state)&&this._model.active}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){const e=this._laserLine.testData;return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel},laserLineRenderer:i(e)?{heightManifoldEnabled:e.heightManifoldEnabled,heightManifoldTarget:e.heightManifoldTarget,pointDistanceEnabled:e.pointDistanceEnabled,pointDistanceOrigin:e.pointDistanceOrigin,pointDistanceTarget:e.pointDistanceTarget,lineVerticalPlaneEnabled:e.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}show(){this._visible||(this._visible=!0,this._path.visible=!0,this._intersectedPath.visible=!0,this._perimeter.visible=!0,this._intersectedPerimeter.visible=!0,this._projectionLines.visible=!0,this._laserLine.visible=!0,this._measurementArea.visible=!0,this._areaLabel.visible=!0,this._pathLengthLabel.visible=!0,this._cursorSegmentLengthLabel.visible=!0,this._perimeterLengthLabel.visible=!0,this._initializeListeners(),this._updateAll(this._model.viewData))}hide(){this._visible&&(this._visible=!1,this._path.visible=!1,this._intersectedPath.visible=!1,this._perimeter.visible=!1,this._projectionLines.visible=!1,this._intersectedPerimeter.visible=!1,this._laserLine.visible=!1,this._measurementArea.visible=!1,this._areaLabel.visible=!1,this._pathLengthLabel.visible=!1,this._cursorSegmentLengthLabel.visible=!1,this._perimeterLengthLabel.visible=!1,this._destroyListeners(),this.vertexManipulators.forEach((e=>{this._removeVertexManipulator(e.manipulator)})),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(e,t){const s=this._manipulators.intersect(e,t);return i(s)?s.manipulator.metadata:null}manipulatorToVertex(e){return e.metadata}pick(e){const s=this._view.spatialReference,i=A(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const r=this._intersector.results.min,o=y();if(!r.getIntersectionPoint(o))return new Pt.PickResult;const n=this._view.renderCoordsHelper.fromRenderCoords(o,s);if(t(n))return new Pt.PickResult;const a="TerrainRenderer"===r.intersector?"surface":"feature";return new Pt.PickResult(a,o,n)}overlappingHandles(e,t){return lt(e,t,this._view)<=this._params.handleRadius}screenToMap3D(){return rt(this._view)}_updateOrigin(e){ht(e.positionsRenderCoords,this._origin),$(this._originTransform),J(this._originTransform,this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_updateAll(e){this._visible&&(this._updateOrigin(e),this._updatePathSegments(e),this._updatePerimeterSegments(e),this._updateVertexManipulators(e),this._updateArea(e),this._updateProjectionLines(e),this._updateLabels(e),this._updateLaserLine())}_createSegments(e,t){const s=e.path,i=this._view.renderCoordsHelper.spatialReference,r=this._model.measurementMode,o=[],n=[],a=[],l=e.validMeasurement?s.numVertices:s.numVertices-1;for(let h=0;h<l;++h){const l=e[t][h],p=e[t][(h+1)%s.numVertices];let m=null;switch(r){case"euclidean":m=new ce(l,p);break;case"geodesic":m=new me(l,p,i)}e.intersectingSegments.has(h)?a.push(m):n.push(m),o.push(m)}return{all:o,nonIntersecting:n,intersecting:a}}_updatePathSegments(e){const t=this._createSegments(e,"positionsRenderCoords"),s=e.path,r=this._view.renderCoordsHelper,o=r.spatialReference,n=this._model.measurementMode;if(this._cursorSegment=null,s.numVertices>0&&"drawing"===this._model.state&&i(this._model.cursorPoint)){if(r.toRenderCoords(this._model.cursorPoint,this._cursorPositionRenderSpace)){const i=e.positionsRenderCoords[s.numVertices-1],r=this._cursorPositionRenderSpace;let a=null;switch(n){case"euclidean":a=new ce(i,r);break;case"geodesic":a=new me(i,r,o)}t.nonIntersecting.push(a),this._cursorSegment=a}}this._path.setGeometryFromSegments(t.nonIntersecting,this._origin),this._intersectedPath.setGeometryFromSegments(t.intersecting,this._origin),this._pathSegments=t.all}_updatePerimeterSegments(e){const t=this._createSegments(e,"positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._perimeterSegments=t.all}_createVertexManipulator(){const e=nt(this._view,this._params.handleColor,this._params.handleOpacity);e.radius=this._params.handleRadius;return{id:this._manipulators.add(e),manipulator:e}}_removeVertexManipulator(e){this._manipulators.remove(e)}_updateVertexManipulators(e){const t=this._model.path.vertices,s=this.vertexManipulators;pt(s,t.length,(()=>this._createVertexManipulator()),(e=>this._removeVertexManipulator(e.manipulator))),s.forEach(((s,i)=>{s.manipulator.metadata=t[i],s.manipulator.renderLocation=e.positionsRenderCoords[i]})),"drawing"===this._model.state&&i(this._model.cursorPoint)?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._model.cursorPoint):this._cursorManipulator.available=!1}_updateArea(e){switch(this._model.measurementMode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=!0,this._perimeter.visible=!0,this._projectionLines.visible=!0):(this._measurementArea.visible=!1,this._perimeter.visible=!1,this._projectionLines.visible=!1)}_updateAreaGeodesic(){this._measurementArea.visible=!1,this._perimeter.visible=!1,this._projectionLines.visible=!1}_updateProjectionLines(e){const t=e.path;if(t.numVertices>0&&e.validMeasurement&&"euclidean"===this._model.measurementMode){const e=[];for(let s=0;s<t.numVertices;++s){const t=y();f(t,this._model.viewData.positionsRenderCoords[s],this._origin);const i=y();f(i,this._model.viewData.positionsFittedRenderCoords[s],this._origin),e.push([t,i])}this._projectionLines.geometry=e}else this._projectionLines.geometry=null}_updateLabels(e){if(!this._visible)return;const t=this._model,s=this._view,r="drawing"===t.state;if(this._areaLabel.geometry=s.renderCoordsHelper.fromRenderCoords(e.areaCentroid,s.spatialReference),this._areaLabel.text=t.areaLabel,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&null!=t.areaLabel,e.pathLengthLabelSegmentIndex>=0&&e.pathLengthLabelSegmentIndex<this._pathSegments.length){const s=this._pathSegments[e.pathLengthLabelSegmentIndex],o=i(this._cursorSegment)?this._cursorSegment:Ct;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:s,right:o},this._pathLengthLabel.text=t.pathLengthLabel,this._pathLengthLabel.visible=r&&t.path.numVertices>0}else this._pathLengthLabel.visible=!1;this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=i(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=t.cursorSegmentLengthLabel,this._cursorSegmentLengthLabel.visible=r&&!!t.cursorSegmentLength&&0!==t.cursorSegmentLength.value,this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1),this._updatePerimeterLabel(this._model.viewData)}_updatePerimeterLabel(e){const t=this._model,s="geodesic"===t.measurementMode;if(t.validMeasurement&&0===e.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=t.perimeterLengthLabel,this._perimeterLengthLabel.visible=!0;let i=!0;for(let t=0;t<e.path.numVertices;++t){const r=(e.perimeterLengthLabelSegmentIndex+t)%e.path.numVertices,o=s?this._pathSegments[r]:this._perimeterSegments[r];if(i=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:o,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;i=!1}this._perimeterLengthLabel.visible=i}else this._perimeterLengthLabel.visible=!1}_getFocusPoint(){const e=this._model,t=this._model.lastDraggedVertex;switch(e.state){case"drawing":return i(e.cursorPoint)?e.cursorPoint:i(t)?e.path.getVertexPositionAsPoint(t):s(e.path.lastPoint);case"editing":return i(t)?e.path.getVertexPositionAsPoint(t):null;default:return e.cursorPoint}}_updateLaserLine(){const e=this._model,t=this._params.laserLineEnabled&&"measured"!==e.state&&e.active,s=this._getFocusPoint();if(t&&i(s)){const e=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(s,e),this._laserLine.heightManifoldTarget=e}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new R,this._listenerHandles.add([this._model.watch(["state","lastDraggedVertex"],(()=>this._updateLaserLine())),this._model.watch(["cursorPoint","unit","measurementMode","active","viewData"],(()=>this._updateAll(this._model.viewData))),this._model.watch(["areaLabel","cursorSegmentLengthLabel","pathLengthLabel","perimeterLengthLabel"],(()=>{this._updateAll(this._model.viewData)})),this._view.state.watch("camera",(()=>this._updatePerimeterLabel(this._model.viewData)))])}_destroyListeners(){this._listenerHandles.destroy(),this._listenerHandles=null}}Pt._handleGeometry=qe.createSphereGeometry(1,32,32),function(e){e.PickRequest=class{};e.PickResult=class{constructor(e=null,t=null,s=null){this.type=e,this.scenePoint=t,this.mapPoint=s}}}(Pt||(Pt={}));const Ct=new ce(y(),y());var Mt=Pt;class xt{constructor(e,t,s){this._manipulators=s,this._handles=new R,this._tempPickRequest=new Mt.PickRequest,this.model=e,this.view=t,this.model.reset(),this._setupManipulators()}destroy(){this._handles.destroy(),this._handles=null}handleInputEvent(e){switch(e.type){case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}}_setupManipulators(){const e=e=>`manipulator-${e}`;let t=0;const i=e=>i=>("start"===i.action&&(t++,this.model.lastDraggedVertex=s(this.view.manipulatorToVertex(e)),"measured"===this.model.state&&(this.model.state="editing")),i),r=()=>e=>"end"===e.action?(t--,0===t&&"editing"===this.model.state&&(this.model.state="measured"),null):e,o=(t,o)=>{this._handles.add([Xe(o,((e,t,o)=>{const n=ot(e),a=s(this.view.manipulatorToVertex(e));t.next(i(e)).next(n).next(r()).next(this.view.screenToMap3D()).next((t=>{e.location=t.mapEnd,this.model.path.setVertexPosition(a,We(t.mapEnd))}));const l=We(this.model.path.getVertexPositionAsPoint(a));o.next(n).next((()=>{this.model.path.setVertexPosition(a,l),e.location=l}))})),o.events.on("double-click",(e=>{Dt(e)&&("drawing"===this.model.state&&this.model.finishMeasurement(),e.stopPropagation())}))],e(t))},n=t=>{this._handles.remove(e(t))};this._manipulators.forEach((({id:e,manipulator:t})=>{o(e,t)})),this._handles.add([this._manipulators.on("after-add",(({item:{id:e,manipulator:t}})=>{o(e,t)})),this._manipulators.on("after-remove",(({item:{id:e}})=>{n(e)}))])}_handleDrag(e){"editing"===this.model.state&&e.stopPropagation()}_handleImmediateClick(e){if(!Dt(e))return;const s=de(e);if(this.model.active)switch(this.model.state){case"initial":this._addVertexAt(s)&&(this.model.state="drawing",e.stopPropagation());break;case"drawing":{const i=this.view.vertexHandleAt(s,e.pointerType);if(t(i)){if(this._addVertexAt(s))return}else 0===i.index&&(this.model.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(s)}_handlePointerMove(e){if("mouse"===e.pointerType){const t=de(e);this._hoverAt(t)}}_handleKeyDown(e){"Enter"===e.key&&"drawing"===this.model.state&&(this.model.finishMeasurement(),e.stopPropagation())}_hoverAt(e){if(this.view.requiresCursorPoint){const t=this._pick(e);t.mapPoint&&(this.model.cursorPoint=t.mapPoint)}else this.model.cursorPoint=null}_addVertexAt(e){const t=this._pick(e);return!!t.mapPoint&&(this.model.path.add(t.mapPoint),!0)}_pick(e){const t=this._tempPickRequest;return t.screenPoint=e,this.view.pick(t)}}function Dt(e){return"mouse"!==e.pointerType||0===e.button}let Vt=class extends n{constructor(){super(...arguments),this.result=null}destroy(){this.result=null}set geometry(e){this.result=null,this._set("geometry",i(e)?e.clone():null)}};e([o({value:null})],Vt.prototype,"geometry",null),e([o()],Vt.prototype,"result",void 0),Vt=e([a("esri.views.3d.interactive.graphics.AreaMeasurement3D")],Vt);class Ut extends l{constructor(){super(),this._handles=new R,this._dirty=!0,this._model=null,this._view=null,this._version=0,this._internalGeometryChange=!1}set model(e){this._model=e,i(this._model)&&i(this._view)&&this._initialize(this._model,this._view)}get model(){return this._model}get view(){return this._view}set view(e){this._view=e,i(this._model)&&i(this._view)&&this._initialize(this._model,this._view)}get initialized(){return i(this._model)&&i(this._view)}get version(){return this._version}_initialize(e,t){this._handles.removeAll(),this._handles.add(B(e,"geometry",(()=>this._updateEditGeometryFromModelGeometry(e,t)),!0))}_updateEditGeometryFromModelGeometry(e,t){this._version++,this._internalGeometryChange||(this._handles.remove("EditGeometry"),this._editGeometry=i(e.geometry)?Qe.fromGeometry(e.geometry,t.viewingMode):new Qe($e(!0,!1,t.spatialReference,t.viewingMode)),this.emit("clear",{type:"clear"}),this._handles.add(this._editGeometry.on("change",(t=>{this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.toPolygon():null,this._internalGeometryChange=!1})),"EditGeometry"))}get vertices(){const e=[];return this.forEachVertex((t=>{e.push(t)})),e}get numVertices(){return this.initialized&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.initialized&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(i(e))return this._editGeometry.coordinateHelper.createPoint(e.pos)}return null}getVertex(e){if(!this.initialized||0===this._editGeometry.components.length||0===this._editGeometry.components[0].vertices.length)return null;const t=this._editGeometry.components[0].vertices[0];let s=t;do{if(s.index===e)return s;s=s.right.right}while(s!==t&&null!=s);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.createPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.createPoint(this.getVertex(e).pos)}forEachVertex(e){this.initialized&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const t=this._editGeometry.coordinateHelper;this.forEachVertex(((s,i)=>{t.toPoint(s.pos,At),e(At,i)}))}clear(){i(this.model)&&(this.model.geometry=null)}add(e){if(!this.initialized)return null;0===this._editGeometry.components.length&&this._editGeometry.components.push(new Je(this._editGeometry));const t=new Ke(this._editGeometry,this._editGeometry.components[0],this._editGeometry.coordinateHelper.fromPoint(e));return this._editGeometry.apply(t),this.emit("vertex-update",{type:"vertex-update"}),t}ensureContains(e,t=""){let s=!1;if(this._editGeometry.components.forEach((t=>{t.iterateVertices((t=>{t===e&&(s=!0)}))})),!s)throw new Error(`vertex doesnt exist ${t}`);return s}setVertexPosition(e,t){if(!this.initialized)return null;const s=new dt(this._editGeometry,e,this._editGeometry.coordinateHelper.fromPoint(t));return this._editGeometry.apply(s),this.emit("vertex-update",{type:"vertex-update"}),s}}const At=new u;var Rt;!function(e){e.boundingSphere=function(e,t){const s=t.center;j(s,0,0,0);for(let t=0;t<e.length;++t)v(s,s,e[t]);b(s,s,1/e.length);let i=0;for(let t=0;t<e.length;++t)i=Math.max(i,L(s,e[t]));t.radius=Math.sqrt(i)},e.bestFitPlane=function(e,t){if(e.length<3)throw new Error("need at least 3 points to fit a plane");x(e[0],e[1],e[2],t)},e.planePointDistance=function(e,t){return w(e,t)+e[3]},e.segmentLengthEuclidean=function(e,t,s){return K(e,Ot,s)&&K(t,Gt,s)?k(Ot,Gt):0},e.segmentLengthGeodesic=function(e,t){if(!Z(e,Ot)||!Z(t,Gt))return 0;const s={distance:null};return ie(s,[Ot[0],Ot[1]],[Gt[0],Gt[1]]),s.distance},e.segmentLengthGeodesicVector=function(e,t,s){const i={distance:null};return ie(i,[e[0],e[1]],[t[0],t[1]],s),i.distance},e.triangleAreaEuclidean=function(e,t,s){const i=t[0]-e[0],r=t[1]-e[1],o=s[0]-e[0],n=s[1]-e[1];return.5*Math.abs(i*n-r*o)},e.triangleAreaGeodesic=function(e,t,s,i){const r=Et;return X(e,i,Ot)&&X(t,i,Gt)&&X(s,i,It)?(r.setPoint(0,0,Ot),r.setPoint(0,1,Gt),r.setPoint(0,2,It),Math.abs(re(r,"square-meters"))):0},e.tangentFrame=function(e,t,s){Math.abs(e[0])>Math.abs(e[1])?j(t,0,1,0):j(t,1,0,0),S(s,e,t),P(t,t),S(t,s,e),P(s,s)},e.fitHemisphere=function(e,t=null,s=!0){const i=(e,t)=>{if(0===t[0]&&0===t[1]&&0===t[2])return!1;for(let s=0;s<e.length;++s)if(w(t,e[s])<-1e-6)return!1;return!0};if(0===e.length)return!1;if(1===e.length)return t&&C(t,e[0]),!0;j(Tt,0,0,0);for(let t=0;t<e.length;++t)v(Tt,Tt,e[t]);if(P(Tt,Tt),i(e,Tt))return t&&C(t,Tt),!0;if(!s)return!1;for(let s=0;s<e.length;++s)for(let r=0;r<e.length;++r)if(s!==r&&(S(Tt,e[s],e[r]),P(Tt,Tt),i(e,Tt)))return t&&C(t,Tt),!0;return!1},e.compareSets=function(e,t){if(e===t)return!0;if(e.size!==t.size)return!1;for(let s=0;s<e.size;++s)if(!t.has(e[s]))return!1;return!0}}(Rt||(Rt={}));const Ot=y(),Gt=y(),It=y(),Et=new U({rings:[[Ot,Gt,It]],spatialReference:p.WGS84}),Tt=y();var zt=Rt;class Ft{constructor(){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=y(),this.areaCentroidRenderCoords=y(),this.geodesicAreaCentroidRenderCoords=y(),this._length=0,this._centroidRenderCoords=y(),this._planeWorldCoords=oe(),this._worldUp=y(),this._worldTangent=y(),this._frame=[y(),y(),y()],this._pathVersion=-1,this._validMeasurement=!1,this._tempU=y(),this._tempV=y(),this._tempVec3=y(),this._tempSphere={center:y(),radius:0}}update(e,t,s,i,r,o,n){if(this._pathVersion===e.version&&this._validMeasurement===i)return;this._pathVersion=e.version,this._validMeasurement=i;const a=e.numVertices;this._resize(a);const l=O(t.spatialReference),h=Y(t.spatialReference,l)&&ee(t.spatialReference),p=this.positionsGeographic,m=this.positionsWorldCoords,c=this.positionsRenderCoords,u=this.positionsSpherical;e.forEachVertexPosition(((e,t)=>{K(e,m[t],o),K(e,c[t],r),h&&(Z(e,p[t]),K(e,u[t],l),P(u[t],u[t]))}));const d=this._updatePathLengths(i);if(this.pathLength=this._length>0?new ct(s.normalizeDistance(d),"meters"):null,h){const e=this._updateGeodesicPathLengths(i,o);this.geodesicPathLength=this._length>0?new ct(e,"meters"):null}else this.geodesicPathLength=null;if(!i)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),void this.geodesicIntersectingSegments.clear();this._updateArea(t,s,r,o,n),h&&this._updateGeodesicArea(t)}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(y()),this.positionsRenderCoords.push(y()),this.positionsProjectedWorldCoords.push(ge()),this.positionsFittedRenderCoords.push(y()),this.positionsGeographic.push(y()),this.positionsSpherical.push(y()),this.positionsStereographic.push(ge()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorldCoords,s=this.pathSegmentLengths;let i=0;for(let r=0;r<this._length;++r){const o=s[r]=k(t[r],t[(r+1)%this._length]);(r<this._length-1||e)&&(i+=o)}return i}_updateGeodesicPathLengths(e,t){const s=this.positionsGeographic,i=this.geodesicPathSegmentLengths;let r=0;for(let o=0;o<this._length;++o){const n=i[o]=zt.segmentLengthGeodesicVector(s[o],s[(o+1)%this._length],t);(o<this._length-1||e)&&(r+=n)}return r}_updateArea(e,t,s,i,r){const o=e.renderCoordsHelper,n=this.positionsWorldCoords,a=this.positionsRenderCoords,l=this.positionsProjectedWorldCoords,h=this.positionsFittedRenderCoords,p=this._planeWorldCoords,m=this._centroidRenderCoords;ht(a,m),o.worldUpAtPosition(m,this._worldUp),o.worldBasisAtPosition(m,0,this._worldTangent),te(m,this._worldUp,s,this._worldUp,i),te(m,this._worldTangent,s,this._worldTangent,i),n.length>2&&zt.bestFitPlane(n,p),this.fittingMode=this._selectFittingMode(p,n,this._worldUp,r);let c=0;if("horizontal"===this.fittingMode){let e=-1/0;a.forEach(((t,s)=>{const i=o.getAltitude(a[s]);i>e&&(e=i,c=s)}))}const u=n[c];let d=p,g=this._worldTangent;"horizontal"===this.fittingMode?d=this._worldUp:"vertical"===this.fittingMode&&(d=this._tempVec3,g=this._worldUp,D(p,this._worldUp,d)),C(this._frame[2],d),D(g,d,this._frame[0]),S(this._frame[1],this._frame[0],this._frame[2]),M(this._frame[1],this._frame[1]);const _=this._tempVec3,y=this._tempU,j=this._tempV;for(let e=0;e<this._length;++e){const t=l[e],r=h[e];f(_,n[e],u),le(t,w(this._frame[0],_),w(this._frame[1],_)),b(y,this._frame[0],t[0]),b(j,this._frame[1],t[1]),v(_,y,j),v(_,_,u),se(_,i,r,s)}this.perimeterLength=this._length>0?new ct(t.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,ht(h,this.areaCentroidRenderCoords),se(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,i),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?new ct(t.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const t=e.renderCoordsHelper,s=this.positionsSpherical,i=this.positionsStereographic,r=this._tempVec3,o=zt.fitHemisphere(s,r);if(!o)return void(this.geodesicArea=null);const n=this._tempU,a=this._tempV;V(r,n,a);for(let e=0;e<this._length;++e){const t=w(s[e],n),o=w(s[e],a),l=w(s[e],r);le(i[e],t/l,o/l)}b(r,r,G(e.spatialReference).radius),t.toRenderCoords(r,O(e.spatialReference),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=o&&0===this.geodesicIntersectingSegments.size?new ct(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,t=this.perimeterSegmentLengths;let s=0;for(let i=0;i<this._length;++i){s+=t[i]=he(e[i],e[(i+1)%this._length])}return s}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,t=this.intersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],o=e[(s+1)%this._length],n=e[i],a=e[(i+1)%this._length];d(r,o,n,a)&&(t.add(s),t.add(i))}}_computeArea(){const e=this.positionsProjectedWorldCoords,t=qt(e,2),s=this.triangleIndices=new Uint32Array(ne(t,[],2));let i=0;for(let t=0;t<s.length;t+=3)i+=zt.triangleAreaEuclidean(e[s[t]],e[s[t+1]],e[s[t+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],o=e[(s+1)%this._length],n=e[i],a=e[(i+1)%this._length];d(r,o,n,a)&&(t.add(s),t.add(i))}}_computeGeodesicArea(){const e=this.positionsGeographic,t=qt(this.positionsStereographic,2),s=this.geodesicTriangleIndices=new Uint32Array(ne(t,[],2));let i=0;for(let t=0;t<s.length;t+=3)i+=zt.triangleAreaGeodesic(e[s[t]],e[s[t+1]],e[s[t+2]],p.WGS84);return i}_selectFittingMode(e,t,s,i){const r=t.map((t=>Math.abs(zt.planePointDistance(e,t)))).reduce(((e,t)=>Math.max(e,t)),0);zt.boundingSphere(t,this._tempSphere);const o=r/(2*this._tempSphere.radius),n=o<i.maxRelativeErrorCoplanar,a=o<i.maxRelativeErrorAlmostCoplanar;let l="horizontal";if(n)l="oblique";else if(a){l=Math.abs(w(s,e))>Math.cos(g(i.verticalAngleThreshold))?"horizontal":"vertical"}return l}}function qt(e,t){const s=new Float64Array(e.length*t);for(let i=0;i<e.length;++i){const r=e[i];for(let e=0;e<t;++e)s[i*t+e]=r[e]}return s}let Wt=class extends n{constructor(){super(...arguments),this._unitNormalizer=new ut,this._measurementData=new Ft,this._handles=new R,this.dataObject=new Vt,this.path=new Ut,this.cursorPoint=null,this.state="initial",this.lastDraggedVertex=null,this.mode="auto",this.unit="metric",this.active=!1,this.fittingSettings={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},this.geodesicMeasurementDistanceThreshold=1e5}initialize(){this.path.model=this.dataObject,c("esri/core/t9n/Units").then((e=>{this.messages=e})),this._handles.add(m((async()=>{this.messages=await c("esri/core/t9n/Units")}))),this._handles.add(N(this.sceneView,"ready",(()=>{const{spatialReference:e}=this.sceneView,t=O(e),s=t===q?W:t,i=!e||Y(e,s)?s:e;this._worldSpatialReference=i,this._unitNormalizer.spatialReference=i,this.path.view=this.sceneView})),"scene-view"),this.reset(),this._handles.add(this.path.on("clear",(()=>{this.notifyChange("numVertices"),this._updateMeasurementData()}))),this._handles.add(this.path.on("vertex-update",(()=>{this.notifyChange("numVertices"),this._updateMeasurementData()}))),this._handles.add(this.watch("state",(()=>this._updateMeasurementData()),!0)),this._handles.add(this.watch("fittingSettings",(()=>this._updateMeasurementData())))}destroy(){this._handles.destroy(),this._handles=null}get validMeasurement(){return this.numVertices>=3&&"measured"===this.state||"editing"===this.state}get numVertices(){return this.path.numVertices}get measurementData(){return this._measurementData}_updateMeasurementData(){const e=this._measurementData;e.update(this.path,this.sceneView,this._unitNormalizer,this.validMeasurement,this.sceneView.renderSpatialReference,this._worldSpatialReference,this.fittingSettings),this.dataObject.result={area:e.area,geodesicArea:e.geodesicArea,pathLength:e.pathLength,geodesicPathLength:e.geodesicPathLength,perimeterLength:e.perimeterLength},this.notifyChange("measurementData")}get area(){return this.measurementData.area}get geodesicArea(){return this.measurementData.geodesicArea}get areaLabel(){return this._formatAreaLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicArea:this.measurementData.area,this.unit)}get pathLength(){return this.measurementData.pathLength}get geodesicPathLength(){return this.measurementData.geodesicPathLength}get pathLengthLabel(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.pathLength,this.unit)}get perimeterLength(){return this.measurementData.perimeterLength}get geodesicPerimeterLength(){return this.measurementData.geodesicPathLength}get perimeterLengthLabel(){return this.measurementData.perimeterLength&&this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.perimeterLength,this.unit)}get cursorSegmentLength(){const e=this.path.lastPoint;return i(e)&&i(this.cursorPoint)?new ct(this._unitNormalizer.normalizeDistance(zt.segmentLengthEuclidean(e,this.cursorPoint,this._worldSpatialReference)),"meters"):null}get geodesicCursorSegmentLength(){const e=this.path.lastPoint;return i(e)&&i(this.cursorPoint)?new ct(zt.segmentLengthGeodesic(e,this.cursorPoint),"meters"):null}get cursorSegmentLengthLabel(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.geodesicCursorSegmentLength:this.cursorSegmentLength,this.unit)}get viewData(){const e=this.measurementData,t="geodesic"===this.measurementMode,s=t?this.geodesicArea:this.area;let i=1;if(s){const e=this._toPreferredAreaUnit(s,this.unit);i=_(Math.sqrt(e.value)/Math.sqrt(300)),i*=Math.sqrt(I(1,e.unit,"square-meters")),i/=this._unitNormalizer.normalizeDistance(1)}return{validMeasurement:this.validMeasurement,path:this.path,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:t?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:t?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:t?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:this.validMeasurement?0:this.path.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:i}}get measurementMode(){let e=this.mode;if("auto"===e){e="euclidean";(this.geodesicPathLength?this.geodesicPathLength.value:0)+(!this.validMeasurement&&this.geodesicCursorSegmentLength?this.geodesicCursorSegmentLength.value:0)>this.geodesicMeasurementDistanceThreshold&&(e="geodesic")}return null==this.geodesicPathLength&&(e="euclidean"),e}reset(){this.clearMeasurement(),this._updateMeasurementData()}clearMeasurement(){this.path.clear(),this.state="initial",this.cursorPoint=null}finishMeasurement(){this.path.numVertices<3?this.clearMeasurement():this.state="measured"}_preferredAreaUnit(e,t){switch(t){case"metric":return T(e.value,e.unit);case"imperial":return E(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const s=this._deriveLengthUnitFromAreaUnit(t);switch(s){case"metric":return F(e.value,e.unit);case"imperial":return z(e.value,e.unit);default:return s}}_toPreferredAreaUnit(e,t){return e.toUnit(this._preferredAreaUnit(e,t))}_toPreferredLengthUnit(e,t){return e.toUnit(this._preferredLengthUnit(e,t))}_formatAreaLabel(e,t,s){return e&&t&&ue(e,t,this._preferredAreaUnit(t,s))}_formatLengthLabel(e,t,s){return e&&t&&ue(e,t,this._preferredLengthUnit(t,s))}_deriveLengthUnitFromAreaUnit(e){switch(e){case"metric":return"metric";case"imperial":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"acres":return"imperial";case"ares":case"hectares":return"metric"}throw new Error("unhandled area unit")}};e([o()],Wt.prototype,"messages",void 0),e([o()],Wt.prototype,"dataObject",void 0),e([o({constructOnly:!0})],Wt.prototype,"sceneView",void 0),e([o({readOnly:!0})],Wt.prototype,"path",void 0),e([o()],Wt.prototype,"cursorPoint",void 0),e([o()],Wt.prototype,"state",void 0),e([o()],Wt.prototype,"lastDraggedVertex",void 0),e([o()],Wt.prototype,"mode",void 0),e([o()],Wt.prototype,"unit",void 0),e([o()],Wt.prototype,"active",void 0),e([o()],Wt.prototype,"fittingSettings",void 0),e([o({readOnly:!0})],Wt.prototype,"validMeasurement",null),e([o({readOnly:!0})],Wt.prototype,"numVertices",null),e([o({readOnly:!0})],Wt.prototype,"measurementData",null),e([o({readOnly:!0})],Wt.prototype,"area",null),e([o({readOnly:!0})],Wt.prototype,"geodesicArea",null),e([o({readOnly:!0})],Wt.prototype,"areaLabel",null),e([o({readOnly:!0})],Wt.prototype,"pathLength",null),e([o({readOnly:!0})],Wt.prototype,"geodesicPathLength",null),e([o({readOnly:!0})],Wt.prototype,"pathLengthLabel",null),e([o({readOnly:!0})],Wt.prototype,"perimeterLength",null),e([o({readOnly:!0})],Wt.prototype,"geodesicPerimeterLength",null),e([o({readOnly:!0})],Wt.prototype,"perimeterLengthLabel",null),e([o({readOnly:!0})],Wt.prototype,"cursorSegmentLength",null),e([o({readOnly:!0})],Wt.prototype,"geodesicCursorSegmentLength",null),e([o({readOnly:!0})],Wt.prototype,"cursorSegmentLengthLabel",null),e([o({readOnly:!0})],Wt.prototype,"viewData",null),e([o()],Wt.prototype,"geodesicMeasurementDistanceThreshold",void 0),e([o({readOnly:!0})],Wt.prototype,"measurementMode",null),Wt=e([a("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DModel")],Wt);var Ht=Wt;let Bt=class extends Ye{constructor(e){super(e),this._handles=new R,this.deferCreation=!0,this.model=new Ht({sceneView:e.view})}initialize(){this._view=new Mt(this.model,this.manipulators),this._controller=new xt(this.model,this._view,this.manipulators),this._handles.add(B(this,"state",(e=>{switch(e){case"measured":return this.complete();case"ready":break;default:return this.create()}}),!0))}destroy(){this.detach(),this._view.destroy(),this._view=null,this._controller.destroy(),this._controller=null,this._handles.destroy(),this._handles=null}get state(){switch(this.model.state){case"initial":return this.model.numVertices>=1?"measuring":"ready";case"drawing":case"editing":return"measuring";case"measured":return"measured"}}get isSupported(){return"3d"===this.get("view.type")}get cursor(){return!this.model.active||"initial"!==this.model.state&&"drawing"!==this.model.state?null:"crosshair"}activate(){this.model.active=!0}deactivate(){this.model.active=!1}onShow(){this._view.show()}onHide(){this._view.hide()}onDetach(){this.model.reset()}onInputEvent(e){this._controller.handleInputEvent(e)}};e([o({readOnly:!0})],Bt.prototype,"state",null),e([o({readOnly:!0})],Bt.prototype,"isSupported",null),e([o({readOnly:!0})],Bt.prototype,"cursor",null),e([o({constructOnly:!0})],Bt.prototype,"model",void 0),e([h("model.mode")],Bt.prototype,"mode",void 0),e([h("model.unit")],Bt.prototype,"unit",void 0),e([h("model.areaLabel")],Bt.prototype,"areaLabel",void 0),e([h("model.area")],Bt.prototype,"area",void 0),e([h("model.geodesicArea")],Bt.prototype,"geodesicArea",void 0),e([h("model.pathLengthLabel")],Bt.prototype,"pathLengthLabel",void 0),e([h("model.pathLength")],Bt.prototype,"pathLength",void 0),e([h("model.geodesicPathLength")],Bt.prototype,"geodesicPathLength",void 0),e([h("model.perimeterLengthLabel")],Bt.prototype,"perimeterLengthLabel",void 0),e([h("model.perimeterLength")],Bt.prototype,"perimeterLength",void 0),e([h("model.geodesicPerimeterLength")],Bt.prototype,"geodesicPerimeterLength",void 0),e([h("model.validMeasurement")],Bt.prototype,"validMeasurement",void 0),e([h("model.viewData")],Bt.prototype,"viewData",void 0),Bt=e([a("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],Bt);var Nt=Bt;const Qt=r.getLogger("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel");let $t=class extends it{constructor(e){super(e),this.supportedViewType="3d",this._handles=new R,this._userUnitOptions=null,this._userUnit=null,this.tool=null}initialize(){this._handles.add([B(this,"unit",(e=>{this.tool&&(this.tool.model.unit=e)}))])}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}get state(){return this.isDisabled?"disabled":this.tool?this.tool.state:"ready"}get measurement(){if(!this.tool||this.isDisabled)return null;const e=this.tool.model,t=e.measurementMode,s=e.measurementData,i=e.validMeasurement,r=0===("euclidean"===t?s.intersectingSegments:s.geodesicIntersectingSegments).size,o=r?i?"available":"unavailable":"invalid";return{mode:t,area:{text:r&&i?e.areaLabel:null,state:o},perimeterLength:{text:r&&i?e.perimeterLengthLabel:null,state:o}}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}createToolParams(){return{toolConstructor:Nt,constructorArguments:()=>({unit:this.unit})}}logUnsupportedError(){Qt.error("AreaMeasurement3D widget is not implemented for MapView")}logError(...e){Qt.error(...e)}_findSelectableUnit(e,t){const s=this.unitOptions;return-1!==s.indexOf(e)?e:t?this._findSelectableUnit(t):s[0]}_filteredOrAllUnits(e){if(!e)return H.slice();const t=e.filter((e=>-1!==H.indexOf(e)));return 0===t.length?H.slice():t}};e([o({readOnly:!0})],$t.prototype,"state",null),e([o({readOnly:!0})],$t.prototype,"measurement",null),e([o({constructOnly:!0})],$t.prototype,"tool",void 0),e([o(st)],$t.prototype,"defaultUnit",void 0),e([o()],$t.prototype,"unitOptions",null),e([o()],$t.prototype,"unit",null),$t=e([a("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],$t);var Jt=$t;export default Jt;
