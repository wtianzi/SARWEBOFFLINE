self.webpackChunkRemoteClient([129],{440:function(e,n,t){"use strict";t.r(n),t.d(n,"hydratedAdapter",(function(){return c}));t(11),t(17),t(1),t(19),t(4),t(6),t(0),t(9),t(3),t(7),t(15),t(16),t(12),t(2),t(10),t(8),t(5),t(13),t(42),t(14),t(48),t(45),t(44),t(21),t(46),t(51);var a=t(52),o=(t(49),t(54),t(50)),i=(t(65),t(63)),r=t(62),s=(t(60),t(61));const c={convertToGEGeometry:function(e,n){if(null==n)return null;let t="cache"in n?n.cache._geVersion:void 0;return null==t&&(t=e.convertJSONToGeometry(n),"cache"in n&&(n.cache._geVersion=t)),t},exportPoint:function(e,n,t){const o=e.hasZ(n),i=e.hasM(n),r=new a.a({x:e.getPointX(n),y:e.getPointY(n),spatialReference:t});return o&&(r.z=e.getPointZ(n)),i&&(r.m=e.getPointM(n)),r.cache._geVersion=n,r},exportPolygon:function(e,n,t){const a=new r.a({rings:e.exportPaths(n),hasZ:e.hasZ(n),hasM:e.hasM(n),spatialReference:t});return a.cache._geVersion=n,a},exportPolyline:function(e,n,t){const a=new s.a({paths:e.exportPaths(n),hasZ:e.hasZ(n),hasM:e.hasM(n),spatialReference:t});return a.cache._geVersion=n,a},exportMultipoint:function(e,n,t){const a=new i.a({hasZ:e.hasZ(n),hasM:e.hasM(n),points:e.exportPoints(n),spatialReference:t});return a.cache._geVersion=n,a},exportExtent:function(e,n,t){const a=e.hasZ(n),i=e.hasM(n),r=new o.b({xmin:e.getXMin(n),ymin:e.getYMin(n),xmax:e.getXMax(n),ymax:e.getYMax(n),spatialReference:t});if(a){const t=e.getZExtent(n);r.zmin=t.vmin,r.zmax=t.vmax}if(i){const t=e.getMExtent(n);r.mmin=t.vmin,r.mmax=t.vmax}return r.cache._geVersion=n,r}}}});