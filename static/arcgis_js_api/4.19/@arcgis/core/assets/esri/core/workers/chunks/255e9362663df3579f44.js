self.webpackChunkRemoteClient([67],{222:function(e,t,i){"use strict";i.d(t,"a",(function(){return n}));var r=i(198);class n{constructor(e,t){this._storage=new r.a,this._storage.maxSize=e,t&&this._storage.registerRemoveFunc("",t)}put(e,t,i){this._storage.put(e,t,i,1)}pop(e){return this._storage.pop(e)}get(e){return this._storage.get(e)}clear(){this._storage.clearAll()}destroy(){this._storage.destroy()}get maxSize(){return this._storage.maxSize}set maxSize(e){this._storage.maxSize=e}}},230:function(e,t,i){"use strict";var r,n=i(11),a=(i(17),i(1),i(19),i(4),i(6),i(0),i(9),i(3),i(7)),s=(i(15),i(16),i(12),i(2),i(10),i(8),i(5)),o=i(13),l=i(42);i(14),i(21);let c=r=class extends l.b{constructor(e){super(e),this.level=0,this.levelValue=null,this.resolution=0,this.scale=0}clone(){return new r({level:this.level,levelValue:this.levelValue,resolution:this.resolution,scale:this.scale})}};Object(n.a)([Object(a.d)({type:s.a,json:{write:!0}})],c.prototype,"level",void 0),Object(n.a)([Object(a.d)({type:String,json:{write:!0}})],c.prototype,"levelValue",void 0),Object(n.a)([Object(a.d)({type:Number,json:{write:!0}})],c.prototype,"resolution",void 0),Object(n.a)([Object(a.d)({type:Number,json:{write:!0}})],c.prototype,"scale",void 0),c=r=Object(n.a)([Object(o.g)("esri.layers.support.LOD")],c);var u=c;t.a=u},240:function(e,t,i){"use strict";var r,n=i(11),a=(i(17),i(1),i(19),i(4),i(6),i(0),i(9),i(3),i(7)),s=(i(15),i(16),i(12),i(2),i(10),i(8),i(5)),o=i(13),l=i(42),c=(i(14),i(48),i(43)),u=i(45),h=i(44),f=(i(21),i(46)),d=(i(51),i(52)),p=(i(49),i(54)),m=(i(50),i(65),i(63),i(62),i(60),i(61),i(67),i(59),i(64),i(90)),y=i(183),b=i(230);const g=new c.a({PNG:"png",PNG8:"png8",PNG24:"png24",PNG32:"png32",JPEG:"jpg",JPG:"jpg",DIB:"dib",TIFF:"tiff",EMF:"emf",PS:"ps",PDF:"pdf",GIF:"gif",SVG:"svg",SVGZ:"svgz",Mixed:"mixed",MIXED:"mixed",LERC:"lerc",LERC2D:"lerc2d",RAW:"raw",pbf:"pbf"});let x=r=class extends l.b{constructor(e){super(e),this.dpi=96,this.format=null,this.origin=null,this.minScale=0,this.maxScale=0,this.size=null,this.spatialReference=null}static create(e={size:256,spatialReference:f.f.WebMercator}){const t=e.resolutionFactor||1,i=e.scales,n=e.size||256,a=e.spatialReference||f.f.WebMercator;if(!Object(f.l)(a)){const e=[];if(i)for(let t=0;t<i.length;t++){const r=i[t];e.push({level:t,scale:r,resolution:r})}else{let t=5e-4;for(let i=23;i>=0;i--)e.unshift({level:i,scale:t,resolution:t}),t*=2}return new r({dpi:96,lods:e,origin:new d.a(0,0,a),size:[n,n],spatialReference:a})}const s=Object(f.i)(a),o=e.origin?new d.a({x:e.origin.x,y:e.origin.y,spatialReference:a}):new d.a(s?{x:s.origin[0],y:s.origin[1],spatialReference:a}:{x:0,y:0,spatialReference:a}),l=1/(39.37*Object(m.d)(a)*96),c=[];if(i)for(let e=0;e<i.length;e++){const t=i[e],r=t*l;c.push({level:e,scale:t,resolution:r})}else{let e=Object(f.m)(a)?512/n*591657527.5917094:256/n*591657527.591555;const i=Math.ceil(24/t);c.push({level:0,scale:e,resolution:e*l});for(let r=1;r<i;r++){const i=e/2**t,n=i*l;c.push({level:r,scale:i,resolution:n}),e=i}}return new r({dpi:96,lods:c,origin:o,size:[n,n],spatialReference:a})}get isWrappable(){const{spatialReference:e,origin:t}=this;if(e&&t){const i=Object(f.i)(e);return e.isWrappable&&Math.abs(i.origin[0]-t.x)<=i.dx}return!1}readOrigin(e,t){return d.a.fromJSON({spatialReference:t.spatialReference,...e})}set lods(e){let t=0,i=0;const r=[];this._levelToLOD={},e&&(t=-1/0,i=1/0,e.forEach(e=>{r.push(e.scale),t=e.scale>t?e.scale:t,i=e.scale<i?e.scale:i,this._levelToLOD[e.level]=e})),this._set("scales",r),this._set("minScale",t),this._set("maxScale",i),this._set("lods",e),this._initializeUpsampleLevels()}readSize(e,t){return[t.cols,t.rows]}writeSize(e,t){t.cols=e[0],t.rows=e[0]}zoomToScale(e){const t=this.scales;if(e<=0)return t[0];if(e>=t.length)return t[t.length-1];{const i=Math.round(e-.5),r=Math.round(e);return t[r]+(r-e)*(t[i]-t[r])}}scaleToZoom(e){const t=this.scales,i=t.length-1;let r=0;for(;r<i;r++){const i=t[r],n=t[r+1];if(i<=e)return r;if(n===e)return r+1;if(i>e&&n<e)return r+1-(e-n)/(i-n)}return r}snapScale(e,t=.95){const i=this.scaleToZoom(e);return i%Math.floor(i)>=t?this.zoomToScale(Math.ceil(i)):this.zoomToScale(Math.floor(i))}tileAt(e,t,i,r){const n=this.lodAt(e);if(!n)return null;let a,s;if("number"==typeof t)a=t,s=i;else if(Object(f.g)(t.spatialReference,this.spatialReference))a=t.x,s=t.y,r=i;else{const e=Object(p.d)(t,this.spatialReference);if(!e)return null;a=e.x,s=e.y,r=i}const o=n.resolution*this.size[0],l=n.resolution*this.size[1];return r||(r={id:null,level:0,row:0,col:0,extent:Object(y.c)()}),r.level=e,r.row=Math.floor((this.origin.y-s)/l+.001),r.col=Math.floor((a-this.origin.x)/o+.001),this.updateTileInfo(r),r}updateTileInfo(e,t=0){let i=this.lodAt(e.level);if(!i&&1===t){const t=this.lods[this.lods.length-1];t.level<e.level&&(i=t)}if(!i)return;const r=e.level-i.level,n=i.resolution*this.size[0]/2**r,a=i.resolution*this.size[1]/2**r;e.id=`${e.level}/${e.row}/${e.col}`,e.extent||(e.extent=Object(y.c)()),e.extent[0]=this.origin.x+e.col*n,e.extent[1]=this.origin.y-(e.row+1)*a,e.extent[2]=e.extent[0]+n,e.extent[3]=e.extent[1]+a}upsampleTile(e){const t=this._upsampleLevels[e.level];return!(!t||-1===t.parentLevel||(e.level=t.parentLevel,e.row=Math.floor(e.row/t.factor+.001),e.col=Math.floor(e.col/t.factor+.001),this.updateTileInfo(e),0))}getTileBounds(e,t){const{resolution:i}=this.lodAt(t.level),r=i*this.size[0],n=i*this.size[1];return e[0]=this.origin.x+t.col*r,e[1]=this.origin.y-(t.row+1)*n,e[2]=e[0]+r,e[3]=e[1]+n,e}lodAt(e){return this._levelToLOD&&this._levelToLOD[e]||null}clone(){return r.fromJSON(this.write({}))}_initializeUpsampleLevels(){const e=this.lods;this._upsampleLevels=[];let t=null;for(let i=0;i<e.length;i++){const r=e[i];this._upsampleLevels[r.level]={parentLevel:t?t.level:-1,factor:t?t.resolution/r.resolution:0},t=r}}};Object(n.a)([Object(a.d)({type:Number,json:{write:!0}})],x.prototype,"compressionQuality",void 0),Object(n.a)([Object(a.d)({type:Number,json:{write:!0}})],x.prototype,"dpi",void 0),Object(n.a)([Object(a.d)({type:String,json:{read:g.read,write:g.write,origins:{"web-scene":{read:!1,write:!1}}}})],x.prototype,"format",void 0),Object(n.a)([Object(a.d)({readOnly:!0})],x.prototype,"isWrappable",null),Object(n.a)([Object(a.d)({type:d.a,json:{write:!0}})],x.prototype,"origin",void 0),Object(n.a)([Object(u.a)("origin")],x.prototype,"readOrigin",null),Object(n.a)([Object(a.d)({type:[b.a],value:null,json:{write:!0}})],x.prototype,"lods",null),Object(n.a)([Object(a.d)({readOnly:!0})],x.prototype,"minScale",void 0),Object(n.a)([Object(a.d)({readOnly:!0})],x.prototype,"maxScale",void 0),Object(n.a)([Object(a.d)({readOnly:!0})],x.prototype,"scales",void 0),Object(n.a)([Object(a.d)({cast:e=>Array.isArray(e)?e:"number"==typeof e?[e,e]:[256,256]})],x.prototype,"size",void 0),Object(n.a)([Object(u.a)("size",["rows","cols"])],x.prototype,"readSize",null),Object(n.a)([Object(h.a)("size",{cols:{type:s.a},rows:{type:s.a}})],x.prototype,"writeSize",null),Object(n.a)([Object(a.d)({type:f.f,json:{write:!0}})],x.prototype,"spatialReference",void 0),x=r=Object(n.a)([Object(o.g)("esri.layers.support.TileInfo")],x);var v=x;t.a=v},318:function(e,t,i){"use strict";i.d(t,"a",(function(){return O}));var r,n=i(11),a=i(1),s=i(0),o=i(7),l=i(15),c=i(12),u=i(2),h=i(8),f=i(13),d=i(14),p=i(48),m=(i(21),i(27)),y=i(190),b=i(222),g=i(20);class x{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),r=i%8,n=i>>3,a=this._tileAvailabilityBitSet;return n<0||n>a.length?"unknown":a[n]&1<<r?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let r=!0,n=!0;const a=Math.ceil(t*i/8),s=new Uint8Array(a);let o=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(n=!1,s[o]|=1<<i):r=!1,7===i&&++o}n?this._allAvailability="unavailable":r?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||m.default,{row:r,col:n,width:a,height:s}=e,o={query:{f:"json"}};return t=t?{...o,...t}:o,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then(e=>e.data).catch(e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:r,left:n,width:a,height:s},valid:!0,data:Object(c.e)(a*s,0)};throw e}).then(e=>{if(e.location&&(e.location.top!==r||e.location.left!==n||e.location.width!==a||e.location.height!==s))throw new h.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:r,left:n,width:a,height:s}});return x.fromJSON(e)})}static fromJSON(e){x.validateJSON(e);const t=new x;return t.location=Object.freeze(Object(a.b)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new h.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new h.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new h.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new h.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new h.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function v(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const w=s.a.getLogger("esri.layers.support.TilemapCache");let O=r=class extends l.d{constructor(e){super(e),this._handles=new y.a,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=m.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new b.a(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],()=>this._initializeTilemapDefinition()),Object(g.a)(this,"layer.tileInfo.lods",e=>this._initializeAvailableLevels(e),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(w.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,r){if(!this._availableLevels[e])return Promise.reject(new h.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const n=this._tmpTilemapDefinition,a=this._tilemapFromCache(e,t,i,n);if(a)return Promise.resolve(a);const s=r&&r.signal;return r={...r,signal:null},new Promise((e,t)=>{Object(u.q)(s,()=>t(Object(u.e)()));const i=v(n);let a=this._pendingTilemapRequests[i];if(!a){a=x.fromDefinition(n,r).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=a,a.then(e,e)}a.then(e,t)})}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,r){r.level=e,r.row=t,r.col=i;const n=this.layer.tileInfo;for(n.updateTileInfo(r);;){const e=this.getAvailability(r.level,r.row,r.col);if("unavailable"!==e)return e;if(!n.upsampleTile(r))return"unavailable"}}fetchAvailability(e,t,i,r){return this._availableLevels[e]?this.fetchTilemap(e,t,i,r).catch(e=>e).then(r=>{if(r instanceof x){const n=r.getAvailability(t,i);return"unavailable"===n?Promise.reject(new h.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):n}if(Object(u.m)(r))throw r;return"unknown"}):Promise.reject(new h.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,r,n){r.level=e,r.row=t,r.col=i;const a=this.layer.tileInfo;a.updateTileInfo(r);const s=this.fetchAvailability(e,t,i,n).catch(e=>{if(Object(u.m)(e))throw e;if(a.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r);throw e});return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,n,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,a,s){if(!this._prefetchingEnabled)return;const o="prefetch-"+e;if(this._handles.has(o))return;const l=Object(u.d)();s.then(()=>l.abort(),()=>l.abort());let h=!1;const f={remove(){h||(h=!0,l.abort())}};if(this._handles.add(f,o),await Object(c.m)(10,l.signal).catch(()=>{}),h||(h=!0,this._handles.remove(o)),Object(u.n)(l))return;const d={id:e,level:t,row:i,col:n},p={...a,signal:l.signal},m=this.layer.tileInfo;for(let e=0;r._prefetches.length<r._maxPrefetch&&m.upsampleTile(d);++e){const e=this.fetchAvailability(d.level,d.row,d.col,p);r._prefetches.push(e);const t=()=>{r._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?Object(d.C)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const n=v(r);return this._tilemapCache.get(n)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach(e=>this._availableLevels[e.level]=!0)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,r)=>!!e._tilemapFromCache(t,i,r,e._tmpTilemapDefinition)}}};O._maxPrefetch=4,O._prefetches=new c.a({initialSize:r._maxPrefetch}),Object(n.a)([Object(o.d)({constructOnly:!0,type:Number})],O.prototype,"levels",void 0),Object(n.a)([Object(p.a)("levels")],O.prototype,"castLevels",null),Object(n.a)([Object(o.d)({readOnly:!0,type:Number})],O.prototype,"size",null),Object(n.a)([Object(o.d)({constructOnly:!0,type:Number})],O.prototype,"cacheByteSize",void 0),Object(n.a)([Object(o.d)({constructOnly:!0})],O.prototype,"layer",void 0),Object(n.a)([Object(o.d)({constructOnly:!0})],O.prototype,"request",void 0),O=r=Object(n.a)([Object(f.g)("esri.layers.support.TilemapCache")],O)},327:function(e,t,i){"use strict";i.d(t,"a",(function(){return a})),i.d(t,"b",(function(){return n}));var r=i(240);const n={type:r.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:a}}}}};function a(e,t,i,n){if(!e)return null;const{minScale:a,maxScale:s,minLOD:o,maxLOD:l}=t;if(null!=o&&null!=l)return n&&n.ignoreMinMaxLOD?r.a.fromJSON(e):r.a.fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=o&&e<=l)});if(0!==a&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=a?t(a):1/0,n=s?t(s):-1/0;return r.a.fromJSON({...e,lods:e.lods.filter(e=>{const r=t(e.scale);return r<=i&&r>=n})})}return r.a.fromJSON(e)}},419:function(e,t,i){"use strict";i.r(t);var r=i(11),n=(i(17),i(1),i(19),i(4),i(18),i(6),i(0)),a=(i(9),i(3),i(7)),s=(i(15),i(16),i(12),i(2)),o=(i(10),i(8)),l=(i(171),i(5)),c=i(13),u=(i(68),i(72),i(101),i(42)),h=i(73),f=(i(74),i(181),i(14)),d=i(103),p=(i(48),i(43)),m=i(47),y=i(45),b=i(44),g=(i(21),i(76),i(46)),x=(i(57),i(58),i(77),i(27)),v=(i(69),i(51),i(52)),w=(i(49),i(54)),O=i(50),j=(i(84),i(88),i(86),i(85),i(87),i(75),i(186),i(187),i(174),i(53),i(200),i(247),i(223),i(56),i(55),i(65),i(63),i(62),i(60),i(61),i(67),i(59),i(64),i(78),i(71),i(79),i(80),i(82),i(95),i(89),i(105),i(139),i(150),i(125),i(140),i(151),i(141),i(106),i(118),i(119),i(120),i(152),i(153),i(142),i(154),i(155),i(156),i(143),i(144),i(160),i(161),i(162),i(157),i(163),i(93),i(158),i(164),i(165),i(166)),I=(i(83),i(146),i(91),i(66),i(70),i(81),i(94),i(96),i(97),i(100),i(92),i(108),i(121),i(122),i(107),i(130),i(109),i(110),i(98),i(102),i(99),i(111),i(112),i(113),i(114),i(115),i(116),i(117),i(104),i(124),i(123),i(131),i(135),i(136),i(132),i(147),i(148),i(149),i(137),i(138),i(133),i(126),i(127),i(128),i(134),i(159),i(167),i(168),i(190),i(184)),_=(i(191),i(208),i(220),i(221),i(205),i(206),i(210),i(214),i(226),i(217),i(231),i(232),i(233),i(234),i(227),i(228),i(175),i(90)),S=(i(145),i(189),i(236),i(215),i(207),i(245),i(241),i(242),i(405),i(316),i(352),i(365),i(386),i(366),i(225),i(248),i(238),i(239),i(243),i(216),i(201),i(336)),T=(i(406),i(198),i(306),i(337),i(387),i(407),i(367),i(408)),R=(i(222),i(172),i(169),i(178),i(188)),C=(i(20),i(204)),M=(i(173),i(255),i(283),i(183),i(284),i(280),i(285),i(281)),k=i(193),P=(i(179),i(180),i(176)),z=(i(22),i(129),i(23),i(195),i(237),i(230),i(240)),F=i(170),D=i(182),B=i(203),N=i(192),L=i(229),A=i(194),E=i(270),J=i(327),H=i(318),q=i(368),U=i(377),$=i(447),W=i(398),G=(i(360),i(448),i(378));const V=function(e,t){const i=(e.isWGS84||e.isWebMercator)&&(t.isWGS84||t.isWebMercator);return!(e.equals(t)||i)};function Y(e,t,i,r=null){if(e.spatialReference.equals(t))return e;const n=V(e.spatialReference,t);if(n&&!Object(M.d)())throw new o.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");const a=i.center,s=new O.b({xmin:a.x-e.x/2,xmax:a.x+e.x/2,ymin:a.y-e.y/2,ymax:a.y+e.y/2,spatialReference:e.spatialReference}),l=n?Object(M.g)(s,t,r):Object(w.d)(s,t);return null==l?null:{x:l.xmax-l.xmin,y:l.ymax-l.ymin}}function X(e,t=.01){return Object(_.d)(e)?t/Object(_.d)(e):0}function K(e,t,i=null,r=!0){const n=e.spatialReference;if(n.equals(t))return e;const a=V(n,t);if(a&&!Object(M.d)())throw new o.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");const s=a?Object(M.g)(e,t,i):Object(w.d)(e,t);if(s&&r&&t.isGeographic){var l,c;const[t,i]=n.isWebMercator?Object(g.i)(n).origin:null!=(l=null==(c=Object(g.i)(n))?void 0:c.valid)?l:[],r=X(n);r&&null!=t&&null!=i&&(Math.abs(e.x-t)<r&&Math.abs(180-s.x)<5e-4?s.x-=360:Math.abs(e.x-i)<r&&Math.abs(180+s.x)<5e-4&&(s.x+=360))}return s}function Z(e,t,i=null,r=!0){var n,a,s,l;const c=e.spatialReference;if(c.equals(t))return e;const u=V(c,t);if(u&&!Object(M.d)())throw new o.a("rasterprojectionhelper-projectExtent","projection engine is not loaded");const h=u?Object(M.g)(e,t,i):Object(w.d)(e,t);let[f,d]=null!=(n=null==(a=Object(g.i)(c))?void 0:a.origin)?n:[];if(h&&r&&c.isWebMercator&&t.isGeographic&&null!=f&&null!=d){const r=.001,n=1e3;if(Math.abs(e.xmin-f)<r&&Math.abs(d-e.xmax)>n&&Math.abs(180-h.xmax)<5e-4){h.xmin=-180;const r=[];r.push(new v.a(e.xmax,e.ymin,c)),r.push(new v.a(e.xmax,(e.ymin+e.ymax)/2,c)),r.push(new v.a(e.xmax,e.ymax,c));const n=r.map(e=>K(e,t,i)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);h.xmax=Math.max.apply(null,n)}if(Math.abs(e.xmax-d)<r&&Math.abs(f-e.xmin)>n&&Math.abs(180+h.xmin)<5e-4){h.xmax=180;const r=[];r.push(new v.a(e.xmin,e.ymin,c)),r.push(new v.a(e.xmin,(e.ymin+e.ymax)/2,c)),r.push(new v.a(e.xmin,e.ymax,c));const n=r.map(e=>K(e,t,i)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);h.xmin=Math.min.apply(null,n)}}[f,d]=t.isWebMercator?Object(g.i)(t).origin:null!=(s=null==(l=Object(g.i)(t))?void 0:l.valid)?s:[];const p=X(t);return p&&null!=f&&null!=d&&(Math.abs(h.xmin-f)<p&&(h.xmin=f),Math.abs(h.xmax-d)<p&&(h.xmax=d)),h}function Q(e,t,i){const r=Math.log(e.x/t.pixelSize.x)/Math.LN2,n=Math.log(e.y/t.pixelSize.y)/Math.LN2,a=t.storageInfo.maximumPyramidLevel||0;let s="down"===i?Math.floor(Math.min(r,n)):"up"===i?Math.ceil(Math.max(r,n)):Math.round((r+n)/2),o=!1;s<0?s=0:s>a&&(o=s>a+3,s=a);const l=2**s;return{pyramidLevel:s,pyramidResolution:new v.a({x:l*t.nativePixelSize.x,y:l*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:o}}const ee=new Map,te=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){const e=r.get(i);return e.refCount--,e.refCount<=0&&(r.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){const e=r.get(i);return e.ts=Date.now(),e.refCount++,r.delete(i),r.set(i,e),e.block}return null}putBlock(e,t,i,r=null){const n=this._cachedBlocks,a=e+"/"+t;if(n.has(a)){const e=n.get(a);e.ts=Date.now(),e.refCount++}else n.set(a,{block:i,ts:Date.now(),refCount:1,controller:r});this.trim(),this.updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,r=e+"/"+t;i.has(r)&&i.delete(r)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const t=Array.from(e),i=Date.now();for(let r=0;r<t.length&&t[r][1].ts<=i-this._duration;r++)e.delete(t[r][0]);0===e.size&&this.clearTimer()},this._interval)}trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function ie(e,t){return null==t?e:`${e}?sliceId=${t}`}function re(e,t,i){if(!ee.has(e))return null==t?te.getBlock(e,i):null;const r=ee.get(e);if(null==r[t]){for(let e=0;e<r.length;e++)if(r[e]&&r[e].cache.has(i)){const t=r[e].cache.get(i);return t.refCount++,t.block}return te.getBlock(e,i)}const n=r[t].cache;if(n.has(i)){const e=n.get(i);return e.refCount++,e.block}for(let e=0;e<r.length;e++)if(e!==t&&r[e]&&r[e]&&r[e].cache.has(i)){const t=r[e].cache.get(i);return t.refCount++,n.set(i,t),t.block}return null}function ne(e,t,i,r,n=null){if(!ee.has(e))return void(null==t&&te.putBlock(e,i,r,n));const a=ee.get(e);if(null==a[t])return void te.putBlock(e,i,r,n);const s={refCount:1,block:r,isResolved:!1,isRejected:!1,controller:n};r.then(()=>s.isResolved=!0).catch(()=>s.isRejected=!0),a[t].cache.set(i,s)}const ae=n.a.getLogger("esri.layers.mixins.ImageryTileMixin"),se=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",Object(C.a)(e,ae))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=Object($.f)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let r;this.updateRenderer();const n=this._rasterJobHandler.instance,{bandIds:a}=this;return r=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:a}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:a}),r}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const i=Object(g.i)(e);return z.a.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,r={}){if(r.requestAsImageElement){const n=this.getTileUrl(e,t,i);return Object(x.default)(n,{responseType:"image",query:{sliceId:this._sliceId,_ts:r.timestamp},signal:r.signal}).then(e=>e.data)}await this._initJobHandler();const n="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:n,...r}}return this.raster.fetchTile(e,t,i,r)}async fetchPixels(e,t,i,r){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...r}}return this.raster.fetchPixels(e,t,i,r)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new $.a;return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object($.c)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(Object(n.h)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach(e=>{i.push(new q.a({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))}),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,i;this.bandIds||(this.bandIds=Object($.b)(e)),this.renderer||(this.renderer=Object($.d)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(i=t[0])?void 0:i.variableName})),this.symbolizer?(this.symbolizer.rendererJSON=Object($.f)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new W.a({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||ae.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return Object(r.a)([Object(a.d)()],t.prototype,"_cachedRendererJson",void 0),Object(r.a)([Object(a.d)()],t.prototype,"_sliceId",void 0),Object(r.a)([Object(a.d)()],t.prototype,"_compatibleFullExtent",void 0),Object(r.a)([Object(a.d)()],t.prototype,"_rasterJobHandler",void 0),Object(r.a)([Object(a.d)()],t.prototype,"bandIds",void 0),Object(r.a)([Object(a.d)()],t.prototype,"copyright",void 0),Object(r.a)([Object(a.d)({type:O.b}),Object(d.a)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),Object(r.a)([Object(a.d)()],t.prototype,"interpolation",void 0),Object(r.a)([Object(a.d)()],t.prototype,"ioConfig",void 0),Object(r.a)([Object(a.d)({type:[q.a]})],t.prototype,"multidimensionalDefinition",null),Object(r.a)([Object(a.d)()],t.prototype,"raster",void 0),Object(r.a)([Object(a.d)({readOnly:!0}),Object(d.a)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),Object(r.a)([Object(a.d)()],t.prototype,"sourceJSON",void 0),Object(r.a)([Object(a.d)({type:g.f}),Object(d.a)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),Object(r.a)([Object(a.d)({type:z.a}),Object(d.a)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),Object(r.a)([Object(a.d)(P.n)],t.prototype,"url",null),Object(r.a)([Object(a.d)({types:T.a})],t.prototype,"renderer",null),Object(r.a)([Object(a.d)()],t.prototype,"symbolizer",void 0),t=Object(r.a)([Object(c.g)("esri.layers.ImageryTileMixin")],t),t};let oe=class extends u.b{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};Object(r.a)([Object(a.d)({type:Number,json:{write:!0}})],oe.prototype,"blockWidth",void 0),Object(r.a)([Object(a.d)({type:Number,json:{write:!0}})],oe.prototype,"blockHeight",void 0),Object(r.a)([Object(a.d)({type:String,json:{write:!0}})],oe.prototype,"compression",void 0),Object(r.a)([Object(a.d)({type:v.a,json:{write:!0}})],oe.prototype,"origin",void 0),Object(r.a)([Object(a.d)({type:Number,json:{write:!0}})],oe.prototype,"firstPyramidLevel",void 0),Object(r.a)([Object(a.d)({type:Number,json:{write:!0}})],oe.prototype,"maximumPyramidLevel",void 0),Object(r.a)([Object(a.d)()],oe.prototype,"pyramidScalingFactor",void 0),Object(r.a)([Object(a.d)({type:Number,json:{write:!0}})],oe.prototype,"pyramidBlockWidth",void 0),Object(r.a)([Object(a.d)({type:Number,json:{write:!0}})],oe.prototype,"pyramidBlockHeight",void 0),Object(r.a)([Object(a.d)({type:Boolean,json:{write:!0}})],oe.prototype,"isVirtualTileInfo",void 0),Object(r.a)([Object(a.d)({json:{write:!0}})],oe.prototype,"tileInfo",void 0),Object(r.a)([Object(a.d)()],oe.prototype,"blockBoundary",void 0),oe=Object(r.a)([Object(c.g)("esri.layers.support.RasterStorageInfo")],oe);var le=oe;let ce=class extends(Object(h.b)(u.b)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=async function(){if(Object(M.d)()||!Object(M.e)())return null;await Object(M.f)()}();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:z.a.create(),...e.ioConfig}}),e}set url(e){this._set("url",Object(C.a)(e,n.a.getLogger(this.declaredClass)))}async open(e){throw new o.a("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,r={}){var a;const{tileInfo:s}=r,o=s.lodAt(e),l=this.getTileExtent({x:o.resolution,y:o.resolution},t,i,s.origin,s.spatialReference,s.size);return null!=(a=r.multidimensionalDefinition)&&a.length&&Object(n.h)(this.rasterInfo.multidimensionalInfo)&&null==r.sliceId&&(r={...r,sliceId:this.getSliceIndex(r.multidimensionalDefinition)||0}),this.fetchPixels(l,s.size[0],s.size[1],r)}async identify(e,t={}){const{spatialReference:i,extent:r}=this.rasterInfo,{datumTransformation:a}=t;let s=K(e,i,a);if(!r.intersects(s))return{location:s,value:null};if(Object(n.h)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let o=0;if(t.srcResolution)o=Q(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(o=await this.computeBestPyramidLevelForLocation(e,t),null==o)return{location:s,value:null};const l=this.identifyPixelLocation(s,o,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:h,colOffset:f}=l,d=ie(this.url,t.sliceId),p=`${o}/${c}/${u}`;let m=re(d,null,p);Object(n.h)(m)||(m=this.fetchRawTile(o,c,u,t),ne(d,null,p,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:s,value:null};const b=h*this.rasterInfo.storageInfo.blockHeight+f;return{location:s,value:!y.mask||y.mask[b]?y.pixels.map(e=>e[b]):null,pyramidLevel:o}}async fetchPixels(e,t,i,r={}){const a=e.clone().normalize();e=a[0];const s=this.rasterInfo.spatialReference,l=!e.spatialReference.equals(s),{datumTransformation:c}=r,u=new v.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),h=r.srcResolution||(l?Y(u,s,e,c):u);if(!h)return null;const{pyramidLevel:f,pyramidResolution:d,excessiveReading:p}=Q(h,this.rasterInfo,this.ioConfig.sampling);if(p)return null;const m=this.rasterInfo.storageInfo;let y=l?Z(e,s,c):e;const b=Object(n.p)(this.rasterInfo.transform);if(b&&(y=b.inverseTransform(y)),null==y)return null;const x={x:Math.floor((y.xmin-m.origin.x)/d.x+.1),y:Math.floor((m.origin.y-y.ymax)/d.y+.1)},w=Math.ceil((y.xmax-y.xmin)/d.x-.1),O=Math.ceil((y.ymax-y.ymin)/d.y-.1);if(w/t>8||O/i>8)return null;const j=await this.fetchRawPixels(f,x,{width:w,height:O},r);if(!j)return null;const I=f>0?m.pyramidBlockWidth:m.blockWidth,_=f>0?m.pyramidBlockHeight:m.blockHeight;if(!l&&1===j.pixelBlocks.length&&I===t&&_===i&&h.x===u.x&&h.y===u.y)return{extent:e,srcExtent:y,pixelBlock:j.pixelBlocks[0]};const S=function(e,t,i,r=null,n=null,a=!1,s=[32,32]){var l,c;if(V(e.spatialReference,t.spatialReference)&&!Object(M.d)())throw new o.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");if(!(e&&t&&i))return null;const{xmin:u,ymin:h,xmax:f,ymax:d}=e,p=e.spatialReference,m=t.spatialReference,[y,b]=null!=(l=null==(c=Object(g.i)(p))?void 0:c.valid)?l:[],x={x:s[0]*i.x,y:s[1]*i.y},w={cols:Math.ceil((f-u)/x.x-.1)+1,rows:Math.ceil((d-h)/x.y-.1)+1},O=x.x,j=x.y,I=[];let _,S=!1;for(let e=0;e<w.cols;e++){const i=[];for(let s=0;s<w.rows;s++){let o=K(new v.a({x:u+O*e,y:d-j*s,spatialReference:p}),m,r);n&&(o=n.inverseTransform(o)),i.push(o),e>0&&a&&o&&_[s]&&null!=y&&o.x<_[s].x&&(o.x+=b-y),o?(I.push((o.x-t.xmin)/(t.xmax-t.xmin)),I.push((t.ymax-o.y)/(t.ymax-t.ymin))):(I.push(NaN),I.push(NaN),S=!0)}_=i}const T=function(e,t){const i=(e[0]+e[4]+e[4*t.cols]+e[4*t.cols+4])/4,r=(e[1]+e[5]+e[4*t.rows+1]+e[4*t.rows+5])/4;return[Math.abs(i-e[2*t.rows+2]),Math.abs(r-e[2*t.rows+3])]}(I,w),R=new Float32Array((w.cols-1)*(w.rows-1)*2*6),C=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),k=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let e=0;e<w.cols-1;e++){for(let t=0;t<w.rows-1;t++){let i=e*w.rows*2+2*t;const r=I[i],n=I[i+1],a=I[i+2],s=I[i+3];i+=2*w.rows;const o=I[i],l=I[i+1],c=I[i+2],u=I[i+3];let h=0,f=12*(t*(w.cols-1)+e);for(let e=0;e<3;e++)R[f++]=C[h++]*r+C[h++]*a+C[h++]*c;h=0;for(let e=0;e<3;e++)R[f++]=C[h++]*n+C[h++]*s+C[h++]*u;h=0;for(let e=0;e<3;e++)R[f++]=k[h++]*r+k[h++]*o+k[h++]*c;h=0;for(let e=0;e<3;e++)R[f++]=k[h++]*n+k[h++]*l+k[h++]*u}if(S)for(let e=0;e<R.length;e++)isNaN(R[e])&&(R[e]=-1)}return{offsets:I,error:T,coefficients:R,spacing:s,size:[w.cols-1,w.rows-1]}}(e,j.extent,u,c,b);let T;const R=!r.requestRawData,C={rows:S.spacing[0],cols:S.spacing[1]},{pixelBlocks:k,mosaicSize:P,isPartiallyFilled:z}=j;if(this.rasterJobHandler)T=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:k,srcMosaicSize:P,destDimension:R?{width:t,height:i}:null,coefs:R?S.coefficients:null,sampleSpacing:R?C:null,interpolation:r.interpolation},r);else{const e=Object(G.l)(k,P);T=R?Object(G.j)(e,{width:t,height:i},S.coefficients,C,r.interpolation):e}return r.requestRawData?{srcExtent:y,pixelBlock:T,transformGrid:S,extent:e,isPartiallyFilled:z}:{srcExtent:y,extent:e,pixelBlock:T}}async fetchRawPixels(e,t,i,r){const{origin:n,blockBoundary:a}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:o}=this.getBlockWidthHeight(e);let{x:l,y:c}=t,{width:u,height:h}=i;r.buffer&&(l-=r.buffer.cols,c-=r.buffer.rows,u+=2*r.buffer.cols,h+=2*r.buffer.rows);const f=Math.floor(l/s),d=Math.floor(c/o),p=Math.floor((l+u-1)/s),m=Math.floor((c+h-1)/o),y=a[e];if(!y)return null;const{minRow:b,minCol:g,maxCol:x,maxRow:v}=y;if(m<b||p<g||d>v||f>x)return null;const w=[];let j,I=!1;for(let t=d;t<=m;t++)for(let i=f;i<=p;i++)t>=b&&i>=g&&v>=t&&x>=i?(j=this._fetchRawTile(e,t,i,r),this.ioConfig.allowPartialFill&&(j=new Promise(e=>{j.then(t=>e(t)).catch(()=>{I=!0,e(null)})})),w.push(j)):w.push(null);if(0===w.length)return null;const _=await Promise.all(w),S={height:(m-d+1)*s,width:(p-f+1)*o},{nativePixelSize:T,spatialReference:R}=this.rasterInfo,C=T.x*2**e,M=T.y*2**e;return{extent:new O.b({xmin:n.x+f*s*C,xmax:n.x+(p+1)*s*C,ymin:n.y-(m+1)*o*M,ymax:n.y-d*o*M,spatialReference:R}),pixelBlocks:_,mosaicSize:S,isPartiallyFilled:I}}async fetchRawTile(e,t,i,r){throw new o.a("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Z(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object(W.f)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var r,n;const{customFetchParameters:a}=this.ioConfig,{range:s,query:o,headers:l}=t;i=null!=(r=null!=(n=i)?n:t.retryCount)?r:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(x.default)(e,{...t,query:{...o,...a},headers:{...l,...c}})}catch(r){if(i>0)return i--,this.request(e,t,i);throw r}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!Object(n.h)(t)||null==e||!e.length)return null;let i=0;const r=e[0].variableName;for(let n=0;n<t.variables.length;n++){const a=t.variables[n],s=a.dimensions;if(a.name!==r){i+=s.map(e=>this._getDimensionValuesCount(e)).reduce((e,t)=>e+t);break}const o=s.map(e=>this._getDimensionValuesCount(e)),l=s.length;for(let t=0;t<l;t++){const r=e.filter(e=>e.dimensionName===s[t].name)[0];if(null==r)return null;const n=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],a=this._getIndexFromDimensions(n,s[t]);if(-1===a)return null;o.shift(),i+=t===l-1?a:a*o.reduce((e,t)=>e+t)}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const n=[],a=e.maximumPyramidLevel||0;let s=Math.max(r.x,r.y),o=1/.0254*96*s;for(let e=0;e<=a;e++)n.push({level:a-e,resolution:s,scale:o}),s*=2,o*=2;const l=new v.a({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new z.a({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,r){const{width:n,height:a,nativeExtent:s,pixelSize:o,spatialReference:l}=e,c=new v.a({x:s.xmin,y:s.ymax,spatialReference:l});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(n,a))/Math.LN2-8)));const u=this._computeBlockBoundary(s,o,r,512,512);e.storageInfo=new le({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,i){const{spatialReference:r,nativePixelSize:n,nativeExtent:a}=this.rasterInfo,{blockWidth:s,blockHeight:o,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:u}=this.rasterInfo.storageInfo,h=K(e,r,i);if(!a.intersects(h))return null;if(t<0||t>l)return null;const f=c**t,d=f*n.x,p=f*n.y,m=(u.y-h.y)/p/o,y=(h.x-u.x)/d/s,b=Math.min(o-1,Math.floor((m-Math.floor(m))*o)),g=Math.min(s-1,Math.floor((y-Math.floor(y))*s));return{pyramidLevel:t,row:Math.floor(m),col:Math.floor(y),rowOffset:b,colOffset:g,srcLocation:h}}getTileExtent(e,t,i,r,n,a){const[s,o]=a,l=r.x+i*s*e.x,c=l+s*e.x,u=r.y-t*o*e.y,h=u-o*e.y;return new O.b({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<i||r.minRow>t||r.minCol>i}_computeBlockBoundary(e,t,i,r,n){let{x:a,y:s}=t;const o=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-o+.1*a)/r/a),maxCol:Math.floor((e.xmax-o-.1*a)/r/a),minRow:Math.floor((l-e.ymax+.1*s)/n/s),maxRow:Math.floor((l-e.ymin-.1*s)/n/s)}];if(i>0)for(let t=0;t<i;t++)a*=2,s*=2,c.push({minCol:Math.floor((e.xmin-o+.1*a)/r/a),maxCol:Math.floor((e.xmax-o-.1*a)/r/a),minRow:Math.floor((l-e.ymax+.1*s)/n/a),maxRow:Math.floor((l-e.ymin-.1*s)/n/a)});return c}_fetchRawTile(e,t,i,r){const a=this.rasterInfo.storageInfo.blockBoundary[e];if(!a)return Promise.resolve(null);const{minRow:o,minCol:l,maxCol:c,maxRow:u}=a;if(t<o||i<l||t>u||i>c)return Promise.resolve(null);const h=ie(this.url,r.sliceId),f=`${e}/${t}/${i}`;let d=re(h,r.registryId,f);if(!Object(n.h)(d)){const n=Object(s.d)();d=this.fetchRawTile(e,t,i,{...r,signal:n.signal}),ne(h,r.registryId,f,d,n),d.catch(()=>{!function(e,t,i){if(!ee.has(e))return void(null==t&&te.deleteBlock(e,i));const r=ee.get(e);null!=r[t]?r[t].cache.delete(i):te.deleteBlock(e,i)}(h,r.registryId,f)})}return r.signal&&Object(s.q)(r,()=>{!function(e,t,i){if(!ee.has(e))return null==t?te.decreaseRefCount(e,i):0;const r=ee.get(e);if(null==r[t])return te.decreaseRefCount(e,i);const n=r[t].cache;if(n.has(i)){const e=n.get(i);if(e.refCount--,0===e.refCount){n.delete(i);for(let e=0;e<r.length;e++)r[e]&&r[e].cache.has(i)&&r[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}}(h,r.registryId,f)}),d}_getIndexFromDimensions(e,t){const{extent:i,interval:r,unit:n,values:a}=t;if(null!=a&&a.length)return Array.isArray(a[0])?a.findIndex(t=>t[0]<=e&&t[1]>=e):a.indexOf(e);if(e>i[1])return-1;const s=i[0];let o=-1;if("ISO8601"===n){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-s)/1e3/r);break;case"minutes":o=Math.round((e-s)/6e4/r);break;case"hours":o=Math.round((e-s)/36e5/r);break;case"days":o=Math.round((e-s)/864e5/r);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/r);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/r)}return o}return Math.round((e-s)/r)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:r,values:n}=e;let a=(null==n?void 0:n.length)||0;if(a)return a;const s=t[0];if(0===a&&"ISO8601"===r){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":a=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":a=Math.round((t[1]-t[0])/6e4/i);break;case"hours":a=Math.round((t[1]-t[0])/36e5/i);break;case"days":a=Math.round((t[1]-t[0])/864e5/i);break;case"years":a=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/i);break;case"decades":a=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/i)}return a}return Math.round((t[1]-t[0])/i)}};Object(r.a)([Object(a.d)(P.n)],ce.prototype,"url",null),Object(r.a)([Object(a.d)({type:String,json:{write:!0}})],ce.prototype,"datasetName",void 0),Object(r.a)([Object(a.d)({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),Object(r.a)([Object(a.d)()],ce.prototype,"rasterInfo",void 0),Object(r.a)([Object(a.d)()],ce.prototype,"ioConfig",void 0),Object(r.a)([Object(a.d)()],ce.prototype,"sourceJSON",void 0),ce=Object(r.a)([Object(c.g)("esri.layers.support.rasterDatasets.BaseRaster")],ce);var ue=ce;function he(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const n=he(e,i);for(let e=0;e<n.length;e++)he(n[e],t).forEach(e=>r.push(e));return r}const n=e.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let e=0;e<n.length;e++)r.push(n[e]||n.item[e]);return r}function fe(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=he(e,i);return r.length>0?t?fe(r[0],t):r[0]:null}function de(e,t=null){const i=t?fe(e,t):e;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function pe(e,t){return function(e,t){const i=he(e,t),r=[];let n;for(let e=0;e<i.length;e++)n=i[e].textContent||i[e].nodeValue,n&&(n=n.trim(),""!==n&&r.push(n));return r}(e,t).map(e=>Number(e))}function me(e,t){const i=de(e,t);return Number(i)}function ye(e,t){var i;const r=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),n=t.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===n}let be=class extends u.b{constructor(){super(...arguments),this.type="identity"}forwardTransform(e){return e}inverseTransform(e){return e}};Object(r.a)([Object(a.d)({json:{write:!0}})],be.prototype,"spatialReference",void 0),Object(r.a)([Object(m.a)({IdentityXform:"identity"})],be.prototype,"type",void 0),be=Object(r.a)([Object(c.g)("esri.layers.support.rasterTransforms.IdentityTransform")],be);var ge=be;function xe(e,t,i){const{x:r,y:n}=t;if(i<2)return{x:e[0]+r*e[2]+n*e[4],y:e[1]+r*e[3]+n*e[5]};if(2===i){const t=r*r,i=n*n,a=r*n;return{x:e[0]+r*e[2]+n*e[4]+t*e[6]+a*e[8]+i*e[10],y:e[1]+r*e[3]+n*e[5]+t*e[7]+a*e[9]+i*e[11]}}const a=r*r,s=n*n,o=r*n,l=a*r,c=a*n,u=r*s,h=n*s;return{x:e[0]+r*e[2]+n*e[4]+a*e[6]+o*e[8]+s*e[10]+l*e[12]+c*e[14]+u*e[16]+h*e[18],y:e[1]+r*e[3]+n*e[5]+a*e[7]+o*e[9]+s*e[11]+l*e[13]+c*e[15]+u*e[17]+h*e[19]}}function ve(e,t,i){const{xmin:r,ymin:n,xmax:a,ymax:s,spatialReference:o}=t;let l=[];if(i<2)l.push({x:r,y:s}),l.push({x:a,y:s}),l.push({x:r,y:n}),l.push({x:a,y:n});else{let e=10;for(let t=0;t<e;t++)l.push({x:r,y:n+(s-n)*t/(e-1)}),l.push({x:a,y:n+(s-n)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:r+(a-r)*t/e,y:n}),l.push({x:r+(a-r)*t/e,y:s})}l=l.map(t=>xe(e,t,i));const c=l.map(e=>e.x),u=l.map(e=>e.y);return new O.b({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:o})}let we=class extends u.b{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const n=[];for(let e=0;e<i.length;e++)n.push(i[e]),n.push(r[e]);return n}writeForwardCoefficients(e,t,i){const r=[],n=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):n.push(e[t]);t.coeffX=r,t.coeffY=n}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,r,n,a,s]=e,o=r*s-a*n,l=a*n-r*s;return[(a*i-t*s)/o,(r*i-t*n)/l,s/o,n/l,-a/o,-r/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const n=[];for(let e=0;e<i.length;e++)n.push(i[e]),n.push(r[e]);return n}writeInverseCoefficients(e,t,i){const r=[],n=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):n.push(e[t]);t.inverseCoeffX=r,t.inverseCoeffY=n}forwardTransform(e){if("point"===e.type){const t=xe(this.forwardCoefficients,e,this.polynomialOrder);return new v.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return ve(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=xe(this.inverseCoefficients,e,this.polynomialOrder);return new v.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return ve(this.inverseCoefficients,e,this.polynomialOrder)}};Object(r.a)([Object(a.d)({json:{write:!0}})],we.prototype,"polynomialOrder",void 0),Object(r.a)([Object(a.d)()],we.prototype,"forwardCoefficients",void 0),Object(r.a)([Object(y.a)("forwardCoefficients",["coeffX","coeffY"])],we.prototype,"readForwardCoefficients",null),Object(r.a)([Object(b.a)("forwardCoefficients")],we.prototype,"writeForwardCoefficients",null),Object(r.a)([Object(a.d)({json:{write:!0}})],we.prototype,"inverseCoefficients",null),Object(r.a)([Object(y.a)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],we.prototype,"readInverseCoefficients",null),Object(r.a)([Object(b.a)("inverseCoefficients")],we.prototype,"writeInverseCoefficients",null),Object(r.a)([Object(a.d)({json:{write:!0}})],we.prototype,"spatialReference",void 0),Object(r.a)([Object(m.a)({PolynomialXform:"polynomial"})],we.prototype,"type",void 0),we=Object(r.a)([Object(c.g)("esri.layers.support.rasterTransforms.PolynomialTransform")],we);var Oe=we;const je={PolynomialXform:Oe,IdentityXform:ge},Ie=Object.keys(je),_e=new Map;_e.set("int16","esriFieldTypeSmallInteger"),_e.set("int32","esriFieldTypeInteger"),_e.set("int64","esriFieldTypeInteger"),_e.set("float32","esriFieldTypeSingle"),_e.set("float64","esriFieldTypeDouble"),_e.set("text","esriFieldTypeString");let Se=class extends ue{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new o.a("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,r={}){const n=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const a=this._buildCacheFilePath(n,t,i,r.multidimensionalDefinition),s=this._getIndexRecordFromBundle(t,i),o=await this.request(a,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,s);if(0===c.recordSize)return null;const u=await this.request(a,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:r.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(t=>!e[t])}_parseHeader(e){var t,i;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:a,colormap:s,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,h=e.statistics&&e.statistics.map(e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode})),f=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,p=new g.f(null!=f&&f.wkid||null!=f&&f.wkt?f:d);let m=new O.b({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:p});const y=new v.a({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:p}),b=Math.round((m.xmax-m.xmin)/y.x),x=Math.round((m.ymax-m.ymin)/y.y),w=this._parseTransform(e.geodataXform),j=w?m:null;w&&(m=w.forwardTransform(m),y.x=(m.xmax-m.xmin)/b,y.y=(m.ymax-m.ymin)/x);const I=null!=(i=e.properties)?i:{},_=e.format.toLowerCase().replace("cache/",""),S=new v.a(e.origin.x,e.origin.y,p);let T,R,C,M;if(s&&s.colors)for(T=[],R=0;R<s.colors.length;R++)C=s.colors[R],M=s.values?s.values[R]:R,T.push([M,255&C,C<<16>>>24,C<<8>>>24,C>>>24]);const k=e.LODInfos,P=[];for(R=0;R<k.levels.length;R++)P.push({level:k.levels[R],resolution:k.resolutions[R],scale:96/.0254*k.resolutions[R]});const F=new z.a({dpi:96,lods:P,format:_,origin:S,size:[o,l],spatialReference:p}),D={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},B=[{maxCol:Math.ceil(b/o)-1,maxRow:Math.ceil(x/l)-1,minCol:0,minRow:0}];let N=2;if(u>0)for(R=0;R<u;R++)B.push({maxCol:Math.ceil(b/N/o)-1,maxRow:Math.ceil(x/N/l)-1,minCol:0,minRow:0}),N*=2;const L=e.mdInfo;return{storageInfo:D,rasterInfo:new U.a({width:b,height:x,pixelType:r,bandCount:n,extent:m,nativeExtent:j,transform:w,spatialReference:p,pixelSize:y,keyProperties:I,statistics:h,histograms:a,multidimensionalInfo:L,colormap:T,storageInfo:new le({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:S,tileInfo:F,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:B})})}}_parseTransform(e){var t,i;if(!function(e){const t=null==e?void 0:e.type;return!e||Ie.includes(t)}(e))throw new o.a("cloudraster:open","the data contains unsupported geodata transform types");const r=function(e){if(!(null==e?void 0:e.type))return null;const t=je[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}(e);if("identity"===r.type)return null;if(null==(t=r.forwardCoefficients)||!t.length||null==(i=r.inverseCoefficients)||!i.length)throw new o.a("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then(e=>e.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(e=>e.data).catch(()=>null),r=await Promise.all([t,i]);let n;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map(e=>({type:"OID"===e.name?"esriFieldTypeOID":_e.get(e.type),name:e.name,alias:e.alias||e.name}));const i=t.map(e=>({attributes:e}));e&&t&&(n={fields:e,features:i})}}return!n&&r[1]&&(n=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const r=t.getUint32(4,!0),n=t.getUint16(8,!0),a=t.getUint16(10,!0),s={version:i,recordCount:r,headerByteCount:n,recordByteCount:a};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:Object(W.d)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<r&&e.byteLength-o>a;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)i.push(Object(W.d)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}o+=t.length}),c.push(i)):o+=a}}const h=function(e){const t=e.fields,i=e.records,r=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",n=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),a=n.map(e=>e.name),s=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[r]=o++,l=1;l<a.length;l++)t[a[l]]=e[l-1];s.push({attributes:t})}),{displayFieldName:"",fields:n,features:s}}({fields:l,records:c});return{header:s,fields:l,records:c,recordSet:h}}}.parse(r[1]).recordSet),D.default.fromJSON(n)}_buildCacheFilePath(e,t,i,r){const a=this.storageInfo.packetSize,s=Math.floor(t/a)*a,o=Math.floor(i/a)*a,l="R"+this._toHexString4(s)+"C"+this._toHexString4(o);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=null==r?void 0:r[0];if(!Object(n.h)(u)||!h)return`${this.url}/_alllayers/${c}/${l}.bundle`;let f=u.variables.filter(e=>e.name===h.variableName)[0].dimensions[0].values.indexOf(h.values[0]).toString(16);const d=4-f.length;for(let e=0;e<d;e++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${h.variableName}/${f}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,r=i*(e%i)+t%i;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let r,n=0;for(r=0;r<5;r++)n|=(255&i[r])<<8*r;const a=0xffffffffff&n;for(n=0,r=5;r<8;r++)n|=(255&i[r])<<8*(r-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};Object(r.a)([Object(a.d)({readOnly:!0})],Se.prototype,"storageInfo",void 0),Object(r.a)([Object(a.d)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=Object(r.a)([Object(c.g)("esri.layers.support.rasterDatasets.CloudRaster")],Se);var Te=Se;let Re=class extends ue{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:r,histograms:n,name:a,keyProperties:s,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=i,f=this.data.extent||new O.b({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new g.f({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,p={x:f.width/c,y:f.height/u},m=new U.a({width:c,height:u,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:p,spatialReference:f.spatialReference,bandCount:3,keyProperties:s||{},statistics:r,isPseudoSpatialReference:d,histograms:n});this.createRemoteDatasetStorageInfo(m,512,512),this._set("rasterInfo",m),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=a,this.url="/InMemory/"+a}fetchRawTile(e,t,i,r={}){const n=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,t,i){const r=this.rasterInfo.storageInfo.maximumPyramidLevel,a=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},i):Promise.resolve(Object(G.g)(e,t,r)),l=Object(n.h)(this.rasterInfo.statistics),c=Object(n.h)(this.rasterInfo.histograms),u=l&&c?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Object(G.f)(e)),h=await Object(s.j)([a,u]);if(!h[0].value&&h[1].value)throw new o.a("inmemory-raster:open","failed to build in memory raster");var f,d;this._pixelBlockTiles=h[0].value,l||(this.rasterInfo.statistics=null==(f=h[1].value)?void 0:f.statistics),c&&(this.rasterInfo.histograms=null==(d=h[1].value)?void 0:d.histograms)}};Object(r.a)([Object(a.d)({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Object(r.a)([Object(a.d)()],Re.prototype,"data",void 0),Re=Object(r.a)([Object(c.g)("esri.layers.support.rasterDatasets.InMemoryRaster")],Re);var Ce=Re;function Me(e,t){if(!e||!t)return null;const i=[];for(let r=0;r<e.length;r++)i.push(e[r]),i.push(t[r]);return i}function ke(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new g.f({wkid:t});if(!(e=String(e)).startsWith("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(e=>e.trim()).filter(e=>""!==e),r=i[i.length-1].split(",");return"EPSG"===r[0]&&e.endsWith('"]]')&&(t=Number(r[1]),!isNaN(t)&&0!==t)?new g.f({wkid:t}):new g.f({wkt:e})}function Pe(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if(ye(e,"SRS")){if(!i.spatialReference){const t=de(e);i.spatialReference=ke(t)}}else if(ye(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=function(e){var t;const i=fe(e,"GeodataXform"),r=ke(me(i,"SpatialReference/WKID")||de(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const n=null!=(t=me(i,"PolynomialOrder"))?t:1,a=pe(i,"CoeffX/Double"),s=pe(i,"CoeffY/Double"),o=pe(i,"InverseCoeffX/Double"),l=pe(i,"InverseCoeffY/Double"),c=Me(a,s),u=Me(o,l);return{spatialReference:r,transform:new Oe({spatialReference:r,polynomialOrder:n,forwardCoefficients:c,inverseCoefficients:u})}}(e);i.transform=r,i.spatialReference||(i.spatialReference=t)}else he(e,"MDI").forEach(e=>i.metadata[e.getAttribute("key")]=de(e));else if(ye(e,"PAMRasterBand")){const t=function(e){var t;const i=me(e,"NoDataValue"),r=fe(e,"Histograms/HistItem"),n=me(r,"HistMin"),a=me(r,"HistMax"),s=me(r,"BucketCount"),o=null==(t=de(r,"HistCounts"))?void 0:t.split("|").map(e=>Number(e));let l,c,u,h;he(e,"Metadata/MDI").forEach(e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}});const f=me(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:n,max:a,size:s||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const r=i.rasterBands;if(r){const e=!!r[0].statistics;i.statistics=e?r.map(e=>e.statistics):null;const t=!!r[0].histogram;i.histograms=t?r.map(e=>e.histogram):null}return i}let ze=class extends ue{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:r,histograms:n,transform:a}=await this._fetchAuxiliaryData(e);const s=!i;s&&(i=new g.f({wkid:3857})),null!=n&&n.length&&null==r&&(r=Object(G.h)(n));const{width:o,height:l}=t;let c=new O.b({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=a?a.forwardTransform(c):c;let h=!0;if(a){const e=a.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(a=null,c=u)}const f=new Ce({data:{extent:u,nativeExtent:c,transform:a,pixelBlock:t,statistics:r,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:s}});await f.open(),this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,r={}){return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=Object(W.h)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new o.a("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const r=Object(n.p)(null==e?void 0:e.signal),a=null!=(t=this.ioConfig.skipExtensions)?t:[],o=a.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:r}),l=this.datasetFormat,c="JPG"===l?"jgw":"PNG"===l?"pgw":"BMP"===l?"bpw":null,u=a.indexOf(c)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+c,{responseType:"text",signal:r}),h=await Object(s.j)([o,u]);if(null!=r&&r.aborted)throw Object(s.e)();const f=Pe(null==(i=h[0].value)?void 0:i.data);if(!f.transform){const e=h[1].value?h[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;f.transform=6===(null==e?void 0:e.length)?new Oe({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};Object(r.a)([Object(a.d)({type:String,json:{write:!0}})],ze.prototype,"datasetFormat",void 0),ze=Object(r.a)([Object(c.g)("esri.layers.support.rasterDatasets.ImageAuxRaster")],ze);var Fe=ze;let De=class extends ue{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=i.data;if(this.sourceJSON=r,!r)throw new o.a("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new o.a("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=r.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(r.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===r.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=r.name.slice(r.name.indexOf("/")+1);const a=await this._fetchRasterInfo({signal:t});if(!Object(n.h)(a))throw new o.a("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?Object(J.a)(r.tileInfo,r):z.a.fromJSON(r.tileInfo),{extent:t,pixelSize:i}=a,n=.5/a.width*i.x;let s,o;const l=e.lodAt(Math.max.apply(null,e.lods.map(e=>e.level)));"Map"!==this.tileType&&0!==r.maxScale&&("Raster"===this.tileType?(s=e.lods.filter(e=>e.resolution===i.x)[0],s||(s=e.lods[e.lods.length-1])):(s=e.lods.filter(e=>Math.abs(e.scale-r.maxScale)<n)[0],s||(s=e.lods.filter(e=>e.scale>r.maxScale).sort((e,t)=>e.scale>t.scale?1:-1)[0])),i.x=i.y=s.resolution,a.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),a.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),s||(s=l);const c=e.lodAt(Math.min.apply(null,e.lods.map(e=>e.level)));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==r.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter(e=>Math.abs(e.scale-r.minScale)<n)[0],this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>n||!e.lods.some(e=>Math.abs(e.resolution-u)<n))&&(i.x=i.y=s.resolution,a.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),a.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=s.level-o.level,[f,d]=e.size,p=e.origin;let{x:m,y:y}=i;const b=[{minCol:Math.floor((t.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/y),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/y)}];if(h>0)for(let e=0;e<h;e++)m*=2,y*=2,b.push({minCol:Math.floor((t.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/m),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/m)});a.storageInfo=new le({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:b}),this._set("rasterInfo",a)}if(r.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:a.storageInfo.tileInfo,parsedUrl:Object(f.I)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new H.a({layer:e})}}async fetchRawTile(e,t,i,r={}){const{storageInfo:n,extent:a,pixelSize:s}=this.rasterInfo,o=n.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${o}/${t}/${i}`,c=this._slices?{sliceId:r.sliceId||0}:null,{data:u}=await this.request(l,{query:c,responseType:"array-buffer",signal:r.signal});if(!u)return null;const h=await this.decodePixelBlock(u,{width:n.tileInfo.size[0],height:n.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),f=n.blockBoundary[e];if("jpg"!==n.compression||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return h;const{origin:d,blockWidth:p,blockHeight:m}=n,y=2**e,b=Math.round((a.xmin-d.x)/(s.x*y))%p,g=Math.round((a.xmax-d.x)/(s.x*y))%p,x=Math.round((d.y-a.ymax)/(s.x*y))%m,v=Math.round((d.y-a.ymin)/(s.x*y))%m,w=i===f.minCol?b:0,O=t===f.minRow?x:0,j=i===f.maxCol?g:p,I=t===f.maxRow?v:m;return Object(G.i)(h,{x:w,y:O},{width:j-w,height:I-O}),h}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some(e=>{const i=t.filter(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName)[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])}))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),n=await Promise.all([i,r]);return n[0]&&n[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,Object(n.p)(t.datumTransformation));if(null===i)return null;let r=0;const{maximumPyramidLevel:a}=this.rasterInfo.storageInfo;let s=a-r+this._levelOffset;const o=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,r++,i=this.identifyPixelLocation(o,r,Object(n.p)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),r=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=g.f.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new U.a({width:i,height:r,bandCount:3,extent:O.b.fromJSON(t.extent),spatialReference:n,pixelSize:new v.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:a,signal:s}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:a,f:"json"},signal:s}).then(e=>D.default.fromJSON(e.data)).catch(()=>null),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:a,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:a,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:s}).then(e=>e.data).catch(()=>{}),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:s}).then(e=>e.data&&e.data.slices).catch(()=>{});return Promise.all([o,l,c,u,h,f]).then(e=>{let a=null;if(t.minValues&&t.minValues.length===t.bandCount){a=[];for(let e=0;e<t.minValues.length;e++)a.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new U.a({width:i,height:r,bandCount:t.bandCount,extent:O.b.fromJSON(t.extent),spatialReference:n,pixelSize:new v.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:a,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=i.variables)&&t.length&&i.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}};Object(r.a)([Object(a.d)({type:String,json:{write:!0}})],De.prototype,"datasetFormat",void 0),Object(r.a)([Object(a.d)()],De.prototype,"tileType",void 0),De=Object(r.a)([Object(c.g)("esri.layers.support.rasterDatasets.ImageServerRaster")],De);var Be=De;const Ne=new Map;Ne.set("Int8","s8"),Ne.set("UInt8","u8"),Ne.set("Int16","s16"),Ne.set("UInt16","u16"),Ne.set("Int32","s32"),Ne.set("UInt32","u32"),Ne.set("Float32","f32"),Ne.set("Float64","f32"),Ne.set("Double64","f32");const Le=new Map;Le.set("lerc",".lrc"),Le.set("none",".til"),Le.set("deflate",".pzp"),Le.set("jpeg",".jzp");let Ae=class extends ue{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?Object(n.p)(e.signal):null,r=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:a,files:s}=this._parseHeader(r.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var o;null!=t&&(a.statistics=null!=(o=t.statistics)?o:a.statistics,a.histograms=t.histograms,t.histograms&&!Object(n.h)(a.statistics)&&(a.statistics=Object(G.h)(t.histograms)))}this._set("rasterInfo",a),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);let c,u,h=0,f=-1;const{blockWidth:d,blockHeight:p,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:b,height:g,bandCount:x}=this.rasterInfo,v=[],w="none"===m?1:x;for(;h<this._storageIndex.length;)f++,c=Math.ceil(b/d/y**f),u=Math.ceil(g/p/y**f),h+=c*u*w*4,v.push({maxRow:u,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=v,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){const{blockWidth:n,blockHeight:a,blockBoundary:s,compression:o}=this.rasterInfo.storageInfo,l=s[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(n*a);return new S.a({width:n,height:a,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m="none"===o?1:c,y=[];let b=0;for(b=0;b<m;b++)(!p||p.indexOf[b]>-1)&&y.push(this.request(this._files.data,{range:{from:h[b].from,to:h[b].to},responseType:"array-buffer",signal:r.signal}));const g=await Promise.all(y),x=g.map(e=>e.data.byteLength).reduce((e,t)=>e+t),v=new Uint8Array(x);let w=0;for(b=0;b<m;b++)v.set(new Uint8Array(g[b].data),w),w+=g[b].data.byteLength;const O="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",j=await this.decodePixelBlock(v.buffer,{width:n,height:a,format:O,pixelType:u});let I=0,_=0;if(f!==n||d!==a){let e=j.mask;if(e)for(b=0;b<a;b++)if(_=b*n,b<d)for(I=f;I<n;I++)e[_+I]=0;else for(I=0;I<n;I++)e[_+I]=0;else for(e=new Uint8Array(n*a),j.mask=e,b=0;b<d;b++)for(_=b*n,I=0;I<f;I++)e[_+I]=1}return j}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,r,n,a,s;if(W.i){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),r=new Uint8Array(n),a=0;a<e.byteLength/4;a++)for(s=0;s<4;s++)r[4*a+s]=i[4*a+3-s];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:r,blockHeight:n,pyramidScalingFactor:a,compression:s}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:c}=this.rasterInfo,u="none"===s?1:c;let h,f,d,p=0,m=0;for(d=0;d<e;d++)m=a**d,h=Math.ceil(o/r/m),f=Math.ceil(l/n/m),p+=h*f;m=a**e,h=Math.ceil(o/r/m),f=Math.ceil(l/n/m),p+=t*h+i,p*=4*u;const y=this._storageIndex.subarray(p,p+4*u);let b=0,g=0;const x=[];for(let e=0;e<u;e++)b=y[4*e+0]*2**32+y[4*e+1],g=b+y[4*e+2]*2**32+y[4*e+3],x.push({from:b,to:g});return{ranges:x,actualTileWidth:i<h-1?r:Math.ceil(o/m)-r*(h-1),actualTileHeight:t<f-1?n:Math.ceil(l/m)-n*(f-1)}}_parseHeader(e){const t=fe(e,"MRF_META/Raster");if(!t)throw new o.a("mrf:open","not a valid MRF format");const i=fe(t,"Size"),r=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),a=parseInt(i.getAttribute("c"),10),s=(de(t,"Compression")||"none").toLowerCase();if(!s||-1===["none","lerc"].indexOf(s))throw new o.a("mrf:open","currently does not support compression "+s);const l=de(t,"DataType")||"UInt8",c=Ne.get(l);if(null==c)throw new o.a("mrf:open","currently does not support pixel type "+l);const u=fe(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),d=fe(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map(e=>parseFloat(e)))),fe(e,"MRF_META/CachedSource"))throw new o.a("mrf:open","currently does not support MRF referencing other data files");const y=fe(e,"MRF_META/GeoTags"),b=fe(y,"BoundingBox");if(null==b)throw new o.a("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const x=parseFloat(b.getAttribute("minx")),w=parseFloat(b.getAttribute("miny")),j=parseFloat(b.getAttribute("maxx")),I=parseFloat(b.getAttribute("maxy")),_=de(y,"Projection")||"",S=de(e,"datafile"),T=de(e,"IndexFile");let R;if("LOCAL_CS[]"!==_)if(_.toLowerCase().startsWith("epsg:")){const e=Number(_.slice(5));isNaN(e)||0===e||(R=new g.f({wkid:e}))}else R=ke(_);const C=new O.b(x,w,j,I);C.spatialReference=R;const M=fe(e,"MRF_META/Rsets"),k=parseInt(M&&M.getAttribute("scale")||"2",10),P=new le({origin:new v.a({x:C.xmin,y:C.ymax,spatialReference:R}),blockWidth:h,blockHeight:f,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:s,pyramidScalingFactor:k}),z=new v.a({x:(j-x)/r,y:(I-w)/n,spatialReference:R});return{rasterInfo:new U.a({width:r,height:n,extent:C,spatialReference:R,bandCount:a,pixelType:c,pixelSize:z,noDataValue:p,storageInfo:P}),files:{mrf:this.url,index:T||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",Le.get(s))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Pe(t)}catch{return null}}};Object(r.a)([Object(a.d)()],Ae.prototype,"_files",void 0),Object(r.a)([Object(a.d)()],Ae.prototype,"_storageIndex",void 0),Object(r.a)([Object(a.d)({type:String,json:{write:!0}})],Ae.prototype,"datasetFormat",void 0),Ae=Object(r.a)([Object(c.g)("esri.layers.support.rasterIO.MRFRaster")],Ae);var Ee=Ae;const Je=function(e,t){const i=e.get(t);return i&&i.values},He=function(e,t){const i=e.get(t);return i&&i.values[0]};let qe=class extends ue{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t;await this.init();const i=e?Object(n.p)(e.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!r)throw new o.a("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:a,firstIFD:s,isBigTiff:l}=Object(W.j)(r),c=[];await this.readIFDs(c,r,a,s,0,l?8:4,i);const u=Object(W.c)(c),{width:h,height:f,tileWidth:d,tileHeight:p,planes:m,pixelType:y,compression:b,firstPyramidLevel:g,maximumPyramidLevel:x,pyramidBlockWidth:w,pyramidBlockHeight:j,tileBoundary:I,affine:_,metadata:S}=u,T=O.b.fromJSON(u.extent),R=T.spatialReference,C=new v.a(T?{x:T.xmin,y:T.ymax,spatialReference:R}:{x:0,y:0}),M=new le({blockWidth:d,blockHeight:p,pyramidBlockWidth:w,pyramidBlockHeight:j,compression:b,origin:C,firstPyramidLevel:g,maximumPyramidLevel:x,blockBoundary:I}),k=new v.a({x:(T.xmax-T.xmin)/h,y:(T.ymax-T.ymin)/f,spatialReference:R}),P=S?{BandProperties:S.bandProperties,DataType:S.dataType}:{},z=new U.a({width:h,height:f,bandCount:m,pixelType:y,compression:b,pixelSize:k,storageInfo:M,spatialReference:R,keyProperties:P,extent:T,statistics:S?S.statistics:null});if(null!=_&&_.length&&(z.nativeExtent=new O.b({xmin:-.5,ymin:.5-f,xmax:h-.5,ymax:.5,spatialReference:R}),z.transform=new Oe({polynomialOrder:1,forwardCoefficients:[_[2]+_[0]/2,_[5]-_[3]/2,_[0],_[3],-_[1],-_[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new v.a({x:(T.xmax-T.xmin)/h,y:(T.ymax-T.ymin)/f,spatialReference:R}),M.origin.x=-.5,M.origin.y=.5),null==(t=this.ioConfig.skipExtensions)||!t.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var F;if(z.statistics=null!=(F=t.statistics)?F:z.statistics,z.histograms=t.histograms,t.histograms&&!Object(n.h)(z.statistics)&&(z.statistics=Object(G.h)(t.histograms)),t.transform&&!_){z.transform=t.transform,z.nativeExtent=z.extent;const e=z.transform.forwardTransform(z.nativeExtent);z.pixelSize=new v.a({x:(e.xmax-e.xmin)/h,y:(e.ymax-e.ymin)/f,spatialReference:R}),z.extent=e}z.spatialReference||(z.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",z),this._headerInfo={littleEndian:a,isBigTiff:l,ifds:c,...u},!this._headerInfo.isSupported)throw new o.a("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){var n;if(null==(n=this._headerInfo)||!n.isSupported||this.isBlockOutside(e,t,i))return null;const a=this.getTileLocation(e,t,i);if(!a)return null;const{range:s,actualTileWidth:o,actualTileHeight:l,ifd:c}=a,{data:u}=await this.request(this.url,{range:s,responseType:"array-buffer",signal:r.signal}),{blockWidth:h,blockHeight:f}=this.getBlockWidthHeight(e),d=await this.decodePixelBlock(u,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offset:0,size:0},width:h,height:f,planes:null,pixelType:null});let p,m,y;if(o!==h||l!==f){let e=d.mask;if(e)for(p=0;p<f;p++)if(y=p*h,p<l)for(m=o;m<h;m++)e[y+m]=0;else for(m=0;m<h;m++)e[y+m]=0;else for(e=new Uint8Array(h*f),d.mask=e,p=0;p<l;p++)for(y=p*h,m=0;m<o;m++)e[y+m]=1}return d}async readIFDs(e,t,i,r,n,a=4,s){if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+n,to:r+n+this._bufferSize},responseType:"array-buffer",signal:s})).data,n=r+n,r=0);const o=await this.readIFD(t,i,r,n,W.b.TIFF_TAGS,a,s);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-n,n,a,s)}async readIFD(e,t,i,r,n=W.b.TIFF_TAGS,a=4,s){if(!e)return null;const o=Object(W.e)(e,t,i,r,n,a);if(o.success){const i=[];if(o.ifd.forEach(e=>{e.values||i.push(e)}),i.length>0){const n=i.map(e=>e.offlineOffsetSize),a=Math.min.apply(null,n.map(e=>e[0]));if(Math.min.apply(null,n.map(e=>e[0]+e[1]))-a<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:"array-buffer",signal:s});e=n,r=a,i.forEach(i=>Object(W.g)(e,t,i,r))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),n=i.values;if(n&&n.length>4){const a=n[0]+"."+n[1]+"."+n[2],o=await this.readIFD(e,t,i.valueOffset+6-r,r,W.b.GEO_KEYS,2,s);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:s});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,r,W.b.TIFF_TAGS,4,s)}}getTileLocation(e,t,i){const{firstPyramidLevel:r,blockBoundary:n}=this.rasterInfo.storageInfo,a=0===e?0:e-(r-1),s=this._headerInfo.ifds[a];if(!s)return null;const o=Je(s,"TILEOFFSETS");if(void 0===o)return null;const l=Je(s,"TILEBYTECOUNTS"),{minRow:c,minCol:u,maxRow:h,maxCol:f}=n[a];if(t>h||i>f||t<c||i<u)return null;const d=He(s,"IMAGEWIDTH"),p=He(s,"IMAGELENGTH"),m=He(s,"TILEWIDTH"),y=He(s,"TILELENGTH"),b=t*(f+1)+i,g=o[b],x=l[b];return null==g||null==x?null:{range:{from:g,to:g+x-1},ifd:s,actualTileWidth:i===f?d%m:m,actualTileHeight:t===h?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Pe(t)}catch{return null}}};Object(r.a)([Object(a.d)()],qe.prototype,"_files",void 0),Object(r.a)([Object(a.d)()],qe.prototype,"_headerInfo",void 0),Object(r.a)([Object(a.d)()],qe.prototype,"_bufferSize",void 0),Object(r.a)([Object(a.d)({type:String,json:{write:!0}})],qe.prototype,"datasetFormat",void 0),qe=Object(r.a)([Object(c.g)("esri.layers.support.rasterDatasets.TIFFRaster")],qe);var Ue=qe;const $e=new Map;$e.set("CRF",{desc:"Cloud Raster Format",constructor:Te}),$e.set("MRF",{desc:"Meta Raster Format",constructor:Ee}),$e.set("TIFF",{desc:"GeoTIFF",constructor:Ue}),$e.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Be}),$e.set("JPG",{desc:"JPG Raster Format",constructor:Fe}),$e.set("PNG",{desc:"PNG Raster Format",constructor:Fe}),$e.set("GIF",{desc:"GIF Raster Format",constructor:Fe}),$e.set("BMP",{desc:"BMP Raster Format",constructor:Fe});const We=Object(p.b)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function Ge(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let Ve=class extends(Object(B.a)(Object(A.a)(Object(L.a)(Object(k.a)(Object(N.a)(se(Object(R.a)(I.a)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(n.h)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then(()=>this._openRaster(t),()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let i=[new F.a({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const r=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(r){const e=r.filter(e=>"oid"!==e.type&&"value"!==e.name.toLowerCase()).map(e=>{const t=e.clone();return t.name="Raster."+e.name,t});i=i.concat(e)}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=Object(T.b)(r,i)||void 0;if(null!=n)return n}createPopupTemplate(e){return Object(E.a)(this,e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new o.a("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return $e.forEach((t,i)=>e.add(i)),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:r}=e;let n=e.datasetFormat;null==n&&t.lastIndexOf(".")&&(n=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===n||"TIF"===n?n="TIFF":"JPG"!==n&&"JPEG"!==n&&"JFIF"!==n||(n="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(n="RasterTileServer");const a={url:t,sourceJSON:r,datasetFormat:n,ioConfig:i||{bandIds:null,sampling:null}};let s,l;if(this.supportedFormats.has(n))return s=$e.get(n).constructor,l=new s(a),await l.open({signal:e.signal}),l;if(n)throw new o.a("rasterfactory:open","not a supported format "+n);const c=Array.from($e.keys());let u=0;const h=function(){return n=c[u++],n?(s=$e.get(n).constructor,l=new s(a),l.open({signal:e.signal}).then(()=>l).catch(()=>h())):null};return h()}static register(e,t,i){$e.has(e.toUpperCase())||$e.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new o.a("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};Object(r.a)([Object(a.d)({type:[l.a],json:{write:{overridePolicy:Ge}}})],Ve.prototype,"bandIds",void 0),Object(r.a)([Object(a.d)({json:{write:{overridePolicy:Ge}}}),Object(m.a)(We)],Ve.prototype,"interpolation",void 0),Object(r.a)([Object(a.d)({json:{write:!0}})],Ve.prototype,"multidimensionalDefinition",void 0),Object(r.a)([Object(a.d)(P.b)],Ve.prototype,"legendEnabled",void 0),Object(r.a)([Object(a.d)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ve.prototype,"isReference",void 0),Object(r.a)([Object(a.d)({type:["show","hide"]})],Ve.prototype,"listMode",void 0),Object(r.a)([Object(a.d)()],Ve.prototype,"sourceJSON",void 0),Object(r.a)([Object(a.d)({readOnly:!0})],Ve.prototype,"version",void 0),Object(r.a)([Object(a.d)()],Ve.prototype,"title",void 0),Object(r.a)([Object(a.d)({readOnly:!0,json:{read:!1}})],Ve.prototype,"type",void 0),Object(r.a)([Object(a.d)({type:["ArcGISTiledImageServiceLayer"]})],Ve.prototype,"operationalLayerType",void 0),Object(r.a)([Object(a.d)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:Ge,writer(e,t,i){t[i]=!e}}}})],Ve.prototype,"popupEnabled",void 0),Object(r.a)([Object(a.d)({type:j.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Ge}}})],Ve.prototype,"popupTemplate",void 0),Object(r.a)([Object(a.d)({readOnly:!0})],Ve.prototype,"defaultPopupTemplate",null),Object(r.a)([Object(a.d)({readOnly:!0,type:[F.a]})],Ve.prototype,"fields",null),Object(r.a)([Object(a.d)({types:T.a,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Ge},origins:{"web-scene":{types:T.c,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],Ve.prototype,"renderer",null),Object(r.a)([Object(y.a)("renderer")],Ve.prototype,"readRenderer",null),Ve=Object(r.a)([Object(c.g)("esri.layers.ImageryTileLayer")],Ve);var Ye=Ve;t.default=Ye}});