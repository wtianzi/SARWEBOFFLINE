self.webpackChunkRemoteClient([50],{314:function(e,t,r){"use strict";function i(e,t){return e[0]=t[0],e[1]=t[1],e}function n(e,t,r){return e[0]=t,e[1]=r,e}function o(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e}function s(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e}function a(e,t){const r=t[0]-e[0],i=t[1]-e[1];return Math.sqrt(r*r+i*i)}function c(e,t){const r=t[0]-e[0],i=t[1]-e[1];return r*r+i*i}function l(e,t){return e[0]*t[0]+e[1]*t[1]}function u(e,t,r){const i=t[0],n=t[1];return e[0]=r[0]*i+r[2]*n+r[4],e[1]=r[1]*i+r[3]*n+r[5],e}r.d(t,"a",(function(){return o})),r.d(t,"b",(function(){return s})),r.d(t,"c",(function(){return i})),r.d(t,"d",(function(){return a})),r.d(t,"e",(function(){return l})),r.d(t,"f",(function(){return c})),r.d(t,"g",(function(){return n})),r.d(t,"h",(function(){return u}))},315:function(e,t,r){"use strict";r.d(t,"a",(function(){return m})),r.d(t,"b",(function(){return d})),r.d(t,"c",(function(){return c})),r.d(t,"d",(function(){return l})),r.d(t,"e",(function(){return u})),r.d(t,"f",(function(){return s})),r.d(t,"g",(function(){return a}));r(1);var i=r(0),n=(r(8),r(53)),o=r(129),s=Object(o.c)((function(e){var t;void 0!==(t=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(e.exports=t)})),a=Object(o.c)((function(e){var t;void 0!==(t=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"])&&(e.exports=t)})),c=Object(o.c)((function(e){var t;void 0!==(t=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"])&&(e.exports=t)}));function l(e){}function u(e){return window.WebGL2RenderingContext&&e instanceof window.WebGL2RenderingContext}i.a.getLogger("esri/views/webgl");class d{constructor(e,t,r=null){this._context=null,this._glName=null,this._descriptor=void 0,this._samplingModeDirty=!1,this._wrapModeDirty=!1,e.instanceCounter.increment(0,this),this._context=e,this._descriptor={target:3553,samplingMode:9729,wrapMode:10497,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,...t},this.setData(r)}get glName(){return this._glName}get descriptor(){return this._descriptor}dispose(){if(this._context&&this._context.gl){if(this._glName){const e=this._context.gl;this._context.unbindTextureAllUnits(this),e.deleteTexture(this._glName),this._glName=null}this._context.instanceCounter.decrement(0,this),this._context=null}}release(){this.dispose()}resize(e,t){const r=this._descriptor;r.width===e&&r.height===t||(r.width=e,r.height=t,this.setData(null))}setData(e){if(!this._context||!this._context.gl)return;const t=this._context.gl;this._glName||(this._glName=t.createTexture()),void 0===e&&(e=null),null===e&&(this._descriptor.width=this._descriptor.width||4,this._descriptor.height=this._descriptor.height||4);const r=this._context.getBoundTexture(0);this._context.bindTexture(this,0);const n=this._descriptor;d._validateTexture(this._context,n),t.pixelStorei(t.UNPACK_ALIGNMENT,n.unpackAlignment),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,n.flipped?1:0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.preMultiplyAlpha?1:0);const o=n.pixelFormat;let s=n.internalFormat?n.internalFormat:o;if(e instanceof ImageData||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement||e instanceof HTMLVideoElement){let r=e.width,i=e.height;e instanceof HTMLVideoElement&&(r=e.videoWidth,i=e.videoHeight),n.width&&n.height&&console.assert(r===n.width&&i===n.height),t.texImage2D(t.TEXTURE_2D,0,s,o,n.dataType,e),n.hasMipmap&&this.generateMipmap(),void 0===n.width&&(n.width=r),void 0===n.height&&(n.height=i)}else{null!=n.width&&null!=n.height||console.error("Width and height must be specified!"),t.DEPTH24_STENCIL8&&s===t.DEPTH_STENCIL&&(s=t.DEPTH24_STENCIL8);let r=n.width,a=n.height;if(function(e){return Object(i.h)(e)&&"type"in e&&"compressed"===e.type}(e)){const i=Math.round(Math.log(Math.max(r,a))/Math.LN2)+1;n.hasMipmap=n.hasMipmap&&i===e.levels.length;for(let i=0;;++i){const o=e.levels[Math.min(i,e.levels.length-1)];if(t.compressedTexImage2D(t.TEXTURE_2D,i,s,r,a,0,o),1===r&&1===a||!n.hasMipmap)break;r=Math.max(1,r>>1),a=Math.max(1,a>>1)}}else if(Object(i.h)(e))t.texImage2D(t.TEXTURE_2D,0,s,r,a,0,o,n.dataType,e),n.hasMipmap&&this.generateMipmap();else for(let e=0;t.texImage2D(t.TEXTURE_2D,e,s,r,a,0,o,n.dataType,null),(1!==r||1!==a)&&n.hasMipmap;++e)r=Math.max(1,r>>1),a=Math.max(1,a>>1)}d._applySamplingMode(t,this._descriptor),d._applyWrapMode(t,this._descriptor),d._applyAnisotropicFilteringParameters(this._context,this._descriptor),r&&this._context.bindTexture(r,0)}updateData(e,t,r,i,n,o){o||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const s=this._context.gl,a=this._descriptor,c=this._context.getBoundTexture(0);this._context.bindTexture(this,0),(t<0||r<0||i>a.width||n>a.height||t+i>a.width||r+n>a.height)&&console.error("An attempt to update out of bounds of the texture!"),s.pixelStorei(s.UNPACK_ALIGNMENT,a.unpackAlignment),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,a.flipped?1:0),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.preMultiplyAlpha?1:0),o instanceof ImageData||o instanceof HTMLImageElement||o instanceof HTMLCanvasElement||o instanceof HTMLVideoElement?s.texSubImage2D(s.TEXTURE_2D,e,t,r,a.pixelFormat,a.dataType,o):s.texSubImage2D(s.TEXTURE_2D,e,t,r,i,n,a.pixelFormat,a.dataType,o),this._context.bindTexture(c,0)}generateMipmap(){const e=this._descriptor;e.hasMipmap||(e.hasMipmap=!0,this._samplingModeDirty=!0,d._validateTexture(this._context,e)),9729===e.samplingMode?(this._samplingModeDirty=!0,e.samplingMode=9985):9728===e.samplingMode&&(this._samplingModeDirty=!0,e.samplingMode=9984);const t=this._context.getBoundTexture(0);this._context.bindTexture(this,0);const r=this._context.gl;r.generateMipmap(r.TEXTURE_2D),this._context.bindTexture(t,0)}setSamplingMode(e){e!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=e,d._validateTexture(this._context,this._descriptor),this._samplingModeDirty=!0)}setWrapMode(e){e!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=e,d._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const e=this._context.gl,t=this._descriptor;this._samplingModeDirty&&(d._applySamplingMode(e,t),this._samplingModeDirty=!1),this._wrapModeDirty&&(d._applyWrapMode(e,t),this._wrapModeDirty=!1)}static _validateTexture(e,t){(t.width<0||t.height<0)&&console.error("Negative dimension parameters are not allowed!");const r=Object(n.i)(t.width)&&Object(n.i)(t.height);u(e.gl)||r||("number"==typeof t.wrapMode?33071!==t.wrapMode&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):33071===t.wrapMode.s&&33071===t.wrapMode.t||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),t.hasMipmap&&console.error("Mipmapping requires power-of-two textures!"))}static _applySamplingMode(e,t){let r=t.samplingMode,i=t.samplingMode;9985===r||9987===r?(r=9729,t.hasMipmap||(i=9729)):9984!==r&&9986!==r||(r=9728,t.hasMipmap||(i=9728)),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,i)}static _applyWrapMode(e,t){"number"==typeof t.wrapMode?(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,t.wrapMode),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,t.wrapMode)):(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,t.wrapMode.s),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,t.wrapMode.t))}static _applyAnisotropicFilteringParameters(e,t){if(null==t.maxAnisotropy)return;const r=e.capabilities.textureFilterAnisotropic;if(!r)return;const i=e.gl;i.texParameterf(i.TEXTURE_2D,r.TEXTURE_MAX_ANISOTROPY,t.maxAnisotropy)}}class f{constructor(e,t){this._context=e,this._desc=t,this._context.instanceCounter.increment(5,this);const r=this._context.gl;this.glName=r.createRenderbuffer(),this._context.bindRenderbuffer(this),r.renderbufferStorage(r.RENDERBUFFER,t.internalFormat,t.width,t.height)}get descriptor(){return this._desc}resize(e,t){const r=this._desc;if(r.width===e&&r.height===t)return;r.width=e,r.height=t;const i=this._context.gl;this._context.bindRenderbuffer(this),i.renderbufferStorage(i.RENDERBUFFER,r.internalFormat,r.width,r.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(5,this),this._context=null)}}const h=i.a.getLogger("esri.views.webgl.FrameBufferObject");class m{constructor(e,t,r,i){if(this._context=e,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._initialized=!1,this._desc={...t},e.instanceCounter.increment(4,this),r){let t;var n;if(Array.isArray(r))for(const i of r){const{attachmentPoint:r,texture:n}=i,o=n instanceof d?n:new d(e,n);t=o.descriptor,this._colorAttachments.set(r,o),this._validateColorAttachmentPoint(r),this._validateTextureDimensions(t,this._desc)}else r instanceof d?(t=r.descriptor,this._colorAttachments.set(36064,r)):(t=r,this._colorAttachments.set(36064,new d(e,r))),0!==(null==(n=this._desc)?void 0:n.colorTarget)&&console.error("Framebuffer is initialized with a texture however the descriptor indicates using a renderbuffer color attachment!"),this._validateTextureDimensions(t,this._desc)}if(i instanceof f){var o;const e=null!=(o=this._desc.depthStencilTarget)?o:3;2===e?this._stencilAttachment=i:1===e||3===e?this._depthAttachment=i:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),m._validateBufferDimensions(i.descriptor,this._desc)}else if(i){let e;this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!"),i instanceof d?(this._depthStencilTexture=i,e=this._depthStencilTexture.descriptor):(e=i,this._depthStencilTexture=new d(this._context,e)),this._validateTextureDimensions(e,this._desc)}}dispose(){if(!this._desc)return;const e=this._context.getBoundFramebufferObject();this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(e),this._context.instanceCounter.decrement(4,this),this._desc=null}get glName(){return this._glName}get descriptor(){return this._desc}get colorTexture(){const e=this._colorAttachments.get(36064);return e&&e instanceof d?e:null}get colorAttachment(){return this._colorAttachments.get(36064)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}get depthStencilTexture(){return this._depthStencilTexture}get width(){return this._desc.width}get height(){return this._desc.height}getColorTexture(e){const t=this._colorAttachments.get(e);return t&&t instanceof d?t:null}attachColorTexture(e,t=36064){if(!e)return;this._validateColorAttachmentPoint(t);const r=e.descriptor;if(this._validateTextureDimensions(r,this._desc),this._disposeColorAttachments(),this._initialized){this._context.bindFramebuffer(this);const r=this._context.gl;r.framebufferTexture2D(r.FRAMEBUFFER,t,r.TEXTURE_2D,e.glName,0)}this._colorAttachments.set(t,e)}detachColorTexture(e=36064){const t=this._colorAttachments.get(e);if(t instanceof d){const r=t;if(this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl;t.framebufferTexture2D(t.FRAMEBUFFER,e,t.TEXTURE_2D,null,0)}return this._colorAttachments.delete(e),r}}attachDepthStencilTexture(e){if(!e)return;const t=e.descriptor;if(34041!==t.pixelFormat&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),34042!==t.dataType&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDimensions(t,this._desc),this._desc.depthStencilTarget&&4!==this._desc.depthStencilTarget&&(this._desc.depthStencilTarget=4),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl;t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,e.glName,0)}this._depthStencilTexture=e}detachDepthStencilTexture(){const e=this._depthStencilTexture;if(e&&this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl;this._context.gl.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,null,0)}return this._depthStencilTexture=null,e}attachDepthStencilBuffer(e){if(!e)return;const t=e.descriptor;if(34041!==t.internalFormat&&33189!==t.internalFormat&&console.error("Depth/Stencil buffer must have correct internalFormat"),m._validateBufferDimensions(t,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=34041===t.internalFormat?3:1,this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl,r=1===this._desc.depthStencilTarget?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(t.FRAMEBUFFER,r,t.RENDERBUFFER,e.glName)}this._depthAttachment=e}detachDepthStencilBuffer(){const e=this._context.gl,t=this._depthAttachment;if(t&&this._initialized){this._context.bindFramebuffer(this);const t=1===this._desc.depthStencilTarget?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(e.FRAMEBUFFER,t,e.RENDERBUFFER,null)}return this._depthAttachment=null,t}copyToTexture(e,t,r,i,n,o,s){(e<0||t<0||n<0||o<0)&&console.error("Offsets cannot be negative!"),(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!");const a=this._desc,c=s.descriptor;3553!==s.descriptor.target&&console.error("Texture target must be TEXTURE_2D!"),(e+r>a.width||t+i>a.height||n+r>c.width||o+i>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const l=this._context;l.bindTexture(s,0),l.bindFramebuffer(this),l.gl.copyTexSubImage2D(3553,0,n,o,e,t,r,i)}readPixels(e,t,r,i,n,o,s){(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!"),s||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,r,i,n,o,s)}resize(e,t){const r=this._desc;if(r.width!==e||r.height!==t){if(!this._initialized)return r.width=e,r.height=t,this._colorAttachments.forEach(r=>{r&&r.resize(e,t)}),void(this._depthStencilTexture&&this._depthStencilTexture.resize(e,t));r.width=e,r.height=t,this._colorAttachments.forEach(r=>{r&&r.resize(e,t)}),null!=this._depthStencilTexture?this._depthStencilTexture.resize(e,t):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(e,t),this._stencilAttachment&&this._stencilAttachment.resize(e,t)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}}initializeAndBind(){var e,t,r,i;const n=this._context.gl;if(this._initialized)return void n.bindFramebuffer(n.FRAMEBUFFER,this.glName);this._glName&&n.deleteFramebuffer(this._glName);const o=this._context,s=n.createFramebuffer(),a=this._desc,c=null!=(e=a.colorTarget)?e:1,l=null!=(t=a.width)?t:1,u=null!=(r=a.height)?r:1;if(n.bindFramebuffer(n.FRAMEBUFFER,s),0===this._colorAttachments.size)if(0===c)this._colorAttachments.set(36064,p(o,a));else{const e=new f(o,{internalFormat:32854,width:l,height:u});this._colorAttachments.set(36064,e)}this._colorAttachments.forEach((e,t)=>{e&&(e instanceof d?n.framebufferTexture2D(n.FRAMEBUFFER,t,n.TEXTURE_2D,e.glName,0):n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,e.glName))});const h=null!=(i=a.depthStencilTarget)?i:0;switch(h){case 1:case 3:{this._depthAttachment||(this._depthAttachment=new f(o,{internalFormat:1===a.depthStencilTarget?33189:34041,width:l,height:u}));const e=1===h?n.DEPTH_ATTACHMENT:n.DEPTH_STENCIL_ATTACHMENT;n.framebufferRenderbuffer(n.FRAMEBUFFER,e,n.RENDERBUFFER,this._depthAttachment.glName);break}case 2:this._stencilAttachment||(this._stencilAttachment=new f(o,{internalFormat:36168,width:l,height:u})),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.STENCIL_ATTACHMENT,n.RENDERBUFFER,this._stencilAttachment.glName);break;case 4:if(!this._depthStencilTexture){o.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const e={target:3553,pixelFormat:34041,dataType:34042,samplingMode:9728,wrapMode:33071,width:l,height:u};this._depthStencilTexture=new d(o,e)}n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,this._depthStencilTexture.glName,0)}this._glName=s,this._initialized=!0}_disposeColorAttachments(){this._colorAttachments.forEach((e,t)=>{if(e instanceof d){if(this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl;e.framebufferTexture2D(e.FRAMEBUFFER,t,e.TEXTURE_2D,null,0)}e.dispose()}else if(e instanceof WebGLRenderbuffer){const r=this._context.gl;this._initialized&&(this._context.bindFramebuffer(this),r.framebufferRenderbuffer(r.FRAMEBUFFER,t,r.RENDERBUFFER,null)),this._context.gl.deleteRenderbuffer(e)}}),this._colorAttachments.clear()}_disposeDepthStencilAttachments(){const e=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const t=1===this._desc.depthStencilTarget?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(e.FRAMEBUFFER,t,e.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.STENCIL_ATTACHMENT,e.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,null,0)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)}static _validateBufferDimensions(e,t){console.assert(e.width>=0&&e.height>=0),void 0!==t.width&&t.width>=0&&void 0!==t.height&&t.height>=0?t.width===e.width&&t.height===e.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(t.width=e.width,t.height=e.height)}_validateTextureDimensions(e,t){console.assert(e.width>=0&&e.height>=0),3553!==e.target&&console.error("Texture type must be TEXTURE_2D!"),void 0!==t.width&&t.width>=0&&void 0!==t.height&&t.height>=0?t.width===e.width&&t.height===e.height||console.error("Color attachment texture must match the framebuffer's!"):(t.width=e.width,t.height=e.height)}_validateColorAttachmentPoint(e){if(-1===m._MAX_COLOR_ATTACHMENTS){const e=this._context.capabilities.drawBuffers;if(e){const t=this._context.gl;m._MAX_COLOR_ATTACHMENTS=t.getParameter(e.MAX_COLOR_ATTACHMENTS)}else m._MAX_COLOR_ATTACHMENTS=1}const t=e-36064;t+1>m._MAX_COLOR_ATTACHMENTS&&h.error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${t+1}. Implementation supports up to ${m._MAX_COLOR_ATTACHMENTS} color attachments`)}}m._MAX_COLOR_ATTACHMENTS=-1;const p=(e,t)=>new d(e,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071,width:t.width,height:t.height})},325:function(e,t,r){"use strict";r.d(t,"a",(function(){return n})),r.d(t,"b",(function(){return p})),r.d(t,"c",(function(){return h})),r.d(t,"d",(function(){return o})),r.d(t,"e",(function(){return m}));var i=r(247);function n(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function o(e,t,r,i,n){return e[0]=t,e[1]=r,e[2]=i,e[3]=n,e}function s(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e}function a(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e[3]=t[3]*r[3],e}function c(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e[3]=t[3]/r[3],e}function l(e,t){const r=t[0]-e[0],i=t[1]-e[1],n=t[2]-e[2],o=t[3]-e[3];return Math.sqrt(r*r+i*i+n*n+o*o)}function u(e,t){const r=t[0]-e[0],i=t[1]-e[1],n=t[2]-e[2],o=t[3]-e[3];return r*r+i*i+n*n+o*o}function d(e){const t=e[0],r=e[1],i=e[2],n=e[3];return Math.sqrt(t*t+r*r+i*i+n*n)}function f(e){const t=e[0],r=e[1],i=e[2],n=e[3];return t*t+r*r+i*i+n*n}function h(e,t){const r=t[0],i=t[1],n=t[2],o=t[3];let s=r*r+i*i+n*n+o*o;return s>0&&(s=1/Math.sqrt(s),e[0]=r*s,e[1]=i*s,e[2]=n*s,e[3]=o*s),e}function m(e,t,r){const i=t[0],n=t[1],o=t[2],s=t[3];return e[0]=r[0]*i+r[4]*n+r[8]*o+r[12]*s,e[1]=r[1]*i+r[5]*n+r[9]*o+r[13]*s,e[2]=r[2]*i+r[6]*n+r[10]*o+r[14]*s,e[3]=r[3]*i+r[7]*n+r[11]*o+r[15]*s,e}function p(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]}const g=s,b=a,v=c,x=l,y=u,_=d,T=f;Object.freeze({__proto__:null,copy:n,set:o,add:function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e},subtract:s,multiply:a,divide:c,ceil:function(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e[2]=Math.ceil(t[2]),e[3]=Math.ceil(t[3]),e},floor:function(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e[2]=Math.floor(t[2]),e[3]=Math.floor(t[3]),e},min:function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e[3]=Math.min(t[3],r[3]),e},max:function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e[3]=Math.max(t[3],r[3]),e},round:function(e,t){return e[0]=Math.round(t[0]),e[1]=Math.round(t[1]),e[2]=Math.round(t[2]),e[3]=Math.round(t[3]),e},scale:function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e},scaleAndAdd:function(e,t,r,i){return e[0]=t[0]+r[0]*i,e[1]=t[1]+r[1]*i,e[2]=t[2]+r[2]*i,e[3]=t[3]+r[3]*i,e},distance:l,squaredDistance:u,length:d,squaredLength:f,negate:function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e},inverse:function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e},normalize:h,dot:function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},lerp:function(e,t,r,i){const n=t[0],o=t[1],s=t[2],a=t[3];return e[0]=n+i*(r[0]-n),e[1]=o+i*(r[1]-o),e[2]=s+i*(r[2]-s),e[3]=a+i*(r[3]-a),e},random:function(e,t){let r,n,o,s,a,c;t=t||1;do{r=2*Object(i.b)()-1,n=2*Object(i.b)()-1,a=r*r+n*n}while(a>=1);do{o=2*Object(i.b)()-1,s=2*Object(i.b)()-1,c=o*o+s*s}while(c>=1);const l=Math.sqrt((1-a)/c);return e[0]=t*r,e[1]=t*n,e[2]=t*o*l,e[3]=t*s*l,e},transformMat4:m,transformQuat:function(e,t,r){const i=t[0],n=t[1],o=t[2],s=r[0],a=r[1],c=r[2],l=r[3],u=l*i+a*o-c*n,d=l*n+c*i-s*o,f=l*o+s*n-a*i,h=-s*i-a*n-c*o;return e[0]=u*l+h*-s+d*-c-f*-a,e[1]=d*l+h*-a+f*-s-u*-c,e[2]=f*l+h*-c+u*-a-d*-s,e[3]=t[3],e},str:function(e){return"vec4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},exactEquals:p,equals:function(e,t){const r=e[0],n=e[1],o=e[2],s=e[3],a=t[0],c=t[1],l=t[2],u=t[3];return Math.abs(r-a)<=i.a*Math.max(1,Math.abs(r),Math.abs(a))&&Math.abs(n-c)<=i.a*Math.max(1,Math.abs(n),Math.abs(c))&&Math.abs(o-l)<=i.a*Math.max(1,Math.abs(o),Math.abs(l))&&Math.abs(s-u)<=i.a*Math.max(1,Math.abs(s),Math.abs(u))},sub:g,mul:b,div:v,dist:x,sqrDist:y,len:_,sqrLen:T})},350:function(e,t,r){"use strict";r.d(t,"a",(function(){return N})),r.d(t,"b",(function(){return T})),r.d(t,"c",(function(){return z})),r.d(t,"d",(function(){return U})),r.d(t,"e",(function(){return H})),r.d(t,"f",(function(){return k})),r.d(t,"g",(function(){return q})),r.d(t,"h",(function(){return G})),r.d(t,"i",(function(){return $})),r.d(t,"j",(function(){return W})),r.d(t,"k",(function(){return m})),r.d(t,"l",(function(){return x})),r.d(t,"m",(function(){return g})),r.d(t,"n",(function(){return h})),r.d(t,"o",(function(){return O})),r.d(t,"p",(function(){return p})),r.d(t,"q",(function(){return w})),r.d(t,"r",(function(){return A})),r.d(t,"s",(function(){return b})),r.d(t,"t",(function(){return F})),r.d(t,"u",(function(){return C})),r.d(t,"v",(function(){return P})),r.d(t,"w",(function(){return M})),r.d(t,"x",(function(){return j})),r.d(t,"y",(function(){return B})),r.d(t,"z",(function(){return E})),r.d(t,"A",(function(){return V})),r.d(t,"B",(function(){return S})),r.d(t,"C",(function(){return I})),r.d(t,"D",(function(){return _})),r.d(t,"E",(function(){return v})),r.d(t,"F",(function(){return f})),r.d(t,"G",(function(){return y})),r.d(t,"H",(function(){return D})),r.d(t,"I",(function(){return R})),r.d(t,"J",(function(){return L}));var i=r(223),n=r(314),o=r(325);class s{constructor(e,t,r=0,i,n){this.TypedArrayConstructor=e,this.elementCount=9;const o=this.TypedArrayConstructor;void 0===i&&(i=9*o.BYTES_PER_ELEMENT);const s=0===t.byteLength?0:r;this.typedBuffer=null==n?new o(t,s):new o(t,s,(n-r)/o.BYTES_PER_ELEMENT),this.typedBufferStride=i/o.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}getMat(e,t){const r=e*this.typedBufferStride;for(let e=0;e<9;e++)t[e]=this.typedBuffer[r+e];return t}setMat(e,t){const r=e*this.typedBufferStride;for(let e=0;e<9;e++)this.typedBuffer[r+e]=t[e]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}copyFrom(e,t,r){const i=this.typedBuffer,n=t.typedBuffer,o=e*this.typedBufferStride,s=r*t.typedBufferStride;for(let e=0;e<9;++e)i[o+e]=n[s+e]}get buffer(){return this.typedBuffer.buffer}}s.ElementCount=9;class a{constructor(e,t,r=0,i,n){this.TypedArrayConstructor=e,this.elementCount=16;const o=this.TypedArrayConstructor;void 0===i&&(i=16*o.BYTES_PER_ELEMENT);const s=0===t.byteLength?0:r;this.typedBuffer=null==n?new o(t,s):new o(t,s,(n-r)/o.BYTES_PER_ELEMENT),this.typedBufferStride=i/o.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}getMat(e,t){const r=e*this.typedBufferStride;for(let e=0;e<16;e++)t[e]=this.typedBuffer[r+e];return t}setMat(e,t){const r=e*this.typedBufferStride;for(let e=0;e<16;e++)this.typedBuffer[r+e]=t[e]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}copyFrom(e,t,r){const i=this.typedBuffer,n=t.typedBuffer,o=e*this.typedBufferStride,s=r*t.typedBufferStride;for(let e=0;e<16;++e)i[o+e]=n[s+e]}get buffer(){return this.typedBuffer.buffer}}a.ElementCount=16;class c{constructor(e,t,r=0,i,n){this.TypedArrayConstructor=e,this.elementCount=1;const o=this.TypedArrayConstructor;void 0===i&&(i=o.BYTES_PER_ELEMENT);const s=0===t.byteLength?0:r;this.typedBuffer=null==n?new o(t,s):new o(t,s,(n-r)/o.BYTES_PER_ELEMENT),this.typedBufferStride=i/o.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}get(e){return this.typedBuffer[e*this.typedBufferStride]}set(e,t){this.typedBuffer[e*this.typedBufferStride]=t}get buffer(){return this.typedBuffer.buffer}}c.ElementCount=1;class l{constructor(e,t,r=0,i,n){this.TypedArrayConstructor=e,this.elementCount=2;const o=this.TypedArrayConstructor;void 0===i&&(i=2*o.BYTES_PER_ELEMENT);const s=0===t.byteLength?0:r;this.typedBuffer=null==n?new o(t,s):new o(t,s,(n-r)/o.BYTES_PER_ELEMENT),this.typedBufferStride=i/o.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}getVec(e,t){return Object(n.g)(t,this.typedBuffer[e*this.typedBufferStride],this.typedBuffer[e*this.typedBufferStride+1])}setVec(e,t){this.typedBuffer[e*this.typedBufferStride]=t[0],this.typedBuffer[e*this.typedBufferStride+1]=t[1]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}setValues(e,t,r){this.typedBuffer[e*this.typedBufferStride]=t,this.typedBuffer[e*this.typedBufferStride+1]=r}copyFrom(e,t,r){const i=this.typedBuffer,n=t.typedBuffer,o=e*this.typedBufferStride,s=r*t.typedBufferStride;i[o]=n[s],i[o+1]=n[s+1]}get buffer(){return this.typedBuffer.buffer}}l.ElementCount=2;class u{constructor(e,t,r=0,i,n){this.TypedArrayConstructor=e,this.elementCount=3;const o=this.TypedArrayConstructor;void 0===i&&(i=3*o.BYTES_PER_ELEMENT);const s=0===t.byteLength?0:r;this.typedBuffer=null==n?new o(t,s):new o(t,s,(n-r)/o.BYTES_PER_ELEMENT),this.typedBufferStride=i/o.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}getVec(e,t){return Object(i.b)(t,this.typedBuffer[e*this.typedBufferStride],this.typedBuffer[e*this.typedBufferStride+1],this.typedBuffer[e*this.typedBufferStride+2])}setVec(e,t){this.typedBuffer[e*this.typedBufferStride]=t[0],this.typedBuffer[e*this.typedBufferStride+1]=t[1],this.typedBuffer[e*this.typedBufferStride+2]=t[2]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}setValues(e,t,r,i){this.typedBuffer[e*this.typedBufferStride]=t,this.typedBuffer[e*this.typedBufferStride+1]=r,this.typedBuffer[e*this.typedBufferStride+2]=i}copyFrom(e,t,r){const i=this.typedBuffer,n=t.typedBuffer,o=e*this.typedBufferStride,s=r*t.typedBufferStride;i[o]=n[s],i[o+1]=n[s+1],i[o+2]=n[s+2]}get buffer(){return this.typedBuffer.buffer}}u.ElementCount=3;class d{constructor(e,t,r=0,i,n){this.TypedArrayConstructor=e,this.elementCount=4;const o=this.TypedArrayConstructor;void 0===i&&(i=4*o.BYTES_PER_ELEMENT);const s=0===t.byteLength?0:r;this.typedBuffer=null==n?new o(t,s):new o(t,s,(n-r)/o.BYTES_PER_ELEMENT),this.typedBufferStride=i/o.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}getVec(e,t){return Object(o.d)(t,this.typedBuffer[e*this.typedBufferStride],this.typedBuffer[e*this.typedBufferStride+1],this.typedBuffer[e*this.typedBufferStride+2],this.typedBuffer[e*this.typedBufferStride+3])}setVec(e,t){this.typedBuffer[e*this.typedBufferStride]=t[0],this.typedBuffer[e*this.typedBufferStride+1]=t[1],this.typedBuffer[e*this.typedBufferStride+2]=t[2],this.typedBuffer[e*this.typedBufferStride+3]=t[3]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}setValues(e,t,r,i,n){this.typedBuffer[e*this.typedBufferStride]=t,this.typedBuffer[e*this.typedBufferStride+1]=r,this.typedBuffer[e*this.typedBufferStride+2]=i,this.typedBuffer[e*this.typedBufferStride+3]=n}copyFrom(e,t,r){const i=this.typedBuffer,n=t.typedBuffer,o=e*this.typedBufferStride,s=r*t.typedBufferStride;i[o]=n[s],i[o+1]=n[s+1],i[o+2]=n[s+2],i[o+3]=n[s+3]}get buffer(){return this.typedBuffer.buffer}}d.ElementCount=4;class f extends c{constructor(e,t=0,r,i){super(Float32Array,e,t,r,i),this.elementType="f32"}static fromTypedArray(e,t){return new f(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}f.ElementType="f32";class h extends l{constructor(e,t=0,r,i){super(Float32Array,e,t,r,i),this.elementType="f32"}static fromTypedArray(e,t){return new h(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}h.ElementType="f32";class m extends u{constructor(e,t=0,r,i){super(Float32Array,e,t,r,i),this.elementType="f32"}static fromTypedArray(e,t){return new m(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}m.ElementType="f32";class p extends d{constructor(e,t=0,r,i){super(Float32Array,e,t,r,i),this.elementType="f32"}static fromTypedArray(e,t){return new p(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}p.ElementType="f32";class g extends s{constructor(e,t=0,r,i){super(Float32Array,e,t,r,i),this.elementType="f32"}static fromTypedArray(e,t){return new g(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}g.ElementType="f32";class b extends s{constructor(e,t=0,r,i){super(Float64Array,e,t,r,i),this.elementType="f64"}static fromTypedArray(e,t){return new b(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}b.ElementType="f64";class v extends a{constructor(e,t=0,r,i){super(Float32Array,e,t,r,i),this.elementType="f32"}static fromTypedArray(e,t){return new v(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}v.ElementType="f32";class x extends a{constructor(e,t=0,r,i){super(Float64Array,e,t,r,i),this.elementType="f64"}static fromTypedArray(e,t){return new x(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}x.ElementType="f64";class y extends c{constructor(e,t=0,r,i){super(Float64Array,e,t,r,i),this.elementType="f64"}static fromTypedArray(e,t){return new y(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}y.ElementType="f64";class _ extends l{constructor(e,t=0,r,i){super(Float64Array,e,t,r,i),this.elementType="f64"}static fromTypedArray(e,t){return new _(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}_.ElementType="f64";class T extends u{constructor(e,t=0,r,i){super(Float64Array,e,t,r,i),this.elementType="f64"}static fromTypedArray(e,t){return new T(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}T.ElementType="f64";class O extends d{constructor(e,t=0,r,i){super(Float64Array,e,t,r,i),this.elementType="f64"}static fromTypedArray(e,t){return new O(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}O.ElementType="f64";class w extends c{constructor(e,t=0,r,i){super(Uint8Array,e,t,r,i),this.elementType="u8"}static fromTypedArray(e,t){return new w(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}w.ElementType="u8";class S extends l{constructor(e,t=0,r,i){super(Uint8Array,e,t,r,i),this.elementType="u8"}static fromTypedArray(e,t){return new S(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}S.ElementType="u8";class M extends u{constructor(e,t=0,r,i){super(Uint8Array,e,t,r,i),this.elementType="u8"}static fromTypedArray(e,t){return new M(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}M.ElementType="u8";class A extends d{constructor(e,t=0,r,i){super(Uint8Array,e,t,r,i),this.elementType="u8"}static fromTypedArray(e,t){return new A(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}A.ElementType="u8";class C extends c{constructor(e,t=0,r,i){super(Uint16Array,e,t,r,i),this.elementType="u16"}static fromTypedArray(e,t){return new C(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}C.ElementType="u16";class E extends l{constructor(e,t=0,r,i){super(Uint16Array,e,t,r,i),this.elementType="u16"}static fromTypedArray(e,t){return new E(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}E.ElementType="u16";class j extends u{constructor(e,t=0,r,i){super(Uint16Array,e,t,r,i),this.elementType="u16"}static fromTypedArray(e,t){return new j(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}j.ElementType="u16";class P extends d{constructor(e,t=0,r,i){super(Uint16Array,e,t,r,i),this.elementType="u16"}static fromTypedArray(e,t){return new P(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}P.ElementType="u16";class F extends c{constructor(e,t=0,r,i){super(Uint32Array,e,t,r,i),this.elementType="u32"}static fromTypedArray(e,t){return new F(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}F.ElementType="u32";class B extends l{constructor(e,t=0,r,i){super(Uint32Array,e,t,r,i),this.elementType="u32"}static fromTypedArray(e,t){return new B(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}B.ElementType="u32";class R extends u{constructor(e,t=0,r,i){super(Uint32Array,e,t,r,i),this.elementType="u32"}static fromTypedArray(e,t){return new R(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}R.ElementType="u32";class L extends d{constructor(e,t=0,r,i){super(Uint32Array,e,t,r,i),this.elementType="u32"}static fromTypedArray(e,t){return new L(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}L.ElementType="u32";class D extends c{constructor(e,t=0,r,i){super(Int8Array,e,t,r,i),this.elementType="i8"}static fromTypedArray(e,t){return new D(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}D.ElementType="i8";class I extends l{constructor(e,t=0,r,i){super(Int8Array,e,t,r,i),this.elementType="i8"}static fromTypedArray(e,t){return new I(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}I.ElementType="i8";class N extends u{constructor(e,t=0,r,i){super(Int8Array,e,t,r,i),this.elementType="i8"}static fromTypedArray(e,t){return new N(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}N.ElementType="i8";class z extends d{constructor(e,t=0,r,i){super(Int8Array,e,t,r,i),this.elementType="i8"}static fromTypedArray(e,t){return new z(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}z.ElementType="i8";class U extends c{constructor(e,t=0,r,i){super(Int16Array,e,t,r,i),this.elementType="i16"}static fromTypedArray(e,t){return new U(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}U.ElementType="i16";class V extends l{constructor(e,t=0,r,i){super(Int16Array,e,t,r,i),this.elementType="i16"}static fromTypedArray(e,t){return new V(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}V.ElementType="i16";class H extends u{constructor(e,t=0,r,i){super(Int16Array,e,t,r,i),this.elementType="i16"}static fromTypedArray(e,t){return new H(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}H.ElementType="i16";class k extends d{constructor(e,t=0,r,i){super(Int16Array,e,t,r,i),this.elementType="i16"}static fromTypedArray(e,t){return new k(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}k.ElementType="i16";class q extends c{constructor(e,t=0,r,i){super(Int32Array,e,t,r,i),this.elementType="i32"}static fromTypedArray(e,t){return new q(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}q.ElementType="i32";class G extends l{constructor(e,t=0,r,i){super(Int32Array,e,t,r,i),this.elementType="i32"}static fromTypedArray(e,t){return new G(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}G.ElementType="i32";class $ extends u{constructor(e,t=0,r,i){super(Int32Array,e,t,r,i),this.elementType="i32"}static fromTypedArray(e,t){return new $(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}$.ElementType="i32";class W extends d{constructor(e,t=0,r,i){super(Int32Array,e,t,r,i),this.elementType="i32"}static fromTypedArray(e,t){return new W(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}}W.ElementType="i32"},355:function(e,t,r){"use strict";r.d(t,"a",(function(){return n}));var i=r(8);class n{constructor(e,t,r=""){this.major=e,this.minor=t,this._context=r}lessThan(e,t){return this.major<e||e===this.major&&this.minor<t}since(e,t){return!this.lessThan(e,t)}validate(e){if(this.major!==e.major){const t=this._context&&this._context+":",r=this._context&&this._context+" ";throw new i.a(t+"unsupported-version",`Required major ${r}version is '${this.major}', but got '\${version.major}.\${version.minor}'`,{version:e})}}clone(){return new n(this.major,this.minor,this._context)}static parse(e,t=""){const[r,o]=e.split("."),s=/^\s*\d+\s*$/;if(!r||!r.match||!r.match(s))throw new i.a((t&&t+":")+"invalid-version","Expected major version to be a number, but got '${version}'",{version:e});if(!o||!o.match||!o.match(s))throw new i.a((t&&t+":")+"invalid-version","Expected minor version to be a number, but got '${version}'",{version:e});const a=parseInt(r,10),c=parseInt(o,10);return new n(a,c,t)}}},389:function(e,t,r){"use strict";r.d(t,"a",(function(){return c})),r.d(t,"b",(function(){return s})),r.d(t,"c",(function(){return a}));var i=r(53),n=r(200),o=r(223);function s(e){const t=e[0]*e[0]+e[4]*e[4]+e[8]*e[8],r=e[1]*e[1]+e[5]*e[5]+e[9]*e[9],i=e[2]*e[2]+e[6]*e[6]+e[10]*e[10];return Math.sqrt(Math.max(Math.max(t,r),i))}function a(e,t){const r=Object(o.m)(e),n=Object(i.a)(e[2]/r),s=Math.atan2(e[1]/r,e[0]/r);return Object(o.b)(t,r,n,s),t}function c(e,t,r){const i=r[0]-t[0],n=r[1]-t[1],o=r[2]-t[2];let s=i*i+n*n+o*o;return s?(s=1/Math.sqrt(s),e[0]=i*s,e[1]=n*s,e[2]=o*s,e):(e[0]=0,e[1]=0,e[2]=0,e)}class l{constructor(e,t){this.min=e,this.max=t,this.range=t-e}ndiff(e,t=0){return Math.ceil((e-t)/this.range)*this.range+t}_normalize(e,t,r,i=0,n=!1){return(r-=i)<e?r+=this.ndiff(e-r):r>t&&(r-=this.ndiff(r-t)),n&&r===t&&(r=e),r+i}normalize(e,t=0,r=!1){return this._normalize(this.min,this.max,e,t,r)}clamp(e,t=0){return Object(i.c)(e-t,this.min,this.max)+t}monotonic(e,t,r){return e<t?t:t+this.ndiff(e-t,r)}minimalMonotonic(e,t,r){return this._normalize(e,e+this.range,t,r)}center(e,t,r){return t=this.monotonic(e,t,r),this.normalize((e+t)/2,r)}diff(e,t,r){return this.monotonic(e,t,r)-e}shortestSignedDiff(e,t){e=this.normalize(e);const r=(t=this.normalize(t))-e,i=t<e?this.minimalMonotonic(e,t)-e:t-this.minimalMonotonic(t,e);return Math.abs(r)<Math.abs(i)?r:i}contains(e,t,r){return t=this.minimalMonotonic(e,t),(r=this.minimalMonotonic(e,r))>e&&r<t}}Object(n.e)(),Object(n.e)();function u(e){for(const t in e){const r=e[t];r instanceof Function&&(e[t]=r.bind(e))}return e}u(new l(0,2*Math.PI)),u(new l(-Math.PI,Math.PI)),u(new l(0,360)),Object(n.e)(),Object(n.e)(),Object(n.e)()},396:function(e,t,r){"use strict";r.d(t,"a",(function(){return a})),r.d(t,"b",(function(){return s}));var i=r(200),n=r(247),o=(r(223),r(325));function s(e,t){const r=2*Math.acos(t[3]),i=Math.sin(r/2);return i>n.a?(e[0]=t[0]/i,e[1]=t[1]/i,e[2]=t[2]/i):(e[0]=1,e[1]=0,e[2]=0),r}function a(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e}o.a,o.c,o.b;Object(i.e)(),Object(i.g)(1,0,0),Object(i.g)(0,1,0)},397:function(e,t,r){"use strict";function i(){return new Float32Array(3)}function n(e,t,r){const i=new Float32Array(3);return i[0]=e,i[1]=t,i[2]=r,i}r.d(t,"a",(function(){return i})),r.d(t,"b",(function(){return n})),n(1,1,1),n(1,0,0),n(0,1,0),n(0,0,1)},428:function(e,t,r){"use strict";r.d(t,"a",(function(){return o})),r.d(t,"b",(function(){return n})),r.d(t,"c",(function(){return s})),r.d(t,"d",(function(){return a})),r.d(t,"e",(function(){return u}));r(1);var i=r(350);function n(e){switch(e){case"u8":return 1;case"u16":return 2;case"u32":return 4;case"i8":return 1;case"i16":return 2;case"i32":case"f32":return 4;case"f64":return 8;default:return}}function o(e){switch(e){case"u8":case"u16":case"u32":return!1;case"i8":case"i16":case"i32":case"f32":case"f64":return!0;default:return}}function s(e){switch(e){case"u8":case"u16":case"u32":case"i8":case"i16":case"i32":return!0;case"f32":case"f64":return!1;default:return}}function a(e){switch(e){case"u8":return 255;case"u16":return 65535;case"u32":return 4294967295;case"i8":return 127;case"i16":return 32767;case"i32":return 2147483647;case"f32":return 3402823e32;case"f64":return 179769e303;default:return}}class c{constructor(e,t){this.layout=e,this.buffer="number"==typeof t?new ArrayBuffer(t*e.stride):t;for(const t of e.fieldNames){const r=e.fields.get(t);this[t]=new r.constructor(this.buffer,r.offset,this.stride)}}get stride(){return this.layout.stride}get count(){return this.buffer.byteLength/this.stride}get byteLength(){return this.buffer.byteLength}getField(e,t){const r=this[e];return r&&r.elementCount===t.ElementCount&&r.elementType===t.ElementType?r:null}slice(e,t){return new c(this.layout,this.buffer.slice(e*this.stride,t*this.stride))}copyFrom(e,t,r,i){const n=this.stride;if(n%4==0){const o=new Uint32Array(e.buffer,t*n,i*n/4);new Uint32Array(this.buffer,r*n,i*n/4).set(o)}else{const o=new Uint8Array(e.buffer,t*n,i*n);new Uint8Array(this.buffer,r*n,i*n).set(o)}}}class l{constructor(){this.stride=0,this.fields=new Map,this.fieldNames=[]}vec2f(e,t){return this.appendField(e,i.n,t),this}vec2f64(e,t){return this.appendField(e,i.D,t),this}vec3f(e,t){return this.appendField(e,i.k,t),this}vec3f64(e,t){return this.appendField(e,i.b,t),this}vec4f(e,t){return this.appendField(e,i.p,t),this}vec4f64(e,t){return this.appendField(e,i.o,t),this}mat3f(e,t){return this.appendField(e,i.m,t),this}mat3f64(e,t){return this.appendField(e,i.s,t),this}mat4f(e,t){return this.appendField(e,i.E,t),this}mat4f64(e,t){return this.appendField(e,i.l,t),this}vec4u8(e,t){return this.appendField(e,i.r,t),this}f32(e,t){return this.appendField(e,i.F,t),this}f64(e,t){return this.appendField(e,i.G,t),this}u8(e,t){return this.appendField(e,i.q,t),this}u16(e,t){return this.appendField(e,i.u,t),this}i8(e,t){return this.appendField(e,i.H,t),this}vec2i8(e,t){return this.appendField(e,i.C,t),this}vec2i16(e,t){return this.appendField(e,i.A,t),this}vec2u8(e,t){return this.appendField(e,i.B,t),this}vec4u16(e,t){return this.appendField(e,i.v,t),this}u32(e,t){return this.appendField(e,i.t,t),this}appendField(e,t,r){const i=t.ElementCount*n(t.ElementType),o=this.stride;this.fields.set(e,{size:i,constructor:t,offset:o,optional:r}),this.stride+=i,this.fieldNames.push(e)}alignTo(e){return this.stride=Math.floor((this.stride+e-1)/e)*e,this}hasField(e){return this.fieldNames.indexOf(e)>=0}createBuffer(e){return new c(this,e)}createView(e){return new c(this,e)}clone(){const e=new l;return e.stride=this.stride,e.fields=new Map,this.fields.forEach((t,r)=>e.fields.set(r,t)),e.fieldNames=this.fieldNames.slice(),e.BufferType=this.BufferType,e}}function u(){return new l}},537:function(e,t,r){"use strict";r.r(t),r.d(t,"f",(function(){return Vs})),r.d(t,"l",(function(){return Rs})),r.d(t,"o",(function(){return Gs}));var i=r(0),n=r(2),o=r(8),s=r(181),a=r(27),c=r(200),l=r(223),u=r(238),d=r(355),f=r(255);function h(e){return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]}function m(e,t){return new Float64Array(e,t,16)}function p(e,t){return new Float64Array(e,t,9)}function g(e,t){return new Float64Array(e,t,4)}function b(e,t){const r=t[0],i=t[1],n=t[2],o=t[3],s=t[4],a=t[5],c=t[6],l=t[7],u=t[8],d=t[9],f=t[10],h=t[11],m=t[12],p=t[13],g=t[14],b=t[15],v=r*a-i*s,x=r*c-n*s,y=r*l-o*s,_=i*c-n*a,T=i*l-o*a,O=n*l-o*c,w=u*p-d*m,S=u*g-f*m,M=u*b-h*m,A=d*g-f*p,C=d*b-h*p,E=f*b-h*g;let j=v*E-x*C+y*A+_*M-T*S+O*w;return j?(j=1/j,e[0]=(a*E-c*C+l*A)*j,e[1]=(c*M-s*E-l*S)*j,e[2]=(s*C-a*M+l*w)*j,e[3]=(n*C-i*E-o*A)*j,e[4]=(r*E-n*M+o*S)*j,e[5]=(i*M-r*C-o*w)*j,e[6]=(p*O-g*T+b*_)*j,e[7]=(g*y-m*O-b*x)*j,e[8]=(m*T-p*y+b*v)*j,e):null}var v=r(350);const x=i.a.getLogger("esri.views.3d.support.buffer.math");function y(e,t,r){const i=Math.min(e.count,t.count),n=e.typedBuffer,o=e.typedBufferStride,s=t.typedBuffer,a=t.typedBufferStride;for(let e=0;e<i;e++){const t=e*o,i=e*a;n[t]=r*s[i],n[t+1]=r*s[i+1],n[t+2]=r*s[i+2]}}var _=r(252);async function T(e,t){const{data:r}=await Object(a.default)(e,{responseType:"image",...t});return r}var O=r(12),w=r(53);function S(e,t,r,i){return[e,t,r,i]}function M(e,t){return new Float64Array(e,t,4)}S(1,1,1,1);function A(e,t,r=32774,i=[0,0,0,0]){return{srcRgb:e,srcAlpha:e,dstRgb:t,dstAlpha:t,opRgb:r,opAlpha:r,color:{r:i[0],g:i[1],b:i[2],a:i[3]}}}const C={zNear:0,zFar:1},E={r:!0,g:!0,b:!0,a:!0};function j(e){return U.intern(e)}function P(e){return H.intern(e)}function F(e){return q.intern(e)}function B(e){return $.intern(e)}function R(e){return X.intern(e)}function L(e){return K.intern(e)}function D(e){return J.intern(e)}function I(e){return ee.intern(e)}class N{constructor(e,t){this.makeKey=e,this.makeRef=t,this.interns=new Map}intern(e){if(!e)return null;const t=this.makeKey(e),r=this.interns;return r.has(t)||r.set(t,this.makeRef(e)),r.get(t)}}function z(e){return"["+e.join(",")+"]"}const U=new N(V,e=>({__tag:"Blending",...e}));function V(e){return e?z([e.srcRgb,e.srcAlpha,e.dstRgb,e.dstAlpha,e.opRgb,e.opAlpha,e.color.r,e.color.g,e.color.b,e.color.a]):null}const H=new N(k,e=>({__tag:"Culling",...e}));function k(e){return e?z([e.face,e.mode]):null}const q=new N(G,e=>({__tag:"PolygonOffset",...e}));function G(e){return e?z([e.factor,e.units]):null}const $=new N(W,e=>({__tag:"DepthTest",...e}));function W(e){return e?z([e.func]):null}const X=new N(Y,e=>({__tag:"StencilTest",...e}));function Y(e){return e?z([e.function.func,e.function.ref,e.function.mask,e.operation.fail,e.operation.zFail,e.operation.zPass]):null}const K=new N(Q,e=>({__tag:"DepthWrite",...e}));function Q(e){return e?z([e.zNear,e.zFar]):null}const J=new N(Z,e=>({__tag:"ColorWrite",...e}));function Z(e){return e?z([e.r,e.g,e.b,e.a]):null}const ee=new N(te,e=>({__tag:"StencilWrite",...e}));function te(e){return e?z([e.mask]):null}const re=new N((function(e){return e?z([V(e.blending),k(e.culling),G(e.polygonOffset),W(e.depthTest),Y(e.stencilTest),Q(e.depthWrite),Z(e.colorWrite),te(e.stencilWrite)]):null}),e=>({blending:j(e.blending),culling:P(e.culling),polygonOffset:F(e.polygonOffset),depthTest:B(e.depthTest),stencilTest:R(e.stencilTest),depthWrite:L(e.depthWrite),colorWrite:D(e.colorWrite),stencilWrite:I(e.stencilWrite)}));function ie(){const e=new Float32Array(16);return e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}ie();var ne=r(1),oe=r(389),se=r(66),ae=r(314),ce=r(325);function le(e,t){return new Float64Array(e,t,2)}class ue{constructor(e,t,r){this.itemByteSize=e,this.itemCreate=t,this.buffers=[],this.items=[],this.itemsPerBuffer=0,this.itemsPtr=0,this.itemsPerBuffer=Math.ceil(r/this.itemByteSize),this.tickHandle=O.i.before(()=>this.reset())}destroy(){this.tickHandle&&(this.tickHandle.remove(),this.tickHandle=Object(i.j)(this.tickHandle)),this.itemsPtr=0,this.items=Object(i.j)(this.items),this.buffers=Object(i.j)(this.buffers)}get(){0===this.itemsPtr&&Object(O.i)(()=>{});const e=Math.floor(this.itemsPtr/this.itemsPerBuffer);for(;this.buffers.length<=e;){const e=new ArrayBuffer(this.itemsPerBuffer*this.itemByteSize);for(let t=0;t<this.itemsPerBuffer;++t)this.items.push(this.itemCreate(e,t*this.itemByteSize));this.buffers.push(e)}return this.items[this.itemsPtr++]}reset(){const e=2*(Math.floor(this.itemsPtr/this.itemsPerBuffer)+1);for(;this.buffers.length>e;)this.buffers.pop(),this.items.length=this.buffers.length*this.itemsPerBuffer;this.itemsPtr=0}static createVec2f64(e=de){return new ue(16,le,e)}static createVec3f64(e=de){return new ue(24,c.f,e)}static createVec4f64(e=de){return new ue(32,M,e)}static createMat3f64(e=de){return new ue(72,p,e)}static createMat4f64(e=de){return new ue(128,m,e)}static createQuatf64(e=de){return new ue(32,g,e)}get test(){return{size:this.buffers.length*this.itemsPerBuffer*this.itemByteSize}}}const de=4096,fe=(ue.createVec2f64(),ue.createVec3f64()),he=ue.createVec4f64(),me=(ue.createMat3f64(),ue.createMat4f64());ue.createQuatf64();function pe(e,t){return Object(l.e)(e,t)/Object(l.m)(e)}function ge(e,t){const r=Object(l.e)(e,t)/(Object(l.m)(e)*Object(l.m)(t));return-Object(w.b)(r)}const be=Object(c.e)(),ve=Object(c.e)();Object.freeze({__proto__:null,projectPoint:function(e,t,r){const i=Object(l.e)(e,t)/Object(l.e)(e,e);return Object(l.c)(r,e,i)},projectPointSignedLength:pe,angle:ge,angleAroundAxis:function(e,t,r){Object(l.o)(be,e),Object(l.o)(ve,t);const i=Object(l.e)(be,ve),n=Object(w.b)(i),o=Object(l.d)(be,be,ve);return Object(l.e)(o,r)<0?2*Math.PI-n:n}});function xe(e=_e){return[e[0],e[1],e[2],e[3]]}function ye(e,t,r,i,n=xe()){return n[0]=e,n[1]=t,n[2]=r,n[3]=i,n}const _e=[0,0,1,0];Object.freeze({__proto__:null,create:xe,wrap:function(e,t,r,i){return ye(e,t,r,i,he.get())},wrapAxisAngle:function(e,t){return ye(e[0],e[1],e[2],t,he.get())},copy:function(e,t=xe()){return ye(e[0],e[1],e[2],e[3],t)},fromValues:ye,fromAxisAndAngle:function(e,t,r=xe()){return Object(l.h)(r,e),r[3]=t,r},fromPoints:function(e,t,r=xe()){return Object(l.d)(r,e,t),Object(l.o)(r,r),r[3]=ge(e,t),r},axis:function(e){return e},UP:_e});class Te{constructor(e){this.allocator=e,this.items=[],this.itemsPtr=0,this.tickHandle=O.i.before(()=>this.reset()),this.grow()}destroy(){this.tickHandle&&(this.tickHandle.remove(),this.tickHandle=Object(i.j)(this.tickHandle)),this.items=Object(i.j)(this.items)}get(){return 0===this.itemsPtr&&Object(O.i)(()=>{}),this.itemsPtr===this.items.length&&this.grow(),this.items[this.itemsPtr++]}reset(){const e=Math.min(3*Math.max(8,this.itemsPtr),this.itemsPtr+3*Oe);this.items.length=Math.min(e,this.items.length),this.itemsPtr=0}grow(){for(let e=0;e<Math.max(8,Math.min(this.items.length,Oe));e++)this.items.push(this.allocator())}}const Oe=1024;function we(e){return e?{origin:Object(c.c)(e.origin),vector:Object(c.c)(e.vector)}:{origin:Object(c.e)(),vector:Object(c.e)()}}function Se(e,t){const r=Pe.get();return r.origin=e,r.vector=t,r}function Me(e,t,r=we()){return Object(l.h)(r.origin,e),Object(l.h)(r.vector,t),r}function Ae(e,t){const r=Object(l.q)(fe.get(),t,e.origin),i=Object(l.e)(e.vector,r),n=Object(l.e)(e.vector,e.vector),o=Object(w.c)(i/n,0,1),s=Object(l.q)(fe.get(),Object(l.c)(fe.get(),e.vector,o),r);return Object(l.e)(s,s)}function Ce(e,t,r,i,n){const{vector:o,origin:s}=e,a=Object(l.q)(fe.get(),t,s),c=Object(l.e)(o,a)/Object(l.n)(o);return Object(l.c)(n,o,Object(w.c)(c,r,i)),Object(l.f)(n,n,e.origin)}function Ee(e,t,r,i){const n=1e-6,o=e.origin,s=Object(l.f)(fe.get(),o,e.vector),a=t.origin,c=Object(l.f)(fe.get(),a,t.vector),u=fe.get(),d=fe.get();if(u[0]=o[0]-a[0],u[1]=o[1]-a[1],u[2]=o[2]-a[2],d[0]=c[0]-a[0],d[1]=c[1]-a[1],d[2]=c[2]-a[2],Math.abs(d[0])<n&&Math.abs(d[1])<n&&Math.abs(d[2])<n)return!1;const f=fe.get();if(f[0]=s[0]-o[0],f[1]=s[1]-o[1],f[2]=s[2]-o[2],Math.abs(f[0])<n&&Math.abs(f[1])<n&&Math.abs(f[2])<n)return!1;const h=u[0]*d[0]+u[1]*d[1]+u[2]*d[2],m=d[0]*f[0]+d[1]*f[1]+d[2]*f[2],p=u[0]*f[0]+u[1]*f[1]+u[2]*f[2],g=d[0]*d[0]+d[1]*d[1]+d[2]*d[2],b=(f[0]*f[0]+f[1]*f[1]+f[2]*f[2])*g-m*m;if(Math.abs(b)<n)return!1;let v=(h*m-p*g)/b,x=(h+m*v)/g;r&&(v=Object(w.c)(v,0,1),x=Object(w.c)(x,0,1));const y=fe.get(),_=fe.get();return y[0]=o[0]+v*f[0],y[1]=o[1]+v*f[1],y[2]=o[2]+v*f[2],_[0]=a[0]+x*d[0],_[1]=a[1]+x*d[1],_[2]=a[2]+x*d[2],i.tA=v,i.tB=x,i.pA=y,i.pB=_,i.distance2=Object(l.i)(y,_),!0}const je={tA:0,tB:0,pA:Object(c.e)(),pB:Object(c.e)(),distance2:0},Pe=new Te(()=>({origin:null,vector:null}));Object.freeze({__proto__:null,create:we,wrap:Se,copy:function(e,t=we()){return Me(e.origin,e.vector,t)},fromValues:Me,fromPoints:function(e,t,r=we()){return Object(l.h)(r.origin,e),Object(l.q)(r.vector,t,e),r},distance2:Ae,distance:function(e,t){return Math.sqrt(Ae(e,t))},projectPoint:function(e,t,r){return Ce(e,t,0,1,r)},pointAt:function(e,t,r){return Object(l.f)(r,e.origin,Object(l.c)(r,e.vector,t))},projectPointClamp:Ce,closestRayDistance2:function(e,t){if(Ee(e,Se(t.origin,t.direction),!1,je)){const{tA:t,pB:r,distance2:i}=je;if(t>=0&&t<=1)return i;if(t<0)return Object(l.i)(e.origin,r);if(t>1)return Object(l.i)(Object(l.f)(fe.get(),e.origin,e.vector),r)}return null},closestLineSegmentPoint:function(e,t,r){return!!Ee(e,t,!0,je)&&(Object(l.h)(r,je.pA),!0)},closestLineSegmentDistance2:function(e,t){return Ee(e,t,!0,je)?je.distance2:null}});function Fe(e){return e?{origin:Object(c.c)(e.origin),direction:Object(c.c)(e.direction)}:{origin:Object(c.e)(),direction:Object(c.e)()}}function Be(e,t=Fe()){return Re(e.origin,e.direction,t)}function Re(e,t,r=Fe()){return Object(l.h)(r.origin,e),Object(l.h)(r.direction,t),r}function Le(e,t,r=Fe()){const n=Object(se.c)(Object(ae.c)(fe.get(),t));if(n[2]=0,!e.unprojectFromRenderScreen(n,r.origin))return null;const o=Object(se.c)(Object(ae.c)(fe.get(),t));o[2]=1;const s=e.unprojectFromRenderScreen(o,fe.get());return Object(i.c)(s)?null:(Object(l.q)(r.direction,s,r.origin),r)}function De(e,t,r=Fe()){return Ie(e,e.screenToRender(t,Object(se.c)(fe.get())),r)}function Ie(e,t,r=Fe()){Object(l.h)(r.origin,e.eye);const n=Object(l.b)(fe.get(),t[0],t[1],1),o=e.unprojectFromRenderScreen(n,fe.get());return Object(i.c)(o)?null:(Object(l.q)(r.direction,o,r.origin),r)}function Ne(e,t){const r=Object(l.d)(fe.get(),Object(l.o)(fe.get(),e.direction),Object(l.q)(fe.get(),t,e.origin));return Object(l.e)(r,r)}function ze(e,t,r){const i=Object(l.e)(e.direction,Object(l.q)(r,t,e.origin));return Object(l.f)(r,e.origin,Object(l.c)(r,e.direction,i)),r}function Ue(){return{origin:null,direction:null}}const Ve=new Te(Ue);Object.freeze({__proto__:null,create:Fe,wrap:function(e,t){const r=Ve.get();return r.origin=e,r.direction=t,r},copy:Be,fromPoints:function(e,t,r=Fe()){return Object(l.h)(r.origin,e),Object(l.q)(r.direction,t,e),r},fromValues:Re,fromScreen:function(e,t,r=Fe()){return Le(e,e.screenToRender(t,Object(se.c)(fe.get())),r)},fromRender:Le,fromScreenAtEye:De,fromRenderAtEye:Ie,distance2:Ne,distance:function(e,t){return Math.sqrt(Ne(e,t))},closestPoint:ze,createWrapper:Ue});const He=i.a.getLogger("esri.views.3d.support.geometryUtils.sphere");function ke(){return[0,0,0,0]}function qe(e,t=[0,0,0,0]){return Object(ce.a)(t,e)}function Ge(e){e[0]=e[1]=e[2]=e[3]=0}function $e(e){return Array.isArray(e)?e[3]:e}function We(e){return Array.isArray(e)?e:rt}function Xe(e,t,r){if(Object(i.c)(t))return!1;const n=Object(l.q)(fe.get(),t.origin,We(e)),o=Object(l.e)(t.direction,t.direction),s=2*Object(l.e)(t.direction,n),a=s*s-4*o*(Object(l.e)(n,n)-e[3]*e[3]);if(a<0)return!1;const c=Math.sqrt(a);let u=(-s-c)/(2*o);const d=(-s+c)/(2*o);return(u<0||d<u&&d>0)&&(u=d),!(u<0||(r&&Object(l.f)(r,t.origin,Object(l.c)(fe.get(),t.direction,u)),0))}function Ye(e,t,r){const i=fe.get(),n=me.get();Object(l.d)(i,t.origin,t.direction);const o=$e(e);Object(l.d)(r,i,t.origin),Object(l.c)(r,r,1/Object(l.m)(r)*o);const s=Qe(e,t.origin),a=ge(t.origin,r);return Object(f.d)(n),Object(f.g)(n,n,a+s,i),Object(l.j)(r,r,n),r}function Ke(e,t,r){const i=Object(l.q)(fe.get(),t,We(e)),n=Object(l.c)(fe.get(),i,e[3]/Object(l.m)(i));return Object(l.f)(r,n,We(e))}function Qe(e,t){const r=Object(l.q)(fe.get(),t,We(e)),i=Object(l.m)(r),n=$e(e),o=n+Math.abs(n-i);return Object(w.b)(n/o)}const Je=Object(c.e)();function Ze(e,t,r,i){const n=Object(l.q)(Je,t,We(e));switch(r){case 0:{const e=Object(oe.c)(n,Je)[2];return Object(l.b)(i,-Math.sin(e),Math.cos(e),0)}case 1:{const e=Object(oe.c)(n,Je),t=e[1],r=e[2],o=Math.sin(t);return Object(l.b)(i,-o*Math.cos(r),-o*Math.sin(r),Math.cos(t))}case 2:return Object(l.o)(i,n);default:return}}function et(e,t){const r=Object(l.q)(it,t,We(e));return Object(l.m)(r)-e[3]}const tt=Fe(),rt=Object(c.e)(),it=Object(c.e)();Object.freeze(rt);Object.freeze({__proto__:null,create:ke,copy:qe,fromCenterAndRadius:function(e,t){return S(e[0],e[1],e[2],t)},wrap:function(e){return e},clear:Ge,fromRadius:function(e){return e},getRadius:$e,getCenter:We,fromValues:function(e,t,r,i){return S(e,t,r,i)},elevate:function(e,t,r){return e!==r&&Object(l.h)(r,e),r[3]=e[3]+t,r},setExtent:function(e,t,r){return He.error("sphere.setExtent is not yet supported"),e===r?r:qe(e,r)},intersectRay:Xe,intersectScreen:function(e,t,r,i){return Xe(e,De(t,r,tt),i)},intersectsRay:function(e,t){return Xe(e,t,null)},intersectRayClosestSilhouette:function(e,t,r){if(Xe(e,t,r))return r;const i=Ye(e,t,fe.get());return Object(l.f)(r,t.origin,Object(l.c)(fe.get(),t.direction,Object(l.l)(t.origin,i)/Object(l.m)(t.direction))),r},closestPointOnSilhouette:Ye,closestPoint:function(e,t,r){return Xe(e,t,r)?r:(ze(t,We(e),r),Ke(e,r,r))},projectPoint:Ke,distanceToSilhouette:function(e,t){const r=Object(l.q)(fe.get(),t,We(e)),i=Object(l.n)(r),n=e[3]*e[3];return Math.sqrt(Math.abs(i-n))},angleToSilhouette:Qe,axisAt:Ze,altitudeAt:et,setAltitudeAt:function(e,t,r,i){const n=et(e,t),o=Ze(e,t,2,it),s=Object(l.c)(it,o,r-n);return Object(l.f)(i,t,s),i}});function nt(e=Pt){return[e[0],e[1],e[2],e[3]]}function ot(e,t,r,i){return at(e,t,r,i,he.get())}function st(e,t=nt()){return at(e[0],e[1],e[2],e[3],t)}function at(e,t,r,i,n=nt()){return n[0]=e,n[1]=t,n[2]=r,n[3]=i,n}function ct(e,t,r=nt()){Object(l.h)(r,t);const i=Object(l.e)(t,t);return Math.abs(i-1)>1e-5&&i>1e-12&&Object(l.c)(r,r,1/Math.sqrt(i)),bt(r,e,r),r}function lt(e,t,r,i=nt()){return vt(Object(l.q)(fe.get(),e,t),Object(l.q)(fe.get(),r,t),e,i)}function ut(e,t,r,i,n){if(e.count<3)return!1;e.getVec(r,ft);let o=i,s=!1;for(;o<e.count-1&&!s;)e.getVec(o,ht),o++,s=!Object(l.s)(ft,ht);if(!s)return!1;for(o=Math.max(o,n),s=!1;o<e.count&&!s;)e.getVec(o,mt),o++,Object(l.q)(pt,ft,ht),Object(l.o)(pt,pt),Object(l.q)(gt,ht,mt),Object(l.o)(gt,gt),s=!Object(l.s)(ft,mt)&&!Object(l.s)(ht,mt)&&Math.abs(Object(l.e)(pt,gt))<dt;return s?(lt(ft,ht,mt,t),!0):(0!==r||1!==i||2!==n)&&ut(e,t,0,1,2)}const dt=.99619469809,ft=Object(c.e)(),ht=Object(c.e)(),mt=Object(c.e)(),pt=Object(c.e)(),gt=Object(c.e)();function bt(e,t,r){return e!==r&&st(e,r),r[3]=-Object(l.e)(r,t),r}function vt(e,t,r,i=nt()){return ct(r,Object(l.d)(fe.get(),t,e),i)}function xt(e,t,r){return!!Object(i.h)(t)&&jt(e,t.origin,t.direction,!0,!1,r)}function yt(e,t,r){return jt(e,t.origin,t.vector,!1,!1,r)}function _t(e,t,r){return jt(e,t.origin,t.vector,!1,!0,r)}function Tt(e,t){return Et(e,We(t))-t[3]>=0}function Ot(e,t){return Et(e,t)>=0}function wt(e,t){const r=t[0],i=t[1],n=t[2],o=t[3],s=t[4],a=t[5];return e[0]*(e[0]>0?r:o)+e[1]*(e[1]>0?i:s)+e[2]*(e[2]>0?n:a)+e[3]>=0}function St(e,t){const r=Object(l.e)(e,t.ray.direction),i=-Et(e,t.ray.origin);if(i<0&&r>=0)return!1;if(r>-1e-6&&r<1e-6)return i>0;if((i<0||r<0)&&!(i<0&&r<0))return!0;const n=i/r;return r>0?n<t.c1&&(t.c1=n):n>t.c0&&(t.c0=n),t.c0<=t.c1}function Mt(e,t){const r=Object(l.e)(e,t.ray.direction),i=-Et(e,t.ray.origin);if(r>-1e-6&&r<1e-6)return i>0;const n=i/r;return r>0?n<t.c1&&(t.c1=n):n>t.c0&&(t.c0=n),t.c0<=t.c1}function At(e,t,r){const i=Object(l.c)(fe.get(),e,-e[3]),n=Ct(e,Object(l.q)(fe.get(),t,i),fe.get());return Object(l.f)(r,n,i),r}function Ct(e,t,r){const i=Object(l.c)(fe.get(),e,Object(l.e)(e,t));return Object(l.q)(r,t,i),r}function Et(e,t){return Object(l.e)(e,t)+e[3]}function jt(e,t,r,i,n,o){const s=Object(l.e)(e,r);if(0===s)return!1;let a=-(Object(l.e)(e,t)+e[3])/s;return n&&(a=i?Math.max(0,a):Object(w.c)(a,0,1)),!(a<0||!i&&a>1||(Object(l.f)(o,t,Object(l.c)(o,r,a)),0))}const Pt=[0,0,1,0];Object.freeze({__proto__:null,create:nt,wrap:ot,copy:st,fromValues:at,fromNormalAndOffset:function(e,t,r=nt()){return Object(l.h)(r,e),r[3]=t,r},fromPositionAndNormal:ct,fromPoints:lt,fromManyPoints:function(e,t){return ut(e,t,0,1,2)},fromManyPointsSampleAt:ut,setOffsetFromPoint:bt,negate:function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t},fromVectorsAndPoint:vt,intersectRay:xt,intersectLineSegment:yt,intersectLineSegmentClamp:_t,isSphereFullyInside:Tt,isSphereFullyOutside:function(e,t){return Et(e,We(t))+t[3]<0},isPointInside:Ot,isPointOutside:function(e,t){return Et(e,t)<0},isAABBFullyInside:wt,clip:St,clipInfinite:Mt,projectPoint:At,projectVector:Ct,distance:function(e,t){return Math.abs(Et(e,t))},signedDistance:Et,normal:function(e){return e},UP:Pt});const Ft=i.a.getLogger("esri.views.3d.support.geometryUtils.boundedPlane");function Bt(e=Jt){return{plane:nt(e.plane),origin:Object(c.c)(e.origin),basis1:Object(c.c)(e.basis1),basis2:Object(c.c)(e.basis2)}}function Rt(e,t=Bt()){return Lt(e.origin,e.basis1,e.basis2,t)}function Lt(e,t,r,i=Bt()){return Object(l.h)(i.origin,e),Object(l.h)(i.basis1,t),Object(l.h)(i.basis2,r),Dt(i),function(e,t){Math.abs(Object(l.e)(e.basis1,e.basis2)/(Object(l.m)(e.basis1)*Object(l.m)(e.basis2)))>1e-6&&Ft.warn(t,"Provided basis vectors are not perpendicular"),Math.abs(Object(l.e)(e.basis1,Wt(e)))>1e-6&&Ft.warn(t,"Basis vectors and plane normal are not perpendicular"),Math.abs(-Object(l.e)(Wt(e),e.origin)-e.plane[3])>1e-6&&Ft.warn(t,"Plane offset is not consistent with plane origin")}(i,"fromValues()"),i}function Dt(e){vt(e.basis2,e.basis1,e.origin,e.plane)}function It(e,t,r){e!==r&&Rt(e,r);const i=Object(l.c)(fe.get(),Wt(e),t);return Object(l.f)(r.origin,r.origin,i),r.plane[3]-=t,r}function Nt(e,t=Bt()){const r=(e[2]-e[0])/2,i=(e[3]-e[1])/2;return Object(l.b)(t.origin,e[0]+r,e[1]+i,0),Object(l.b)(t.basis1,r,0,0),Object(l.b)(t.basis2,0,i,0),at(0,0,1,0,t.plane),t}function zt(e,t,r){return!!xt(e.plane,t,r)&&Xt(e,r)}function Ut(e,t,r){const i=Zt.get();Qt(e,t,i,Zt.get());let n=Number.POSITIVE_INFINITY;for(const o of ir){const s=Kt(e,o,er.get()),a=fe.get();if(yt(i,s,a)){const e=Object(oe.a)(fe.get(),t.origin,a),i=Math.abs(Object(w.b)(Object(l.e)(t.direction,e)));i<n&&(n=i,Object(l.h)(r,a))}}return n===Number.POSITIVE_INFINITY?Vt(e,t,r):r}function Vt(e,t,r){if(zt(e,t,r))return r;const i=Zt.get(),n=Zt.get();Qt(e,t,i,n);let o=Number.POSITIVE_INFINITY;for(const s of ir){const a=Kt(e,s,er.get()),c=fe.get();if(_t(i,a,c)){const e=Ne(t,c);if(!Ot(n,c))continue;e<o&&(o=e,Object(l.h)(r,c))}}return qt(e,t.origin)<o&&Ht(e,t.origin,r),r}function Ht(e,t,r){const i=At(e.plane,t,fe.get()),n=Ce(Yt(e,e.basis1),i,-1,1,fe.get()),o=Ce(Yt(e,e.basis2),i,-1,1,fe.get());return Object(l.q)(r,Object(l.f)(fe.get(),n,o),e.origin),r}function kt(e,t,r){const{origin:i,basis1:n,basis2:o}=e,s=Object(l.q)(fe.get(),t,i),a=pe(n,s),c=pe(o,s),u=pe(Wt(e),s);return Object(l.b)(r,a,c,u)}function qt(e,t){const r=kt(e,t,fe.get()),{basis1:i,basis2:n}=e,o=Object(l.m)(i),s=Object(l.m)(n),a=Math.max(Math.abs(r[0])-o,0),c=Math.max(Math.abs(r[1])-s,0),u=r[2];return a*a+c*c+u*u}function Gt(e,t){return Ot(e.plane,t)&&Xt(e,t)}function $t(e,t){const r=-e.plane[3];return pe(Wt(e),t)-r}function Wt(e){return e.plane}function Xt(e,t){const r=Object(l.q)(fe.get(),t,e.origin),i=Object(l.n)(e.basis1),n=Object(l.n)(e.basis2),o=Object(l.e)(e.basis1,r),s=Object(l.e)(e.basis2,r);return-o-i<0&&o-i<0&&-s-n<0&&s-n<0}function Yt(e,t){const r=er.get();return Object(l.h)(r.origin,e.origin),Object(l.h)(r.vector,t),r}function Kt(e,t,r){const{basis1:i,basis2:n,origin:o}=e,s=Object(l.c)(fe.get(),i,t.origin[0]),a=Object(l.c)(fe.get(),n,t.origin[1]);Object(l.f)(r.origin,s,a),Object(l.f)(r.origin,r.origin,o);const c=Object(l.c)(fe.get(),i,t.direction[0]),u=Object(l.c)(fe.get(),n,t.direction[1]);return Object(l.c)(r.vector,Object(l.f)(c,c,u),2),r}function Qt(e,t,r,i){const n=Wt(e);vt(n,t.direction,t.origin,r),vt(r,n,t.origin,i)}const Jt={plane:nt(),origin:Object(c.g)(0,0,0),basis1:Object(c.g)(1,0,0),basis2:Object(c.g)(0,1,0)},Zt=new Te(nt),er=new Te(we),tr=Object(c.e)(),rr=new Te(()=>({origin:null,basis1:null,basis2:null,plane:null})),ir=[{origin:[-1,-1],direction:[1,0]},{origin:[1,-1],direction:[0,1]},{origin:[1,1],direction:[-1,0]},{origin:[-1,1],direction:[0,-1]}],nr=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],or=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];Object.freeze({__proto__:null,BoundedPlaneClass:class{constructor(){this.plane=nt(),this.origin=Object(c.e)(),this.basis1=Object(c.e)(),this.basis2=Object(c.e)()}},create:Bt,wrap:function(e,t,r){const i=rr.get();return i.origin=e,i.basis1=t,i.basis2=r,i.plane=ot(0,0,0,0),Dt(i),i},copy:Rt,copyWithoutVerify:function(e,t){Object(l.h)(t.origin,e.origin),Object(l.h)(t.basis1,e.basis1),Object(l.h)(t.basis2,e.basis2),st(e.plane,t.plane)},fromValues:Lt,updateUnboundedPlane:Dt,elevate:It,setExtent:function(e,t,r){return Nt(t,r),It(r,$t(e,e.origin),r),r},fromAABoundingRect:Nt,intersectRay:zt,intersectRayClosestSilhouette:function(e,t,r){if(zt(e,t,r))return r;const i=Ut(e,t,fe.get());return Object(l.f)(r,t.origin,Object(l.c)(fe.get(),t.direction,Object(l.l)(t.origin,i)/Object(l.m)(t.direction))),r},closestPointOnSilhouette:Ut,closestPoint:Vt,projectPoint:Ht,projectPointLocal:kt,distance2:qt,distance:function(e,t){return Math.sqrt(qt(e,t))},distanceToSilhouette:function(e,t){let r=Number.NEGATIVE_INFINITY;for(const i of ir){const n=Ae(Kt(e,i,er.get()),t);n>r&&(r=n)}return Math.sqrt(r)},extrusionContainsPoint:Gt,axisAt:function(e,t,r,i){return function(e,t,r){switch(t){case 0:Object(l.h)(r,e.basis1),Object(l.o)(r,r);break;case 1:Object(l.h)(r,e.basis2),Object(l.o)(r,r);break;case 2:Object(l.h)(r,Wt(e))}return r}(e,r,i)},altitudeAt:$t,setAltitudeAt:function(e,t,r,i){const n=$t(e,t),o=Object(l.c)(tr,Wt(e),r-n);return Object(l.f)(i,t,o),i},equals:function(e,t){return Object(l.s)(e.basis1,t.basis1)&&Object(l.s)(e.basis2,t.basis2)&&Object(l.s)(e.origin,t.origin)},transform:function(e,t,r){return e!==r&&Rt(e,r),Object(f.a)(nr,t),Object(f.b)(nr,nr),Object(l.j)(r.basis1,e.basis1,nr),Object(l.j)(r.basis2,e.basis2,nr),Object(l.j)(r.plane,e.plane,nr),Object(l.j)(r.origin,e.origin,t),bt(r.plane,r.origin,r.plane),r},rotate:function(e,t,r,i){return e!==i&&Rt(e,i),Object(f.g)(or,Object(f.d)(or),t,r),Object(l.j)(i.basis1,e.basis1,or),Object(l.j)(i.basis2,e.basis2,or),Dt(i),i},normal:Wt,UP:Jt});function sr(e){return e?{ray:Fe(e.ray),c0:e.c0,c1:e.c1}:{ray:Fe(),c0:0,c1:Number.MAX_VALUE}}function ar(e,t,r,i=sr()){return Be(e,i.ray),i.c0=t,i.c1=r,i}function cr(e,t=sr()){return Be(e,t.ray),t.c0=0,t.c1=Number.MAX_VALUE,t}function lr(e,t,r=sr()){const i=Object(l.m)(e.vector);return Re(e.origin,t,r.ray),r.c0=0,r.c1=i,r}function ur(e,t,r){return Object(l.f)(r,e.ray.origin,Object(l.c)(r,e.ray.direction,t))}const dr=new Te(()=>({c0:0,c1:0,ray:null}));Object.freeze({__proto__:null,create:sr,wrap:function(e,t,r){const i=dr.get();return i.ray=e,i.c0=t,i.c1=r,i},copy:function(e,t=sr()){return ar(e.ray,e.c0,e.c1,t)},fromValues:ar,fromRay:cr,fromLineSegment:function(e,t=sr()){return lr(e,Object(l.o)(fe.get(),e.vector),t)},fromLineSegmentAndDirection:lr,getStart:function(e,t){return ur(e,e.c0,t)},getEnd:function(e,t){return ur(e,e.c1,t)},getAt:ur});function fr(e){return e?[nt(e[0]),nt(e[1]),nt(e[2]),nt(e[3]),nt(e[4]),nt(e[5])]:[nt(),nt(),nt(),nt(),nt(),nt()]}function hr(){return[Object(c.e)(),Object(c.e)(),Object(c.e)(),Object(c.e)(),Object(c.e)(),Object(c.e)(),Object(c.e)(),Object(c.e)()]}function mr(e,t){lt(t[4],t[0],t[3],e[0]),lt(t[1],t[5],t[6],e[1]),lt(t[4],t[5],t[1],e[2]),lt(t[3],t[2],t[6],e[3]),lt(t[0],t[1],t[2],e[4]),lt(t[5],t[4],t[7],e[5])}function pr(e,t){for(let r=0;r<6;r++)if(!St(e[r],t))return!1;return!0}const gr=[S(-1,-1,-1,1),S(1,-1,-1,1),S(1,1,-1,1),S(-1,1,-1,1),S(-1,-1,1,1),S(1,-1,1,1),S(1,1,1,1),S(-1,1,1,1)],br=new Te(sr),vr=hr();Object.freeze({__proto__:null,create:fr,createPoints:hr,copy:function(e,t=fr()){for(let r=0;r<6;r++)st(e[r],t[r])},fromMatrix:function(e,t,r,i=vr){const n=Object(f.f)(me.get(),t,e);Object(f.a)(n,n);for(let e=0;e<8;++e){const t=Object(ce.e)(he.get(),gr[e],n);Object(l.b)(i[e],t[0]/t[3],t[1]/t[3],t[2]/t[3])}mr(r,i)},computePlanes:mr,intersectsSphere:function(e,t){for(let r=0;r<6;r++)if(Tt(e[r],t))return!1;return!0},intersectsRay:function(e,t){return pr(e,cr(t,br.get()))},intersectClipRay:function(e,t){for(let r=0;r<6;r++)if(!Mt(e[r],t))return!1;return!0},intersectsLineSegment:function(e,t,r){return pr(e,lr(t,r,br.get()))},intersectsPoint:function(e,t){for(let r=0;r<6;r++)if(Et(e[r],t)>0)return!1;return!0},intersectsAABB:function(e,t){for(let r=0;r<6;r++)if(wt(e[r],t))return!1;return!0},planePointIndices:{bottom:[5,1,0,4],near:[0,1,2,3],far:[5,4,7,6],right:[1,5,6,2],left:[4,0,3,7],top:[7,3,2,6]}});function xr(e){return e?{p0:Object(c.c)(e.p0),p1:Object(c.c)(e.p1),p2:Object(c.c)(e.p2)}:{p0:Object(c.e)(),p1:Object(c.e)(),p2:Object(c.e)()}}function yr(e,t,r,i=xr()){return Object(l.h)(i.p0,e),Object(l.h)(i.p1,t),Object(l.h)(i.p2,r),i}function _r(e,t,r){const i=Object(ae.d)(e,t),n=Object(ae.d)(t,r),o=Object(ae.d)(r,e),s=(i+n+o)/2,a=s*(s-i)*(s-n)*(s-o);return a<=0?0:Math.sqrt(a)}function Tr(e,t,r){return Object(l.q)(Sr,t,e),Object(l.q)(Mr,r,e),Object(l.m)(Object(l.d)(Sr,Sr,Mr))/2}const Or=new Te(we),wr=new Te(()=>({p0:null,p1:null,p2:null})),Sr=Object(c.e)(),Mr=Object(c.e)();Object.freeze({__proto__:null,create:xr,wrap:function(e,t,r){const i=wr.get();return i.p0=e,i.p1=t,i.p2=r,i},copy:function(e,t=xr()){return yr(e.p0,e.p1,e.p2,t)},fromValues:yr,distance2:function(e,t){const r=e.p0,i=e.p1,n=e.p2,o=Object(l.q)(fe.get(),i,r),s=Object(l.q)(fe.get(),n,i),a=Object(l.q)(fe.get(),r,n),c=Object(l.q)(fe.get(),t,r),u=Object(l.q)(fe.get(),t,i),d=Object(l.q)(fe.get(),t,n),f=Object(l.d)(o,o,a),h=Object(l.e)(Object(l.d)(fe.get(),o,f),c),m=Object(l.e)(Object(l.d)(fe.get(),s,f),u),p=Object(l.e)(Object(l.d)(fe.get(),a,f),d);if(h>0&&m>0&&p>0){const e=Object(l.e)(f,c);return e*e/Object(l.e)(f,f)}const g=Ae(Me(r,o,Or.get()),t),b=Ae(Me(i,s,Or.get()),t),v=Ae(Me(n,a,Or.get()),t);return Math.min(g,b,v)},intersectRay:function(e,t,r){const i=1e-5,{direction:n,origin:o}=t,{p0:s,p1:a,p2:c}=e,u=a[0]-s[0],d=a[1]-s[1],f=a[2]-s[2],h=c[0]-s[0],m=c[1]-s[1],p=c[2]-s[2],g=n[1]*p-m*n[2],b=n[2]*h-p*n[0],v=n[0]*m-h*n[1],x=u*g+d*b+f*v;if(x>-i&&x<i)return!1;const y=1/x,_=o[0]-s[0],T=o[1]-s[1],O=o[2]-s[2],w=y*(_*g+T*b+O*v);if(w<0||w>1)return!1;const S=T*f-d*O,M=O*u-f*_,A=_*d-u*T,C=y*(n[0]*S+n[1]*M+n[2]*A);return!(C<0||w+C>1)&&(r&&(Object(l.c)(r,n,y*(h*S+m*M+p*A)),Object(l.f)(r,o,r)),!0)},areaPoints2d:_r,area2d:function(e){return _r(e.p0,e.p1,e.p2)},areaPoints3d:Tr});class Ar{constructor(e){this.message=e}toString(){return"AssertException: "+this.message}}function Cr(e,t){if(!e){t=t||"assert";const e=new Error(t);throw e.stack&&console.log(e.stack),new Ar(t)}}function Er(e,t=0){let r=0;for(let i=0;i<4;i++)r+=e[t+i]*jr[i];return r}const jr=[1/256,1/65536,1/16777216,1/4294967296];Er(new Uint8ClampedArray([255,255,255,255]));var Pr=r(17),Fr=r(167);class Br{constructor(){this.id=Object(Fr.a)()}unload(){}}class Rr{constructor(){this._disposed=!1}get disposed(){return this._disposed}get shaderTransformation(){return this._shaderTransformation}acquire(e,t,r,i,n,o){this.id=Object(Fr.a)(),this.geometry=e,this.material=t,this.transformation=r,this.instanceParameters=i,this.origin=n,this._shaderTransformation=o,this._disposed=!1}release(){this._disposed=!1}dispose(){this._disposed=!0}getStaticTransformation(){return this.transformation}getShaderTransformation(){return Object(i.h)(this._shaderTransformation)?this._shaderTransformation(this.transformation):this.transformation}computeAttachmentOrigin(e){return!!(this.material.computeAttachmentOrigin?this.material.computeAttachmentOrigin(this.geometry,e):this.geometry.computeAttachmentOrigin(e))&&(Object(l.j)(e,e,this.getStaticTransformation()),!0)}}Rr.pool=new Pr.b(Rr);function Lr(e,t,r){for(let i=0;i<r;++i)t[2*i]=e[i],t[2*i+1]=e[i]-t[2*i]}const Dr=new Float64Array(1),Ir=new Float32Array(2);new Float64Array(3),new Float32Array(6);function Nr(e,...t){let r="";for(let i=0;i<t.length;i++)r+=e[i]+t[i];return r+=e[e.length-1],r}function zr(e,t){t.linearDepth?e.vertex.code.add(Nr`
    vec4 transformPositionWithDepth(mat4 proj, mat4 view, vec3 pos, vec2 nearFar, out float depth) {
      vec4 eye = view * vec4(pos, 1.0);
      depth = (-eye.z - nearFar[0]) / (nearFar[1] - nearFar[0]) ;
      return proj * eye;
    }
    `):e.vertex.code.add(Nr`
    vec4 transformPosition(mat4 proj, mat4 view, vec3 pos) {
      // Make sure the order of operations is the same as in transformPositionWithDepth.
      return proj * (view * vec4(pos, 1.0));
    }
    `)}var Ur;(Ur=Nr||(Nr={})).int=function(e){return Math.round(e).toString()},Ur.float=function(e){return e.toPrecision(8)};const Vr=i.a.getLogger("esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder");class Hr{constructor(){this.includedModules=new Map}include(e,t){this.includedModules.has(e)?this.includedModules.get(e)!==t&&Vr.error("Trying to include shader module multiple times with different sets of options."):(this.includedModules.set(e,t),e(this.builder,t))}}class kr extends Hr{constructor(){super(...arguments),this.vertex=new $r,this.fragment=new $r,this.attributes=new Wr,this.varyings=new Xr,this.extensions=new Yr,this.constants=new Kr}get builder(){return this}generateSource(e){const t=this.extensions.generateSource(e),r=this.attributes.generateSource(e),i=this.varyings.generateSource(),n="vertex"===e?this.vertex:this.fragment,o=n.uniforms.generateSource(),s=n.code.generateSource(),a="vertex"===e?Jr:Qr,c=this.constants.generateSource().concat(n.constants.generateSource());return`\n${t.join("\n")}\n\n${a}\n\n${c.join("\n")}\n\n${o.join("\n")}\n\n${r.join("\n")}\n\n${i.join("\n")}\n\n${s.join("\n")}`}}class qr{constructor(){this._entries=new Array,this._set=new Set}add(e,t,r){const i=`${e}_${t}_${r}`;return this._set.has(i)||(this._entries.push([e,t,r]),this._set.add(i)),this}generateSource(){return this._entries.map(e=>{return`uniform ${e[1]} ${e[0]}${t=e[2],t?`[${t}]`:""};`;var t})}}class Gr{constructor(){this._entries=new Array}add(e){this._entries.push(e)}generateSource(){return this._entries}}class $r extends Hr{constructor(){super(...arguments),this.uniforms=new qr,this.code=new Gr,this.constants=new Kr}get builder(){return this}}class Wr{constructor(){this._entries=new Array}add(e,t){this._entries.push([e,t])}generateSource(e){return"fragment"===e?[]:this._entries.map(e=>`attribute ${e[1]} ${e[0]};`)}}class Xr{constructor(){this._entries=new Array}add(e,t){this._entries.push([e,t])}generateSource(){return this._entries.map(e=>`varying ${e[1]} ${e[0]};`)}}class Yr{constructor(){this._entries=new Set}add(e){this._entries.add(e)}generateSource(e){const t="vertex"===e?Yr.ALLOWLIST_VERTEX:Yr.ALLOWLIST_FRAGMENT;return Array.from(this._entries).filter(e=>t.includes(e)).map(e=>`#extension ${e} : enable`)}}Yr.ALLOWLIST_FRAGMENT=["GL_EXT_shader_texture_lod","GL_OES_standard_derivatives"],Yr.ALLOWLIST_VERTEX=[];class Kr{constructor(){this._entries=[]}add(e,t,r){let i="ERROR_CONSTRUCTOR_STRING";switch(t){case"float":i=Kr.numberToFloatStr(r);break;case"int":i=Kr.numberToIntStr(r);break;case"bool":i=r.toString();break;case"vec2":i=`vec2(${Kr.numberToFloatStr(r[0])},                            ${Kr.numberToFloatStr(r[1])})`;break;case"vec3":i=`vec3(${Kr.numberToFloatStr(r[0])},                            ${Kr.numberToFloatStr(r[1])},                            ${Kr.numberToFloatStr(r[2])})`;break;case"vec4":i=`vec4(${Kr.numberToFloatStr(r[0])},                            ${Kr.numberToFloatStr(r[1])},                            ${Kr.numberToFloatStr(r[2])},                            ${Kr.numberToFloatStr(r[3])})`;break;case"ivec2":i=`ivec2(${Kr.numberToIntStr(r[0])},                             ${Kr.numberToIntStr(r[1])})`;break;case"ivec3":i=`ivec3(${Kr.numberToIntStr(r[0])},                             ${Kr.numberToIntStr(r[1])},                             ${Kr.numberToIntStr(r[2])})`;break;case"ivec4":i=`ivec4(${Kr.numberToIntStr(r[0])},                             ${Kr.numberToIntStr(r[1])},                             ${Kr.numberToIntStr(r[2])},                             ${Kr.numberToIntStr(r[3])})`;break;case"bvec2":i=`bvec2(${r[0].toString()},                             ${r[1].toString()})`;break;case"bvec3":i=`bvec3(${r[0].toString()},                             ${r[1].toString()},                             ${r[2].toString()})`;break;case"bvec4":i=`bvec4(${r[0].toString()},                             ${r[1].toString()},                             ${r[2].toString()},                             ${r[3].toString()})`;break;case"mat2":case"mat3":case"mat4":i=`${t}(${Array.prototype.map.call(r,e=>Kr.numberToFloatStr(e)).join(", ")})`}return this._entries.push(`const ${t} ${e} = ${i};`),this}static numberToIntStr(e){return e.toFixed(0)}static numberToFloatStr(e){return Number.isInteger(e)?e.toFixed(1):e.toString()}generateSource(){return Array.from(this._entries)}}const Qr="#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  precision highp sampler2D;\n#else\n  precision mediump float;\n  precision mediump sampler2D;\n#endif",Jr="precision highp float;\nprecision highp sampler2D;";class Zr{constructor(e,t){this._module=e,this._loadModule=t}get(){return this._module}async reload(){return this._module=await this._loadModule(),this._module}}function ei(e={}){return(t,r)=>{var i,n;t._parameterNames=null!=(i=t._parameterNames)?i:[],t._parameterNames.push(r);const o=t._parameterNames.length-1,s=e.count||2,a=Math.ceil(Object(w.f)(s)),c=null!=(n=t._parameterBits)?n:[0];let l=0;for(;c[l]+a>16;)l++,l>=c.length&&c.push(0);t._parameterBits=c;const u=c[l],d=(1<<a)-1<<u;c[l]+=a,Object.defineProperty(t,r,{get(){return this[o]},set(e){if(this[o]!==e&&(this[o]=e,this._keyDirty=!0,this._parameterBits[l]=this._parameterBits[l]&~d|+e<<u&d,"number"!=typeof e&&"boolean"!=typeof e))throw"Configuration value for "+r+" must be boolean or number, got "+typeof e}})}}const ti={position:0,normal:1,uv0:2,color:3,size:4,tangent:4,auxpos1:5,symbolColor:5,auxpos2:6,featureAttribute:6,instanceFeatureAttribute:6,instanceColor:7,model:8,modelNormal:12,modelOriginHi:11,modelOriginLo:15};var ri;!function(e){function t(e,t,r){Object(f.i)(ii,r,t),e.setUniform3fv("localOrigin",t),e.setUniformMatrix4fv("view",ii)}e.bindCamPosition=function(e,t,r){e.setUniform3f("camPos",r[3]-t[0],r[7]-t[1],r[11]-t[2])},e.bindProjectionMatrix=function(e,t){e.setUniformMatrix4fv("proj",t)},e.bindNearFar=function(e,t){e.setUniform2fv("nearFar",t)},e.bindViewCustomOrigin=t,e.bindView=function(e,r){t(e,r.origin,r.camera.viewMatrix)},e.bindViewport=function(e,t){e.setUniform4fv("viewport",t.camera.fullViewport)}}(ri||(ri={}));const ii=ie();let ni=(()=>{const e=new Uint32Array(131072);for(let t=0;t<e.length;++t)e[t]=t;return e})();const oi=new Uint16Array([0]),si=(()=>{const e=new Uint16Array(65536);for(let t=0;t<e.length;++t)e[t]=t;return e})();function ai(e){if(1===e)return oi;if(e<si.length)return new Uint16Array(si.buffer,0,e);if(e>ni.length){const t=Math.max(2*ni.length,e);ni=new Uint32Array(t);for(let e=0;e<ni.length;e++)ni[e]=e}return new Uint32Array(ni.buffer,0,e)}const ci=Object(c.e)(),li=Object(c.e)(),ui=Object(c.e)(),di=Object(c.e)();function fi(e){e.code.add(Nr`
    vec4 premultiplyAlpha(vec4 v) {
      return vec4(v.rgb * v.a, v.a);
    }

    // Note: the min in the last line has been added to fix an instability in chrome.
    // See https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/23911
    // With proper floating point handling, the value could never be >1.
    vec3 rgb2hsv(vec3 c) {
      vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
      vec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);
      vec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);

      float d = q.x - min(q.w, q.y);
      float e = 1.0e-10;
      return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);
    }

    vec3 hsv2rgb(vec3 c) {
      vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
      vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
      return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
    }

    float rgb2v(vec3 c) {
      return max(c.x, max(c.y, c.z));
    }
  `)}function hi(e,t,r){const i=r.parameters,n=r.paddingPixelsOverride;return gi.scale=Math.min(i.divisor/(t-i.offset),1),gi.factor=function(e){return Math.abs(e*e*e)}(e),gi.minPixelSize=i.minPixelSize,gi.paddingPixels=n,gi}function mi(e,t){return 0===e?t.minPixelSize:t.minPixelSize*(1+2*t.paddingPixels/e)}function pi(e,t){return Math.max(Object(w.e)(e*t.scale,e,t.factor),mi(e,t))}Object(w.d)(10),Object(w.d)(12),Object(w.d)(70),Object(w.d)(40);const gi={scale:0,factor:0,minPixelSize:0,paddingPixels:0},bi=e=>class extends e{constructor(){super(...arguments),this._isDisposed=!1}dispose(){for(const t of null!=(e=this._managedDisposables)?e:[]){var e;const r=this[t];this[t]=null,r&&"function"==typeof r.dispose&&r.dispose()}this._isDisposed=!0}get isDisposed(){return this._isDisposed}};class vi extends(bi(class{})){}class xi extends vi{constructor(e){super(),this.material=e.material,this.techniqueRep=e.techniqueRep,this.output=e.output}getTechnique(){return this.technique}getPipelineState(e,t){return this.getTechnique().pipeline}ensureResources(e){return 2}ensureParameters(e){}}const yi=Object(_.e)();function _i(e,t,r,n,o,s,a){const c=function(e){return!!Object(i.h)(e)&&!e.visible}(t),u=r.tolerance;if(!c)if(e.boundingInfo)Cr(0===e.primitiveType),function e(t,r,n,o,s,a){if(Object(i.c)(t))return;const c=function(e,t,r){return Object(l.b)(r,1/(t[0]-e[0]),1/(t[1]-e[1]),1/(t[2]-e[2]))}(r,n,Ti);if(Object(_.l)(yi,t.getBBMin()),Object(_.h)(yi,t.getBBMax()),Object(i.h)(s)&&s.applyToAabb(yi),function(e,t,r,i){return function(e,t,r,i,n){const o=(e[0]-i-t[0])*r[0],s=(e[3]+i-t[0])*r[0];let a=Math.min(o,s),c=Math.max(o,s);const l=(e[1]-i-t[1])*r[1],u=(e[4]+i-t[1])*r[1];if(c=Math.min(c,Math.max(l,u)),c<0)return!1;if(a=Math.max(a,Math.min(l,u)),a>c)return!1;const d=(e[2]-i-t[2])*r[2],f=(e[5]+i-t[2])*r[2];return c=Math.min(c,Math.max(d,f)),!(c<0)&&(a=Math.max(a,Math.min(d,f)),!(a>c)&&a<n)}(e,t,r,i,1/0)}(yi,r,c,o)){const{primitiveIndices:i,indices:c,position:l}=t,u=i?i.length:c.length/3;if(u>Pi){const i=t.getChildren();if(void 0!==i){for(let t=0;t<8;++t)void 0!==i[t]&&e(i[t],r,n,o,s,a);return}}wi(r,n,0,u,c,l,i,s,a)}}(e.boundingInfo,n,o,u,s,a);else{const t=e.indices.get("position"),r=e.vertexAttributes.get("position");wi(n,o,0,t.length/3,t,r,void 0,s,a)}}const Ti=Object(c.e)();const Oi=Object(c.e)();function wi(e,t,r,n,o,s,a,c,l){if(a)return function(e,t,r,n,o,s,a,c,l){const u=s.data,d=s.stride||s.size,f=e[0],h=e[1],m=e[2],p=t[0]-f,g=t[1]-h,b=t[2]-m;for(let e=r;e<n;++e){const t=a[e];let r=3*t,n=d*o[r++],s=u[n++],v=u[n++],x=u[n];n=d*o[r++];let y=u[n++],_=u[n++],T=u[n];n=d*o[r];let O=u[n++],w=u[n++],S=u[n];Object(i.h)(c)&&([s,v,x]=c.applyToVertex(s,v,x,e),[y,_,T]=c.applyToVertex(y,_,T,e),[O,w,S]=c.applyToVertex(O,w,S,e));const M=y-s,A=_-v,C=T-x,E=O-s,j=w-v,P=S-x,F=g*P-j*b,B=b*E-P*p,R=p*j-E*g,L=M*F+A*B+C*R;if(Math.abs(L)<=Number.EPSILON)continue;const D=f-s,I=h-v,N=m-x,z=D*F+I*B+N*R;if(L>0){if(z<0||z>L)continue}else if(z>0||z<L)continue;const U=I*C-A*N,V=N*M-C*D,H=D*A-M*I,k=p*U+g*V+b*H;if(L>0){if(k<0||z+k>L)continue}else if(k>0||z+k<L)continue;const q=(E*U+j*V+P*H)/L;q>=0&&l(q,Ai(M,A,C,E,j,P,Oi),t)}}(e,t,r,n,o,s,a,c,l);const u=s.data,d=s.stride||s.size,f=e[0],h=e[1],m=e[2],p=t[0]-f,g=t[1]-h,b=t[2]-m;for(let e=r,t=3*r;e<n;++e){let r=d*o[t++],n=u[r++],s=u[r++],a=u[r];r=d*o[t++];let v=u[r++],x=u[r++],y=u[r];r=d*o[t++];let _=u[r++],T=u[r++],O=u[r];Object(i.h)(c)&&([n,s,a]=c.applyToVertex(n,s,a,e),[v,x,y]=c.applyToVertex(v,x,y,e),[_,T,O]=c.applyToVertex(_,T,O,e));const w=v-n,S=x-s,M=y-a,A=_-n,C=T-s,E=O-a,j=g*E-C*b,P=b*A-E*p,F=p*C-A*g,B=w*j+S*P+M*F;if(Math.abs(B)<=Number.EPSILON)continue;const R=f-n,L=h-s,D=m-a,I=R*j+L*P+D*F;if(B>0){if(I<0||I>B)continue}else if(I>0||I<B)continue;const N=L*M-S*D,z=D*w-M*R,U=R*S-w*L,V=p*N+g*z+b*U;if(B>0){if(V<0||I+V>B)continue}else if(V>0||I+V<B)continue;const H=(A*N+C*z+E*U)/B;H>=0&&l(H,Ai(w,S,M,A,C,E,Oi),e)}}const Si=Object(c.e)(),Mi=Object(c.e)();function Ai(e,t,r,i,n,o,s){return Object(l.b)(Si,e,t,r),Object(l.b)(Mi,i,n,o),Object(l.d)(s,Si,Mi),Object(l.o)(s,s),s}function Ci(e,t,r){if(!e)return;const i=e.parameters,n=e.paddingPixelsOverride;t.setUniform4f(r,i.divisor,i.offset,i.minPixelSize,n)}function Ei(e){const t=[];return e.forEach(e=>t.push(e)),t}const ji={multiply:1,ignore:2,replace:3,tint:4},Pi=1e3;class Fi extends Br{constructor(e,t){super(),this.type=3,this.supportsEdges=!1,this._visible=!0,this._renderPriority=0,this._insertOrder=0,this._vertexAttributeLocations=ti,this._params=function e(t,r){const i=r?e(r):{};for(const e in t){let r=t[e];r&&r.forEach&&(r=Ei(r)),null==r&&e in i||(i[e]=r)}return i}(e,t),this.validateParameterValues(this._params)}dispose(){}get params(){return this._params}update(e){return!1}setParameterValues(e){(function(e,t){let r=!1;for(const i in t){const n=t[i];void 0!==n&&(r=!0,Array.isArray(n)?e[i]=n.slice():e[i]=n)}return r})(this._params,e)&&(this.validateParameterValues(this._params),this.parametersChanged())}validateParameterValues(e){}get visible(){return this._visible}set visible(e){e!==this._visible&&(this._visible=e,this.parametersChanged())}isVisibleInPass(e){return!0}get renderOccluded(){return this.params.renderOccluded}get renderPriority(){return this._renderPriority}set renderPriority(e){e!==this._renderPriority&&(this._renderPriority=e,this.parametersChanged())}get insertOrder(){return this._insertOrder}set insertOrder(e){e!==this._insertOrder&&(this._insertOrder=e,this.parametersChanged())}get vertexAttributeLocations(){return this._vertexAttributeLocations}isVisible(){return this._visible}parametersChanged(){Object(i.h)(this.materialRepository)&&this.materialRepository.materialChanged(this)}}function Bi(e,t,r,i){const n=r.typedBuffer,o=r.typedBufferStride,s=e.length;i*=o;for(let r=0;r<s;++r){const s=2*e[r];n[i]=t[s],n[i+1]=t[s+1],i+=o}}function Ri(e,t,r,i,n){const o=r.typedBuffer,s=r.typedBufferStride,a=e.length;if(i*=s,null==n||1===n)for(let r=0;r<a;++r){const n=3*e[r];o[i]=t[n],o[i+1]=t[n+1],o[i+2]=t[n+2],i+=s}else for(let r=0;r<a;++r){const a=3*e[r];for(let e=0;e<n;++e)o[i]=t[a],o[i+1]=t[a+1],o[i+2]=t[a+2],i+=s}}function Li(e,t,r,i,n=1){const o=r.typedBuffer,s=r.typedBufferStride,a=e.length;if(i*=s,1===n)for(let r=0;r<a;++r){const n=4*e[r];o[i]=t[n],o[i+1]=t[n+1],o[i+2]=t[n+2],o[i+3]=t[n+3],i+=s}else for(let r=0;r<a;++r){const a=4*e[r];for(let e=0;e<n;++e)o[i]=t[a],o[i+1]=t[a+1],o[i+2]=t[a+2],o[i+3]=t[a+3],i+=s}}function Di(e,t,r,i,n,o=1){if(r){const s=i.typedBuffer,a=i.typedBufferStride,c=e.length,l=r[0],u=r[1],d=r[2],f=r[4],h=r[5],m=r[6],p=r[8],g=r[9],b=r[10],v=r[12],x=r[13],y=r[14];if(n*=a,1===o)for(let r=0;r<c;++r){const i=3*e[r],o=t[i],c=t[i+1],_=t[i+2];s[n]=l*o+f*c+p*_+v,s[n+1]=u*o+h*c+g*_+x,s[n+2]=d*o+m*c+b*_+y,n+=a}else for(let r=0;r<c;++r){const i=3*e[r],c=t[i],_=t[i+1],T=t[i+2],O=l*c+f*_+p*T+v,w=u*c+h*_+g*T+x,S=d*c+m*_+b*T+y;for(let e=0;e<o;++e)s[n]=O,s[n+1]=w,s[n+2]=S,n+=a}}else Ri(e,t,i,n,o)}function Ii(e,t,r,i,n,o){if(r){const s=r,a=i.typedBuffer,c=i.typedBufferStride,l=e.length,u=s[0],d=s[1],f=s[2],h=s[4],m=s[5],p=s[6],g=s[8],b=s[9],v=s[10],x=Math.abs(1-u*u+h*h+g*g)>1e-5||Math.abs(1-d*d+m*m+b*b)>1e-5||Math.abs(1-f*f+p*p+v*v)>1e-5,y=1e-6,_=1-y;if(n*=c,1===o)for(let r=0;r<l;++r){const i=3*e[r],o=t[i],s=t[i+1],l=t[i+2];let T=u*o+h*s+g*l,O=d*o+m*s+b*l,w=f*o+p*s+v*l;if(x){const e=T*T+O*O+w*w;if(e<_&&e>y){const t=Math.sqrt(e);T/=t,O/=t,w/=t}}a[n+0]=T,a[n+1]=O,a[n+2]=w,n+=c}else for(let r=0;r<l;++r){const i=3*e[r],s=t[i],l=t[i+1],T=t[i+2];let O=u*s+h*l+g*T,w=d*s+m*l+b*T,S=f*s+p*l+v*T;if(x){const e=O*O+w*w+S*S;if(e<_&&e>y){const t=Math.sqrt(e);O/=t,w/=t,S/=t}}for(let e=0;e<o;++e)a[n+0]=O,a[n+1]=w,a[n+2]=S,n+=c}}else Ri(e,t,i,n,o)}function Ni(e,t,r,i,n,o=1){const s=i.typedBuffer,a=i.typedBufferStride,c=e.length;if(n*=a,1===o){if(4===r)for(let r=0;r<c;++r){const i=4*e[r];s[n]=t[i],s[n+1]=t[i+1],s[n+2]=t[i+2],s[n+3]=t[i+3],n+=a}else if(3===r)for(let r=0;r<c;++r){const i=3*e[r];s[n]=t[i],s[n+1]=t[i+1],s[n+2]=t[i+2],s[n+3]=255,n+=a}}else if(4===r)for(let r=0;r<c;++r){const i=4*e[r];for(let e=0;e<o;++e)s[n]=t[i],s[n+1]=t[i+1],s[n+2]=t[i+2],s[n+3]=t[i+3],n+=a}else if(3===r)for(let r=0;r<c;++r){const i=3*e[r];for(let e=0;e<o;++e)s[n]=t[i],s[n+1]=t[i+1],s[n+2]=t[i+2],s[n+3]=255,n+=a}}function zi(e,t){if(t.slicePlaneEnabled){e.extensions.add("GL_OES_standard_derivatives"),t.sliceEnabledForVertexPrograms&&(e.vertex.uniforms.add("slicePlaneOrigin","vec3"),e.vertex.uniforms.add("slicePlaneBasis1","vec3"),e.vertex.uniforms.add("slicePlaneBasis2","vec3")),e.fragment.uniforms.add("slicePlaneOrigin","vec3"),e.fragment.uniforms.add("slicePlaneBasis1","vec3"),e.fragment.uniforms.add("slicePlaneBasis2","vec3");const r=Nr`
      struct SliceFactors {
        float front;
        float side0;
        float side1;
        float side2;
        float side3;
      };

      SliceFactors calculateSliceFactors(vec3 pos) {
        vec3 rel = pos - slicePlaneOrigin;

        vec3 slicePlaneNormal = -cross(slicePlaneBasis1, slicePlaneBasis2);
        float slicePlaneW = -dot(slicePlaneNormal, slicePlaneOrigin);

        float basis1Len2 = dot(slicePlaneBasis1, slicePlaneBasis1);
        float basis2Len2 = dot(slicePlaneBasis2, slicePlaneBasis2);

        float basis1Dot = dot(slicePlaneBasis1, rel);
        float basis2Dot = dot(slicePlaneBasis2, rel);

        return SliceFactors(
          dot(slicePlaneNormal, pos) + slicePlaneW,
          -basis1Dot - basis1Len2,
          basis1Dot - basis1Len2,
          -basis2Dot - basis2Len2,
          basis2Dot - basis2Len2
        );
      }

      bool sliceByFactors(SliceFactors factors) {
        return factors.front < 0.0
          && factors.side0 < 0.0
          && factors.side1 < 0.0
          && factors.side2 < 0.0
          && factors.side3 < 0.0;
      }

      bool sliceEnabled() {
        // a slicePlaneBasis1 vector of zero length is used to disable slicing in the shader during draped rendering.
        return dot(slicePlaneBasis1, slicePlaneBasis1) != 0.0;
      }

      bool sliceByPlane(vec3 pos) {
        return sliceEnabled() && sliceByFactors(calculateSliceFactors(pos));
      }

      #define rejectBySlice(_pos_) sliceByPlane(_pos_)
      #define discardBySlice(_pos_) { if (sliceByPlane(_pos_)) discard; }
    `,i=Nr`
      vec4 applySliceHighlight(vec4 color, vec3 pos) {
        SliceFactors factors = calculateSliceFactors(pos);

        if (sliceByFactors(factors)) {
          return color;
        }

        const float HIGHLIGHT_WIDTH = 1.0;
        const vec4 HIGHLIGHT_COLOR = vec4(0.0, 0.0, 0.0, 0.3);

        factors.front /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.front);
        factors.side0 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side0);
        factors.side1 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side1);
        factors.side2 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side2);
        factors.side3 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side3);

        float highlightFactor = (1.0 - step(0.5, factors.front))
          * (1.0 - step(0.5, factors.side0))
          * (1.0 - step(0.5, factors.side1))
          * (1.0 - step(0.5, factors.side2))
          * (1.0 - step(0.5, factors.side3));

        return mix(color, vec4(HIGHLIGHT_COLOR.rgb, color.a), highlightFactor * HIGHLIGHT_COLOR.a);
      }
    `,n=t.sliceHighlightDisabled?Nr`#define highlightSlice(_color_, _pos_) (_color_)`:Nr`
        ${i}
        #define highlightSlice(_color_, _pos_) (sliceEnabled() ? applySliceHighlight(_color_, _pos_) : (_color_))
      `;t.sliceEnabledForVertexPrograms&&e.vertex.code.add(r),e.fragment.code.add(r),e.fragment.code.add(n)}else{const r=Nr`
      #define rejectBySlice(_pos_) false
      #define discardBySlice(_pos_) {}
      #define highlightSlice(_color_, _pos_) (_color_)
    `;t.sliceEnabledForVertexPrograms&&e.vertex.code.add(r),e.fragment.code.add(r)}}!function(e){e.bindUniformsWithOrigin=function(t,r,i){e.bindUniforms(t,r,i.slicePlane,i.origin)},e.bindUniforms=function(e,t,r,n){t.slicePlaneEnabled&&(Object(i.h)(r)?(n?(Object(l.q)(Ui,r.origin,n),e.setUniform3fv("slicePlaneOrigin",Ui)):e.setUniform3fv("slicePlaneOrigin",r.origin),e.setUniform3fv("slicePlaneBasis1",r.basis1),e.setUniform3fv("slicePlaneBasis2",r.basis2)):(e.setUniform3fv("slicePlaneBasis1",c.b),e.setUniform3fv("slicePlaneBasis2",c.b),e.setUniform3fv("slicePlaneOrigin",c.b)))}}(zi||(zi={}));const Ui=Object(c.e)();function Vi(e){e.code.add(Nr`
    // This is the maximum float value representable as 32bit fixed point,
    // it is rgba2float(vec4(1)) inlined.
    const float MAX_RGBA_FLOAT =
      255.0 / 256.0 +
      255.0 / 256.0 / 256.0 +
      255.0 / 256.0 / 256.0 / 256.0 +
      255.0 / 256.0 / 256.0 / 256.0 / 256.0;

    // Factors to convert to fixed point, i.e. factors (256^0, 256^1, 256^2, 256^3)
    const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);

    vec4 float2rgba(const float value) {
      // Make sure value is in the domain we can represent
      float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);

      // Decompose value in 32bit fixed point parts represented as
      // uint8 rgba components. Decomposition uses the fractional part after multiplying
      // by a power of 256 (this removes the bits that are represented in the previous
      // component) and then converts the fractional part to 8bits.
      vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);

      // Convert uint8 values (from 0 to 255) to floating point representation for
      // the shader
      const float toU8AsFloat = 1.0 / 255.0;

      return fixedPointU8 * toU8AsFloat;
    }

    // Factors to convert rgba back to float
    const vec4 RGBA_2_FLOAT_FACTORS = vec4(
      255.0 / (256.0),
      255.0 / (256.0 * 256.0),
      255.0 / (256.0 * 256.0 * 256.0),
      255.0 / (256.0 * 256.0 * 256.0 * 256.0)
    );

    float rgba2float(vec4 rgba) {
      // Convert components from 0->1 back to 0->255 and then
      // add the components together with their corresponding
      // fixed point factors, i.e. (256^1, 256^2, 256^3, 256^4)
      return dot(rgba, RGBA_2_FLOAT_FACTORS);
    }
  `)}function Hi(e){e.include(Vi),e.code.add(Nr`
    float linearDepthFromFloat(float depth, vec2 nearFar) {
      return -(depth * (nearFar[1] - nearFar[0]) + nearFar[0]);
    }

    float linearDepthFromTexture(sampler2D depthTex, vec2 uv, vec2 nearFar) {
      return linearDepthFromFloat(rgba2float(texture2D(depthTex, uv)), nearFar);
    }
  `)}const ki=S(1,1,0,1),qi=S(1,0,1,1);function Gi(e){e.fragment.uniforms.add("depthTex","sampler2D"),e.fragment.uniforms.add("highlightViewportPixelSz","vec4"),e.fragment.constants.add("occludedHighlightFlag","vec4",ki).add("unoccludedHighlightFlag","vec4",qi),e.fragment.code.add(Nr`
    void outputHighlight() {
      vec4 fragCoord = gl_FragCoord;

      float sceneDepth = texture2D(depthTex, (fragCoord.xy - highlightViewportPixelSz.xy) * highlightViewportPixelSz.zw).r;
      if (fragCoord.z > sceneDepth + 5e-7) {
        gl_FragColor = occludedHighlightFlag;
      }
      else {
        gl_FragColor = unoccludedHighlightFlag;
      }
    }
  `)}!function(e){e.bindOutputHighlight=function(e,t,r){e.bindTexture(r.highlightDepthTexture,5),t.setUniform1i("depthTex",5),t.setUniform4f("highlightViewportPixelSz",0,0,r.inverseViewport[0],r.inverseViewport[1])}}(Gi||(Gi={}));function $i(e,t){const r=e.fragment;switch(t.alphaDiscardMode){case 0:r.code.add(Nr`
        #define discardOrAdjustAlpha(color) { if (color.a < ${Nr.float(.001)}) { discard; } }
      `);break;case 1:r.code.add(Nr`
        void discardOrAdjustAlpha(inout vec4 color) {
          color.a = 1.0;
        }
      `);break;case 2:r.uniforms.add("textureAlphaCutoff","float"),r.code.add(Nr`
        #define discardOrAdjustAlpha(color) { if (color.a < textureAlphaCutoff) { discard; } else { color.a = 1.0; } }
      `);break;case 3:e.fragment.uniforms.add("textureAlphaCutoff","float"),e.fragment.code.add(Nr`
        #define discardOrAdjustAlpha(color) { if (color.a < textureAlphaCutoff) { discard; } }
      `)}}const Wi=function(e,t,r,i,n=32774,o=32774,s=[0,0,0,0]){return{srcRgb:e,srcAlpha:t,dstRgb:r,dstAlpha:i,opRgb:n,opAlpha:o,color:{r:s[0],g:s[1],b:s[2],a:s[3]}}}(770,1,771,771),Xi=A(1,1),Yi=A(0,771);function Ki(e){return 2===e?null:1===e?Yi:Xi}const Qi={factor:-1,units:-2};function Ji(e){return e?Qi:null}function Zi(e){return 3===e||2===e?513:515}function en(e,t){e.fragment.uniforms.add("terrainDepthTexture","sampler2D"),e.fragment.uniforms.add("cameraNearFar","vec2"),e.fragment.uniforms.add("inverseViewport","vec2"),e.fragment.code.add(Nr`
    //Compare the linearized depths of the fragment and the terrain. If fragment is on the wrong side of the terrain, discard it.
    void terrainDepthTest(vec4 fragCoord, float fragmentDepth){

      float terrainDepth = linearDepthFromTexture(terrainDepthTexture, fragCoord.xy * inverseViewport, cameraNearFar);
      if(fragmentDepth ${t.cullAboveGround?">":"<="} terrainDepth){
        discard;
      }
    }
  `)}const tn={mask:255},rn={function:{func:519,ref:2,mask:2},operation:{fail:7680,zFail:7680,zPass:0}},nn={function:{func:519,ref:2,mask:2},operation:{fail:7680,zFail:7680,zPass:7681}};function on(e,t){e.fragment.include(Vi),3===t.output?(e.extensions.add("GL_OES_standard_derivatives"),e.fragment.code.add(Nr`
      float _calculateFragDepth(const in float depth) {
        // calc polygon offset
        const float SLOPE_SCALE = 2.0;
        const float BIAS = 2.0 * .000015259;    // 1 / (2^16 - 1)
        float m = max(abs(dFdx(depth)), abs(dFdy(depth)));
        float result = depth + SLOPE_SCALE * m + BIAS;
        return clamp(result, .0, .999999);
      }

      void outputDepth(float _linearDepth) {
        gl_FragColor = float2rgba(_calculateFragDepth(_linearDepth));
      }
    `)):1===t.output&&e.fragment.code.add(Nr`
      void outputDepth(float _linearDepth) {
        gl_FragColor = float2rgba(_linearDepth);
      }
    `)}function sn(e,t){t.attributeColor?(e.attributes.add("color","vec4"),e.varyings.add("vColor","vec4"),e.vertex.code.add(Nr`
      void forwardVertexColor() { vColor = color; }
    `),e.vertex.code.add(Nr`
      void forwardNormalizedVertexColor() { vColor = color * 0.003921568627451; }
    `)):e.vertex.code.add(Nr`
      void forwardVertexColor() {}
      void forwardNormalizedVertexColor() {}
    `)}var an=r(315);class cn{constructor(e,t,r,i,n){this._context=e,this.bufferType=t,this.usage=r,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(1,this),this._glName=this._context.gl.createBuffer(),Object(an.d)(this._context.gl),i&&this.setData(i,n)}static createIndex(e,t,r,i){return new cn(e,34963,t,r,i)}static createVertex(e,t,r){return new cn(e,34962,t,r)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteSize(){return 34962===this.bufferType?this._size:5125===this._indexType?4*this._size:2*this._size}dispose(){this._context&&(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(1,this),this._context=null)}setData(e,t){if(!e)return;if("number"==typeof e){if(e<0&&console.error("Buffer size cannot be negative!"),34963===this.bufferType&&t)switch(this._indexType=t,this._size=e,t){case 5123:e*=2;break;case 5125:e*=4}}else{let t=e.byteLength;Object(ne.a)(e)&&(t/=2,this._indexType=5123),Object(ne.j)(e)&&(t/=4,this._indexType=5125),this._size=t}const r=this._context.getBoundVAO();this._context.bindVAO(null),this._context.bindBuffer(this),this._context.gl.bufferData(this.bufferType,e,this.usage),this._context.bindVAO(r)}setSubData(e,t=0,r=0,i=e.byteLength){if(!e)return;(t<0||t>=this._size)&&console.error("offset is out of range!");let n=t,o=r,s=i,a=e.byteLength;Object(ne.a)(e)&&(a/=2,n*=2,o*=2,s*=2),Object(ne.j)(e)&&(a/=4,n*=4,o*=4,s*=4),void 0===i&&(i=a-1),r>=i&&console.error("end must be bigger than start!"),t+r-i>this._size&&console.error("An attempt to write beyond the end of the buffer!");const c=this._context.getBoundVAO();this._context.bindVAO(null),this._context.bindBuffer(this);const l=this._context.gl,u=ArrayBuffer.isView(e)?e.buffer:e,d=0===o&&s===e.byteLength?u:u.slice(o,s);l.bufferSubData(this.bufferType,n,d),this._context.bindVAO(c)}}function ln(e,t,r,i,n){const o=e.gl,s=e.capabilities.instancing;e.bindBuffer(r);for(const e of i){const r=t[e.name],i=(n||(0+e.baseInstance?e.baseInstance:0))*e.stride;if(void 0===r&&console.error(`There is no location for vertex attribute '${e.name}' defined.`),e.baseInstance&&!e.divisor&&console.error(`Vertex attribute '${e.name}' uses baseInstanceOffset without divisor.`),e.count<=4)o.vertexAttribPointer(r,e.count,e.type,e.normalized,e.stride,e.offset+i),o.enableVertexAttribArray(r),e.divisor&&e.divisor>0&&s&&s.vertexAttribDivisor(r,e.divisor);else if(9===e.count)for(let t=0;t<3;t++)o.vertexAttribPointer(r+t,3,e.type,e.normalized,e.stride,e.offset+12*t+i),o.enableVertexAttribArray(r+t),e.divisor&&e.divisor>0&&s&&s.vertexAttribDivisor(r+t,e.divisor);else if(16===e.count)for(let t=0;t<4;t++)o.vertexAttribPointer(r+t,4,e.type,e.normalized,e.stride,e.offset+16*t+i),o.enableVertexAttribArray(r+t),e.divisor&&e.divisor>0&&s&&s.vertexAttribDivisor(r+t,e.divisor);else console.error("Unsupported vertex attribute element count: "+e.count)}}function un(e,t,r,i){const n=e.gl,o=e.capabilities.instancing;e.bindBuffer(r);for(const e of i){const r=t[e.name];if(e.count<=4)n.disableVertexAttribArray(r),e.divisor&&e.divisor>0&&o&&o.vertexAttribDivisor(r,0);else if(9===e.count)for(let t=0;t<3;t++)n.disableVertexAttribArray(r+t),e.divisor&&e.divisor>0&&o&&o.vertexAttribDivisor(r+t,0);else if(16===e.count)for(let t=0;t<4;t++)n.disableVertexAttribArray(r+t),e.divisor&&e.divisor>0&&o&&o.vertexAttribDivisor(r+t,0);else console.error("Unsupported vertex attribute element count: "+e.count)}e.unbindBuffer(34962)}function dn(e){switch(e){case 6406:case 6409:case 36168:return 1;case 6410:case 32854:case 33325:case 32854:case 33189:return 2;case 6407:case 6402:return 3;case 6408:case 34041:case 33326:case 35898:case 33327:case 34041:return 4;case 33328:case 34842:return 8;case 34836:return 16;case 33776:case 33777:return.5;case 33778:case 33779:return 1;case 37488:case 37489:case 37492:case 37493:case 37494:case 37495:return.5;case 37490:case 37491:case 37496:case 37497:return 1}return 0}class fn{constructor(e,t,r,i,n){this._context=e,this._locations=t,this._layout=r,this._buffers=i,this._indexBuffer=n,this._glName=null,this._initialized=!1,e.instanceCounter.increment(2,this)}get glName(){return this._glName}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get size(){return Object.keys(this._buffers).reduce((e,t)=>e+this._buffers[t].size,this._indexBuffer?this._indexBuffer.size:0)}get layout(){return this._layout}get locations(){return this._locations}dispose(e=!0){if(!this._context)return;const t=this._context.capabilities.vao;if(t&&this._glName&&(t.deleteVertexArray(this._glName),this._glName=null),this._context.getBoundVAO()===this&&this._context.bindVAO(null),e){for(const e in this._buffers)this._buffers[e].dispose(),delete this._buffers[e];this._indexBuffer=Object(i.f)(this._indexBuffer)}this._context.instanceCounter.decrement(2,this),this._context=null}initialize(){if(this._initialized)return;const e=this._context.capabilities.vao;if(e){const t=e.createVertexArray();e.bindVertexArray(t),this._bindLayout(),e.bindVertexArray(null),this._glName=t}this._initialized=!0}bind(){this.initialize();const e=this._context.capabilities.vao;e?e.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const e=this._buffers,t=!!this._context.capabilities.vao,r=this._layout,i=this._indexBuffer;e||console.error("Vertex buffer dictionary is empty!");const n=this._context.gl;for(const t in e){const i=e[t];i||console.error("Vertex buffer is uninitialized!");const n=r[t];n||console.error("Vertex element descriptor is empty!"),ln(this._context,this._locations,i,n)}i&&(t?n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,i.glName):this._context.bindBuffer(i))}unbind(){this.initialize();const e=this._context.capabilities.vao;e?e.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const e=this._buffers,t=this._layout;e||console.error("Vertex buffer dictionary is empty!");for(const r in e){const i=e[r];i||console.error("Vertex buffer is uninitialized!");const n=t[r];un(this._context,this._locations,i,n)}this._indexBuffer&&this._context.unbindBuffer(this._indexBuffer.bufferType)}}class hn{constructor(e,t,r,i){this.primitiveIndices=e,this._numIndexPerPrimitive=t,this.indices=r,this.position=i,this.center=Object(c.e)(),Cr(e.length>=1),Cr(r.length%this._numIndexPerPrimitive==0),Cr(r.length>=e.length*this._numIndexPerPrimitive),Cr(3===i.size||4===i.size);const{data:n,size:o}=i,s=e.length;let a=o*r[this._numIndexPerPrimitive*e[0]];mn.clear(),mn.push(a),this.bbMin=Object(c.g)(n[a],n[a+1],n[a+2]),this.bbMax=Object(c.c)(this.bbMin);for(let t=0;t<s;++t){const i=this._numIndexPerPrimitive*e[t];for(let e=0;e<this._numIndexPerPrimitive;++e){a=o*r[i+e],mn.push(a);let t=n[a];this.bbMin[0]=Math.min(t,this.bbMin[0]),this.bbMax[0]=Math.max(t,this.bbMax[0]),t=n[a+1],this.bbMin[1]=Math.min(t,this.bbMin[1]),this.bbMax[1]=Math.max(t,this.bbMax[1]),t=n[a+2],this.bbMin[2]=Math.min(t,this.bbMin[2]),this.bbMax[2]=Math.max(t,this.bbMax[2])}}Object(l.g)(this.center,this.bbMin,this.bbMax,.5),this.radius=.5*Math.max(Math.max(this.bbMax[0]-this.bbMin[0],this.bbMax[1]-this.bbMin[1]),this.bbMax[2]-this.bbMin[2]);let u=this.radius*this.radius;for(let e=0;e<mn.length;++e){a=mn.getItemAt(e);const t=n[a]-this.center[0],r=n[a+1]-this.center[1],i=n[a+2]-this.center[2],o=t*t+r*r+i*i;if(o<=u)continue;const s=Math.sqrt(o),c=.5*(s-this.radius);this.radius=this.radius+c,u=this.radius*this.radius;const l=c/s;this.center[0]+=t*l,this.center[1]+=r*l,this.center[2]+=i*l}mn.clear()}getCenter(){return this.center}getBSRadius(){return this.radius}getBBMin(){return this.bbMin}getBBMax(){return this.bbMax}getChildren(){if(this._children)return this._children;if(Object(l.i)(this.bbMin,this.bbMax)>1){const e=Object(l.g)(Object(c.e)(),this.bbMin,this.bbMax,.5),t=this.primitiveIndices.length,r=new Uint8Array(t),i=new Array(8);for(let e=0;e<8;++e)i[e]=0;const{data:n,size:o}=this.position;for(let s=0;s<t;++s){let t=0;const a=this._numIndexPerPrimitive*this.primitiveIndices[s];let c=o*this.indices[a],l=n[c],u=n[c+1],d=n[c+2];for(let e=1;e<this._numIndexPerPrimitive;++e){c=o*this.indices[a+e];const t=n[c],r=n[c+1],i=n[c+2];t<l&&(l=t),r<u&&(u=r),i<d&&(d=i)}l<e[0]&&(t|=1),u<e[1]&&(t|=2),d<e[2]&&(t|=4),r[s]=t,++i[t]}let s=0;for(let e=0;e<8;++e)i[e]>0&&++s;if(s<2)return;const a=new Array(8);for(let e=0;e<8;++e)a[e]=i[e]>0?new Uint32Array(i[e]):void 0;for(let e=0;e<8;++e)i[e]=0;for(let e=0;e<t;++e){const t=r[e];a[t][i[t]++]=this.primitiveIndices[e]}this._children=new Array(8);for(let e=0;e<8;++e)void 0!==a[e]&&(this._children[e]=new hn(a[e],this._numIndexPerPrimitive,this.indices,this.position))}return this._children}static prune(){mn.prune()}}const mn=new O.a({deallocator:null});class pn extends Br{constructor(e,t=[],r=0,i=-1){super(),this._primitiveType=r,this.edgeIndicesLength=i,this.type=2,this._vertexAttributes=new Map,this._indices=new Map,this._boundingInfo=null;for(const[t,r]of e)r&&this._vertexAttributes.set(t,{...r});if(null==t||0===t.length){const e=function(e){const t=e.values().next().value;return null==t?0:t.data.length/t.size}(this._vertexAttributes),t=ai(e);this.edgeIndicesLength=this.edgeIndicesLength<0?e:this.edgeIndicesLength;for(const e of this._vertexAttributes.keys())this._indices.set(e,t)}else for(const[e,r]of t)r&&(this._indices.set(e,gn(r)),"position"===e&&(this.edgeIndicesLength=this.edgeIndicesLength<0?this._indices.get(e).length:this.edgeIndicesLength))}get vertexAttributes(){return this._vertexAttributes}getMutableAttribute(e){const t=this._vertexAttributes.get(e);return t&&!t.exclusive&&(t.data=Array.from(t.data),t.exclusive=!0),t}get indices(){return this._indices}get indexCount(){const e=this._indices.values().next().value;return e?e.length:0}get primitiveType(){return this._primitiveType}get faceCount(){return this.indexCount/3}get boundingInfo(){return Object(i.c)(this._boundingInfo)&&(this._boundingInfo=this._calculateBoundingInfo()),this._boundingInfo}computeAttachmentOrigin(e){return 0===this.primitiveType?this.computeAttachmentOriginTriangles(e):this.computeAttachmentOriginPoints(e)}computeAttachmentOriginTriangles(e){const t=this.indices.get("position");return function(e,t,r){if(!e)return!1;const{size:i,data:n}=e;Object(l.b)(r,0,0,0),Object(l.b)(di,0,0,0);let o=0,s=0;for(let e=0;e<t.length-2;e+=3){const a=t[e+0]*i,c=t[e+1]*i,u=t[e+2]*i;Object(l.b)(ci,n[a+0],n[a+1],n[a+2]),Object(l.b)(li,n[c+0],n[c+1],n[c+2]),Object(l.b)(ui,n[u+0],n[u+1],n[u+2]);const d=Tr(ci,li,ui);d?(Object(l.f)(ci,ci,li),Object(l.f)(ci,ci,ui),Object(l.c)(ci,ci,1/3*d),Object(l.f)(r,r,ci),o+=d):(Object(l.f)(di,di,ci),Object(l.f)(di,di,li),Object(l.f)(di,di,ui),s+=3)}return!(0===s&&0===o||(0!==o?(Object(l.c)(r,r,1/o),0):0===s||(Object(l.c)(r,di,1/s),0)))}(this.vertexAttributes.get("position"),t,e)}computeAttachmentOriginPoints(e){const t=this.indices.get("position");return function(e,t,r){if(!e||!t)return!1;const{size:i,data:n}=e;Object(l.b)(r,0,0,0);let o=-1,s=0;for(let e=0;e<t.length;e++){const a=t[e]*i;o!==a&&(r[0]+=n[a+0],r[1]+=n[a+1],r[2]+=n[a+2],s++),o=a}return s>1&&Object(l.c)(r,r,1/s),s>0}(this.vertexAttributes.get("position"),t,e)}invalidateBoundingInfo(){this._boundingInfo=null}_calculateBoundingInfo(){const e=this.indices.get("position");if(0===e.length)return null;const t=0===this.primitiveType?3:1;Cr(e.length%t==0,"Indexing error: "+e.length+" not divisible by "+t);const r=ai(e.length/t),i=this.vertexAttributes.get("position");return new hn(r,t,e,i)}}function gn(e){if(e.BYTES_PER_ELEMENT===Uint16Array.BYTES_PER_ELEMENT)return e;for(const t of e)if(t>=65536)return e;return new Uint16Array(e)}const bn=[{name:"position",count:2,type:5126,offset:0,stride:8,normalized:!1}],vn=[{name:"position",count:2,type:5126,offset:0,stride:16,normalized:!1},{name:"uv0",count:2,type:5126,offset:8,stride:16,normalized:!1}];var xn=r(11),yn=r(171),_n=r(14),Tn=r(396),On=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],wn=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function Sn(e){return t=e,r=function(){var e,t,r,i=0,n=0,o=999,s=[],a=[],c=1,l=0,u=0,d=!1,f=!1,h="";return function(b){return a=[],null!==b?function(b){var x;for(i=0,r=(h+=b).length;e=h[i],i<r;){switch(x=i,o){case 0:i="/"===e&&"*"===t?(s.push(e),m(s.join("")),o=999,i+1):(s.push(e),t=e,i+1);break;case 1:case 2:i=p();break;case 3:i=g();break;case 4:i="."===e||/[eE]/.test(e)?(s.push(e),o=5,t=e,i+1):"x"===e&&1===s.length&&"0"===s[0]?(o=11,s.push(e),t=e,i+1):/[^\d]/.test(e)?(m(s.join("")),o=999,i):(s.push(e),t=e,i+1);break;case 11:i=/[^a-fA-F0-9]/.test(e)?(m(s.join("")),o=999,i):(s.push(e),t=e,i+1);break;case 5:"f"===e&&(s.push(e),t=e,i+=1),i=/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(s.push(e),t=e,i+1):/[^\d]/.test(e)?(m(s.join("")),o=999,i):(s.push(e),t=e,i+1);break;case 9999:i=v();break;case 9:i=/[^\s]/g.test(e)?(m(s.join("")),o=999,i):(s.push(e),t=e,i+1);break;case 999:s=s.length?[]:s,i="/"===t&&"*"===e?(u=n+i-1,o=0,t=e,i+1):"/"===t&&"/"===e?(u=n+i-1,o=1,t=e,i+1):"#"===e?(o=2,u=n+i,i):/\s/.test(e)?(o=9,u=n+i,i):(d=/\d/.test(e),f=/[^\w_]/.test(e),u=n+i,o=d?4:f?3:9999,i)}if(x!==i)switch(h[x]){case"\n":l=0,++c;break;default:++l}}return n+=i,h=h.slice(i),a}(b.replace?b.replace(/\r\n/g,"\n"):b):(s.length&&m(s.join("")),o=10,m("(eof)"),a)};function m(e){e.length&&a.push({type:wn[o],data:e,position:u,line:c,column:l})}function p(){return"\r"!==e&&"\n"!==e||"\\"===t?(s.push(e),t=e,i+1):(m(s.join("")),o=999,i)}function g(){if("."===t&&/\d/.test(e))return o=5,i;if("/"===t&&"*"===e)return o=0,i;if("/"===t&&"/"===e)return o=1,i;if("."===e&&s.length){for(;b(s););return o=5,i}if(";"===e||")"===e||"("===e){if(s.length)for(;b(s););return m(e),o=999,i+1}var r=2===s.length&&"="!==e;if(/[\w_\d\s]/.test(e)||r){for(;b(s););return o=999,i}return s.push(e),t=e,i+1}function b(e){for(var t,r,i=0;;){if(t=an.g.indexOf(e.slice(0,e.length+i).join("")),r=an.g[t],-1===t){if(i--+e.length>0)continue;r=e.slice(0,1).join("")}return m(r),u+=r.length,(s=s.slice(r.length)).length}}function v(){if(/[^\d\w_]/.test(e)){var r=s.join("");return o=an.f.indexOf(r)>-1?8:an.c.indexOf(r)>-1?7:6,m(s.join("")),o=999,i}return s.push(e),t=e,i+1}}(),[].concat(r(t)).concat(r(null));var t,r}const Mn=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function An(e,t){for(let r=t-1;r>=0;r--){const t=e[r];if("whitespace"!==t.type&&"block-comment"!==t.type){if("keyword"!==t.type)break;if("attribute"===t.data||"in"===t.data)return!0}}return!1}function Cn(e,t,r,i){i=i||r;for(const n of e)if("ident"===n.type&&n.data===r)return i in t?t[i]++:t[i]=0,Cn(e,t,i+"_"+t[i],i);return r}function En(e,t,r="afterVersion"){function i(e,t){for(let r=t;r<e.length;r++){const t=e[r];if("operator"===t.type&&";"===t.data)return r}return null}const n={data:"\n",type:"whitespace"},o=t=>t<e.length&&/[^\r\n]$/.test(e[t].data);let s=function(e){let t=-1,n=0,o=-1;for(let s=0;s<e.length;s++){const a=e[s];if("preprocessor"===a.type&&(a.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++n:a.data.match(/\#endif\s*.*/)&&--n),"afterVersion"!==r&&"afterPrecision"!==r||"preprocessor"===a.type&&/^#version/.test(a.data)&&(o=Math.max(o,s)),"afterPrecision"===r&&"keyword"===a.type&&"precision"===a.data){const t=i(e,s);if(null===t)throw new Error("precision statement not followed by any semicolons!");o=Math.max(o,t)}t<o&&0===n&&(t=s)}return t+1}(e);o(s-1)&&e.splice(s++,0,n);for(const r of t)e.splice(s++,0,r);o(s-1)&&o(s)&&e.splice(s,0,n)}function jn(e,t,r,i="lowp"){En(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function Pn(e,t,r,i,n="lowp"){En(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:i.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function Fn(e,t){let r,i,n=-1;for(let o=t;o<e.length;o++){const t=e[o];if("operator"===t.type&&("["===t.data&&(r=o),"]"===t.data)){i=o;break}"integer"===t.type&&(n=parseInt(t.data,10))}return r&&i&&e.splice(r,i-r+1),n}class Bn{constructor(e,t,r,i,n={}){if(this._context=null,this._glName=null,this._locations={},this._initialized=!1,this._vShader=null,this._fShader=null,this._defines={},this._nameToUniformLocation={},this._nameToAttribLocation={},this._nameToUniform1={},this._nameToUniform1v={},this._nameToUniform2={},this._nameToUniform3={},this._nameToUniform4={},this._nameToUniformMatrix3={},this._nameToUniformMatrix4={},e||console.error("RenderingContext isn't initialized!"),0===t.length&&console.error("Shaders source should not be empty!"),e.instanceCounter.increment(3,this),this._context=e,this._vertexShaderSource=t,this._fragmentShaderSource=r,Array.isArray(n))for(const e of n)this._defines[e]="1";else this._defines=n;this._locations=i}get glName(){return this._glName}get locations(){return this._locations}getDefine(e){return this._defines[e]}dispose(){if(!this._context)return;const e=this._context.gl;if(this._vShader){const t=this._vShader;e.deleteShader(t),this._vShader=null}if(this._fShader){const t=this._fShader;e.deleteShader(t),this._fShader=null}this._glName&&(e.deleteProgram(this._glName),this._glName=null),this._context.instanceCounter.decrement(3,this),this._context=null}initialize(){if(this._initialized)return;this._vShader=this._loadShader(35633),this._fShader=this._loadShader(35632),this._vShader&&this._fShader||console.error("Error loading shaders!");const e=this._context.gl,t=e.createProgram();e.attachShader(t,this._vShader),e.attachShader(t,this._fShader);for(const r in this._locations){const i=this._locations[r];e.bindAttribLocation(t,i,r)}e.linkProgram(t),this._glName=t,this._initialized=!0}getUniformLocation(e){return this.initialize(),void 0===this._nameToUniformLocation[e]&&(this._nameToUniformLocation[e]=this._context.gl.getUniformLocation(this._glName,e)),this._nameToUniformLocation[e]}hasUniform(e){return null!==this.getUniformLocation(e)}getAttribLocation(e){return this.initialize(),void 0===this._nameToAttribLocation[e]&&(this._nameToAttribLocation[e]=this._context.gl.getAttribLocation(this._glName,e)),this._nameToAttribLocation[e]}setUniform1i(e,t){const r=this._nameToUniform1[e];void 0!==r&&t===r||(this._context.bindProgram(this),this._context.gl.uniform1i(this.getUniformLocation(e),t),this._nameToUniform1[e]=t)}setUniform1iv(e,t){const r=this._nameToUniform1v[e];Rn(r,t)&&(this._context.bindProgram(this),this._context.gl.uniform1iv(this.getUniformLocation(e),t),void 0===r?this._nameToUniform1v[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,r))}setUniform2iv(e,t){const r=this._nameToUniform2[e];Rn(r,t)&&(this._context.bindProgram(this),this._context.gl.uniform2iv(this.getUniformLocation(e),t),void 0===r?this._nameToUniform2[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,r))}setUniform3iv(e,t){const r=this._nameToUniform3[e];Rn(r,t)&&(this._context.bindProgram(this),this._context.gl.uniform3iv(this.getUniformLocation(e),t),void 0===r?this._nameToUniform3[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,r))}setUniform4iv(e,t){const r=this._nameToUniform4[e];Rn(r,t)&&(this._context.bindProgram(this),this._context.gl.uniform4iv(this.getUniformLocation(e),t),void 0===r?this._nameToUniform4[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,r))}setUniform1f(e,t){const r=this._nameToUniform1[e];void 0!==r&&t===r||(this._context.bindProgram(this),this._context.gl.uniform1f(this.getUniformLocation(e),t),this._nameToUniform1[e]=t)}setUniform1fv(e,t){const r=this._nameToUniform1v[e];Rn(r,t)&&(this._context.bindProgram(this),this._context.gl.uniform1fv(this.getUniformLocation(e),t),void 0===r?this._nameToUniform1v[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,r))}setUniform2f(e,t,r){const i=this._nameToUniform2[e];void 0!==i&&t===i[0]&&r===i[1]||(this._context.bindProgram(this),this._context.gl.uniform2f(this.getUniformLocation(e),t,r),void 0===i?this._nameToUniform2[e]=[t,r]:(i[0]=t,i[1]=r))}setUniform2fv(e,t){const r=this._nameToUniform2[e];Rn(r,t)&&(this._context.bindProgram(this),this._context.gl.uniform2fv(this.getUniformLocation(e),t),void 0===r?this._nameToUniform2[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,r))}setUniform3f(e,t,r,i){const n=this._nameToUniform3[e];void 0!==n&&t===n[0]&&r===n[1]&&i===n[2]||(this._context.bindProgram(this),this._context.gl.uniform3f(this.getUniformLocation(e),t,r,i),void 0===n?this._nameToUniform3[e]=[t,r,i]:(n[0]=t,n[1]=r,n[2]=i))}setUniform3fv(e,t){const r=this._nameToUniform3[e];Rn(r,t)&&(this._context.bindProgram(this),this._context.gl.uniform3fv(this.getUniformLocation(e),t),void 0===r?this._nameToUniform3[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,r))}setUniform4f(e,t,r,i,n){const o=this._nameToUniform4[e];void 0!==o&&t===o[0]&&r===o[1]&&i===o[2]&&n===o[3]||(this._context.bindProgram(this),this._context.gl.uniform4f(this.getUniformLocation(e),t,r,i,n),void 0===o?this._nameToUniform4[e]=[t,r,i,n]:(o[0]=t,o[1]=r,o[2]=i,o[3]=n))}setUniform4fv(e,t){const r=this._nameToUniform4[e];Rn(r,t)&&(this._context.bindProgram(this),this._context.gl.uniform4fv(this.getUniformLocation(e),t),void 0===r?this._nameToUniform4[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,r))}setUniformMatrix3fv(e,t,r=!1){const n=this._nameToUniformMatrix3[e];(function(e,t){return!!Object(i.c)(e)||(9!==e.length?Rn(e,t):9!==e.length||e[0]!==t[0]||e[1]!==t[1]||e[2]!==t[2]||e[3]!==t[3]||e[4]!==t[4]||e[5]!==t[5]||e[6]!==t[6]||e[7]!==t[7]||e[8]!==t[8])})(n,t)&&(this._context.bindProgram(this),this._context.gl.uniformMatrix3fv(this.getUniformLocation(e),r,t),void 0===n?this._nameToUniformMatrix3[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,n))}setUniformMatrix4fv(e,t,r=!1){const n=this._nameToUniformMatrix4[e];(function(e,t){return!!Object(i.c)(e)||(16!==e.length?Rn(e,t):16!==e.length||e[0]!==t[0]||e[1]!==t[1]||e[2]!==t[2]||e[3]!==t[3]||e[4]!==t[4]||e[5]!==t[5]||e[6]!==t[6]||e[7]!==t[7]||e[8]!==t[8]||e[9]!==t[9]||e[10]!==t[10]||e[11]!==t[11]||e[12]!==t[12]||e[13]!==t[13]||e[14]!==t[14]||e[15]!==t[15])})(n,t)&&(this._context.bindProgram(this),this._context.gl.uniformMatrix4fv(this.getUniformLocation(e),r,t),void 0===n?this._nameToUniformMatrix4[e]=Bn._arrayCopy(t):Bn._arrayAssign(t,n))}assertCompatibleVertexAttributeLocations(e){const t=e.locations===this.locations;return t||console.error("VertexAttributeLocations are incompatible"),t}static _padToThree(e){let t=e.toString();return e<1e3&&(t=("  "+e).slice(-3)),t}_addLineNumbers(e){let t=2;return e.replace(/\n/g,()=>"\n"+Bn._padToThree(t++)+":")}_loadShader(e){const t=35633===e;let r=t?this._vertexShaderSource:this._fragmentShaderSource,i="";for(const e in this._defines)i+=`#define ${e} ${this._defines[e]}\n`;r=i+r,"webgl2"===this._context.contextVersion&&(r=function(e,t){const r=Sn(e);if("300 es"===function(e,t="100",r="300 es"){const i=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const n of e)if("preprocessor"===n.type){const e=i.exec(n.data);if(e){const i=e[1].replace(/\s\s+/g," ");if(i===r)return i;if(i===t)return n.data="#version "+r,t;throw new Error("unknown glsl version: "+i)}}return e.splice(0,0,{type:"preprocessor",data:"#version "+r},{type:"whitespace",data:"\n"}),null}(r,"100","300 es"))throw new Error("shader is already glsl 300 es");let i=null,n=null;const o={},s={};for(let e=0;e<r.length;++e){const a=r[e];switch(a.type){case"keyword":"vertex"===t&&"attribute"===a.data?a.data="in":"varying"===a.data&&(a.data="vertex"===t?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(a.data.trim())&&(a.data=a.data.replace(/(2D|Cube|EXT)/g,"")),"fragment"===t&&"gl_FragColor"===a.data&&(i||(i=Cn(r,o,"fragColor"),jn(r,i,"vec4")),a.data=i),"fragment"===t&&"gl_FragData"===a.data){const t=Fn(r,e+1),i=Cn(r,o,"fragData");Pn(r,i,"vec4",t,"mediump"),a.data=i}else"fragment"===t&&"gl_FragDepthEXT"===a.data&&(n||(n=Cn(r,o,"gl_FragDepth")),a.data=n);break;case"ident":if(On.indexOf(a.data)>=0){if("vertex"===t&&An(r,e))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");a.data in s||(s[a.data]=Cn(r,o,a.data)),a.data=s[a.data]}}}for(let e=r.length-1;e>=0;--e){const t=r[e];if("preprocessor"===t.type){const i=t.data.match(/\#extension\s+(.*)\:/);if(i&&i[1]&&Mn.indexOf(i[1].trim())>=0){const t=r[e+1];r.splice(e,t&&"whitespace"===t.type?2:1)}const n=t.data.match(/\#ifdef\s+(.*)/);n&&n[1]&&Mn.indexOf(n[1].trim())>=0&&(t.data="#if 1");const o=t.data.match(/\#ifndef\s+(.*)/);o&&o[1]&&Mn.indexOf(o[1].trim())>=0&&(t.data="#if 0")}}return function(e){return e.map(e=>"eof"!==e.type?e.data:"").join("")}(r)}(r,t?"vertex":"fragment"));const n=this._context.gl,o=n.createShader(e);return n.shaderSource(o,r),n.compileShader(o),o}static _arrayCopy(e){const t=[];for(let r=0;r<e.length;++r)t.push(e[r]);return t}static _arrayAssign(e,t){for(let r=0;r<e.length;++r)t[r]=e[r]}}function Rn(e,t){if(Object(i.c)(e)||e.length!==t.length)return!0;for(let r=0;r<e.length;++r)if(e[r]!==t[r])return!0;return!1}var Ln=r(428),Dn=r(397);const In=new class{constructor(e=0){this.offset=e,this.sphere=[0,0,0,0],this.tmpVertex=Object(c.e)()}applyToVertex(e,t,r){const i=this.objectTransform.transform;let n=i[0]*e+i[4]*t+i[8]*r+i[12],o=i[1]*e+i[5]*t+i[9]*r+i[13],s=i[2]*e+i[6]*t+i[10]*r+i[14];const a=this.offset/Math.sqrt(n*n+o*o+s*s);n+=n*a,o+=o*a,s+=s*a;const c=this.objectTransform.inverse;return this.tmpVertex[0]=c[0]*n+c[4]*o+c[8]*s+c[12],this.tmpVertex[1]=c[1]*n+c[5]*o+c[9]*s+c[13],this.tmpVertex[2]=c[2]*n+c[6]*o+c[10]*s+c[14],this.tmpVertex}applyToMinMax(e,t){const r=this.offset/Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]+=e[0]*r,e[1]+=e[1]*r,e[2]+=e[2]*r;const i=this.offset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]+=t[0]*i,t[1]+=t[1]*i,t[2]+=t[2]*i}applyToAabb(e){const t=this.offset/Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]+=e[0]*t,e[1]+=e[1]*t,e[2]+=e[2]*t;const r=this.offset/Math.sqrt(e[3]*e[3]+e[4]*e[4]+e[5]*e[5]);return e[3]+=e[3]*r,e[4]+=e[4]*r,e[5]+=e[5]*r,e}applyToBoundingSphere(e){const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]),r=this.offset/t;return this.sphere[0]=e[0]+e[0]*r,this.sphere[1]=e[1]+e[1]*r,this.sphere[2]=e[2]+e[2]*r,this.sphere[3]=e[3]+e[3]*this.offset/t,this.sphere}};new class{constructor(e=0){this.offset=e,this.componentLocalOriginLength=0,this.tmpVertex=Object(c.e)(),this.mbs=[0,0,0,0],this.obb={center:Object(c.e)(),halfSize:Object(Dn.a)(),quaternion:null}}set localOrigin(e){this.componentLocalOriginLength=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2])}applyToVertex(e,t,r){const i=e,n=t,o=r+this.componentLocalOriginLength,s=this.offset/Math.sqrt(i*i+n*n+o*o);return this.tmpVertex[0]=e+i*s,this.tmpVertex[1]=t+n*s,this.tmpVertex[2]=r+o*s,this.tmpVertex}applyToAabb(e){const t=e[0],r=e[1],i=e[2]+this.componentLocalOriginLength,n=e[3],o=e[4],s=e[5]+this.componentLocalOriginLength,a=this.offset/Math.sqrt(t*t+r*r+i*i);e[0]+=t*a,e[1]+=r*a,e[2]+=i*a;const c=this.offset/Math.sqrt(n*n+o*o+s*s);return e[3]+=n*c,e[4]+=o*c,e[5]+=s*c,e}applyToMbs(e){const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]),r=this.offset/t;return this.mbs[0]=e[0]+e[0]*r,this.mbs[1]=e[1]+e[1]*r,this.mbs[2]=e[2]+e[2]*r,this.mbs[3]=e[3]+e[3]*this.offset/t,this.mbs}applyToObb(e){const t=e.center,r=this.offset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);this.obb.center[0]=t[0]+t[0]*r,this.obb.center[1]=t[1]+t[1]*r,this.obb.center[2]=t[2]+t[2]*r,Object(l.t)(this.obb.halfSize,e.halfSize,e.quaternion),Object(l.f)(this.obb.halfSize,this.obb.halfSize,e.center);const i=this.offset/Math.sqrt(this.obb.halfSize[0]*this.obb.halfSize[0]+this.obb.halfSize[1]*this.obb.halfSize[1]+this.obb.halfSize[2]*this.obb.halfSize[2]);return this.obb.halfSize[0]+=this.obb.halfSize[0]*i,this.obb.halfSize[1]+=this.obb.halfSize[1]*i,this.obb.halfSize[2]+=this.obb.halfSize[2]*i,Object(l.q)(this.obb.halfSize,this.obb.halfSize,e.center),Object(Tn.a)(Nn,e.quaternion),Object(l.t)(this.obb.halfSize,this.obb.halfSize,Nn),this.obb.halfSize[0]*=this.obb.halfSize[0]<0?-1:1,this.obb.halfSize[1]*=this.obb.halfSize[1]<0?-1:1,this.obb.halfSize[2]*=this.obb.halfSize[2]<0?-1:1,this.obb.quaternion=e.quaternion,this.obb}};new class{constructor(e=0){this.offset=e,this.tmpVertex=Object(c.e)()}applyToVertex(e,t,r){const i=e+this.localOrigin[0],n=t+this.localOrigin[1],o=r+this.localOrigin[2],s=this.offset/Math.sqrt(i*i+n*n+o*o);return this.tmpVertex[0]=e+i*s,this.tmpVertex[1]=t+n*s,this.tmpVertex[2]=r+o*s,this.tmpVertex}applyToAabb(e){const t=e[0]+this.localOrigin[0],r=e[1]+this.localOrigin[1],i=e[2]+this.localOrigin[2],n=e[3]+this.localOrigin[0],o=e[4]+this.localOrigin[1],s=e[5]+this.localOrigin[2],a=this.offset/Math.sqrt(t*t+r*r+i*i);e[0]+=t*a,e[1]+=r*a,e[2]+=i*a;const c=this.offset/Math.sqrt(n*n+o*o+s*s);return e[3]+=n*c,e[4]+=o*c,e[5]+=s*c,e}};Object(c.e)(),Object(c.e)();const Nn=[0,0,0,1],zn=0,Un=1,Vn=2,Hn=3,kn=4;function qn(e,t){t.vvInstancingEnabled&&(t.vvSize||t.vvColor)&&e.attributes.add("instanceFeatureAttribute","vec4"),t.vvSize?(e.vertex.uniforms.add("vvSizeMinSize","vec3"),e.vertex.uniforms.add("vvSizeMaxSize","vec3"),e.vertex.uniforms.add("vvSizeOffset","vec3"),e.vertex.uniforms.add("vvSizeFactor","vec3"),e.vertex.uniforms.add("vvSymbolRotationMatrix","mat3"),e.vertex.uniforms.add("vvSymbolAnchor","vec3"),e.vertex.code.add(Nr`
      vec3 vvScale(vec4 _featureAttribute) {
        return clamp(vvSizeOffset + _featureAttribute.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize);
      }

      vec4 vvTransformPosition(vec3 position, vec4 _featureAttribute) {
        return vec4(vvSymbolRotationMatrix * ( vvScale(_featureAttribute) * (position + vvSymbolAnchor)), 1.0);
      }
    `),e.vertex.code.add(Nr`
      const float eps = 1.192092896e-07;
      vec4 vvTransformNormal(vec3 _normal, vec4 _featureAttribute) {
        vec3 vvScale = clamp(vvSizeOffset + _featureAttribute.x * vvSizeFactor, vvSizeMinSize + eps, vvSizeMaxSize);
        return vec4(vvSymbolRotationMatrix * _normal / vvScale, 1.0);
      }

      ${t.vvInstancingEnabled?Nr`
      vec4 vvLocalNormal(vec3 _normal) {
        return vvTransformNormal(_normal, instanceFeatureAttribute);
      }

      vec4 localPosition() {
        return vvTransformPosition(position, instanceFeatureAttribute);
      }`:""}
    `)):e.vertex.code.add(Nr`
      vec4 localPosition() { return vec4(position, 1.0); }

      vec4 vvLocalNormal(vec3 _normal) { return vec4(_normal, 1.0); }
    `),t.vvColor?(e.vertex.constants.add("vvColorNumber","int",8),e.vertex.code.add(Nr`
      uniform float vvColorValues[vvColorNumber];
      uniform vec4 vvColorColors[vvColorNumber];

      vec4 vvGetColor(vec4 featureAttribute, float values[vvColorNumber], vec4 colors[vvColorNumber]) {
        float value = featureAttribute.y;
        if (value <= values[0]) {
          return colors[0];
        }

        for (int i = 1; i < vvColorNumber; ++i) {
          if (values[i] >= value) {
            float f = (value - values[i-1]) / (values[i] - values[i-1]);
            return mix(colors[i-1], colors[i], f);
          }
        }
        return colors[vvColorNumber - 1];
      }

      ${t.vvInstancingEnabled?Nr`
      vec4 vvColor() {
        return vvGetColor(instanceFeatureAttribute, vvColorValues, vvColorColors);
      }`:""}
    `)):e.vertex.code.add(Nr`
      vec4 vvColor() { return vec4(1.0); }
    `)}function Gn(e){e.vertex.code.add(Nr`
    const float PI = 3.141592653589793;
  `),e.fragment.code.add(Nr`
    const float PI = 3.141592653589793;
    const float LIGHT_NORMALIZATION = 1.0 / PI;
    const float INV_PI = 0.3183098861837907;
    const float HALF_PI = 1.570796326794897;
    `)}!function(e){function t(e,t){t.vvSizeEnabled&&(e.setUniform3fv("vvSizeMinSize",t.vvSizeMinSize),e.setUniform3fv("vvSizeMaxSize",t.vvSizeMaxSize),e.setUniform3fv("vvSizeOffset",t.vvSizeOffset),e.setUniform3fv("vvSizeFactor",t.vvSizeFactor)),t.vvColorEnabled&&(e.setUniform1fv("vvColorValues",t.vvColorValues),e.setUniform4fv("vvColorColors",t.vvColorColors))}e.bindUniforms=t,e.bindUniformsWithOpacity=function(e,r){t(e,r),r.vvOpacityEnabled&&(e.setUniform1fv("vvOpacityValues",r.vvOpacityValues),e.setUniform1fv("vvOpacityOpacities",r.vvOpacityOpacities))},e.bindUniformsForSymbols=function(e,r){t(e,r),r.vvSizeEnabled&&(e.setUniform3fv("vvSymbolAnchor",r.vvSymbolAnchor),e.setUniformMatrix3fv("vvSymbolRotationMatrix",r.vvSymbolRotationMatrix))}}(qn||(qn={}));class $n extends xi{constructor(e){super(e),this._textureIDs=new Set,this._textureRepository=e.textureRep,this._textureId=e.textureId,this._initTransparent=!!e.initTextureTransparent,this._texture=this._acquireIfNotUndefined(this._textureId),this._textureNormal=this._acquireIfNotUndefined(e.normalTextureId),this._textureEmissive=this._acquireIfNotUndefined(e.emissiveTextureId),this._textureOcclusion=this._acquireIfNotUndefined(e.occlusionTextureId),this._textureMetallicRoughness=this._acquireIfNotUndefined(e.metallicRoughnessTextureId)}dispose(){this._textureIDs.forEach(e=>this._textureRepository.release(e)),this._textureIDs.clear()}updateTexture(e){e!==this._textureId&&(this._releaseIfNotUndefined(this._textureId),this._textureId=e,this._texture=this._acquireIfNotUndefined(this._textureId))}bindTexture(e,t){Object(i.h)(this._texture)&&(t.setUniform1i("tex",zn),e.bindTexture(this._texture.glTexture,zn)),Object(i.h)(this._textureNormal)&&(t.setUniform1i("normalTexture",Un),e.bindTexture(this._textureNormal.glTexture,Un)),Object(i.h)(this._textureEmissive)&&(t.setUniform1i("texEmission",Vn),e.bindTexture(this._textureEmissive.glTexture,Vn)),Object(i.h)(this._textureOcclusion)&&(t.setUniform1i("texOcclusion",Hn),e.bindTexture(this._textureOcclusion.glTexture,Hn)),Object(i.h)(this._textureMetallicRoughness)&&(t.setUniform1i("texMetallicRoughness",kn),e.bindTexture(this._textureMetallicRoughness.glTexture,kn))}bindTextureScale(e,t){const r=Object(i.h)(this._texture)&&this._texture.glTexture;r&&r.descriptor.textureCoordinateScaleFactor?t.setUniform2fv("textureCoordinateScaleFactor",r.descriptor.textureCoordinateScaleFactor):t.setUniform2f("textureCoordinateScaleFactor",1,1)}_acquireIfNotUndefined(e){if(!Object(i.c)(e))return this._textureIDs.add(e),this._textureRepository.acquire(e,this._initTransparent)}_releaseIfNotUndefined(e){Object(i.c)(e)||(this._textureIDs.delete(e),this._textureRepository.release(e))}}function Wn(e){e.vertex.code.add(Nr`
    float screenSizePerspectiveMinSize(float size, vec4 factor) {
      float nonZeroSize = 1.0 - step(size, 0.0);

      return (
        factor.z * (
          1.0 +
          // Multiply by nzs ensures if size is 0, then we ignore proportionally scaled padding
          nonZeroSize *
          2.0 * factor.w / (
            size + (1.0 - nonZeroSize) // Adding 1 - nzs ensures we divide either by size, or by 1
          )
        )
      );
    }
  `),e.vertex.code.add(Nr`
    float screenSizePerspectiveViewAngleDependentFactor(float absCosAngle) {
      return absCosAngle * absCosAngle * absCosAngle;
    }
  `),e.vertex.code.add(Nr`
    vec4 screenSizePerspectiveScaleFactor(float absCosAngle, float distanceToCamera, vec4 params) {
      return vec4(
        min(params.x / (distanceToCamera - params.y), 1.0),
        screenSizePerspectiveViewAngleDependentFactor(absCosAngle),
        params.z,
        params.w
      );
    }
  `),e.vertex.code.add(Nr`
    float applyScreenSizePerspectiveScaleFactorFloat(float size, vec4 factor) {
      return max(mix(size * factor.x, size, factor.y), screenSizePerspectiveMinSize(size, factor));
    }
  `),e.vertex.code.add(Nr`
    float screenSizePerspectiveScaleFloat(float size, float absCosAngle, float distanceToCamera, vec4 params) {
      return applyScreenSizePerspectiveScaleFactorFloat(
        size,
        screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params)
      );
    }
  `),e.vertex.code.add(Nr`
    vec2 applyScreenSizePerspectiveScaleFactorVec2(vec2 size, vec4 factor) {
      return mix(size * clamp(factor.x, screenSizePerspectiveMinSize(size.y, factor) / size.y, 1.0), size, factor.y);
    }
  `),e.vertex.code.add(Nr`
    vec2 screenSizePerspectiveScaleVec2(vec2 size, float absCosAngle, float distanceToCamera, vec4 params) {
      return applyScreenSizePerspectiveScaleFactorVec2(size, screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params));
    }
  `)}function Xn(e,t){const r=e.vertex.code;t.verticalOffsetEnabled?(e.vertex.uniforms.add("verticalOffset","vec4"),t.screenSizePerspectiveEnabled&&(e.include(Wn),e.vertex.uniforms.add("screenSizePerspectiveAlignment","vec4")),r.add(Nr`
    vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {
      float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);
      ${1===t.viewingMode?Nr`vec3 worldNormal = normalize(worldPos + localOrigin);`:Nr`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}
      ${t.screenSizePerspectiveEnabled?Nr`
          float cosAngle = dot(worldNormal, normalize(worldPos - camPos));
          float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);`:Nr`
          float verticalOffsetScreenHeight = verticalOffset.x;`}
      // Screen sized offset in world space, used for example for line callouts
      float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);
      return worldNormal * worldOffset;
    }

    vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {
      return worldPos + calculateVerticalOffset(worldPos, localOrigin);
    }
    `)):r.add(Nr`
    vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }
    `)}!function(e){e.bindUniforms=function(e,t){if(t.screenSizePerspective){Ci(t.screenSizePerspective,e,"screenSizePerspective");Ci(t.screenSizePerspectiveAlignment||t.screenSizePerspective,e,"screenSizePerspectiveAlignment")}}}(Wn||(Wn={})),function(e){e.bindUniforms=function(e,t,r){if(!t.verticalOffset)return;const i=function(e,t,r,i=Yn){return i.screenLength=e.screenLength,i.perDistance=Math.tan(.5*t)/(.5*r),i.minWorldLength=e.minWorldLength,i.maxWorldLength=e.maxWorldLength,i}(t.verticalOffset,r.camera.fovY,r.camera.fullViewport[3]),n=r.camera.pixelRatio||1;e.setUniform4f("verticalOffset",i.screenLength*n,i.perDistance,i.minWorldLength,i.maxWorldLength)}}(Xn||(Xn={}));const Yn={screenLength:0,perDistance:0,minWorldLength:0,maxWorldLength:0};function Kn(e){e.fragment.include(Vi),e.fragment.uniforms.add("uShadowMapTex","sampler2D"),e.fragment.uniforms.add("uShadowMapNum","int"),e.fragment.uniforms.add("uShadowMapDistance","vec4"),e.fragment.uniforms.add("uShadowMapMatrix","mat4",4),e.fragment.uniforms.add("uDepthHalfPixelSz","float"),e.fragment.code.add(Nr`
    int chooseCascade(float _linearDepth, out mat4 mat) {
      vec4 distance = uShadowMapDistance;
      float depth = _linearDepth;

      //choose correct cascade
      int i = depth < distance[1] ? 0 : depth < distance[2] ? 1 : depth < distance[3] ? 2 : 3;

      mat = i == 0 ? uShadowMapMatrix[0] : i == 1 ? uShadowMapMatrix[1] : i == 2 ? uShadowMapMatrix[2] : uShadowMapMatrix[3];

      return i;
    }

    vec3 lightSpacePosition(vec3 _vpos, mat4 mat) {
      vec4 lv = mat * vec4(_vpos, 1.0);
      lv.xy /= lv.w;
      return 0.5 * lv.xyz + vec3(0.5);
    }

    vec2 cascadeCoordinates(int i, vec3 lvpos) {
      return vec2(float(i - 2 * (i / 2)) * 0.5, float(i / 2) * 0.5) + 0.5 * lvpos.xy;
    }

    float readShadowMapDepth(vec2 uv, sampler2D _depthTex) {
      return rgba2float(texture2D(_depthTex, uv));
    }

    float posIsInShadow(vec2 uv, vec3 lvpos, sampler2D _depthTex) {
      return readShadowMapDepth(uv, _depthTex) < lvpos.z ? 1.0 : 0.0;
    }

    float filterShadow(vec2 uv, vec3 lvpos, float halfPixelSize, sampler2D _depthTex) {
      float texSize = 0.5 / halfPixelSize;

      // filter, offset by half pixels
      vec2 st = fract((vec2(halfPixelSize) + uv) * texSize);

      float s00 = posIsInShadow(uv + vec2(-halfPixelSize, -halfPixelSize), lvpos, _depthTex);
      float s10 = posIsInShadow(uv + vec2(halfPixelSize, -halfPixelSize), lvpos, _depthTex);
      float s11 = posIsInShadow(uv + vec2(halfPixelSize, halfPixelSize), lvpos, _depthTex);
      float s01 = posIsInShadow(uv + vec2(-halfPixelSize, halfPixelSize), lvpos, _depthTex);

      return mix(mix(s00, s10, st.x), mix(s01, s11, st.x), st.y);
    }

    float readShadowMap(const in vec3 _vpos, float _linearDepth) {
      mat4 mat;
      int i = chooseCascade(_linearDepth, mat);

      if (i >= uShadowMapNum) { return 0.0; }

      vec3 lvpos = lightSpacePosition(_vpos, mat);

      // vertex completely outside? -> no shadow
      if (lvpos.z >= 1.0) { return 0.0; }
      if (lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) { return 0.0; }

      // calc coord in cascade texture
      vec2 uv = cascadeCoordinates(i, lvpos);

      return filterShadow(uv, lvpos, uDepthHalfPixelSz, uShadowMapTex);
    }
  `)}function Qn(e,t){0===t.output&&t.receiveShadows?(e.varyings.add("linearDepth","float"),e.vertex.code.add(Nr`
      void forwardLinearDepth() { linearDepth = gl_Position.w; }
    `)):1===t.output||3===t.output?(e.varyings.add("linearDepth","float"),e.vertex.uniforms.add("cameraNearFar","vec2"),e.vertex.code.add(Nr`
      void forwardLinearDepth() {
        linearDepth = (-position_view().z - cameraNearFar[0]) / (cameraNearFar[1] - cameraNearFar[0]);
      }
    `)):e.vertex.code.add(Nr`
      void forwardLinearDepth() {}
    `)}function Jn(e){const t=e.fragment.code;t.add(Nr`
    vec3 evaluateDiffuseIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float NdotNG)
    {
      return ((1.0 - NdotNG) * ambientGround + (1.0 + NdotNG) * ambientSky) * 0.5;
    }
    `),t.add(Nr`
    float integratedRadiance(float cosTheta2, float roughness)
    {
      return (cosTheta2 - 1.0) / (cosTheta2 * (1.0 - roughness * roughness) - 1.0);
    }
    `),t.add(Nr`
    vec3 evaluateSpecularIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float RdotNG, float roughness)
    {
      float cosTheta2 = 1.0 - RdotNG * RdotNG;
      float intRadTheta = integratedRadiance(cosTheta2, roughness);

      // Calculate the integrated directional radiance of the ground and the sky
      float ground = RdotNG < 0.0 ? 1.0 - intRadTheta : 1.0 + intRadTheta;
      float sky = 2.0 - ground;
      return (ground * ambientGround + sky * ambientSky) * 0.5;
    }
    `)}function Zn(e,t){const r=e.fragment.code;e.include(Gn),3===t.pbrMode||4===t.pbrMode?(r.add(Nr`
    struct PBRShadingWater
    {
        float NdotL;   // cos angle between normal and light direction
        float NdotV;   // cos angle between normal and view direction
        float NdotH;   // cos angle between normal and half vector
        float VdotH;   // cos angle between view direction and half vector
        float LdotH;   // cos angle between light direction and half vector
        float VdotN;   // cos angle between view direction and normal vector
    };

    float dtrExponent = ${t.useCustomDTRExponentForWater?"2.2":"2.0"};
    `),r.add(Nr`
    vec3 fresnelReflection(float angle, vec3 f0, float f90) {
      return f0 + (f90 - f0) * pow(1.0 - angle, 5.0);
    }
    `),r.add(Nr`
    float normalDistributionWater(float NdotH, float roughness)
    {
      float r2 = roughness * roughness;
      float NdotH2 = NdotH * NdotH;
      float denom = pow((NdotH2 * (r2 - 1.0) + 1.0), dtrExponent) * PI;
      return r2 / denom;
    }
    `),r.add(Nr`
    float geometricOcclusionKelemen(float LoH)
    {
        return 0.25 / (LoH * LoH);
    }
    `),r.add(Nr`
    vec3 brdfSpecularWater(in PBRShadingWater props, float roughness, vec3 F0, float F0Max)
    {
      vec3  F = fresnelReflection(props.VdotH, F0, F0Max);
      float dSun = normalDistributionWater(props.NdotH, roughness);
      float V = geometricOcclusionKelemen(props.LdotH);

      float diffusionSunHaze = mix(roughness + 0.045, roughness + 0.385, 1.0 - props.VdotH);
      float strengthSunHaze  = 1.2;
      float dSunHaze = normalDistributionWater(props.NdotH, diffusionSunHaze)*strengthSunHaze;

      return ((dSun + dSunHaze) * V) * F;
    }

    vec3 tonemapACES(const vec3 x) {
      return (x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14);
    }
    `)):1!==t.pbrMode&&2!==t.pbrMode||(e.include(Jn),r.add(Nr`
    struct PBRShadingInfo
    {
        float NdotL;                  // cos angle between normal and light direction
        float NdotV;                  // cos angle between normal and view direction
        float NdotH;                  // cos angle between normal and half vector
        float VdotH;                  // cos angle between view direction and half vector
        float LdotH;                  // cos angle between view light direction and half vector
        float NdotNG;                 // cos angle between normal and normal of the ground
        float RdotNG;                 // cos angle between view direction reflected of the normal and normal of the ground
        float NdotAmbDir;             // cos angle between view direction and the fill light in ambient illumination
        float NdotH_Horizon;          // cos angle between normal and half vector defined with horizon illumination
        vec3 skyRadianceToSurface;         // integrated radiance of the sky based on the surface roughness (used for specular reflection)
        vec3 groundRadianceToSurface;      // integrated radiance of the ground based on the surface roughness (used for specular reflection)
        vec3 skyIrradianceToSurface;       // irradiance of the sky (used for diffuse reflection)
        vec3 groundIrradianceToSurface;    // irradiance of the ground (used for diffuse reflection)

        float averageAmbientRadiance;      // average ambient radiance used to deduce black level in gamut mapping
        float ssao;                   // ssao coefficient
        vec3 albedoLinear;            // linear color of the albedo
        vec3 f0;                      // fresnel value at normal incident light
        vec3 f90;                     // fresnel value at 90o of incident light

        vec3 diffuseColor;            // diffuse color of the material used in environment illumination
        float metalness;              // metalness of the material
        float roughness;              // roughness of the material
    };
    `),r.add(Nr`
    float normalDistribution(float NdotH, float roughness)
    {
        float a = NdotH * roughness;
        float b = roughness / (1.0 - NdotH * NdotH + a * a);
        return b * b * INV_PI;
    }
    `),r.add(Nr`
    const vec4 c0 = vec4(-1.0, -0.0275, -0.572,  0.022);
    const vec4 c1 = vec4( 1.0,  0.0425,  1.040, -0.040);
    const vec2 c2 = vec2(-1.04, 1.04);

    vec2 prefilteredDFGAnalytical(float roughness, float NdotV) {
        vec4 r = roughness * c0 + c1;
        float a004 = min(r.x * r.x, exp2(-9.28 * NdotV)) * r.x + r.y;
        return c2 * a004 + r.zw;
    }
    `),r.add(Nr`
    vec3 evaluateEnvironmentIllumination(PBRShadingInfo inputs) {
      vec3 indirectDiffuse = evaluateDiffuseIlluminationHemisphere(inputs.groundIrradianceToSurface, inputs.skyIrradianceToSurface, inputs.NdotNG);
      vec3 indirectSpecular = evaluateSpecularIlluminationHemisphere(inputs.groundRadianceToSurface, inputs.skyRadianceToSurface, inputs.RdotNG, inputs.roughness);

      // From diffuse illumination calculate reflected color
      vec3 diffuseComponent = inputs.diffuseColor * indirectDiffuse * INV_PI;

      // From specular illumination calculate reflected color
      vec2 dfg = prefilteredDFGAnalytical(inputs.roughness, inputs.NdotV);
      vec3 specularColor = inputs.f0 * dfg.x + inputs.f90 * dfg.y;
      vec3 specularComponent = specularColor * indirectSpecular;

      return (diffuseComponent + specularComponent);
    }
    `),r.add(Nr`
    float gamutMapChanel(float x, vec2 p){
      return (x < p.x) ? mix(0.0, p.y, x/p.x) : mix(p.y, 1.0, (x - p.x) / (1.0 - p.x) );
    }`),r.add(Nr`
    vec3 blackLevelSoftCompression(vec3 inColor, PBRShadingInfo inputs){
      vec3 outColor;
      vec2 p = vec2(0.02 * (inputs.averageAmbientRadiance), 0.0075 * (inputs.averageAmbientRadiance));
      outColor.x = gamutMapChanel(inColor.x, p) ;
      outColor.y = gamutMapChanel(inColor.y, p) ;
      outColor.z = gamutMapChanel(inColor.z, p) ;
      return outColor;
    }
    `))}!function(e){e.bindUniforms=function(e,t,r){t.shadowMappingEnabled&&(t.shadowMap.bind(e,r),t.shadowMap.bindView(e,t.origin))},e.bindViewCustomOrigin=function(e,t,r){t.shadowMappingEnabled&&t.shadowMap.bindView(e,r)},e.bindView=function(e,t){t.shadowMappingEnabled&&t.shadowMap.bindView(e,t.origin)}}(Kn||(Kn={}));class eo{constructor(e){this.context=e,this.svgAlwaysPremultipliesAlpha=!1,this._doublePrecisionRequiresObfuscation=null,async function(e){const t=new Image;if(t.src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='5' height='5' version='1.1' viewBox='0 0 5 5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='5' height='5' fill='%23f00' fill-opacity='.5'/%3E%3C/svg%3E%0A",t.width=5,t.height=5,await t.decode(),!e.gl)return!0;const r=new an.a(e,{colorTarget:0,depthStencilTarget:0},{target:3553,wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1}),i=cn.createVertex(e,35044,new Uint16Array([0,0,1,0,0,1,1,1])),n=new fn(e,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5123,offset:0,stride:4,normalized:!1}]},{geometry:i}),o=new Bn(e,"\n  precision highp float;\n\n  attribute vec2 a_pos;\n  varying vec2 v_uv;\n\n  void main() {\n    v_uv = a_pos;\n    gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n  }\n  ","\n  precision highp float;\n\n  varying vec2 v_uv;\n  uniform sampler2D u_texture;\n\n  void main() {\n    gl_FragColor = texture2D(u_texture, v_uv);\n  }\n  ",{a_pos:0});e.bindProgram(o);const s=new an.b(e,{dataType:5121,pixelFormat:6408,preMultiplyAlpha:!1,wrapMode:33071,samplingMode:9729},t);e.bindTexture(s,0),o.setUniform1i("u_texture",0);const a=e.getBoundFramebufferObject(),{x:c,y:l,width:u,height:d}=e.getViewport();e.bindFramebuffer(r),e.setViewport(0,0,1,1),e.bindVAO(n),e.drawArrays(5,0,4);const f=new Uint8Array(4);return r.readPixels(0,0,1,1,6408,5121,f),o.dispose(),n.dispose(!1),i.dispose(),r.dispose(),s.dispose(),e.setViewport(c,l,u,d),e.bindFramebuffer(a),t.src="",255===f[0]}(e).then(e=>{this.svgAlwaysPremultipliesAlpha=!e})}get doublePrecisionRequiresObfuscation(){if(Object(i.c)(this._doublePrecisionRequiresObfuscation)){const e=ro(this.context,!1),t=ro(this.context,!0);this._doublePrecisionRequiresObfuscation=0!==e&&(0===t||e/t>5)}return this._doublePrecisionRequiresObfuscation}}let to=null;function ro(e,t){const r=new an.a(e,{colorTarget:0,depthStencilTarget:0},{target:3553,wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1}),i=cn.createVertex(e,35044,new Uint16Array([0,0,1,0,0,1,1,1])),n=new fn(e,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5123,offset:0,stride:4,normalized:!1}]},{geometry:i}),o=Object(c.g)(5633261.287538229,2626832.878767164,1434988.0495278358),s=Object(c.g)(5633271.46742708,2626873.6381334523,1434963.231608387),a=function(r,i){const n=new Bn(e,`\n\n  precision highp float;\n\n  attribute vec2 a_pos;\n\n  uniform vec3 u_highA;\n  uniform vec3 u_lowA;\n  uniform vec3 u_highB;\n  uniform vec3 u_lowB;\n\n  varying vec4 v_color;\n\n  ${t?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}\n\n  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION\n\n  vec3 dpPlusFrc(vec3 a, vec3 b) {\n    return mix(a, a + b, vec3(notEqual(b, vec3(0))));\n  }\n\n  vec3 dpMinusFrc(vec3 a, vec3 b) {\n    return mix(vec3(0), a - b, vec3(notEqual(a, b)));\n  }\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = dpPlusFrc(hiA, hiB);\n    vec3 e = dpMinusFrc(t1, hiA);\n    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\n    return t1 + t2;\n  }\n\n  #else\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = hiA + hiB;\n    vec3 e = t1 - hiA;\n    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\n    return t1 + t2;\n  }\n\n  #endif\n\n  const float MAX_RGBA_FLOAT =\n    255.0 / 256.0 +\n    255.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 / 256.0;\n\n  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\n\n  vec4 float2rgba(const float value) {\n    // Make sure value is in the domain we can represent\n    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\n\n    // Decompose value in 32bit fixed point parts represented as\n    // uint8 rgba components. Decomposition uses the fractional part after multiplying\n    // by a power of 256 (this removes the bits that are represented in the previous\n    // component) and then converts the fractional part to 8bits.\n    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\n\n    // Convert uint8 values (from 0 to 255) to floating point representation for\n    // the shader\n    const float toU8AsFloat = 1.0 / 255.0;\n\n    return fixedPointU8 * toU8AsFloat;\n  }\n\n  void main() {\n    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);\n\n    v_color = float2rgba(val.z / 25.0);\n\n    gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n  }\n  `,"\n  precision highp float;\n\n  varying vec4 v_color;\n\n  void main() {\n    gl_FragColor = v_color;\n  }\n  ",{a_pos:0}),o=new Float32Array(6);Lr(r,o,3);const s=new Float32Array(6);return Lr(i,s,3),e.bindProgram(n),n.setUniform3f("u_highA",o[0],o[2],o[4]),n.setUniform3f("u_lowA",o[1],o[3],o[5]),n.setUniform3f("u_highB",s[0],s[2],s[4]),n.setUniform3f("u_lowB",s[1],s[3],s[5]),n}(o,s),l=e.getBoundFramebufferObject(),{x:u,y:d,width:f,height:h}=e.getViewport();e.bindFramebuffer(r),e.setViewport(0,0,1,1),e.bindVAO(n),e.drawArrays(5,0,4);const m=new Uint8Array(4);r.readPixels(0,0,1,1,6408,5121,m),a.dispose(),n.dispose(!1),i.dispose(),r.dispose(),e.setViewport(u,d,f,h),e.bindFramebuffer(l);const p=(o[2]-s[2])/25,g=Er(m);return Math.abs(p-g)}function io({code:e},t){t.doublePrecisionRequiresObfuscation?e.add(Nr`
      vec3 dpPlusFrc(vec3 a, vec3 b) {
        return mix(a, a + b, vec3(notEqual(b, vec3(0))));
      }

      vec3 dpMinusFrc(vec3 a, vec3 b) {
        return mix(vec3(0), a - b, vec3(notEqual(a, b)));
      }

      // based on https://www.thasler.com/blog/blog/glsl-part2-emu
      vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
        vec3 t1 = dpPlusFrc(hiA, hiB);
        vec3 e = dpMinusFrc(t1, hiA);
        vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;
        return t1 + t2;
      }
    `):e.add(Nr`
      vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
        vec3 t1 = hiA + hiB;
        vec3 e = t1 - hiA;
        vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;
        return t1 + t2;
      }
    `)}function no(e){return!!Object(ne.i)("force-double-precision-obfuscation")||function(e){return(Object(i.c)(to)||to.context!==e)&&(to=new eo(e)),to}(e).doublePrecisionRequiresObfuscation}function oo(e,t){t.instanced&&t.instancedDoublePrecision&&(e.attributes.add("modelOriginHi","vec3"),e.attributes.add("modelOriginLo","vec3"),e.attributes.add("model","mat3"),e.attributes.add("modelNormal","mat3")),t.instancedDoublePrecision&&(e.vertex.include(io,t),e.vertex.uniforms.add("viewOriginHi","vec3"),e.vertex.uniforms.add("viewOriginLo","vec3"));const r=[Nr`
    vec3 calculateVPos() {
      ${t.instancedDoublePrecision?"return model * localPosition().xyz;":"return localPosition().xyz;"}
    }
    `,Nr`
    vec3 subtractOrigin(vec3 _pos) {
      ${t.instancedDoublePrecision?Nr`
          vec3 originDelta = dpAdd(viewOriginHi, viewOriginLo, -modelOriginHi, -modelOriginLo);
          return _pos - originDelta;`:"return vpos;"}
    }
    `,Nr`
    vec3 dpNormal(vec4 _normal) {
      ${t.instancedDoublePrecision?"return normalize(modelNormal * _normal.xyz);":"return normalize(_normal.xyz);"}
    }
    `,Nr`
    vec3 dpNormalView(vec4 _normal) {
      ${t.instancedDoublePrecision?"return normalize((viewNormal * vec4(modelNormal * _normal.xyz, 1.0)).xyz);":"return normalize((viewNormal * _normal).xyz);"}
    }
    `,t.vertexTangets?Nr`
    vec4 dpTransformVertexTangent(vec4 _tangent) {
      ${t.instancedDoublePrecision?"return vec4(modelNormal * _tangent.xyz, _tangent.w);":"return _tangent;"}

    }
    `:Nr``];e.vertex.code.add(r[0]),e.vertex.code.add(r[1]),e.vertex.code.add(r[2]),2===t.output&&e.vertex.code.add(r[3]),e.vertex.code.add(r[4])}!function(e){e.Uniforms=class{},e.bindCustomOrigin=function(e,t){(function(e,t,r,i){for(let n=0;n<i;++n)Dr[0]=e[n],Lr(Dr,Ir,1),t[n]=Ir[0],r[n]=Ir[1]})(t,so,ao,3),e.setUniform3fv("viewOriginHi",so),e.setUniform3fv("viewOriginLo",ao)}}(oo||(oo={}));const so=Object(c.e)(),ao=Object(c.e)();function co(e,t){1===t.attributeTextureCoordinates&&(e.attributes.add("uv0","vec2"),e.varyings.add("vuv0","vec2"),e.vertex.code.add(Nr`
      void forwardTextureCoordinates() {
        vuv0 = uv0;
      }
    `)),2===t.attributeTextureCoordinates&&(e.attributes.add("uv0","vec2"),e.varyings.add("vuv0","vec2"),e.attributes.add("uvRegion","vec4"),e.varyings.add("vuvRegion","vec4"),e.vertex.code.add(Nr`
      void forwardTextureCoordinates() {
        vuv0 = uv0;
        vuvRegion = uvRegion;
      }
    `)),0===t.attributeTextureCoordinates&&e.vertex.code.add(Nr`
      void forwardTextureCoordinates() {}
    `)}function lo(e){e.extensions.add("GL_EXT_shader_texture_lod"),e.extensions.add("GL_OES_standard_derivatives"),e.fragment.code.add(Nr`
    #ifndef GL_EXT_shader_texture_lod
      float calcMipMapLevel(const vec2 ddx, const vec2 ddy) {
        float deltaMaxSqr = max(dot(ddx, ddx), dot(ddy, ddy));
        return max(0.0, 0.5 * log2(deltaMaxSqr));
      }
    #endif

    vec4 textureAtlasLookup(sampler2D texture, vec2 textureSize, vec2 textureCoordinates, vec4 atlasRegion) {
      //[umin, vmin, umax, vmax]
      vec2 atlasScale = atlasRegion.zw - atlasRegion.xy;
      vec2 uvAtlas = fract(textureCoordinates) * atlasScale + atlasRegion.xy;

      // calculate derivative of continuous texture coordinate
      // to avoid mipmapping artifacts caused by manual wrapping in shader
      // clamp the derivatives to avoid discoloring when zooming out.
      float maxdUV = 0.125; // Emprirically tuned compromise between discoloring and aliasing noise.
      vec2 dUVdx = clamp(dFdx(textureCoordinates), -maxdUV, maxdUV) * atlasScale;
      vec2 dUVdy = clamp(dFdy(textureCoordinates), -maxdUV, maxdUV) * atlasScale;

      #ifdef GL_EXT_shader_texture_lod
        return texture2DGradEXT(texture, uvAtlas, dUVdx, dUVdy);
      #else
        // use bias to compensate for difference in automatic vs desired mipmap level
        vec2 dUVdxAuto = dFdx(uvAtlas);
        vec2 dUVdyAuto = dFdy(uvAtlas);
        float mipMapLevel = calcMipMapLevel(dUVdx * textureSize, dUVdy * textureSize);
        float autoMipMapLevel = calcMipMapLevel(dUVdxAuto * textureSize, dUVdyAuto * textureSize);

        return texture2D(texture, uvAtlas, mipMapLevel - autoMipMapLevel);
      #endif
    }
  `)}function uo(e,t){e.include(co,t),e.fragment.code.add(Nr`
  struct TextureLookupParameter {
    vec2 uv;
    ${t.supportsTextureAtlas?"vec2 size;":""}
  } vtc;
  `),1===t.attributeTextureCoordinates&&e.fragment.code.add(Nr`
      vec4 textureLookup(sampler2D tex, TextureLookupParameter params) {
        return texture2D(tex, params.uv);
      }
    `),2===t.attributeTextureCoordinates&&(e.include(lo),e.fragment.code.add(Nr`
    vec4 textureLookup(sampler2D tex, TextureLookupParameter params) {
        return textureAtlasLookup(tex, params.size, params.uv, vuvRegion);
      }
    `))}Object(Dn.b)(0,.6,.2);function fo(e,t){const r=e.fragment,i=t.hasMetalnessAndRoughnessTexture||t.hasEmissionTexture||t.hasOcclusionTexture;1===t.pbrMode&&i&&e.include(uo,t),2!==t.pbrMode?(0===t.pbrMode&&r.code.add(Nr`
      float getBakedOcclusion() { return 1.0; }
  `),1===t.pbrMode&&(r.uniforms.add("emissionFactor","vec3"),r.uniforms.add("mrrFactors","vec3"),r.code.add(Nr`
      vec3 mrr;
      vec3 emission;
      float occlusion;
    `),t.hasMetalnessAndRoughnessTexture&&(r.uniforms.add("texMetallicRoughness","sampler2D"),t.supportsTextureAtlas&&r.uniforms.add("texMetallicRoughnessSize","vec2"),r.code.add(Nr`
      void applyMetallnessAndRoughness(TextureLookupParameter params) {
        vec3 metallicRoughness = textureLookup(texMetallicRoughness, params).rgb;

        mrr[0] *= metallicRoughness.b;
        mrr[1] *= metallicRoughness.g;
      }`)),t.hasEmissionTexture&&(r.uniforms.add("texEmission","sampler2D"),t.supportsTextureAtlas&&r.uniforms.add("texEmissionSize","vec2"),r.code.add(Nr`
      void applyEmission(TextureLookupParameter params) {
        emission *= textureLookup(texEmission, params).rgb;
      }`)),t.hasOcclusionTexture?(r.uniforms.add("texOcclusion","sampler2D"),t.supportsTextureAtlas&&r.uniforms.add("texOcclusionSize","vec2"),r.code.add(Nr`
      void applyOcclusion(TextureLookupParameter params) {
        occlusion *= textureLookup(texOcclusion, params).r;
      }

      float getBakedOcclusion() {
        return occlusion;
      }
      `)):r.code.add(Nr`
      float getBakedOcclusion() { return 1.0; }
      `),r.code.add(Nr`
    void applyPBRFactors() {
      mrr = mrrFactors;
      emission = emissionFactor;
      occlusion = 1.0;
      ${i?"vtc.uv = vuv0;":""}
      ${t.hasMetalnessAndRoughnessTexture?t.supportsTextureAtlas?"vtc.size = texMetallicRoughnessSize; applyMetallnessAndRoughness(vtc);":"applyMetallnessAndRoughness(vtc);":""}
      ${t.hasEmissionTexture?t.supportsTextureAtlas?"vtc.size = texEmissionSize; applyEmission(vtc);":"applyEmission(vtc);":""}
      ${t.hasOcclusionTexture?t.supportsTextureAtlas?"vtc.size = texOcclusionSize; applyOcclusion(vtc);":"applyOcclusion(vtc);":""}
    }
  `))):r.code.add(Nr`
      const vec3 mrr = vec3(0.0, 0.6, 0.2);
      const vec3 emission = vec3(0.0);
      float occlusion = 1.0;

      void applyPBRFactors() {}

      float getBakedOcclusion() { return 1.0; }
    `)}function ho(e){e.vertex.code.add(Nr`
    vec4 offsetBackfacingClipPosition(vec4 posClip, vec3 posWorld, vec3 normalWorld, vec3 camPosWorld) {
      vec3 camToVert = posWorld - camPosWorld;

      bool isBackface = dot(camToVert, normalWorld) > 0.0;
      if (isBackface) {
        posClip.z += 0.0000003 * posClip.w;
      }
      return posClip;
    }
  `)}function mo(e){const t=Nr`
    vec3 decodeNormal(vec2 f) {
      float z = 1.0 - abs(f.x) - abs(f.y);
      return vec3(f + sign(f) * min(z, 0.0), z);
    }
  `;e.fragment.code.add(t),e.vertex.code.add(t)}function po(e,t){0===t.normalType&&(e.attributes.add("normal","vec3"),e.vertex.code.add(Nr`
      vec3 normalModel() {
        return normal;
      }
    `)),1===t.normalType&&(e.include(mo),e.attributes.add("normalCompressed","vec2"),e.vertex.code.add(Nr`
      vec3 normalModel() {
        return decodeNormal(normalCompressed);
      }
    `)),3===t.normalType&&(e.extensions.add("GL_OES_standard_derivatives"),e.fragment.code.add(Nr`
      vec3 screenDerivativeNormal(vec3 positionView) {
        return normalize(cross(dFdx(positionView), dFdy(positionView)));
      }
    `))}function go(e){e.attributes.add("position","vec3"),e.vertex.code.add(Nr`
    vec3 positionModel() { return position; }
  `)}function bo(e){e.vertex.code.add(Nr`
    vec4 decodeSymbolColor(vec4 symbolColor, out int colorMixMode) {
      float symbolAlpha = 0.0;

      const float maxTint = 85.0;
      const float maxReplace = 170.0;
      const float scaleAlpha = 3.0;

      if (symbolColor.a > maxReplace) {
        colorMixMode = ${Nr.int(1)};
        symbolAlpha = scaleAlpha * (symbolColor.a - maxReplace);
      } else if (symbolColor.a > maxTint) {
        colorMixMode = ${Nr.int(3)};
        symbolAlpha = scaleAlpha * (symbolColor.a - maxTint);
      } else if (symbolColor.a > 0.0) {
        colorMixMode = ${Nr.int(4)};
        symbolAlpha = scaleAlpha * symbolColor.a;
      } else {
        colorMixMode = ${Nr.int(1)};
        symbolAlpha = 0.0;
      }

      return vec4(symbolColor.r, symbolColor.g, symbolColor.b, symbolAlpha);
    }
  `)}function vo(e,t){t.symbolColor?(e.include(bo),e.attributes.add("symbolColor","vec4"),e.varyings.add("colorMixMode","mediump float")):e.fragment.uniforms.add("colorMixMode","int"),t.symbolColor?e.vertex.code.add(Nr`
    int symbolColorMixMode;

    vec4 getSymbolColor() {
      return decodeSymbolColor(symbolColor, symbolColorMixMode) * 0.003921568627451;
    }

    void forwardColorMixMode() {
      colorMixMode = float(symbolColorMixMode) + 0.5;
    }
  `):e.vertex.code.add(Nr`
    vec4 getSymbolColor() { return vec4(1.0); }
    void forwardColorMixMode() {}
    `)}function xo(e,t){e.include(go),e.vertex.include(io,t),e.varyings.add("vPositionWorldCameraRelative","vec3"),e.varyings.add("vPosition_view","vec3"),e.vertex.uniforms.add("uTransform_WorldFromModel_RS","mat3"),e.vertex.uniforms.add("uTransform_WorldFromModel_TH","vec3"),e.vertex.uniforms.add("uTransform_WorldFromModel_TL","vec3"),e.vertex.uniforms.add("uTransform_WorldFromView_TH","vec3"),e.vertex.uniforms.add("uTransform_WorldFromView_TL","vec3"),e.vertex.uniforms.add("uTransform_ViewFromCameraRelative_RS","mat3"),e.vertex.uniforms.add("uTransform_ProjFromView","mat4"),e.vertex.code.add(Nr`
    // compute position in world space orientation, but relative to the camera position
    vec3 positionWorldCameraRelative() {
      vec3 rotatedModelPosition = uTransform_WorldFromModel_RS * positionModel();

      vec3 transform_CameraRelativeFromModel = dpAdd(
        uTransform_WorldFromModel_TL,
        uTransform_WorldFromModel_TH,
        -uTransform_WorldFromView_TL,
        -uTransform_WorldFromView_TH
      );

      return transform_CameraRelativeFromModel + rotatedModelPosition;
    }

    // position in view space, that is relative to the camera position and orientation
    vec3 position_view() {
      return uTransform_ViewFromCameraRelative_RS * positionWorldCameraRelative();
    }

    // compute gl_Position and forward related varyings to fragment shader
    void forwardPosition() {
      vPositionWorldCameraRelative = positionWorldCameraRelative();
      vPosition_view = position_view();
      gl_Position = uTransform_ProjFromView * vec4(vPosition_view, 1.0);
    }

    vec3 positionWorld() {
      return uTransform_WorldFromView_TL + vPositionWorldCameraRelative;
    }
  `),e.fragment.uniforms.add("uTransform_WorldFromView_TL","vec3"),e.fragment.code.add(Nr`
    vec3 positionWorld() {
      return uTransform_WorldFromView_TL + vPositionWorldCameraRelative;
    }
  `)}function yo(e,t){0===t.normalType||1===t.normalType?(e.include(po,t),e.varyings.add("vNormalWorld","vec3"),e.varyings.add("vNormalView","vec3"),e.vertex.uniforms.add("uTransformNormal_GlobalFromModel","mat3"),e.vertex.uniforms.add("uTransformNormal_ViewFromGlobal","mat3"),e.vertex.code.add(Nr`
      void forwardNormal() {
        vNormalWorld = uTransformNormal_GlobalFromModel * normalModel();
        vNormalView = uTransformNormal_ViewFromGlobal * vNormalWorld;
      }
    `)):2===t.normalType?(e.include(xo,t),e.varyings.add("vNormalWorld","vec3"),e.vertex.code.add(Nr`
    void forwardNormal() {
      vNormalWorld = ${1===t.viewingMode?Nr`normalize(vPositionWorldCameraRelative);`:Nr`vec3(0.0, 0.0, 1.0);`}
    }
    `)):e.vertex.code.add(Nr`
      void forwardNormal() {}
    `)}function _o(e,t){const r=e.vertex.code,i=e.fragment.code;1!==t.output&&3!==t.output||(e.include(zr,{linearDepth:!0}),e.include(co,t),e.include(qn,t),e.include(on,t),e.include(zi,t),e.vertex.uniforms.add("cameraNearFar","vec2"),e.varyings.add("depth","float"),t.hasColorTexture&&e.fragment.uniforms.add("tex","sampler2D"),r.add(Nr`
      void main(void) {
        vpos = calculateVPos();
        vpos = subtractOrigin(vpos);
        vpos = addVerticalOffset(vpos, localOrigin);
        gl_Position = transformPositionWithDepth(proj, view, vpos, cameraNearFar, depth);
        forwardTextureCoordinates();
      }
    `),e.include($i,t),i.add(Nr`
      void main(void) {
        discardBySlice(vpos);
        ${t.hasColorTexture?Nr`
        vec4 texColor = texture2D(tex, vuv0);
        discardOrAdjustAlpha(texColor);`:""}
        outputDepth(depth);
      }
    `)),2===t.output&&(e.include(zr,{linearDepth:!1}),e.include(po,t),e.include(yo,t),e.include(co,t),e.include(qn,t),t.hasColorTexture&&e.fragment.uniforms.add("tex","sampler2D"),e.vertex.uniforms.add("viewNormal","mat4"),e.varyings.add("vPositionView","vec3"),r.add(Nr`
      void main(void) {
        vpos = calculateVPos();
        vpos = subtractOrigin(vpos);
        ${0===t.normalType?Nr`
        vNormalWorld = dpNormalView(vvLocalNormal(normalModel()));`:""}
        vpos = addVerticalOffset(vpos, localOrigin);
        gl_Position = transformPosition(proj, view, vpos);
        forwardTextureCoordinates();
      }
    `),e.include(zi,t),e.include($i,t),i.add(Nr`
      void main() {
        discardBySlice(vpos);
        ${t.hasColorTexture?Nr`
        vec4 texColor = texture2D(tex, vuv0);
        discardOrAdjustAlpha(texColor);`:""}

        ${3===t.normalType?Nr`
            vec3 normal = screenDerivativeNormal(vPositionView);`:Nr`
            vec3 normal = normalize(vNormalWorld);
            if (gl_FrontFacing == false) normal = -normal;`}
        gl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);
      }
    `)),4===t.output&&(e.include(zr,{linearDepth:!1}),e.include(co,t),e.include(qn,t),t.hasColorTexture&&e.fragment.uniforms.add("tex","sampler2D"),r.add(Nr`
      void main(void) {
        vpos = calculateVPos();
        vpos = subtractOrigin(vpos);
        vpos = addVerticalOffset(vpos, localOrigin);
        gl_Position = transformPosition(proj, view, vpos);
        forwardTextureCoordinates();
      }
    `),e.include(zi,t),e.include($i,t),e.include(Gi),i.add(Nr`
      void main() {
        discardBySlice(vpos);
        ${t.hasColorTexture?Nr`
        vec4 texColor = texture2D(tex, vuv0);
        discardOrAdjustAlpha(texColor);`:""}
        outputHighlight();
      }
    `))}function To(e,t){const r=e.fragment;r.uniforms.add("normalTexture","sampler2D"),r.uniforms.add("normalTextureSize","vec2"),t.vertexTangets?(e.attributes.add("tangent","vec4"),e.varyings.add("vTangent","vec4"),2===t.doubleSidedMode?r.code.add(Nr`
      mat3 computeTangentSpace(vec3 normal) {
        float tangentHeadedness = gl_FrontFacing ? vTangent.w : -vTangent.w;
        vec3 tangent = normalize(gl_FrontFacing ? vTangent.xyz : -vTangent.xyz);
        vec3 bitangent = cross(normal, tangent) * tangentHeadedness;
        return mat3(tangent, bitangent, normal);
      }
    `):r.code.add(Nr`
      mat3 computeTangentSpace(vec3 normal) {
        float tangentHeadedness = vTangent.w;
        vec3 tangent = normalize(vTangent.xyz);
        vec3 bitangent = cross(normal, tangent) * tangentHeadedness;
        return mat3(tangent, bitangent, normal);
      }
    `)):(e.extensions.add("GL_OES_standard_derivatives"),r.code.add(Nr`
    mat3 computeTangentSpace(vec3 normal, vec3 pos, vec2 st) {

      vec3 Q1 = dFdx(pos);
      vec3 Q2 = dFdy(pos);

      vec2 stx = dFdx(st);
      vec2 sty = dFdy(st);

      float det = stx.t * sty.s - sty.t * stx.s;

      vec3 T = stx.t * Q2 - sty.t * Q1; // compute tangent
      T = T - normal * dot(normal, T); // orthogonalize tangent
      T *= inversesqrt(max(dot(T,T), 1.e-10)); // "soft" normalize - goes to 0 when T goes to 0
      vec3 B = sign(det) * cross(normal, T); // assume normal is normalized, B has the same lenght as B
      return mat3(T, B, normal); // T and B go to 0 when the tangent space is not well defined by the uv coordinates
    }
  `)),0!==t.attributeTextureCoordinates&&(e.include(uo,t),r.code.add(Nr`
    vec3 computeTextureNormal(mat3 tangentSpace, vec2 uv) {
      vtc.uv = uv;
      ${t.supportsTextureAtlas?"vtc.size = normalTextureSize;":""}
      vec3 rawNormal = textureLookup(normalTexture, vtc).rgb * 2.0 - 1.0;
      return tangentSpace * rawNormal;
    }
  `))}function Oo(e,t){const r=e.fragment;t.receiveAmbientOcclusion?(r.uniforms.add("ssaoTex","sampler2D"),r.uniforms.add("viewportPixelSz","vec4"),r.code.add(Nr`
      float evaluateAmbientOcclusion() {
        return 1.0 - texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;
      }

      float evaluateAmbientOcclusionInverse() {
        float ssao = texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;
        return viewportPixelSz.z < 0.0 ? 1.0 : ssao;
      }
    `)):r.code.add(Nr`
      float evaluateAmbientOcclusion() { return 0.0; } // no occlusion
      float evaluateAmbientOcclusionInverse() { return 1.0; }
    `)}function wo(e,t){const r=e.fragment,i=void 0!==t.lightingSphericalHarmonicsOrder?t.lightingSphericalHarmonicsOrder:2;0===i?(r.uniforms.add("lightingAmbientSH0","vec3"),r.code.add(Nr`
      vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {
        vec3 ambientLight = 0.282095 * lightingAmbientSH0;
        return ambientLight * (1.0 - ambientOcclusion);
      }
    `)):1===i?(r.uniforms.add("lightingAmbientSH_R","vec4"),r.uniforms.add("lightingAmbientSH_G","vec4"),r.uniforms.add("lightingAmbientSH_B","vec4"),r.code.add(Nr`
      vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {
        vec4 sh0 = vec4(
          0.282095,
          0.488603 * normal.x,
          0.488603 * normal.z,
          0.488603 * normal.y
        );
        vec3 ambientLight = vec3(
          dot(lightingAmbientSH_R, sh0),
          dot(lightingAmbientSH_G, sh0),
          dot(lightingAmbientSH_B, sh0)
        );
        return ambientLight * (1.0 - ambientOcclusion);
      }
    `)):2===i&&(r.uniforms.add("lightingAmbientSH0","vec3"),r.uniforms.add("lightingAmbientSH_R1","vec4"),r.uniforms.add("lightingAmbientSH_G1","vec4"),r.uniforms.add("lightingAmbientSH_B1","vec4"),r.uniforms.add("lightingAmbientSH_R2","vec4"),r.uniforms.add("lightingAmbientSH_G2","vec4"),r.uniforms.add("lightingAmbientSH_B2","vec4"),r.code.add(Nr`
      vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {
        vec3 ambientLight = 0.282095 * lightingAmbientSH0;

        vec4 sh1 = vec4(
          0.488603 * normal.x,
          0.488603 * normal.z,
          0.488603 * normal.y,
          1.092548 * normal.x * normal.y
        );
        vec4 sh2 = vec4(
          1.092548 * normal.y * normal.z,
          0.315392 * (3.0 * normal.z * normal.z - 1.0),
          1.092548 * normal.x * normal.z,
          0.546274 * (normal.x * normal.x - normal.y * normal.y)
        );
        ambientLight += vec3(
          dot(lightingAmbientSH_R1, sh1),
          dot(lightingAmbientSH_G1, sh1),
          dot(lightingAmbientSH_B1, sh1)
        );
        ambientLight += vec3(
          dot(lightingAmbientSH_R2, sh2),
          dot(lightingAmbientSH_G2, sh2),
          dot(lightingAmbientSH_B2, sh2)
        );
        return ambientLight * (1.0 - ambientOcclusion);
      }
    `),1!==t.pbrMode&&2!==t.pbrMode||r.code.add(Nr`
        const vec3 skyTransmittance = vec3(0.9, 0.9, 1.0);

        vec3 calculateAmbientRadiance(float ambientOcclusion)
        {
          vec3 ambientLight = 1.2 * (0.282095 * lightingAmbientSH0) - 0.2;
          return ambientLight *= (1.0 - ambientOcclusion) * skyTransmittance;
        }
      `))}function So(e){const t=e.fragment;t.uniforms.add("lightingMainDirection","vec3"),t.uniforms.add("lightingMainIntensity","vec3"),t.uniforms.add("lightingFixedFactor","float"),t.code.add(Nr`
    vec3 evaluateMainLighting(vec3 normal_global, float shadowing) {
      float dotVal = clamp(-dot(normal_global, lightingMainDirection), 0.0, 1.0);

      // move lighting towards (1.0, 1.0, 1.0) if requested
      dotVal = mix(dotVal, 1.0, lightingFixedFactor);

      return lightingMainIntensity * ((1.0 - shadowing) * dotVal);
    }
  `)}function Mo(e,t){const r=e.fragment;e.include(So),e.include(Oo,t),0!==t.pbrMode&&e.include(Zn,t),e.include(wo,t),t.receiveShadows&&e.include(Kn,t),r.uniforms.add("lightingGlobalFactor","float"),r.uniforms.add("ambientBoostFactor","float"),e.include(Gn),r.code.add(Nr`
    const float GAMMA_SRGB = 2.1;
    const float INV_GAMMA_SRGB = 0.4761904;
    ${0===t.pbrMode?"":"const vec3 GROUND_REFLECTANCE = vec3(0.2);"}
  `),t.useOldSceneLightInterface?r.code.add(Nr`
    vec3 evaluateSceneLightingExt(vec3 normal, vec3 albedo, float shadow, float ssao, vec3 additionalLight) {
      // evaluate the main light
      #if defined(TREE_RENDERING)
        // Special case for tree rendering:
        // We shift the Lambert lobe to the back, allowing it to reach part of the hemisphere
        // facing away from the light. The idea is to get an effect where light is transmitted
        // through the tree.
        float minDot = -0.5;
        float dotRange = 1.0 - minDot;
        float dotNormalization = 0.66; // guessed & hand tweaked value, for an exact value we could precompute an integral over the sphere

        float dotVal = dotNormalization * (clamp(-dot(normal, lightingMainDirection), 1.0 - dotRange, 1.0) - minDot) * (1.0 / dotRange);
      #else
        float dotVal = clamp(-dot(normal, lightingMainDirection), 0.0, 1.0);
      #endif

      // move lighting towards (1.0, 1.0, 1.0) if requested
      dotVal = mix(dotVal, 1.0, lightingFixedFactor);

      vec3 mainLight = (1.0 - shadow) * lightingMainIntensity * dotVal;
      vec3 ambientLight = calculateAmbientIrradiance(normal, ssao);

      // inverse gamma correction on the albedo color
      vec3 albedoGammaC = pow(albedo, vec3(GAMMA_SRGB));

      // physically correct BRDF normalizes by PI
      vec3 totalLight = mainLight + ambientLight + additionalLight;
      totalLight = min(totalLight, vec3(PI));
      vec3 outColor = vec3((albedoGammaC / PI) * (totalLight));

      // apply gamma correction to the computed color
      outColor = pow(outColor, vec3(INV_GAMMA_SRGB));

      return outColor;
    }
  `):(1===t.viewingMode?r.code.add(Nr`
      float _oldHeuristicLighting(vec3 vPosWorld) {
        vec3 shadingNormalWorld = normalize(vPosWorld);
        float vndl = -dot(shadingNormalWorld, lightingMainDirection);

        return smoothstep(0.0, 1.0, clamp(vndl * 2.5, 0.0, 1.0));
      }
    `):r.code.add(Nr`
      float _oldHeuristicLighting(vec3 vPosWorld) {
        float vndl = -dot(vec3(0.0, 0.0, 1.0), lightingMainDirection);
        return smoothstep(0.0, 1.0, clamp(vndl * 2.5, 0.0, 1.0));
      }
    `),r.code.add(Nr`
      vec3 evaluateAdditionalLighting(float ambientOcclusion, vec3 vPosWorld) {
        float additionalAmbientScale = _oldHeuristicLighting(vPosWorld);
        return (1.0 - ambientOcclusion) * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor * lightingMainIntensity;
      }
    `),0===t.pbrMode||4===t.pbrMode?r.code.add(Nr`
      vec3 evaluateSceneLighting(vec3 normalWorld, vec3 baseColor, float mainLightShadow, float ambientOcclusion, vec3 additionalLight)
      {
        vec3 mainLighting = evaluateMainLighting(normalWorld, mainLightShadow);
        vec3 ambientLighting = calculateAmbientIrradiance(normalWorld, ambientOcclusion);
        // inverse gamma correction on the base color
        vec3 baseColorLinear = pow(baseColor, vec3(GAMMA_SRGB));

        // physically correct BRDF normalizes by PI
        vec3 totalLight = mainLighting + ambientLighting + additionalLight;
        totalLight = min(totalLight, vec3(PI));
        vec3 outColor = vec3((baseColorLinear / PI) * totalLight);

        // apply gamma correction to the computed color
        outColor = pow(outColor, vec3(INV_GAMMA_SRGB));

        return outColor;
      }
      `):1!==t.pbrMode&&2!==t.pbrMode||(r.code.add(Nr`
      const float fillLightIntensity = 0.25;
      const float horizonLightDiffusion = 0.4;
      const float additionalAmbientIrradianceFactor = 0.02;

      vec3 evaluateSceneLightingPBR(vec3 normal, vec3 albedo, float shadow, float ssao, vec3 additionalLight, vec3 viewDir, vec3 normalGround, vec3 mrr, vec3 _emission, float additionalAmbientIrradiance)
      {
        // Calculate half vector between view and light direction
        vec3 viewDirection = -viewDir;
        vec3 mainLightDirection = -lightingMainDirection;
        vec3 h = normalize(viewDirection + mainLightDirection);

        PBRShadingInfo inputs;
        inputs.NdotL = clamp(dot(normal, mainLightDirection), 0.001, 1.0);
        inputs.NdotV = clamp(abs(dot(normal, viewDirection)), 0.001, 1.0);
        inputs.NdotH = clamp(dot(normal, h), 0.0, 1.0);
        inputs.VdotH = clamp(dot(viewDirection, h), 0.0, 1.0);
        inputs.NdotNG = clamp(dot(normal, normalGround), -1.0, 1.0);
        vec3 reflectedView = normalize(reflect(viewDirection, normal));
        inputs.RdotNG = clamp(dot(reflectedView, normalGround), -1.0, 1.0);

        inputs.albedoLinear = pow(albedo, vec3(GAMMA_SRGB));
        inputs.ssao = ssao;

        inputs.metalness = mrr[0];
        inputs.roughness = clamp(mrr[1] * mrr[1], 0.001, 0.99);
      `),r.code.add(Nr`
        inputs.f0 = (0.16 * mrr[2] * mrr[2]) * (1.0 - inputs.metalness) + inputs.albedoLinear * inputs.metalness;
        inputs.f90 = vec3(clamp(dot(inputs.f0, vec3(50.0 * 0.33)), 0.0, 1.0)); // more accurate then using  f90 = 1.0
        inputs.diffuseColor = inputs.albedoLinear * (vec3(1.0) - inputs.f0) * (1.0 - inputs.metalness);
      `),r.code.add(Nr`
        vec3 ambientDir = vec3(5.0 * normalGround[1] - normalGround[0] * normalGround[2], - 5.0 * normalGround[0] - normalGround[2] * normalGround[1], normalGround[1] * normalGround[1] + normalGround[0] * normalGround[0]);
        ambientDir = ambientDir != vec3(0.0)? normalize(ambientDir) : normalize(vec3(5.0, -1.0, 0.0));

        inputs.NdotAmbDir = abs(dot(normal, ambientDir));

        // Calculate the irradiance components: sun, fill lights and the sky.
        vec3 mainLightIrradianceComponent  = inputs.NdotL * (1.0 - shadow) * lightingMainIntensity;
        vec3 fillLightsIrradianceComponent = inputs.NdotAmbDir * lightingMainIntensity * fillLightIntensity;
        // calculateAmbientIrradiance for localView and additionalLight for gloabalView
        vec3 ambientLightIrradianceComponent = calculateAmbientIrradiance(normal, ssao) + additionalLight;

        // Assemble the overall irradiance of the sky that illuminates the surface
        inputs.skyIrradianceToSurface    = ambientLightIrradianceComponent + mainLightIrradianceComponent + fillLightsIrradianceComponent ;
        // Assemble the overall irradiance of the ground that illuminates the surface. for this we use the simple model that changes only the sky irradiance by the groundReflectance
        inputs.groundIrradianceToSurface = GROUND_REFLECTANCE * ambientLightIrradianceComponent + mainLightIrradianceComponent + fillLightsIrradianceComponent ;
      `),r.code.add(Nr`
        vec3 horizonRingDir = inputs.RdotNG * normalGround - reflectedView;
        vec3 horizonRingH = normalize(viewDirection + horizonRingDir);
        inputs.NdotH_Horizon = dot(normal, horizonRingH);

        vec3 mainLightRadianceComponent  = normalDistribution(inputs.NdotH, inputs.roughness) * lightingMainIntensity * (1.0 - shadow);
        vec3 horizonLightRadianceComponent = normalDistribution(inputs.NdotH_Horizon, min(inputs.roughness + horizonLightDiffusion, 1.0)) * lightingMainIntensity * fillLightIntensity;
        vec3 ambientLightRadianceComponent = calculateAmbientRadiance(ssao) + additionalLight; // calculateAmbientRadiance for localView and additionalLight for gloabalView

        // Assemble the overall radiance of the sky that illuminates the surface
        inputs.skyRadianceToSurface    =  ambientLightRadianceComponent + mainLightRadianceComponent + horizonLightRadianceComponent;
        // Assemble the overall radiance of the ground that illuminates the surface. for this we use the simple model that changes only the sky radince by the groundReflectance
        inputs.groundRadianceToSurface = GROUND_REFLECTANCE * (ambientLightRadianceComponent + horizonLightRadianceComponent) + mainLightRadianceComponent;

        // Calculate average ambient radiance - this is used int the gamut mapping part to deduce the black level that is soft compressed
        inputs.averageAmbientRadiance = ambientLightIrradianceComponent[1] * (1.0 + GROUND_REFLECTANCE[1]);
        `),r.code.add(Nr`
        vec3 reflectedColorComponent = evaluateEnvironmentIllumination(inputs);
        vec3 additionalMaterialReflectanceComponent = inputs.albedoLinear * additionalAmbientIrradiance;
        vec3 emissionComponent = pow(_emission, vec3(GAMMA_SRGB));
        vec3 outColorLinear = reflectedColorComponent + additionalMaterialReflectanceComponent + emissionComponent;
        ${2===t.pbrMode?Nr`vec3 outColor = pow(max(vec3(0.0), outColorLinear - 0.005 * inputs.averageAmbientRadiance), vec3(INV_GAMMA_SRGB));`:Nr`vec3 outColor = pow(blackLevelSoftCompression(outColorLinear, inputs), vec3(INV_GAMMA_SRGB));`}
        return outColor;
      }
    `)))}function Ao(e,t){const r=e.fragment;r.code.add(Nr`
    struct ShadingNormalParameters {
      vec3 normalView;
      vec3 viewDirection;
    } shadingParams;
    `),1===t.doubleSidedMode?r.code.add(Nr`
      vec3 shadingNormal(ShadingNormalParameters params) {
        return dot(params.normalView, params.viewDirection) > 0.0 ? normalize(-params.normalView) : normalize(params.normalView);
      }
    `):2===t.doubleSidedMode?r.code.add(Nr`
      vec3 shadingNormal(ShadingNormalParameters params) {
        return gl_FrontFacing ? normalize(params.normalView) : normalize(-params.normalView);
      }
    `):r.code.add(Nr`
      vec3 shadingNormal(ShadingNormalParameters params) {
        return normalize(params.normalView);
      }
    `)}function Co(e,t){Nr`
  /*
  *  ${t.name}
  *  ${0===t.output?"RenderOutput: Color":1===t.output?"RenderOutput: Depth":3===t.output?"RenderOutput: Shadow":2===t.output?"RenderOutput: Normal":4===t.output?"RenderOutput: Highlight":""}
  */
  `}function Eo(e){e.include(fi),e.code.add(Nr`
    vec3 mixExternalColor(vec3 internalColor, vec3 textureColor, vec3 externalColor, int mode) {
      // workaround for artifacts in OSX using Intel Iris Pro
      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/10475
      vec3 internalMixed = internalColor * textureColor;
      vec3 allMixed = internalMixed * externalColor;

      if (mode == ${Nr.int(1)}) {
        return allMixed;
      }
      else if (mode == ${Nr.int(2)}) {
        return internalMixed;
      }
      else if (mode == ${Nr.int(3)}) {
        return externalColor;
      }
      else {
        // tint (or something invalid)
        float vIn = rgb2v(internalMixed);
        vec3 hsvTint = rgb2hsv(externalColor);
        vec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);
        return hsv2rgb(hsvOut);
      }
    }

    float mixExternalOpacity(float internalOpacity, float textureOpacity, float externalOpacity, int mode) {
      // workaround for artifacts in OSX using Intel Iris Pro
      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/10475
      float internalMixed = internalOpacity * textureOpacity;
      float allMixed = internalMixed * externalOpacity;

      if (mode == ${Nr.int(2)}) {
        return internalMixed;
      }
      else if (mode == ${Nr.int(3)}) {
        return externalOpacity;
      }
      else {
        // multiply or tint (or something invalid)
        return allMixed;
      }
    }
  `)}!function(e){e.bindUniforms=function(e,t,r=!1){r||(e.setUniform3fv("mrrFactors",t.mrrFactors),e.setUniform3fv("emissionFactor",t.emissiveFactor))}}(fo||(fo={})),function(e){e.ModelTransform=class{constructor(){this.worldFromModel_RS=[1,0,0,0,1,0,0,0,1],this.worldFromModel_TH=Object(c.e)(),this.worldFromModel_TL=Object(c.e)()}},e.ViewProjectionTransform=class{constructor(){this.worldFromView_TH=Object(c.e)(),this.worldFromView_TL=Object(c.e)(),this.viewFromCameraRelative_RS=[1,0,0,0,1,0,0,0,1],this.projFromView=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}},e.bindModelTransform=function(e,t){e.setUniformMatrix3fv("uTransform_WorldFromModel_RS",t.worldFromModel_RS),e.setUniform3fv("uTransform_WorldFromModel_TH",t.worldFromModel_TH),e.setUniform3fv("uTransform_WorldFromModel_TL",t.worldFromModel_TL)},e.bindViewProjTransform=function(e,t){e.setUniform3fv("uTransform_WorldFromView_TH",t.worldFromView_TH),e.setUniform3fv("uTransform_WorldFromView_TL",t.worldFromView_TL),e.setUniformMatrix4fv("uTransform_ProjFromView",t.projFromView),e.setUniformMatrix3fv("uTransform_ViewFromCameraRelative_RS",t.viewFromCameraRelative_RS)}}(xo||(xo={})),function(e){e.bindUniforms=function(e,t){e.setUniformMatrix4fv("viewNormal",t)}}(yo||(yo={}));var jo=Object.freeze({__proto__:null,build:function(e){const t=new kr,r=t.vertex.code,i=t.fragment.code;return t.include(Co,{name:"Default Material Shader",output:e.output}),t.vertex.uniforms.add("proj","mat4").add("view","mat4").add("camPos","vec3").add("localOrigin","vec3"),t.include(go),t.varyings.add("vpos","vec3"),t.include(qn,e),t.include(oo,e),t.include(Xn,e),0!==e.output&&7!==e.output||(t.include(po,e),t.include(zr,{linearDepth:!1}),0===e.normalType&&e.offsetBackfaces&&t.include(ho),t.include(To,e),t.include(yo,e),e.instancedColor&&t.attributes.add("instanceColor","vec4"),t.varyings.add("localvpos","vec3"),t.include(co,e),t.include(Qn,e),t.include(vo,e),t.include(sn,e),t.vertex.uniforms.add("externalColor","vec4"),t.varyings.add("vcolorExt","vec4"),e.multipassTerrainEnabled&&t.varyings.add("depth","float"),r.add(Nr`
      void main(void) {
        forwardNormalizedVertexColor();
        vcolorExt = externalColor;
        ${e.instancedColor?"vcolorExt *= instanceColor;":""}
        vcolorExt *= vvColor();
        vcolorExt *= getSymbolColor();
        forwardColorMixMode();

        if (vcolorExt.a < ${Nr.float(.001)}) {
          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
        }
        else {
          vpos = calculateVPos();
          localvpos = vpos - view[3].xyz;
          vpos = subtractOrigin(vpos);
          ${0===e.normalType?Nr`
          vNormalWorld = dpNormal(vvLocalNormal(normalModel()));`:""}
          vpos = addVerticalOffset(vpos, localOrigin);
          ${e.vertexTangets?"vTangent = dpTransformVertexTangent(tangent);":""}
          gl_Position = transformPosition(proj, view, vpos);
          ${0===e.normalType&&e.offsetBackfaces?"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, camPos);":""}
        }

        ${e.multipassTerrainEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}
        forwardLinearDepth();
        forwardTextureCoordinates();
      }
    `)),7===e.output&&(t.include(zi,e),t.include($i,e),e.multipassTerrainEnabled&&(t.fragment.include(Hi),t.include(en,e)),t.fragment.uniforms.add("camPos","vec3").add("localOrigin","vec3").add("opacity","float").add("layerOpacity","float"),e.hasColorTexture&&t.fragment.uniforms.add("tex","sampler2D"),t.fragment.include(Eo),i.add(Nr`
      void main() {
        discardBySlice(vpos);
        ${e.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
        ${e.hasColorTexture?Nr`
        vec4 texColor = texture2D(tex, vuv0);
        ${e.textureAlphaPremultiplied?"texColor.rgb /= texColor.a;":""}
        discardOrAdjustAlpha(texColor);`:Nr`vec4 texColor = vec4(1.0);`}
        ${e.attributeColor?Nr`
        float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:Nr`
        float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));
        `}
        gl_FragColor = vec4(opacity_);
      }
    `)),0===e.output&&(t.include(zi,e),t.include(Mo,e),t.include(Oo,e),t.include($i,e),e.receiveShadows&&t.include(Kn,e),e.multipassTerrainEnabled&&(t.fragment.include(Hi),t.include(en,e)),t.fragment.uniforms.add("camPos","vec3").add("localOrigin","vec3").add("ambient","vec3").add("diffuse","vec3").add("opacity","float").add("layerOpacity","float"),e.hasColorTexture&&t.fragment.uniforms.add("tex","sampler2D"),t.include(fo,e),t.include(Zn,e),t.fragment.include(Eo),t.include(Ao,e),i.add(Nr`
      void main() {
        discardBySlice(vpos);
        ${e.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
        ${e.hasColorTexture?Nr`
        vec4 texColor = texture2D(tex, vuv0);
        ${e.textureAlphaPremultiplied?"texColor.rgb /= texColor.a;":""}
        discardOrAdjustAlpha(texColor);`:Nr`vec4 texColor = vec4(1.0);`}
        shadingParams.viewDirection = normalize(vpos - camPos);
        ${3===e.normalType?Nr`
        vec3 normal = screenDerivativeNormal(localvpos);`:Nr`
        shadingParams.normalView = vNormalWorld;
        vec3 normal = shadingNormal(shadingParams);`}
        ${1===e.pbrMode?"applyPBRFactors();":""}
        float ssao = evaluateAmbientOcclusionInverse();
        ssao *= getBakedOcclusion();

        float additionalAmbientScale = _oldHeuristicLighting(vpos + localOrigin);
        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;
        ${e.receiveShadows?"float shadow = readShadowMap(vpos, linearDepth);":1===e.viewingMode?"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);":"float shadow = 0.0;"}
        vec3 matColor = max(ambient, diffuse);
        ${e.attributeColor?Nr`
        vec3 albedo_ = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));
        float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:Nr`
        vec3 albedo_ = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));
        float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));
        `}
        ${e.hasNormalTexture?Nr`
              mat3 tangentSpace = ${e.vertexTangets?"computeTangentSpace(normal);":"computeTangentSpace(normal, vpos, vuv0);"}
              vec3 shadedNormal = computeTextureNormal(tangentSpace, vuv0);`:"vec3 shadedNormal = normal;"}
        ${1===e.pbrMode||2===e.pbrMode?1===e.viewingMode?Nr`vec3 normalGround = normalize(vpos + localOrigin);`:Nr`vec3 normalGround = vec3(0.0, 0.0, 1.0);`:Nr``}
        ${1===e.pbrMode||2===e.pbrMode?Nr`
            float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * lightingMainIntensity[2];
            vec3 shadedColor = evaluateSceneLightingPBR(shadedNormal, albedo_, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:"vec3 shadedColor = evaluateSceneLighting(shadedNormal, albedo_, shadow, 1.0 - ssao, additionalLight);"}
        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);
        ${e.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
      }
    `)),t.include(_o,e),t}});class Po extends class{constructor(e,t){t&&(this._config=t.snapshot()),this._program=this.initializeProgram(e),e.commonUniformStore&&(this._commonUniformStore=e.commonUniformStore,this._commonUniformStore.subscribeProgram(this._program)),this._pipeline=this.initializePipeline(e)}dispose(){this._program&&(this._commonUniformStore&&this._commonUniformStore.unsubscribeProgram(this._program),this._program.dispose(),this._program=null)}reload(e){this._program&&(this._commonUniformStore&&this._commonUniformStore.unsubscribeProgram(this._program),this._program.dispose()),this._program=this.initializeProgram(e),this._commonUniformStore&&this._commonUniformStore.subscribeProgram(this._program)}get program(){return this._program}get pipeline(){return this._pipeline}get key(){return this._config.key}get configuration(){return this._config}bindPass(e,t,r){}bindMaterial(e,t,r){}bindDraw(e,t,r){}bindPipelineState(e){e.setPipelineState(this.pipeline)}ensureAttributeLocations(e){this.program.assertCompatibleVertexAttributeLocations(e)}get primitiveType(){return 4}}{initializeProgram(e){const t=Po.shader.get(),r=this.configuration,i=t.build({OITEnabled:0===r.transparencyPassType,output:r.output,viewingMode:e.viewingMode,receiveShadows:r.receiveShadows,slicePlaneEnabled:r.slicePlaneEnabled,sliceHighlightDisabled:r.sliceHighlightDisabled,sliceEnabledForVertexPrograms:!1,symbolColor:r.symbolColors,vvSize:r.vvSize,vvColor:r.vvColor,vvInstancingEnabled:!0,instanced:r.instanced,instancedColor:r.instancedColor,instancedDoublePrecision:r.instancedDoublePrecision,useOldSceneLightInterface:!1,pbrMode:r.usePBR?r.isSchematic?2:1:0,hasMetalnessAndRoughnessTexture:r.hasMetalnessAndRoughnessTexture,hasEmissionTexture:r.hasEmissionTexture,hasOcclusionTexture:r.hasOcclusionTexture,hasNormalTexture:r.hasNormalTexture,hasColorTexture:r.hasColorTexture,receiveAmbientOcclusion:r.receiveAmbientOcclusion,useCustomDTRExponentForWater:!1,normalType:r.normalsTypeDerivate?3:0,doubleSidedMode:r.doubleSidedMode,vertexTangets:r.vertexTangents,attributeTextureCoordinates:r.hasMetalnessAndRoughnessTexture||r.hasEmissionTexture||r.hasOcclusionTexture||r.hasNormalTexture||r.hasColorTexture?1:0,textureAlphaPremultiplied:r.textureAlphaPremultiplied,attributeColor:r.vertexColors,screenSizePerspectiveEnabled:r.screenSizePerspective,verticalOffsetEnabled:r.verticalOffset,offsetBackfaces:r.offsetBackfaces,doublePrecisionRequiresObfuscation:no(e.rctx),alphaDiscardMode:r.alphaDiscardMode,supportsTextureAtlas:!1,multipassTerrainEnabled:r.multipassTerrainEnabled,cullAboveGround:r.cullAboveGround});return new Bn(e.rctx,i.generateSource("vertex"),i.generateSource("fragment"),ti)}bindPass(e,t,r){ri.bindProjectionMatrix(this.program,r.camera.projectionMatrix);const i=this.configuration.output;(1===this.configuration.output||r.multipassTerrainEnabled||3===i)&&this.program.setUniform2fv("cameraNearFar",r.camera.nearFar),r.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",r.inverseViewport),function(e,t,r){r.multipassTerrainEnabled&&r.terrainLinearDepthTexture&&(e.setUniform1i("terrainDepthTexture",10),t.bindTexture(r.terrainLinearDepthTexture,10))}(this.program,e,r)),7===i&&(this.program.setUniform1f("opacity",t.opacity),this.program.setUniform1f("layerOpacity",t.layerOpacity),this.program.setUniform4fv("externalColor",t.externalColor),this.program.setUniform1i("colorMixMode",ji[t.colorMixMode])),0===i?(r.lighting.setUniforms(this.program,!1),this.program.setUniform3fv("ambient",t.ambient),this.program.setUniform3fv("diffuse",t.diffuse),this.program.setUniform4fv("externalColor",t.externalColor),this.program.setUniform1i("colorMixMode",ji[t.colorMixMode]),this.program.setUniform1f("opacity",t.opacity),this.program.setUniform1f("layerOpacity",t.layerOpacity),this.configuration.usePBR&&fo.bindUniforms(this.program,t,this.configuration.isSchematic)):4===i&&Gi.bindOutputHighlight(e,this.program,r),qn.bindUniformsForSymbols(this.program,t),Xn.bindUniforms(this.program,t,r),Ci(t.screenSizePerspective,this.program,"screenSizePerspectiveAlignment"),2!==t.textureAlphaMode&&3!==t.textureAlphaMode||this.program.setUniform1f("textureAlphaCutoff",t.textureAlphaCutoff)}bindDraw(e){const t=this.configuration.instancedDoublePrecision?Object(c.g)(e.camera.viewInverseTransposeMatrix[3],e.camera.viewInverseTransposeMatrix[7],e.camera.viewInverseTransposeMatrix[11]):e.origin;ri.bindViewCustomOrigin(this.program,t,e.camera.viewMatrix),(0===this.configuration.output||7===this.configuration.output||1===this.configuration.output&&this.configuration.screenSizePerspective||2===this.configuration.output&&this.configuration.screenSizePerspective||4===this.configuration.output&&this.configuration.screenSizePerspective)&&ri.bindCamPosition(this.program,t,e.camera.viewInverseTransposeMatrix),2===this.configuration.output&&this.program.setUniformMatrix4fv("viewNormal",e.camera.viewInverseTransposeMatrix),this.configuration.instancedDoublePrecision&&oo.bindCustomOrigin(this.program,t),zi.bindUniforms(this.program,this.configuration,e.slicePlane,t),0===this.configuration.output&&Kn.bindViewCustomOrigin(this.program,e,t)}setPipeline(e,t){const r=this.configuration,i=3===e,n=2===e;return function(e){return re.intern(e)}({blending:0!==r.output&&7!==r.output||!r.transparent?null:i?Wi:Ki(e),culling:Fo(r),depthTest:{func:Zi(e)},depthWrite:i||n?r.writeDepth&&C:null,colorWrite:E,stencilWrite:r.sceneHasOcludees?tn:null,stencilTest:r.sceneHasOcludees?t?nn:rn:null,polygonOffset:i||n?null:Ji(r.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this.setPipeline(this.configuration.transparencyPassType,!0),this.setPipeline(this.configuration.transparencyPassType,!1)}getPipelineState(e){return e?this._occludeePipelineState:this.pipeline}}Po.shader=new Zr(jo,()=>Promise.resolve().then((function(){return jo})));const Fo=e=>function(e){return e.cullFace?0!==e.cullFace:!e.slicePlaneEnabled&&!e.transparent&&!e.doubleSidedMode}(e)&&{face:1===e.cullFace?1028:1029,mode:2305};class Bo extends class{constructor(){this._key="",this._keyDirty=!1,this._parameterBits=this._parameterBits.map(()=>0)}get key(){return this._keyDirty&&(this._keyDirty=!1,this._key=String.fromCharCode.apply(String,this._parameterBits)),this._key}snapshot(){const e=this._parameterNames,t={key:this.key};for(const r of e)t[r]=this[r];return t}}{constructor(){super(...arguments),this.output=0,this.alphaDiscardMode=1,this.doubleSidedMode=0,this.isSchematic=!1,this.vertexColors=!1,this.offsetBackfaces=!1,this.symbolColors=!1,this.vvSize=!1,this.vvColor=!1,this.verticalOffset=!1,this.receiveShadows=!1,this.slicePlaneEnabled=!1,this.sliceHighlightDisabled=!1,this.receiveAmbientOcclusion=!1,this.screenSizePerspective=!1,this.textureAlphaPremultiplied=!1,this.hasColorTexture=!1,this.usePBR=!1,this.hasMetalnessAndRoughnessTexture=!1,this.hasEmissionTexture=!1,this.hasOcclusionTexture=!1,this.hasNormalTexture=!1,this.instanced=!1,this.instancedColor=!1,this.instancedDoublePrecision=!1,this.vertexTangents=!1,this.normalsTypeDerivate=!1,this.writeDepth=!0,this.sceneHasOcludees=!1,this.transparent=!1,this.enableOffset=!0,this.cullFace=0,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!0}}Object(xn.a)([ei({count:8})],Bo.prototype,"output",void 0),Object(xn.a)([ei({count:4})],Bo.prototype,"alphaDiscardMode",void 0),Object(xn.a)([ei({count:3})],Bo.prototype,"doubleSidedMode",void 0),Object(xn.a)([ei()],Bo.prototype,"isSchematic",void 0),Object(xn.a)([ei()],Bo.prototype,"vertexColors",void 0),Object(xn.a)([ei()],Bo.prototype,"offsetBackfaces",void 0),Object(xn.a)([ei()],Bo.prototype,"symbolColors",void 0),Object(xn.a)([ei()],Bo.prototype,"vvSize",void 0),Object(xn.a)([ei()],Bo.prototype,"vvColor",void 0),Object(xn.a)([ei()],Bo.prototype,"verticalOffset",void 0),Object(xn.a)([ei()],Bo.prototype,"receiveShadows",void 0),Object(xn.a)([ei()],Bo.prototype,"slicePlaneEnabled",void 0),Object(xn.a)([ei()],Bo.prototype,"sliceHighlightDisabled",void 0),Object(xn.a)([ei()],Bo.prototype,"receiveAmbientOcclusion",void 0),Object(xn.a)([ei()],Bo.prototype,"screenSizePerspective",void 0),Object(xn.a)([ei()],Bo.prototype,"textureAlphaPremultiplied",void 0),Object(xn.a)([ei()],Bo.prototype,"hasColorTexture",void 0),Object(xn.a)([ei()],Bo.prototype,"usePBR",void 0),Object(xn.a)([ei()],Bo.prototype,"hasMetalnessAndRoughnessTexture",void 0),Object(xn.a)([ei()],Bo.prototype,"hasEmissionTexture",void 0),Object(xn.a)([ei()],Bo.prototype,"hasOcclusionTexture",void 0),Object(xn.a)([ei()],Bo.prototype,"hasNormalTexture",void 0),Object(xn.a)([ei()],Bo.prototype,"instanced",void 0),Object(xn.a)([ei()],Bo.prototype,"instancedColor",void 0),Object(xn.a)([ei()],Bo.prototype,"instancedDoublePrecision",void 0),Object(xn.a)([ei()],Bo.prototype,"vertexTangents",void 0),Object(xn.a)([ei()],Bo.prototype,"normalsTypeDerivate",void 0),Object(xn.a)([ei()],Bo.prototype,"writeDepth",void 0),Object(xn.a)([ei()],Bo.prototype,"sceneHasOcludees",void 0),Object(xn.a)([ei()],Bo.prototype,"transparent",void 0),Object(xn.a)([ei()],Bo.prototype,"enableOffset",void 0),Object(xn.a)([ei({count:3})],Bo.prototype,"cullFace",void 0),Object(xn.a)([ei({count:4})],Bo.prototype,"transparencyPassType",void 0),Object(xn.a)([ei()],Bo.prototype,"multipassTerrainEnabled",void 0),Object(xn.a)([ei()],Bo.prototype,"cullAboveGround",void 0);var Ro=Object.freeze({__proto__:null,build:function(e){const t=new kr,r=t.vertex.code,i=t.fragment.code;return t.vertex.uniforms.add("proj","mat4").add("view","mat4").add("camPos","vec3").add("localOrigin","vec3"),t.include(go),t.varyings.add("vpos","vec3"),t.include(qn,e),t.include(oo,e),t.include(Xn,e),0!==e.output&&7!==e.output||(t.include(po,e),t.include(zr,{linearDepth:!1}),e.offsetBackfaces&&t.include(ho),e.instancedColor&&t.attributes.add("instanceColor","vec4"),t.varyings.add("vNormalWorld","vec3"),t.varyings.add("localvpos","vec3"),e.multipassTerrainEnabled&&t.varyings.add("depth","float"),t.include(co,e),t.include(Qn,e),t.include(vo,e),t.include(sn,e),t.vertex.uniforms.add("externalColor","vec4"),t.varyings.add("vcolorExt","vec4"),r.add(Nr`
        void main(void) {
          forwardNormalizedVertexColor();
          vcolorExt = externalColor;
          ${e.instancedColor?"vcolorExt *= instanceColor;":""}
          vcolorExt *= vvColor();
          vcolorExt *= getSymbolColor();
          forwardColorMixMode();

          if (vcolorExt.a < ${Nr.float(.001)}) {
            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
          }
          else {
            vpos = calculateVPos();
            localvpos = vpos - view[3].xyz;
            vpos = subtractOrigin(vpos);
            vNormalWorld = dpNormal(vvLocalNormal(normalModel()));
            vpos = addVerticalOffset(vpos, localOrigin);
            gl_Position = transformPosition(proj, view, vpos);
            ${e.offsetBackfaces?"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, camPos);":""}
          }
          ${e.multipassTerrainEnabled?Nr`depth = (view * vec4(vpos, 1.0)).z;`:""}
          forwardLinearDepth();
          forwardTextureCoordinates();
        }
      `)),7===e.output&&(t.include(zi,e),t.include($i,e),e.multipassTerrainEnabled&&(t.fragment.include(Hi),t.include(en,e)),t.fragment.uniforms.add("camPos","vec3").add("localOrigin","vec3").add("opacity","float").add("layerOpacity","float"),t.fragment.uniforms.add("view","mat4"),e.hasColorTexture&&t.fragment.uniforms.add("tex","sampler2D"),t.fragment.include(Eo),i.add(Nr`
      void main() {
        discardBySlice(vpos);
        ${e.multipassTerrainEnabled?Nr`terrainDepthTest(gl_FragCoord, depth);`:""}
        ${e.hasColorTexture?Nr`
        vec4 texColor = texture2D(tex, vuv0);
        ${e.textureAlphaPremultiplied?"texColor.rgb /= texColor.a;":""}
        discardOrAdjustAlpha(texColor);`:Nr`vec4 texColor = vec4(1.0);`}
        ${e.attributeColor?Nr`
        float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:Nr`
        float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));
        `}

        gl_FragColor = vec4(opacity_);
      }
    `)),0===e.output&&(t.include(zi,e),t.include(Mo,e),t.include(Oo,e),t.include($i,e),e.receiveShadows&&t.include(Kn,e),e.multipassTerrainEnabled&&(t.fragment.include(Hi),t.include(en,e)),t.fragment.uniforms.add("camPos","vec3").add("localOrigin","vec3").add("ambient","vec3").add("diffuse","vec3").add("opacity","float").add("layerOpacity","float"),t.fragment.uniforms.add("view","mat4"),e.hasColorTexture&&t.fragment.uniforms.add("tex","sampler2D"),t.include(fo,e),t.include(Zn,e),t.fragment.include(Eo),i.add(Nr`
      void main() {
        discardBySlice(vpos);
        ${e.multipassTerrainEnabled?Nr`terrainDepthTest(gl_FragCoord, depth);`:""}
        ${e.hasColorTexture?Nr`
        vec4 texColor = texture2D(tex, vuv0);
        ${e.textureAlphaPremultiplied?"texColor.rgb /= texColor.a;":""}
        discardOrAdjustAlpha(texColor);`:Nr`vec4 texColor = vec4(1.0);`}
        vec3 viewDirection = normalize(vpos - camPos);
        ${1===e.pbrMode?"applyPBRFactors();":""}
        float ssao = evaluateAmbientOcclusionInverse();
        ssao *= getBakedOcclusion();

        float additionalAmbientScale = _oldHeuristicLighting(vpos + localOrigin);
        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;
        ${e.receiveShadows?"float shadow = readShadowMap(vpos, linearDepth);":1===e.viewingMode?"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);":"float shadow = 0.0;"}
        vec3 matColor = max(ambient, diffuse);
        ${e.attributeColor?Nr`
        vec3 albedo_ = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));
        float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:Nr`
        vec3 albedo_ = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));
        float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));
        `}
        ${Nr`
        vec3 shadedNormal = normalize(vNormalWorld);
        albedo_ *= 1.2;
        vec3 viewForward = - vec3(view[0][2], view[1][2], view[2][2]);
        float alignmentLightView = clamp(dot(-viewForward, lightingMainDirection), 0.0, 1.0);
        float transmittance = 1.0 - clamp(dot(-viewForward, shadedNormal), 0.0, 1.0);
        float treeRadialFalloff = vColor.r;
        float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);
        additionalLight += backLightFactor * lightingMainIntensity;`}
        ${1===e.pbrMode||2===e.pbrMode?1===e.viewingMode?Nr`vec3 normalGround = normalize(vpos + localOrigin);`:Nr`vec3 normalGround = vec3(0.0, 0.0, 1.0);`:Nr``}
        ${1===e.pbrMode||2===e.pbrMode?Nr`
            float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * lightingMainIntensity[2];
            vec3 shadedColor = evaluateSceneLightingPBR(shadedNormal, albedo_, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:"vec3 shadedColor = evaluateSceneLighting(shadedNormal, albedo_, shadow, 1.0 - ssao, additionalLight);"}
        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);
        ${e.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
      }
    `)),t.include(_o,e),t}});class Lo extends Po{initializeProgram(e){const t=Lo.shader.get(),r=this.configuration,i=t.build({OITEnabled:0===r.transparencyPassType,output:r.output,viewingMode:e.viewingMode,receiveShadows:r.receiveShadows,slicePlaneEnabled:r.slicePlaneEnabled,sliceHighlightDisabled:r.sliceHighlightDisabled,sliceEnabledForVertexPrograms:!1,symbolColor:r.symbolColors,vvSize:r.vvSize,vvColor:r.vvColor,vvInstancingEnabled:!0,instanced:r.instanced,instancedColor:r.instancedColor,instancedDoublePrecision:r.instancedDoublePrecision,useOldSceneLightInterface:!1,pbrMode:r.usePBR?1:0,hasMetalnessAndRoughnessTexture:!1,hasEmissionTexture:!1,hasOcclusionTexture:!1,hasNormalTexture:!1,hasColorTexture:r.hasColorTexture,receiveAmbientOcclusion:r.receiveAmbientOcclusion,useCustomDTRExponentForWater:!1,normalType:0,doubleSidedMode:2,vertexTangets:!1,attributeTextureCoordinates:r.hasColorTexture?1:0,textureAlphaPremultiplied:r.textureAlphaPremultiplied,attributeColor:r.vertexColors,screenSizePerspectiveEnabled:r.screenSizePerspective,verticalOffsetEnabled:r.verticalOffset,offsetBackfaces:r.offsetBackfaces,doublePrecisionRequiresObfuscation:no(e.rctx),alphaDiscardMode:r.alphaDiscardMode,supportsTextureAtlas:!1,multipassTerrainEnabled:r.multipassTerrainEnabled,cullAboveGround:r.cullAboveGround});return new Bn(e.rctx,i.generateSource("vertex"),i.generateSource("fragment"),ti)}}Lo.shader=new Zr(Ro,()=>Promise.resolve().then((function(){return Ro})));class Do extends Fi{constructor(e){super(e,No),this.supportsEdges=!0,this.techniqueConfig=new Bo,this.vertexBufferLayout=Do.getVertexBufferLayout(this.params),this.instanceBufferLayout=e.instanced?Do.getInstanceBufferLayout(this.params):null}isVisibleInPass(e){return 4!==e&&6!==e&&7!==e||this.params.castShadows}isVisible(){const e=this.params;if(!super.isVisible()||0===e.layerOpacity)return!1;const t=e.instanced,r=e.vertexColors,i=e.symbolColors,n=!!t&&t.indexOf("color")>-1,o=e.vvColorEnabled,s="replace"===e.colorMixMode,a=e.opacity>0,c=e.externalColor&&e.externalColor[3]>0;return r&&(n||o||i)?!!s||a:r?s?c:a:n||o||i?!!s||a:s?c:a}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.hasNormalTexture=!!this.params.normalTextureId,this.techniqueConfig.hasColorTexture=!!this.params.textureId,this.techniqueConfig.vertexTangents=this.params.vertexTangents,this.techniqueConfig.instanced=!!this.params.instanced,this.techniqueConfig.instancedDoublePrecision=this.params.instancedDoublePrecision,this.techniqueConfig.vvSize=this.params.vvSizeEnabled,this.techniqueConfig.verticalOffset=null!==this.params.verticalOffset,this.techniqueConfig.screenSizePerspective=null!==this.params.screenSizePerspective,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.sliceHighlightDisabled=this.params.sliceHighlightDisabled,this.techniqueConfig.alphaDiscardMode=this.params.textureAlphaMode,this.techniqueConfig.normalsTypeDerivate="screenDerivative"===this.params.normals,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees,this.techniqueConfig.cullFace=null!=this.params.cullFace?this.params.cullFace:0,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!t||t.cullAboveGround,0!==e&&7!==e||(this.techniqueConfig.vertexColors=this.params.vertexColors,this.techniqueConfig.symbolColors=this.params.symbolColors,this.params.treeRendering?this.techniqueConfig.doubleSidedMode=2:this.techniqueConfig.doubleSidedMode=this.params.doubleSided&&"normal"===this.params.doubleSidedType?1:this.params.doubleSided&&"winding-order"===this.params.doubleSidedType?2:0,this.techniqueConfig.instancedColor=!!this.params.instanced&&this.params.instanced.indexOf("color")>-1,this.techniqueConfig.receiveShadows=this.params.receiveShadows&&this.params.shadowMappingEnabled,this.techniqueConfig.receiveAmbientOcclusion=!(!t||!t.ssaoEnabled)&&this.params.receiveSSAO,this.techniqueConfig.vvColor=this.params.vvColorEnabled,this.techniqueConfig.textureAlphaPremultiplied=!!this.params.textureAlphaPremultiplied,this.techniqueConfig.usePBR=this.params.usePBR,this.techniqueConfig.hasMetalnessAndRoughnessTexture=!!this.params.metallicRoughnessTextureId,this.techniqueConfig.hasEmissionTexture=!!this.params.emissiveTextureId,this.techniqueConfig.hasOcclusionTexture=!!this.params.occlusionTextureId,this.techniqueConfig.offsetBackfaces=!(!this.params.transparent||!this.params.offsetTransparentBackfaces),this.techniqueConfig.isSchematic=this.params.usePBR&&this.params.isSchematic,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.enableOffset=!t||t.camera.relativeElevation<5e5),this.techniqueConfig}intersect(e,t,r,n,o,s,a){if(null!==this.params.verticalOffset){const e=n.camera;Object(l.b)(Go,r[12],r[13],r[14]);let t=null;switch(n.viewingMode){case 1:t=Object(l.o)(ko,Go);break;case 2:t=Object(l.h)(ko,Ho)}let i=0;if(null!==this.params.verticalOffset){const r=Object(l.q)($o,Go,e.eye),n=Object(l.m)(r),o=Object(l.c)(r,r,1/n);let s=null;this.params.screenSizePerspective&&(s=Object(l.e)(t,o)),i+=function(e,t,r,i,n){let o=(r.screenLength||0)*e.pixelRatio;n&&(o=function(e,t,r,i){return pi(e,hi(t,r,i))}(o,i,t,n));const s=o*Math.tan(.5*e.fovY)/(.5*e.fullHeight);return Object(w.g)(s*t,r.minWorldLength||0,null!=r.maxWorldLength?r.maxWorldLength:1/0)}(e,n,this.params.verticalOffset,s,this.params.screenSizePerspective)}Object(l.c)(t,t,i),Object(l.r)(qo,t,n.transform.inverseRotation),o=Object(l.q)(Uo,o,qo),s=Object(l.q)(Vo,s,qo)}_i(e,t,n,o,s,function(e){return Object(i.h)(e)?(In.offset=e,In):null}(n.verticalOffset),a)}getGLMaterial(e){if(0===e.output||7===e.output||1===e.output||2===e.output||3===e.output||4===e.output)return new Io(e)}createBufferWriter(){return new zo(this.vertexBufferLayout,this.instanceBufferLayout)}static getVertexBufferLayout(e){const t=e.textureId||e.normalTextureId||e.metallicRoughnessTextureId||e.emissiveTextureId||e.occlusionTextureId,r=Object(Ln.e)().vec3f("position").vec3f("normal");return e.vertexTangents&&r.vec4f("tangent"),t&&r.vec2f("uv0"),e.vertexColors&&r.vec4u8("color"),e.symbolColors&&r.vec4u8("symbolColor"),r}static getInstanceBufferLayout(e){let t=Object(Ln.e)();return t=e.instancedDoublePrecision?t.vec3f("modelOriginHi").vec3f("modelOriginLo").mat3f("model").mat3f("modelNormal"):t.mat4f("model").mat4f("modelNormal"),e.instanced&&e.instanced.indexOf("color")>-1&&(t=t.vec4f("instanceColor")),e.instanced&&e.instanced.indexOf("featureAttribute")>-1&&(t=t.vec4f("instanceFeatureAttribute")),t}}class Io extends $n{constructor(e){const t=e.material;super({...e,...t.params}),this.updateParameters()}updateParameters(e){const t=this.material.params;this.updateTexture(t.textureId),this.technique=t.treeRendering?this.techniqueRep.acquireAndReleaseExisting(Lo,this.material.getTechniqueConfig(this.output,e),this.technique):this.techniqueRep.acquireAndReleaseExisting(Po,this.material.getTechniqueConfig(this.output,e),this.technique)}selectPipelines(){}_updateShadowState(e){e.shadowMappingEnabled!==this.material.params.shadowMappingEnabled&&this.material.setParameterValues({shadowMappingEnabled:e.shadowMappingEnabled})}_updateOccludeeState(e){e.hasOccludees!==this.material.params.sceneHasOcludees&&this.material.setParameterValues({sceneHasOcludees:e.hasOccludees})}ensureParameters(e){0!==this.output&&7!==this.output||(this._updateShadowState(e),this._updateOccludeeState(e)),this.updateParameters(e)}bind(e,t){e.bindProgram(this.technique.program),this.technique.bindPass(e,this.material.params,t),this.bindTexture(e,this.technique.program)}beginSlot(e){return e===(this.material.params.transparent?this.material.params.writeDepth?5:8:3)}getPipelineState(e,t){return this.technique.getPipelineState(t)}}const No={textureId:void 0,initTextureTransparent:!1,isSchematic:!1,usePBR:!1,normalTextureId:void 0,vertexTangents:!1,occlusionTextureId:void 0,emissiveTextureId:void 0,metallicRoughnessTextureId:void 0,emissiveFactor:[0,0,0],mrrFactors:[0,1,.5],ambient:[.2,.2,.2],diffuse:[.8,.8,.8],externalColor:[1,1,1,1],colorMixMode:"multiply",opacity:1,layerOpacity:1,vertexColors:!1,symbolColors:!1,doubleSided:!1,doubleSidedType:"normal",cullFace:void 0,instanced:void 0,instancedDoublePrecision:!1,normals:"default",receiveSSAO:!0,receiveShadows:!0,castShadows:!0,shadowMappingEnabled:!1,verticalOffset:null,screenSizePerspective:null,slicePlaneEnabled:!1,sliceHighlightDisabled:!1,offsetTransparentBackfaces:!1,vvSizeEnabled:!1,vvSizeMinSize:[1,1,1],vvSizeMaxSize:[100,100,100],vvSizeOffset:[0,0,0],vvSizeFactor:[1,1,1],vvSizeValue:[1,1,1],vvColorEnabled:!1,vvColorValues:[0,0,0,0,0,0,0,0],vvColorColors:[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],vvSymbolAnchor:[0,0,0],vvSymbolRotationMatrix:[1,0,0,0,1,0,0,0,1],transparent:!1,writeDepth:!0,textureAlphaMode:0,textureAlphaCutoff:.1,textureAlphaPremultiplied:!1,sceneHasOcludees:!1,renderOccluded:1};class zo{constructor(e,t){this.vertexBufferLayout=e,this.instanceBufferLayout=t}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get("position").length}write(e,t,r,i){!function(e,t,r,i,n,o){for(const s of t.fieldNames){const t=e.vertexAttributes.get(s),a=e.indices.get(s);if(t&&a)switch(s){case"position":{Cr(3===t.size);const e=n.getField(s,v.k);e&&Di(a,t.data,r,e,o);break}case"normal":{Cr(3===t.size);const e=n.getField(s,v.k);e&&Ii(a,t.data,i,e,o,1);break}case"uv0":{Cr(2===t.size);const e=n.getField(s,v.n);e&&Bi(a,t.data,e,o);break}case"color":{Cr(3===t.size||4===t.size);const e=n.getField(s,v.r);e&&Ni(a,t.data,t.size,e,o);break}case"symbolColor":{Cr(3===t.size||4===t.size);const e=n.getField(s,v.r);e&&Ni(a,t.data,t.size,e,o);break}case"tangent":{Cr(4===t.size);const e=n.getField(s,v.p);e&&Li(a,t.data,e,o);break}}}}(t,this.vertexBufferLayout,e.transformation,e.invTranspTransformation,r,i)}}const Uo=Object(c.e)(),Vo=Object(c.e)(),Ho=Object(c.g)(0,0,1),ko=Object(c.e)(),qo=Object(c.e)(),Go=Object(c.e)(),$o=Object(c.e)();class Wo{constructor(e){this.streamDataRequester=e}async loadJSON(e,t){return this.load("json",e,t)}async loadBinary(e,t){return Object(_n.u)(e)?(Object(n.v)(t),Object(_n.j)(e)):this.load("binary",e,t)}async loadImage(e,t){return this.load("image",e,t)}async load(e,t,r){if(Object(i.c)(this.streamDataRequester))return(await Object(a.default)(t,{responseType:Xo[e]})).data;const c=await Object(s.d)(this.streamDataRequester.request(t,e,r));if(!0===c.ok)return c.value;throw Object(n.u)(c.error),new o.a("","Request for resource failed: "+c.error)}}const Xo={image:"image",binary:"array-buffer",json:"json"},Yo=i.a.getLogger("esri.views.3d.glTF");class Ko{constructor(e){this.data=e,this.offset4=0,this.dataUint32=new Uint32Array(this.data,0,Math.floor(this.data.byteLength/4))}readUint32(){const e=this.offset4;return this.offset4+=1,this.dataUint32[e]}readUint8Array(e){const t=4*this.offset4;return this.offset4+=e/4,new Uint8Array(this.data,t,e)}remainingBytes(){return this.data.byteLength-4*this.offset4}}const Qo={baseColorFactor:[1,1,1,1],metallicFactor:1,roughnessFactor:1},Jo={pbrMetallicRoughness:Qo,emissiveFactor:[0,0,0],alphaMode:"OPAQUE",alphaCutoff:.5,doubleSided:!1},Zo={ESRI_externalColorMixMode:"tint"},es=(e={})=>{const t={...Qo,...e.pbrMetallicRoughness},r=function(e){switch(e.ESRI_externalColorMixMode){case"multiply":case"tint":case"ignore":case"replace":break;default:Object(yn.a)(e.ESRI_externalColorMixMode),e.ESRI_externalColorMixMode="tint"}return e}({...Zo,...e.extras});return{...Jo,...e,pbrMetallicRoughness:t,extras:r}},ts={magFilter:9729,minFilter:9987,wrapS:10497,wrapT:10497};function rs(e,t){const r=e.count;t||(t=new e.TypedArrayConstructor(r));for(let i=0;i<r;i++)t[i]=e.get(i);return t}function is(e,t){return new e(new ArrayBuffer(t*e.ElementCount*Object(Ln.b)(e.ElementType)))}const ns=1179937895;class os{constructor(e,t,r,i,n){this.context=e,this.errorContext=t,this.uri=r,this.json=i,this.glbBuffer=n,this.bufferCache=new Map,this.textureCache=new Map,this.materialCache=new Map,this.nodeParentMap=new Map,this.nodeTransformCache=new Map,this.baseUri=function(e){let t,r;return e.replace(/^(.*\/)?([^/]*)$/,(e,i,n)=>(t=i||"",r=n||"","")),{dirPart:t,filePart:r}}(this.uri).dirPart,this.checkVersionSupported(),this.checkRequiredExtensionsSupported(),t.errorUnsupportedIf(null==i.scenes,"Scenes must be defined."),t.errorUnsupportedIf(null==i.meshes,"Meshes must be defined"),t.errorUnsupportedIf(null==i.nodes,"Nodes must be defined."),this.computeNodeParents()}static async load(e,t,r,i){if(Object(_n.u)(r)){const i=Object(_n.i)(r);if("model/gltf-binary"!==i.mediaType)try{const n=JSON.parse(i.isBase64?atob(i.data):i.data);return new os(e,t,r,n)}catch{}const n=Object(_n.j)(r);if(os.isGLBData(n))return this.fromGLBData(e,t,r,n)}if(r.endsWith(".gltf")){const n=await e.loadJSON(r,i);return new os(e,t,r,n)}const n=await e.loadBinary(r,i);if(os.isGLBData(n))return this.fromGLBData(e,t,r,n);const o=await e.loadJSON(r,i);return new os(e,t,r,o)}static isGLBData(e){const t=new Ko(e);return t.remainingBytes()>=4&&t.readUint32()===ns}static async fromGLBData(e,t,r,i){const n=await os.parseGLBData(t,i);return new os(e,t,r,n.json,n.binaryData)}static async parseGLBData(e,t){const r=new Ko(t);e.assert(r.remainingBytes()>=12,"GLB binary data is insufficiently large.");const i=r.readUint32(),n=r.readUint32(),o=r.readUint32();e.assert(i===ns,"Magic first 4 bytes do not fit to expected GLB value."),e.assert(t.byteLength>=o,"GLB binary data is smaller than header specifies."),e.errorUnsupportedIf(2!==n,"An unsupported GLB container version was detected. Only version 2 is supported.");let s,a,c=0;for(;r.remainingBytes()>=8;){const t=r.readUint32(),i=r.readUint32();0===c?(e.assert(1313821514===i,"First GLB chunk must be JSON."),e.assert(t>=0,"No JSON data found."),s=await ds(r.readUint8Array(t))):1===c?(e.errorUnsupportedIf(5130562!==i,"Second GLB chunk expected to be BIN."),a=r.readUint8Array(t)):e.warnUnsupported("More than 2 GLB chunks detected. Skipping."),c+=1}return s||e.error("No GLB JSON chunk detected."),{json:s,binaryData:a}}async getBuffer(e,t){const r=this.json.buffers[e],i=this.errorContext;if(null==r.uri)return i.assert(null!=this.glbBuffer,"GLB buffer not present"),this.glbBuffer;let n=this.bufferCache.get(e);if(!n){const o=await this.context.loadBinary(this.resolveUri(r.uri),t);n=new Uint8Array(o),this.bufferCache.set(e,n),i.assert(n.byteLength===r.byteLength,"Buffer byte lengths should match.")}return n}async getAccessor(e,t){const r=this.json.accessors[e],i=this.errorContext;i.errorUnsupportedIf(null==r.bufferView,"Some accessor does not specify a bufferView."),i.errorUnsupportedIf(r.type in["MAT2","MAT3","MAT4"],`AttributeType ${r.type} is not supported`);const n=this.json.bufferViews[r.bufferView],o=await this.getBuffer(n.buffer,t),s=ls[r.type],a=us[r.componentType],c=s*a,l=n.byteStride||c;return{raw:o.buffer,byteStride:l,byteOffset:o.byteOffset+(n.byteOffset||0)+(r.byteOffset||0),entryCount:r.count,isDenselyPacked:l===c,componentCount:s,componentByteSize:a,componentType:r.componentType,min:r.min,max:r.max,normalized:!!r.normalized}}async getIndexData(e,t){if(null==e.indices)return null;const r=await this.getAccessor(e.indices,t);if(r.isDenselyPacked)switch(r.componentType){case 5121:return new Uint8Array(r.raw,r.byteOffset,r.entryCount);case 5123:return new Uint16Array(r.raw,r.byteOffset,r.entryCount);case 5125:return new Uint32Array(r.raw,r.byteOffset,r.entryCount)}else switch(r.componentType){case 5121:return rs(this.wrapAccessor(v.q,r));case 5123:return rs(this.wrapAccessor(v.u,r));case 5125:return rs(this.wrapAccessor(v.t,r))}}async getPositionData(e,t){const r=this.errorContext;r.errorUnsupportedIf(null==e.attributes.POSITION,"No POSITION vertex data found.");const i=await this.getAccessor(e.attributes.POSITION,t);return r.errorUnsupportedIf(5126!==i.componentType,"Expected type FLOAT for POSITION vertex attribute, but found "+fs[i.componentType]),r.errorUnsupportedIf(3!==i.componentCount,"POSITION vertex attribute must have 3 components, but found "+i.componentCount.toFixed()),this.wrapAccessor(v.k,i)}async getNormalData(e,t){const r=this.errorContext;r.assert(null!=e.attributes.NORMAL,"No NORMAL vertex data found.");const i=await this.getAccessor(e.attributes.NORMAL,t);return r.errorUnsupportedIf(5126!==i.componentType,"Expected type FLOAT for NORMAL vertex attribute, but found "+fs[i.componentType]),r.errorUnsupportedIf(3!==i.componentCount,"NORMAL vertex attribute must have 3 components, but found "+i.componentCount.toFixed()),this.wrapAccessor(v.k,i)}async getTangentData(e,t){const r=this.errorContext;r.assert(null!=e.attributes.TANGENT,"No TANGENT vertex data found.");const i=await this.getAccessor(e.attributes.TANGENT,t);return r.errorUnsupportedIf(5126!==i.componentType,"Expected type FLOAT for TANGENT vertex attribute, but found "+fs[i.componentType]),r.errorUnsupportedIf(4!==i.componentCount,"TANGENT vertex attribute must have 4 components, but found "+i.componentCount.toFixed()),new v.p(i.raw,i.byteOffset,i.byteStride,i.byteOffset+i.byteStride*i.entryCount)}async getTextureCoordinates(e,t){const r=this.errorContext;r.assert(null!=e.attributes.TEXCOORD_0,"No TEXCOORD_0 vertex data found.");const i=await this.getAccessor(e.attributes.TEXCOORD_0,t);return r.errorUnsupportedIf(2!==i.componentCount,"TEXCOORD_0 vertex attribute must have 2 components, but found "+i.componentCount.toFixed()),5126===i.componentType?this.wrapAccessor(v.n,i):(r.errorUnsupportedIf(!i.normalized,"Integer component types are only supported for a normalized accessor for TEXCOORD_0."),function(e){switch(e.componentType){case 5120:return new v.C(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5121:return new v.B(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5122:return new v.A(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5123:return new v.z(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5125:return new v.y(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case 5126:return new v.n(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);default:return void Object(yn.a)(e.componentType)}}(i))}async getVertexColors(e,t){const r=this.errorContext;r.assert(null!=e.attributes.COLOR_0,"No COLOR_0 vertex data found.");const i=await this.getAccessor(e.attributes.COLOR_0,t);if(r.errorUnsupportedIf(4!==i.componentCount&&3!==i.componentCount,"COLOR_0 attribute must have 3 or 4 components, but found "+i.componentCount.toFixed()),4===i.componentCount){if(5126===i.componentType)return this.wrapAccessor(v.p,i);if(5121===i.componentType)return this.wrapAccessor(v.r,i);if(5123===i.componentType)return this.wrapAccessor(v.v,i)}else if(3===i.componentCount){if(5126===i.componentType)return this.wrapAccessor(v.k,i);if(5121===i.componentType)return this.wrapAccessor(v.w,i);if(5123===i.componentType)return this.wrapAccessor(v.x,i)}r.errorUnsupported("Unsupported component type for COLOR_0 attribute: "+fs[i.componentType])}hasPositions(e){return void 0!==e.attributes.POSITION}hasNormals(e){return void 0!==e.attributes.NORMAL}hasVertexColors(e){return void 0!==e.attributes.COLOR_0}hasTextureCoordinates(e){return void 0!==e.attributes.TEXCOORD_0}hasTangents(e){return void 0!==e.attributes.TANGENT}async getMaterial(e,t,r){const i=this.errorContext;let n=this.materialCache.get(e.material);if(!n){const o=null!=e.material?es(this.json.materials[e.material]):es(),s=o.pbrMetallicRoughness,a=this.hasVertexColors(e);let c,l,u,d,f;s.baseColorTexture&&(i.errorUnsupportedIf(0!==(s.baseColorTexture.texCoord||0),"Only TEXCOORD with index 0 is supported."),c=await this.getTexture(s.baseColorTexture.index,t)),o.normalTexture&&(0!==(o.normalTexture.texCoord||0)?i.warnUnsupported("Only TEXCOORD with index 0 is supported for the normal map texture."):l=await this.getTexture(o.normalTexture.index,t)),o.occlusionTexture&&r&&(0!==(o.occlusionTexture.texCoord||0)?i.warnUnsupported("Only TEXCOORD with index 0 is supported for the occlusion texture."):u=await this.getTexture(o.occlusionTexture.index,t)),o.emissiveTexture&&r&&(0!==(o.emissiveTexture.texCoord||0)?i.warnUnsupported("Only TEXCOORD with index 0 is supported for the emissive texture."):d=await this.getTexture(o.emissiveTexture.index,t)),s.metallicRoughnessTexture&&r&&(0!==(s.metallicRoughnessTexture.texCoord||0)?i.warnUnsupported("Only TEXCOORD with index 0 is supported for the metallicRoughness texture."):f=await this.getTexture(s.metallicRoughnessTexture.index,t));const h=null!=e.material?e.material:-1;n={alphaMode:o.alphaMode,alphaCutoff:o.alphaCutoff,color:s.baseColorFactor,doubleSided:!!o.doubleSided,colorTexture:c,normalTexture:l,name:o.name,id:h,occlusionTexture:u,emissiveTexture:d,emissiveFactor:o.emissiveFactor,metallicFactor:s.metallicFactor,roughnessFactor:s.roughnessFactor,metallicRoughnessTexture:f,vertexColors:a,ESRI_externalColorMixMode:o.extras.ESRI_externalColorMixMode}}return n}async getTexture(e,t){const r=this.errorContext,i=this.json.textures[e],n=(e=>({...ts,...e}))(null!=i.sampler?this.json.samplers[i.sampler]:{});r.errorUnsupportedIf(null==i.source,"Source is expected to be defined for a texture.");const o=this.json.images[i.source];let s=this.textureCache.get(e);if(!s){let i;if(o.uri)i=await this.context.loadImage(this.resolveUri(o.uri),t);else{r.errorUnsupportedIf(null==o.bufferView,"Image bufferView must be defined."),r.errorUnsupportedIf(null==o.mimeType,"Image mimeType must be defined.");const e=this.json.bufferViews[o.bufferView],n=await this.getBuffer(e.buffer,t);r.errorUnsupportedIf(null!=e.byteStride,"byteStride not supported for image buffer"),i=await async function(e,t){return new Promise((r,i)=>{const n=new Blob([e],{type:t}),o=URL.createObjectURL(n),s=new Image;s.addEventListener("load",()=>{URL.revokeObjectURL(o),"decode"in s?s.decode().then(()=>r(s),()=>r(s)):r(s)}),s.addEventListener("error",e=>{URL.revokeObjectURL(o),i(e)}),s.src=o})}(new Uint8Array(n.buffer,n.byteOffset+(e.byteOffset||0),e.byteLength),o.mimeType)}s={data:i,wrapS:n.wrapS,wrapT:n.wrapT,minFilter:n.minFilter,name:o.name,id:e},this.textureCache.set(e,s)}return s}getNodeTransform(e){if(void 0===e)return as;let t=this.nodeTransformCache.get(e);if(!t){const r=this.getNodeTransform(this.getNodeParent(e)),i=this.json.nodes[e];i.matrix?t=Object(f.f)([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r,i.matrix):i.translation||i.rotation||i.scale?(t=h(r),i.translation&&Object(f.i)(t,t,i.translation),i.rotation&&(cs[3]=Object(Tn.b)(cs,i.rotation),Object(f.g)(t,t,cs[3],cs)),i.scale&&Object(f.h)(t,t,i.scale)):t=r,this.nodeTransformCache.set(e,t)}return t}wrapAccessor(e,t){return new e(t.raw,t.byteOffset,t.byteStride,t.byteOffset+t.byteStride*(t.entryCount-1)+t.componentByteSize*t.componentCount)}resolveUri(e){return Object(_n.y)(e,this.baseUri)}getNodeParent(e){return this.nodeParentMap.get(e)}checkVersionSupported(){const e=d.a.parse(this.json.asset.version,"glTF");ss.validate(e)}checkRequiredExtensionsSupported(){const e=this.json,t=this.errorContext;e.extensionsRequired&&0!==e.extensionsRequired.length&&t.errorUnsupported("gltf loader was not able to load unsupported feature. Required extensions: "+e.extensionsRequired.join(", "))}computeNodeParents(){this.json.nodes.forEach((e,t)=>{e.children&&e.children.forEach(e=>{this.nodeParentMap.set(e,t)})})}}const ss=new d.a(2,0,"glTF"),as=Object(f.e)([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],Math.PI/2),cs=[0,0,0,1],ls={SCALAR:1,VEC2:2,VEC3:3,VEC4:4},us={5120:1,5121:1,5122:2,5123:2,5126:4,5125:4};async function ds(e){return new Promise((t,r)=>{const i=new Blob([e]),n=new FileReader;n.onload=()=>{const e=n.result;t(JSON.parse(e))},n.onerror=e=>{r(e)},n.readAsText(i)})}const fs={5120:"BYTE",5121:"UNSIGNED_BYTE",5122:"SHORT",5123:"UNSIGNED_SHORT",5125:"UNSIGNED_INT",5126:"FLOAT"};let hs=0;function ms(e){const t=e.json;let r=null;return t.nodes.forEach(e=>{const t=e.extras;Object(i.h)(t)&&(t.ESRI_proxyEllipsoid||t.ESRI_lod)&&(r=t)}),r}function ps(e){return e.extensions&&e.extensions.MSFT_lod&&Array.isArray(e.extensions.MSFT_lod.ids)}function gs(e,t,r){const i=t=>{const i=`${r}_tex_${t&&t.id}${t&&t.name?"_"+t.name:""}`;if(t&&!e.textures.has(i)){const r=function(e,t={}){return{data:e,parameters:{wrap:{s:10497,t:10497,...t.wrap},noUnpackFlip:!0,mipmap:!1,...t}}}(t.data,{wrap:{s:bs(t.wrapS),t:bs(t.wrapT)},mipmap:xs.some(e=>e===t.minFilter),noUnpackFlip:!0});e.textures.set(i,r)}return i},n=`${r}_mat_${t.id}_${t.name}`;if(!e.materials.has(n)){const r=function(e={}){return{color:[1,1,1],opacity:1,alphaMode:"OPAQUE",alphaCutoff:.5,doubleSided:!1,castShadows:!0,receiveShadows:!0,receiveAmbientOcclustion:!0,textureColor:null,textureNormal:null,textureOcclusion:null,textureEmissive:null,textureMetallicRoughness:null,emissiveFactor:[0,0,0],metallicFactor:1,roughnessFactor:1,colorMixMode:"multiply",...e}}({color:[t.color[0],t.color[1],t.color[2]],opacity:t.color[3],alphaMode:t.alphaMode,alphaCutoff:t.alphaCutoff,doubleSided:t.doubleSided,colorMixMode:t.ESRI_externalColorMixMode,textureColor:t.colorTexture?i(t.colorTexture):void 0,textureNormal:t.normalTexture?i(t.normalTexture):void 0,textureOcclusion:t.occlusionTexture?i(t.occlusionTexture):void 0,textureEmissive:t.emissiveTexture?i(t.emissiveTexture):void 0,textureMetallicRoughness:t.metallicRoughnessTexture?i(t.metallicRoughnessTexture):void 0,emissiveFactor:[t.emissiveFactor[0],t.emissiveFactor[1],t.emissiveFactor[2]],metallicFactor:t.metallicFactor,roughnessFactor:t.roughnessFactor});e.materials.set(n,r)}return n}function bs(e){if(33071===e||33648===e||10497===e)return e;vs.error("Unexpected TextureSampler WrapMode: "+e)}const vs=new class{error(e){throw new o.a("gltf-loader-error",e)}errorUnsupported(e){throw new o.a("gltf-loader-unsupported-feature",e)}errorUnsupportedIf(e,t){e&&this.errorUnsupported(t)}assert(e,t){e||this.error(t)}warn(e){Yo.warn(e)}warnUnsupported(e){this.warn("[Unsupported Feature] "+e)}warnUnsupportedIf(e,t){e&&this.warnUnsupported(t)}},xs=[9987,9985],ys=["POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN"];function _s(e,t,r){const i=Math.min(e.count,t.count),n=e.typedBuffer,o=e.typedBufferStride,s=t.typedBuffer,a=t.typedBufferStride;for(let e=0;e<i;e++){const t=e*o,i=e*a;n[t]=r*s[i],n[t+1]=r*s[i+1],n[t+2]=r*s[i+2],n[t+3]=r*s[i+3]}}var Ts=r(68),Os=r(69);let ws,Ss=null,Ms=null;const As=i.a.getLogger("esri.views.3d.webgl-engine.lib.DDSUtil");function Cs(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const Es=Cs("DXT1"),js=Cs("DXT3"),Ps=Cs("DXT5");class Fs extends Br{constructor(e,t){super(),this.data=e,this.type=4,this.glTexture=null,this.powerOfTwoStretchInfo=null,this.loadingPromise=null,this.loadingController=null,this.events=new Ts.a,this.params=t||{},this.params.mipmap=!1!==this.params.mipmap,this.params.noUnpackFlip=this.params.noUnpackFlip||!1,this.params.preMultiplyAlpha=this.params.preMultiplyAlpha||!1,this.params.wrap=this.params.wrap||{s:10497,t:10497},this.params.powerOfTwoResizeMode=this.params.powerOfTwoResizeMode||1,this.estimatedTexMemRequired=Fs.estimateTexMemRequired(this.data,this.params),this.startPreload()}startPreload(){const e=this.data;Object(i.c)(e)||(e instanceof HTMLVideoElement?this.startPreloadVideoElement(e):e instanceof HTMLImageElement&&this.startPreloadImageElement(e))}startPreloadVideoElement(e){Object(_n.t)(e.src)||"auto"===e.preload&&e.crossOrigin||(e.preload="auto",e.crossOrigin="anonymous",e.src=e.src)}startPreloadImageElement(e){Object(_n.u)(e.src)||Object(_n.t)(e.src)||e.crossOrigin||(e.crossOrigin="anonymous",e.src=e.src)}static getDataDimensions(e){return e instanceof HTMLVideoElement?{width:e.videoWidth,height:e.videoHeight}:e}static estimateTexMemRequired(e,t){if(Object(i.c)(e))return 0;if(Object(ne.f)(e)||Object(ne.c)(e))return t.encoding===Fs.BASIS_ENCODING?function(e){if(Object(i.c)(Ss))return e.byteLength;const t=new Ss.BasisFile(new Uint8Array(e));if(t.getNumImages()<1)return 0;const r=t.getNumLevels(0),n=t.getHasAlpha(),o=t.getImageWidth(0,0),s=t.getImageHeight(0,0);t.close(),t.delete();const a=dn(n?37496:37492),c=(4**r-1)/(3*4**(r-1));return Math.ceil(o*s*a*c)}(e):e.byteLength;const{width:r,height:n}=e instanceof Image||e instanceof ImageData||e instanceof HTMLCanvasElement||e instanceof HTMLVideoElement?Fs.getDataDimensions(e):t;return(t.mipmap?4/3:1)*r*n*(t.components||4)||0}dispose(){this.data=void 0}get width(){return this.params.width}get height(){return this.params.height}createDescriptor(e){const t=this.params.mipmap&&!this.params.disableAnisotropy;return{target:3553,pixelFormat:6408,dataType:5121,wrapMode:this.params.wrap,flipped:!this.params.noUnpackFlip,samplingMode:this.params.mipmap?9987:9729,hasMipmap:this.params.mipmap,preMultiplyAlpha:this.params.preMultiplyAlpha,maxAnisotropy:t?e.parameters.maxMaxAnisotropy:void 0}}load(e,t){if(Object(i.h)(this.glTexture))return this.glTexture;if(Object(i.h)(this.loadingPromise))return this.loadingPromise;const r=this.data;return Object(i.c)(r)?(this.glTexture=new an.b(e,this.createDescriptor(e),null),e.bindTexture(this.glTexture,0),this.glTexture):"string"==typeof r?this.loadFromURL(e,t,r):r instanceof Image?this.loadFromImageElement(e,t,r):r instanceof HTMLVideoElement?this.loadFromVideoElement(e,t,r):r instanceof ImageData||r instanceof HTMLCanvasElement?this.loadFromImage(e,r,t):(Object(ne.f)(r)||Object(ne.c)(r))&&this.params.encoding===Fs.DDS_ENCODING?this.loadFromDDSData(e,r):(Object(ne.f)(r)||Object(ne.c)(r))&&this.params.encoding===Fs.BASIS_ENCODING?this.loadFromBasis(e,r):Object(ne.c)(r)?this.loadFromPixelData(e,r):Object(ne.f)(r)?this.loadFromPixelData(e,new Uint8Array(r)):null}get requiresFrameUpdates(){return this.data instanceof HTMLVideoElement}frameUpdate(e,t,r){if(!(this.data instanceof HTMLVideoElement)||Object(i.c)(this.glTexture))return r;if(this.data.readyState<2||r===this.data.currentTime)return r;if(Object(i.h)(this.powerOfTwoStretchInfo)){const{framebuffer:r,vao:i,sourceTexture:n}=this.powerOfTwoStretchInfo;n.setData(this.data),this.drawStretchedTexture(e,t,r,i,n,this.glTexture)}else{const{width:e,height:t}=this.data,{width:r,height:i}=this.glTexture.descriptor;e!==r||t!==i?this.glTexture.updateData(0,0,0,Math.min(e,r),Math.min(t,i),this.data):this.glTexture.setData(this.data)}return this.glTexture.descriptor.hasMipmap&&this.glTexture.generateMipmap(),this.data.currentTime}loadFromDDSData(e,t){return this.glTexture=function(e,t,r,i){const{textureData:n,internalFormat:o,width:s,height:a}=function(e,t){const r=new Int32Array(e,0,31);if(542327876!==r[0])return As.error("Invalid magic number in DDS header"),null;if(!(4&r[20]))return As.error("Unsupported format, must contain a FourCC code"),null;const i=r[21];let n,o;switch(i){case Es:n=8,o=33776;break;case js:n=16,o=33778;break;case Ps:n=16,o=33779;break;default:return As.error("Unsupported FourCC code:",(s=i,String.fromCharCode(255&s,s>>8&255,s>>16&255,s>>24&255))),null}var s;let a=1,c=r[4],l=r[3];0==(3&c)&&0==(3&l)||(As.warn("Rounding up compressed texture size to nearest multiple of 4."),c=c+3&-4,l=l+3&-4);const u=c,d=l;131072&r[2]&&!1!==t&&(a=Math.max(1,r[7])),1===a||Object(w.i)(c)&&Object(w.i)(l)||(As.warn("Ignoring mipmaps of non power of two sized compressed texture."),a=1);let f,h,m=r[1]+4;const p=[];for(let t=0;t<a;++t)h=(c+3>>2)*(l+3>>2)*n,f=new Uint8Array(e,m,h),p.push(f),m+=h,c=Math.max(1,c>>1),l=Math.max(1,l>>1);return{textureData:{type:"compressed",levels:p},internalFormat:o,width:u,height:d}}(r,i);t.samplingMode=n.levels.length>1?9987:9729,t.hasMipmap=n.levels.length>1,t.internalFormat=o,t.width=s,t.height=a;const c=new an.b(e,t,n);return e.bindTexture(c,0),c}(e,this.createDescriptor(e),t,this.params.mipmap),e.bindTexture(this.glTexture,0),this.glTexture}loadFromBasis(e,t){return this.loadAsync(()=>async function(e,t,n){Object(i.c)(Ss)&&(Ss=await async function(){return Object(i.c)(Ms)&&(Ms=function(){if(Object(i.c)(ws)){const e=e=>Object(Os.a)("esri/libs/basisu/"+e);ws=r.e(73).then(r.bind(null,536)).then((function(e){return e.b})).then(({default:t})=>t({locateFile:e}).then(e=>(e.initializeBasis(),delete e.then,e)))}return ws}(),Ss=await Ms),Ms}());const o=new Ss.BasisFile(new Uint8Array(n));if(o.getNumImages()<1)return null;const s=o.getNumLevels(0),a=o.getHasAlpha(),c=o.getImageWidth(0,0),l=o.getImageHeight(0,0),{compressedTextureETC:u,compressedTextureS3TC:d}=e.capabilities,[f,h]=u?a?[1,37496]:[0,37492]:d?a?[3,33779]:[2,33776]:[13,6408];o.startTranscoding();const m=[];for(let e=0;e<s;e++)m.push(new Uint8Array(o.getImageTranscodedSizeInBytes(0,e,f))),o.transcodeImage(m[e],0,e,f,0,0);o.close(),o.delete();const p={...t,samplingMode:s>1?9987:9729,hasMipmap:s>1,internalFormat:h,width:c,height:l};return new an.b(e,p,{type:"compressed",levels:m})}(e,this.createDescriptor(e),t).then(e=>(this.glTexture=e,e)))}loadFromPixelData(e,t){Cr(this.params.width>0&&this.params.height>0);const r=this.createDescriptor(e);return r.pixelFormat=1===this.params.components?6409:3===this.params.components?6407:6408,r.width=this.params.width,r.height=this.params.height,this.glTexture=new an.b(e,r,t),e.bindTexture(this.glTexture,0),this.glTexture}async loadAsync(e){const t=Object(n.d)();this.loadingController=t;const r=e(t.signal);this.loadingPromise=r;const i=()=>{this.loadingController===t&&(this.loadingController=null),this.loadingPromise===r&&(this.loadingPromise=null)};return r.then(i,i),r}loadFromURL(e,t,r){return this.loadAsync(async i=>{const n=await T(r,{signal:i});return this.loadFromImage(e,n,t)})}loadFromImageElement(e,t,r){return r.complete?this.loadFromImage(e,r,t):this.loadAsync(async i=>{const n=await Object(a.l)(r,r.src,!1,i);return this.loadFromImage(e,n,t)})}loadFromVideoElement(e,t,r){return r.readyState>=2?this.loadFromImage(e,r,t):this.loadFromVideoElementAsync(e,t,r)}loadFromVideoElementAsync(e,t,r){return this.loadAsync(s=>new Promise((a,c)=>{const l=()=>{r.removeEventListener("loadeddata",u),r.removeEventListener("error",d),Object(i.h)(f)&&f.remove()},u=()=>{r.readyState>=2&&(l(),a(this.loadFromImage(e,r,t)))},d=e=>{l(),c(e||new o.a("Failed to load video"))};r.addEventListener("loadeddata",u),r.addEventListener("error",d);const f=Object(n.q)(s,()=>d(Object(n.e)()))}))}loadFromImage(e,t,r){const i=Fs.getDataDimensions(t);this.params.width=i.width,this.params.height=i.height;const n=this.createDescriptor(e);return n.pixelFormat=3===this.params.components?6407:6408,!this.requiresPowerOfTwo(e,n)||Object(w.i)(i.width)&&Object(w.i)(i.height)?(n.width=i.width,n.height=i.height,this.glTexture=new an.b(e,n,t),e.bindTexture(this.glTexture,0),this.glTexture):(this.glTexture=this.makePowerOfTwoTexture(e,t,i,n,r),e.bindTexture(this.glTexture,0),this.glTexture)}requiresPowerOfTwo(e,t){const r=33071,i="number"==typeof t.wrapMode?t.wrapMode===r:t.wrapMode.s===r&&t.wrapMode.t===r;return!Object(an.e)(e.gl)&&(t.hasMipmap||!i)}makePowerOfTwoTexture(e,t,r,i,n){const{width:o,height:s}=r,a=Object(w.h)(o),c=Object(w.h)(s);let l;switch(i.width=a,i.height=c,this.params.powerOfTwoResizeMode){case 2:i.textureCoordinateScaleFactor=[o/a,s/c],l=new an.b(e,i),l.updateData(0,0,0,o,s,t);break;case 1:case null:case void 0:l=this.stretchToPowerOfTwo(e,t,i,n);break;default:Object(yn.a)(this.params.powerOfTwoResizeMode)}return i.hasMipmap&&l.generateMipmap(),l}stretchToPowerOfTwo(e,t,r,i){const n=new an.b(e,r),o=new an.a(e,{colorTarget:0,depthStencilTarget:0},n),s=new an.b(e,{target:3553,pixelFormat:r.pixelFormat,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!!r.flipped,maxAnisotropy:8,preMultiplyAlpha:r.preMultiplyAlpha},t),a=function(e,t=bn,r=ti,i=-1,n=1){let o=null;switch(t){case vn:o=new Float32Array([i,i,0,0,n,i,1,0,i,n,0,1,n,n,1,1]);break;case bn:default:o=new Float32Array([i,i,n,i,i,n,n,n])}return new fn(e,r,{geometry:t},{geometry:cn.createVertex(e,35044,o)})}(e);return this.drawStretchedTexture(e,i,o,a,s,n),this.requiresFrameUpdates?this.powerOfTwoStretchInfo={vao:a,sourceTexture:s,framebuffer:o}:(a.dispose(!0),s.dispose(),o.detachColorTexture(),e.bindFramebuffer(null),o.dispose()),n}drawStretchedTexture(e,t,r,i,n,o){e.bindFramebuffer(r);const s=e.getViewport();e.setViewport(0,0,o.descriptor.width,o.descriptor.height);const a=t.program;e.bindProgram(a),a.setUniform4f("color",1,1,1,1),a.setUniform1i("tex",0),e.bindTexture(n,0),e.bindVAO(i),e.setPipelineState(t.pipeline),e.drawArrays(5,0,function(e,t){return e.vertexBuffers[t].size/function(e){return e[0].stride}(e.layout[t])}(i,"geometry")),e.bindFramebuffer(null),e.setViewport(s.x,s.y,s.width,s.height)}unload(){if(Object(i.h)(this.powerOfTwoStretchInfo)){const{framebuffer:e,vao:t,sourceTexture:r}=this.powerOfTwoStretchInfo;t.dispose(!0),r.dispose(),e.dispose(),this.glTexture=null,this.powerOfTwoStretchInfo=null}if(Object(i.h)(this.glTexture)&&(this.glTexture.dispose(),this.glTexture=null),Object(i.h)(this.loadingController)){const e=this.loadingController;this.loadingController=null,this.loadingPromise=null,e.abort()}this.events.emit("unloaded")}}Fs.DDS_ENCODING="image/vnd-ms.dds",Fs.BASIS_ENCODING="image/x.basis";const Bs=i.a.getLogger("esri.views.3d.layers.graphics.objectResourceUtils");async function Rs(e,t){const r=await async function(e,t){const r=Object(i.h)(t)&&t.streamDataRequester;if(r)return async function(e,t,r){const i=await Object(s.d)(t.request(e,"json",r));return!0===i.ok?i.value:(Object(n.u)(i.error),void Ls(i.error.details.url))}(e,r,t);const o=await Object(s.d)(Object(a.default)(e,Object(i.p)(t)));return!0===o.ok?o.value.data:(Object(n.u)(o.error),void Ls(o.error))}(e,t);return{resource:r,textures:await async function(e,t){const r=[];for(const n in e){const o=e[n],s=o.images[0].data;if(!s){Bs.warn("Externally referenced texture data is not yet supported");continue}const a=o.encoding+";base64,"+s,c="/textureDefinitions/"+n,l={noUnpackFlip:!0,wrap:{s:10497,t:10497},preMultiplyAlpha:!0},u=Object(i.h)(t)&&t.disableTextures?Promise.resolve(null):T(a,t);r.push(u.then(e=>({refId:c,image:e,params:l,alphaChannelUsage:"rgba"===o.channels?o.alphaChannelUsage||"transparency":"none"})))}const n=await Promise.all(r),o={};for(const e of n)o[e.refId]=e;return o}(r.textureDefinitions,t)}}function Ls(e){throw new o.a("","Request for object resource failed: "+e)}function Ds(e){const t=e.params,r=t.topology;let i=!0;switch(t.vertexAttributes||(Bs.warn("Geometry must specify vertex attributes"),i=!1),t.topology){case"PerAttributeArray":break;case"Indexed":case null:case void 0:{const e=t.faces;if(e){if(t.vertexAttributes)for(const r in t.vertexAttributes){const t=e[r];t&&t.values?(null!=t.valueType&&"UInt32"!==t.valueType&&(Bs.warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`),i=!1),null!=t.valuesPerElement&&1!==t.valuesPerElement&&(Bs.warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`),i=!1)):(Bs.warn(`Indexed geometry does not specify face indices for '${r}' attribute`),i=!1)}}else Bs.warn("Indexed geometries must specify faces"),i=!1;break}default:Bs.warn(`Unsupported topology '${r}'`),i=!1}e.params.material||(Bs.warn("Geometry requires material"),i=!1);const n=e.params.vertexAttributes;for(const e in n)n[e].values||(Bs.warn("Geometries with externally defined attributes are not yet supported"),i=!1);return i}function Is(e){const t=Object(_.d)();return e.forEach(e=>{const r=e.boundingInfo;Object(i.h)(r)&&(Object(_.j)(t,r.getBBMin()),Object(_.j)(t,r.getBBMax()))}),t}function Ns(e){switch(e){case"mask":return 2;case"maskAndTransparency":return 3;case"none":return 1;case"transparency":default:return 0}}function zs(e){const t=e.params;return{id:1,material:t.material,texture:t.texture,region:t.texture}}const Us=new d.a(1,2,"wosr");async function Vs(e,t){const r=Hs(Object(u.a)(e));if("wosr"===r.fileType){const e=await(t.cache?t.cache.loadWOSR(r.url,t):Rs(r.url,t)),n=function(e,t){const r=[],n=[],o=[],s=[],a=e.resource,l=d.a.parse(a.version||"1.0","wosr");Us.validate(l);const u=a.model.name,f=a.model.geometries,h=a.materialDefinitions,m=e.textures;let p=0;const g=new Map;for(let e=0;e<f.length;e++){const a=f[e];if(!Ds(a))continue;const l=zs(a),u=a.params.vertexAttributes,d=[];for(const e in u){const t=u[e],r=t.values;d.push([e,{data:r,size:t.valuesPerElement,exclusive:!0}])}const b=[];if("PerAttributeArray"!==a.params.topology){const e=a.params.faces;for(const t in e)b.push([t,new Uint32Array(e[t].values)])}const v=m&&m[l.texture];if(v&&!g.has(l.texture)){const{image:e,params:t}=v,r=new Fs(e,t);s.push(r),g.set(l.texture,r)}const x=g.get(l.texture),y=x?x.id:void 0;let _=o[l.material]?o[l.material][l.texture]:null;if(!_){const e=h[l.material.substring(l.material.lastIndexOf("/")+1)].params;1===e.transparency&&(e.transparency=0);const r=v&&v.alphaChannelUsage,n=e.transparency>0||"transparency"===r||"maskAndTransparency"===r,s={ambient:Object(c.d)(e.diffuse),diffuse:Object(c.d)(e.diffuse),opacity:1-(e.transparency||0),transparent:n,textureAlphaMode:v?Ns(v.alphaChannelUsage):void 0,textureAlphaCutoff:.33,textureId:y,initTextureTransparent:!0,doubleSided:!0,cullFace:0,colorMixMode:e.externalColorMixMode||"tint",textureAlphaPremultiplied:!0};Object(i.h)(t)&&t.materialParamsMixin&&Object.assign(s,t.materialParamsMixin),_=new Do(s),o[l.material]||(o[l.material]={}),o[l.material][l.texture]=_}n.push(_);const T=new pn(d,b);p+=b.position?b.position.length:0,r.push(T)}return{name:u,stageResources:{textures:s,materials:n,geometries:r},pivotOffset:a.model.pivotOffset,boundingBox:Is(r),numberOfVertices:p,lodThreshold:null}}(e,t);return{lods:[n],referenceBoundingBox:n.boundingBox,isEsriSymbolResource:!1,isWosr:!0,remove:e.remove}}const n=await(t.cache?t.cache.loadGLTF(r.url,t,t.usePBR):async function(e,t,r={},n=!0){const o=await os.load(e,vs,t,r),s="gltf_"+hs++,a={lods:[],materials:new Map,textures:new Map,meta:ms(o)},c=!(!o.json.asset.extras||"symbolResource"!==o.json.asset.extras.ESRI_type);return await async function(e,t){const r=e.json,i=r.scenes[r.scene||0].nodes,n=i.length>1;for(const e of i){const t=r.nodes[e],i=[o(e,0)];if(ps(t)&&!n){const e=t.extensions.MSFT_lod.ids;i.push(...e.map((e,t)=>o(e,t+1)))}await Promise.all(i)}async function o(i,n){const s=r.nodes[i],a=e.getNodeTransform(i);if(vs.warnUnsupportedIf(null!=s.weights,"Morph targets are not supported."),null!=s.mesh){const e=r.meshes[s.mesh];for(const r of e.primitives)await t(r,a,n,e.name)}for(const e of s.children||[])await o(e,n)}}(o,async(e,t,c,l)=>{const u=void 0!==e.mode?e.mode:4,d=function(e){switch(e){case 4:case 5:case 6:return e;default:return null}}(u);if(Object(i.c)(d))return void vs.warnUnsupported("Unsupported primitive mode ("+ys[u]+"). Skipping primitive.");if(!o.hasPositions(e))return void vs.warn("Skipping primitive without POSITION vertex attribute.");const f=await o.getMaterial(e,r,n),m={transform:h(t),attributes:{position:await o.getPositionData(e,r),normal:null,texCoord0:null,color:null,tangent:null},indices:await o.getIndexData(e,r),primitiveType:d,material:gs(a,f,s)};o.hasNormals(e)&&(m.attributes.normal=await o.getNormalData(e,r)),o.hasTangents(e)&&(m.attributes.tangent=await o.getTangentData(e,r)),o.hasTextureCoordinates(e)&&(m.attributes.texCoord0=await o.getTextureCoordinates(e,r)),o.hasVertexColors(e)&&(m.attributes.color=await o.getVertexColors(e,r));let p=null;Object(i.h)(a.meta)&&Object(i.h)(a.meta.ESRI_lod)&&"screenSpaceRadius"===a.meta.ESRI_lod.metric&&(p=a.meta.ESRI_lod.thresholds[c]),a.lods[c]=a.lods[c]||{parts:[],name:l,lodThreshold:p},a.lods[c].parts.push(m)}),{model:a,meta:{isEsriSymbolResource:c,uri:o.uri},customMeta:{}}}(new Wo(t.streamDataRequester),r.url,t,t.usePBR)),o=Object(i.g)(n.model.meta,"ESRI_proxyEllipsoid");n.meta.isEsriSymbolResource&&Object(i.h)(o)&&-1!==n.meta.uri.indexOf("/RealisticTrees/")&&function(e,t){for(let r=0;r<e.model.lods.length;++r){const n=e.model.lods[r];e.customMeta.esriTreeRendering=!0;for(const o of n.parts){const n=o.attributes.normal;if(Object(i.c)(n))return;const s=o.attributes.position,a=s.count,u=Object(c.e)(),d=Object(c.e)(),h=Object(c.e)(),m=is(v.r,a),p=is(v.k,a),g=Object(f.a)([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],o.transform);for(let i=0;i<a;i++){s.getVec(i,d),n.getVec(i,u),Object(l.j)(d,d,o.transform),Object(l.q)(h,d,t.center),Object(l.a)(h,h,t.radius);const a=h[2],c=Object(l.m)(h),f=Math.min(.45+.55*c*c,1);Object(l.a)(h,h,t.radius),Object(l.j)(h,h,g),Object(l.o)(h,h),r+1!==e.model.lods.length&&e.model.lods.length>1&&Object(l.g)(h,h,u,a>-1?.2:Math.min(-4*a-3.8,1)),p.setVec(i,h),m.set(i,0,255*f),m.set(i,1,255*f),m.set(i,2,255*f),m.set(i,3,255)}o.attributes.normal=p,o.attributes.color=m}}}(n,o);const s=n.meta.isEsriSymbolResource?{usePBR:t.usePBR,isSchematic:!1,treeRendering:n.customMeta.esriTreeRendering,mrrFactors:[0,1,.2]}:{usePBR:t.usePBR,isSchematic:!1,mrrFactors:[0,1,.5]},a={...t.materialParamsMixin,treeRendering:n.customMeta.esriTreeRendering};if(null!=r.specifiedLodIndex){const e=ks(n,s,a,r.specifiedLodIndex);let t=e[0].boundingBox;return 0!==r.specifiedLodIndex&&(t=ks(n,s,a,0)[0].boundingBox),{lods:e,referenceBoundingBox:t,isEsriSymbolResource:n.meta.isEsriSymbolResource,isWosr:!1,remove:n.remove}}const m=ks(n,s,a);return{lods:m,referenceBoundingBox:m[0].boundingBox,isEsriSymbolResource:n.meta.isEsriSymbolResource,isWosr:!1,remove:n.remove}}function Hs(e){const t=e.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);return t?{fileType:"gltf",url:t[1],specifiedLodIndex:null!=t[4]?Number(t[4]):null}:e.match(/(.*\.(json|json\.gz))$/)?{fileType:"wosr",url:e,specifiedLodIndex:null}:{fileType:"unknown",url:e,specifiedLodIndex:null}}function ks(e,t,r,n){const o=e.model,s=[1,0,0,0,1,0,0,0,1],a=new Array,c=new Map,l=new Map;return o.lods.forEach((e,u)=>{if(void 0!==n&&u!==n)return;const d={name:e.name,stageResources:{textures:new Array,materials:new Array,geometries:new Array},lodThreshold:Object(i.h)(e.lodThreshold)?e.lodThreshold:null,pivotOffset:[0,0,0],numberOfVertices:0,boundingBox:Object(_.d)()};a.push(d),e.parts.forEach(e=>{const n=e.material+(e.attributes.normal?"_normal":"")+(e.attributes.color?"_color":"")+(e.attributes.texCoord0?"_texCoord0":"")+(e.attributes.tangent?"_tangent":""),a=o.materials.get(e.material),u=Object(i.h)(e.attributes.texCoord0),f=Object(i.h)(e.attributes.normal);if(!c.has(n)){if(u){if(Object(i.h)(a.textureColor)&&!l.has(a.textureColor)){const e=o.textures.get(a.textureColor),t={...e.parameters,preMultiplyAlpha:!0};l.set(a.textureColor,new Fs(e.data,t))}if(Object(i.h)(a.textureNormal)&&!l.has(a.textureNormal)){const e=o.textures.get(a.textureNormal),t={...e.parameters,preMultiplyAlpha:!0};l.set(a.textureNormal,new Fs(e.data,t))}if(Object(i.h)(a.textureOcclusion)&&!l.has(a.textureOcclusion)){const e=o.textures.get(a.textureOcclusion),t={...e.parameters,preMultiplyAlpha:!0};l.set(a.textureOcclusion,new Fs(e.data,t))}if(Object(i.h)(a.textureEmissive)&&!l.has(a.textureEmissive)){const e=o.textures.get(a.textureEmissive),t={...e.parameters,preMultiplyAlpha:!0};l.set(a.textureEmissive,new Fs(e.data,t))}if(Object(i.h)(a.textureMetallicRoughness)&&!l.has(a.textureMetallicRoughness)){const e=o.textures.get(a.textureMetallicRoughness),t={...e.parameters,preMultiplyAlpha:!0};l.set(a.textureMetallicRoughness,new Fs(e.data,t))}}const s=a.color[0]**(1/2.1),d=a.color[1]**(1/2.1),h=a.color[2]**(1/2.1),m=a.emissiveFactor[0]**(1/2.1),p=a.emissiveFactor[1]**(1/2.1),g=a.emissiveFactor[2]**(1/2.1);c.set(n,new Do({...t,transparent:"BLEND"===a.alphaMode,textureAlphaMode:qs(a.alphaMode),textureAlphaCutoff:a.alphaCutoff,diffuse:[s,d,h],ambient:[s,d,h],opacity:a.opacity,doubleSided:a.doubleSided,doubleSidedType:"winding-order",cullFace:a.doubleSided?0:2,vertexColors:!!e.attributes.color,vertexTangents:!!e.attributes.tangent,normals:f?"default":"screenDerivative",castShadows:!0,receiveSSAO:!0,textureId:Object(i.h)(a.textureColor)&&u?l.get(a.textureColor).id:void 0,colorMixMode:a.colorMixMode,normalTextureId:Object(i.h)(a.textureNormal)&&u?l.get(a.textureNormal).id:void 0,textureAlphaPremultiplied:!0,occlusionTextureId:Object(i.h)(a.textureOcclusion)&&u?l.get(a.textureOcclusion).id:void 0,emissiveTextureId:Object(i.h)(a.textureEmissive)&&u?l.get(a.textureEmissive).id:void 0,metallicRoughnessTextureId:Object(i.h)(a.textureMetallicRoughness)&&u?l.get(a.textureMetallicRoughness).id:void 0,emissiveFactor:[m,p,g],mrrFactors:[a.metallicFactor,a.roughnessFactor,t.mrrFactors[2]],isSchematic:!1,...r}))}const h=function(e,t){switch(t){case 4:return function(e){return"number"==typeof e?ai(e):Object(ne.a)(e)||Object(ne.c)(e)?new Uint32Array(e):e}(e);case 5:return function(e){const t="number"==typeof e?e:e.length;if(t<3)return new Uint16Array(0);const r=t-2,i=r<=65536?new Uint16Array(3*r):new Uint32Array(3*r);if("number"==typeof e){let e=0;for(let t=0;t<r;t+=1)t%2==0?(i[e++]=t,i[e++]=t+1,i[e++]=t+2):(i[e++]=t+1,i[e++]=t,i[e++]=t+2)}else{let t=0;for(let n=0;n<r;n+=1)if(n%2==0){const r=e[n],o=e[n+1],s=e[n+2];i[t++]=r,i[t++]=o,i[t++]=s}else{const r=e[n+1],o=e[n],s=e[n+2];i[t++]=r,i[t++]=o,i[t++]=s}}return i}(e);case 6:return function(e){const t="number"==typeof e?e:e.length;if(t<3)return new Uint16Array(0);const r=t-2,i=r<=65536?new Uint16Array(3*r):new Uint32Array(3*r);if("number"==typeof e){let e=0;for(let t=0;t<r;++t)i[e++]=0,i[e++]=t+1,i[e++]=t+2;return i}{const t=e[0];let n=e[1],o=0;for(let s=0;s<r;++s){const r=e[s+2];i[o++]=t,i[o++]=n,i[o++]=r,n=r}return i}}(e)}}(e.indices||e.attributes.position.count,e.primitiveType),m=e.attributes.position.count,p=is(v.k,m);!function(e,t,r){if(e.count!==t.count)return void x.error("source and destination buffers need to have the same number of elements");const i=e.count,n=r[0],o=r[1],s=r[2],a=r[4],c=r[5],l=r[6],u=r[8],d=r[9],f=r[10],h=r[12],m=r[13],p=r[14],g=e.typedBuffer,b=e.typedBufferStride,v=t.typedBuffer,y=t.typedBufferStride;for(let e=0;e<i;e++){const t=e*b,r=e*y,i=v[r],x=v[r+1],_=v[r+2];g[t]=n*i+a*x+u*_+h,g[t+1]=o*i+c*x+d*_+m,g[t+2]=s*i+l*x+f*_+p}}(p,e.attributes.position,e.transform);const g=[["position",{data:p.typedBuffer,size:p.elementCount,exclusive:!0}]],T=[["position",h]];if(Object(i.h)(e.attributes.normal)){const t=is(v.k,m);b(s,e.transform),function(e,t,r){if(e.count!==t.count)return void x.error("source and destination buffers need to have the same number of elements");const i=e.count,n=r[0],o=r[1],s=r[2],a=r[3],c=r[4],l=r[5],u=r[6],d=r[7],f=r[8],h=e.typedBuffer,m=e.typedBufferStride,p=t.typedBuffer,g=t.typedBufferStride;for(let e=0;e<i;e++){const t=e*m,r=e*g,i=p[r],b=p[r+1],v=p[r+2];h[t]=n*i+a*b+u*v,h[t+1]=o*i+c*b+d*v,h[t+2]=s*i+l*b+f*v}}(t,e.attributes.normal,s),g.push(["normal",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),T.push(["normal",h])}if(Object(i.h)(e.attributes.tangent)){const t=is(v.p,m);b(s,e.transform),function(e,t,r){if(e.count!==t.count)return void x.error("source and destination buffers need to have the same number of elements");const i=e.count,n=r[0],o=r[1],s=r[2],a=r[3],c=r[4],l=r[5],u=r[6],d=r[7],f=r[8],h=e.typedBuffer,m=e.typedBufferStride,p=t.typedBuffer,g=t.typedBufferStride;for(let e=0;e<i;e++){const t=e*m,r=e*g,i=p[r],b=p[r+1],v=p[r+2],x=p[r+3];h[t]=n*i+a*b+u*v,h[t+1]=o*i+c*b+d*v,h[t+2]=s*i+l*b+f*v,h[t+3]=x}}(t,e.attributes.tangent,s),g.push(["tangent",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),T.push(["tangent",h])}if(Object(i.h)(e.attributes.texCoord0)){const t=is(v.n,m);(function(e,t,r){const i=e.typedBuffer,n=e.typedBufferStride,o=t.typedBuffer,s=t.typedBufferStride,a=r?r.count:t.count;let c=(r&&r.dstIndex?r.dstIndex:0)*n,l=(r&&r.srcIndex?r.srcIndex:0)*s;if(Object(Ln.c)(t.elementType)){const e=Object(Ln.d)(t.elementType);if(Object(Ln.a)(t.elementType))for(let t=0;t<a;++t)i[c]=Math.max(o[l]/e,-1),i[c+1]=Math.max(o[l+1]/e,-1),c+=n,l+=s;else for(let t=0;t<a;++t)i[c]=o[l]/e,i[c+1]=o[l+1]/e,c+=n,l+=s}else!function(e,t,r){const i=e.typedBuffer,n=e.typedBufferStride,o=t.typedBuffer,s=t.typedBufferStride,a=r?r.count:t.count;let c=(r&&r.dstIndex?r.dstIndex:0)*n,l=(r&&r.srcIndex?r.srcIndex:0)*s;for(let e=0;e<a;++e)i[c]=o[l],i[c+1]=o[l+1],c+=n,l+=s}(e,t,r)})(t,e.attributes.texCoord0),g.push(["uv0",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),T.push(["uv0",h])}if(Object(i.h)(e.attributes.color)){const t=is(v.r,m);if(4===e.attributes.color.elementCount)e.attributes.color instanceof v.p?_s(t,e.attributes.color,255):e.attributes.color instanceof v.r?function(e,t,r){const i=e.typedBuffer,n=e.typedBufferStride,o=t.typedBuffer,s=t.typedBufferStride,a=r?r.count:t.count;let c=(r&&r.dstIndex?r.dstIndex:0)*n,l=(r&&r.srcIndex?r.srcIndex:0)*s;for(let e=0;e<a;++e)i[c]=o[l],i[c+1]=o[l+1],i[c+2]=o[l+2],i[c+3]=o[l+3],c+=n,l+=s}(t,e.attributes.color):e.attributes.color instanceof v.v&&_s(t,e.attributes.color,1/256);else{!function(e,t,r,i,n,o){const s=e.typedBuffer,a=e.typedBufferStride,c=o?o.count:e.count;let l=(o&&o.dstIndex?o.dstIndex:0)*a;for(let e=0;e<c;++e)s[l]=t,s[l+1]=r,s[l+2]=i,s[l+3]=n,l+=a}(t,255,255,255,255);const r=new v.w(t.buffer,0,4);e.attributes.color instanceof v.k?y(r,e.attributes.color,255):e.attributes.color instanceof v.w?function(e,t,r){const i=e.typedBuffer,n=e.typedBufferStride,o=t.typedBuffer,s=t.typedBufferStride,a=r?r.count:t.count;let c=(r&&r.dstIndex?r.dstIndex:0)*n,l=(r&&r.srcIndex?r.srcIndex:0)*s;for(let e=0;e<a;++e)i[c]=o[l],i[c+1]=o[l+1],i[c+2]=o[l+2],c+=n,l+=s}(r,e.attributes.color):e.attributes.color instanceof v.x&&y(r,e.attributes.color,1/256)}g.push(["color",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),T.push(["color",h])}const O=new pn(g,T);d.stageResources.geometries.push(O),d.stageResources.materials.push(c.get(n)),u&&(Object(i.h)(a.textureColor)&&d.stageResources.textures.push(l.get(a.textureColor)),Object(i.h)(a.textureNormal)&&d.stageResources.textures.push(l.get(a.textureNormal)),Object(i.h)(a.textureOcclusion)&&d.stageResources.textures.push(l.get(a.textureOcclusion)),Object(i.h)(a.textureEmissive)&&d.stageResources.textures.push(l.get(a.textureEmissive)),Object(i.h)(a.textureMetallicRoughness)&&d.stageResources.textures.push(l.get(a.textureMetallicRoughness))),d.numberOfVertices+=m;const w=O.boundingInfo;Object(i.h)(w)&&(Object(_.j)(d.boundingBox,w.getBBMin()),Object(_.j)(d.boundingBox,w.getBBMax()))})}),a}function qs(e){switch(e){case"BLEND":return 0;case"MASK":return 2;case"OPAQUE":return 1;default:return 0}}var Gs=Object.freeze({__proto__:null,fetch:Vs,parseUrl:Hs,gltfToEngineResources:ks})}});