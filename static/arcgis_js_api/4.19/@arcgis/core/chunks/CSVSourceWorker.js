/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"./tslib.es6.js";import"./ArrayPool.js";import{h as e}from"../core/lang.js";import"./deprecate.js";import"./object.js";import"../kernel.js";import"../config.js";import"./Logger.js";import"./string.js";import"./metadata.js";import"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"./PropertyOrigin.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"./Message.js";import t from"../core/Error.js";import"./ensureType.js";import"../core/accessorSupport/decorators/subclass.js";import"./Evented.js";import"./JSONSupport.js";import{urlToObject as i,getFilename as r}from"../core/urlUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./jsonMap.js";import"./reader.js";import"./writer.js";import"./resourceExtension.js";import o,{e as n,i as s,W as l}from"../geometry/SpatialReference.js";import"./locale.js";import a from"../request.js";import"./assets.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"./Ellipsoid.js";import{lngLatToXY as m}from"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"./mathUtils2.js";import"./vec3f64.js";import"./common.js";import"./vec3.js";import"./zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry.js";import"./unitUtils.js";import"./normalizeUtilsCommon.js";import"../geometry/support/normalizeUtils.js";import"./MemCache.js";import"./ItemCache.js";import"../core/watchUtils.js";import"./mat4.js";import"./pe.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformationStep.js";import"../geometry/support/GeographicTransformation.js";import{projectMany as u}from"../geometry/projection.js";import"./Scheduler.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./defaultsJSON.js";import d from"../layers/support/FieldsIndex.js";import"./QueryEngineCapabilities.js";import{a as p,b as c}from"./OptimizedFeatureSet.js";import"./featureConversionUtils.js";import"./aaBoundingBox.js";import{c as f}from"./clientSideDefaults.js";import"./quantizationUtils.js";import{j as y}from"./json.js";import{c as g}from"./projectionSupport.js";import{_ as j}from"./number3.js";import"./centroid.js";import"./quickselect.js";import"./PooledRBush.js";import{F as h}from"./FeatureStore.js";import"./optimizedFeatureQueryEngineAdapter.js";import{Q as F}from"./QueryEngine.js";import"./spatialQuerySupport.js";const I=/^\s*"([\S\s]*)"\s*$/,x=/""/g,N=[","," ",";","|","\t"];function b(e,t){const i={},r=e.length;for(let o=0;o<r;o++)i[e[o]]=t[o];return i}function*_(e,t,i){let r=0;for(;r<=e.length;){const o=e.indexOf(t,r),n=e.substring(r,o>-1?o:void 0);r+=n.length+1,i&&!n.trim()||(yield n)}}function T(e){const t=e.includes("\r\n")?"\r\n":"\n";return _(e,t,!0)}function E(e,t){return _(e,t,!1)}function*w(e,t,i){let r="",o="",n=0,s=[];e:for(;;){const{value:l,done:a}=e.next();if(a)return;const m=E(l,i);t:for(;;){const{value:e,done:t}=m.next();if(t)break t;if(r+=o+e,o="",n+=D(e),n%2==0){if(n>0){const e=I.exec(r);if(!e){s=[],r="",n=0;continue e}s.push(e[1].replace(x,'"'))}else s.push(r);r="",n=0}else o=i}0===n?(yield b(t,s),s=[]):o="\n"}}function D(e){let t=0,i=0;for(i=e.indexOf('"',i);i>=0;)t++,i=e.indexOf('"',i+1);return t}const S=f("esriGeometryPoint"),q=["esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong"],v=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point-y"],C=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point-x"],O=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,k=["csv"],P=[0,0];class U{constructor(e,t){this.x=e,this.y=t}}const V=function(){const e=j(),t=new RegExp("^"+e.regexp+"$"),i=new RegExp("["+e.group+"\\s\\xa0]","g"),r=e.factor;return function(o){const n=t.exec(o);if(e.factor=r,!n)return NaN;let s=n[1];if(!n[1]){if(!n[2])return NaN;s=n[2],e.factor*=-1}return s=s.replace(i,"").replace(e.decimal,"."),+s*e.factor}}(),Q="isInteger"in Number?Number.isInteger:e=>"number"==typeof e&&isFinite(e)&&Math.floor(e)===e;export default class{constructor(){this._fieldsIndex=null,this._queryEngine=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=null,this._fieldsIndex=null}async load(e,t={}){const[i]=await Promise.all([this._fetch(e.url,t),this._checkProjection(t&&e.parsing&&e.parsing.spatialReference)]),r=this._parse(i,e);if(this._queryEngine=this._createQueryEngine(i,r),r.layerDefinition.extent=this._queryEngine.fullExtent,r.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;r.layerDefinition.timeInfo.timeExtent=[e,t]}return r}async applyEdits(){throw new t("csv-source:editing-not-supported","applyEdits() is not supported on CSVLayer")}queryFeatures(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}async _fetch(e,r){if(!e)throw new t("csv-source:invalid-source","url not defined");const o=i(e);return(await a(o.path,{query:o.query,responseType:"text",signal:r.signal})).data}_parse(e,i){const o=i.parsing||{},n={columnDelimiter:o.columnDelimiter,layerDefinition:null,locationInfo:{latitudeFieldName:o.latitudeField,longitudeFieldName:o.longitudeField}},s=T(e);let{value:l}=s.next();if(!l)throw new t("csv","CSV is empty",{csv:e});if(l=l.trim(),!o.columnDelimiter){const e=function(e){const t=e.trim();let i=0,r="";for(const e of N){const o=t.split(e).length;o>i&&(i=o,r=e)}return""===r?null:r}(l);if(!e)throw new t("csv-source:invalid-delimiter","Unable to detect the delimiter from CSV");n.columnDelimiter=e}const a=l.split(n.columnDelimiter),m=n.layerDefinition={name:r(i.url,k)||"csv",drawingInfo:S,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:o.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:o.spatialReference||{wkid:102100}}};if(!o.latitudeField||!o.longitudeField){const e=this._inferLocationInfo(a);if(!o.longitudeField&&!e.longitudeFieldName||!o.latitudeField&&!e.latitudeFieldName)throw new t("csv","Unable to identify latitudeField and/or longitudeField from CSV");n.locationInfo={longitudeFieldName:o.longitudeField||e.longitudeFieldName,latitudeFieldName:o.latitudeField||e.latitudeFieldName}}const u=this._inferFields(s,n.columnDelimiter,a,n.locationInfo);if(o.fields&&o.fields.length){const e=new Map;for(const t of o.fields)e.set(t.name.toLowerCase(),t);for(const t of u){const i=e.get(t.name.toLowerCase());if(i){const e=t.name;Object.assign(t,i),t.name=e}}}m.fields=u;if(!m.fields.some((e=>"esriFieldTypeOID"===e.type&&(m.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};m.objectIdField=e.name,m.fields.unshift(e)}if(this._fieldsIndex=new d(m.fields),m.timeInfo){const e=m.timeInfo;if(e.startTimeField){const t=this._fieldsIndex.get(e.startTimeField);t?(e.startTimeField=t.name,t.type="esriFieldTypeDate"):e.startTimeField=null}if(e.endTimeField){const t=this._fieldsIndex.get(e.endTimeField);t?(e.endTimeField=t.name,t.type="esriFieldTypeDate"):e.endTimeField=null}if(e.trackIdField){const t=this._fieldsIndex.get(e.trackIdField);e.trackIdField=t?t.name:null}e.startTimeField||e.endTimeField||(m.timeInfo=null)}return n}_inferLocationInfo(e){let t=null,i=null;const r=t=>e.find((e=>e.toLowerCase()===t));return C.some((e=>(t=r(e),!!t))),v.some((e=>(i=r(e),!!i))),{longitudeFieldName:t,latitudeFieldName:i}}_inferFields(e,t,i,r){const o=[],n=w(e,i,t),s=[];e:for(;s.length<10;){const{value:e,done:t}=n.next();if(t)break e;s.push(e)}for(const e of i)if(e===r.longitudeFieldName||e===r.latitudeFieldName)o.push({name:e,type:"esriFieldTypeDouble",alias:e});else{const t=s.map((t=>t[e])),i=this._inferFieldType(t),r={name:e,type:null,alias:e};switch(i){case"integer":r.type="esriFieldTypeInteger";break;case"double":r.type="esriFieldTypeDouble";break;case"date":r.type="esriFieldTypeDate",r.length=36;break;default:r.type="esriFieldTypeString",r.length=255}o.push(r)}return o}_inferFieldType(e){if(!e.length)return"string";const t=/[^+-.,0-9]/;return e.map((e=>{let i=!1;if(""!==e){if(t.test(e))i=!0;else{let t=V(e);if(!isNaN(t))return/[.,]/.test(e)||!Q(t)||t>214783647||t<-214783648?"double":"integer";if(-1===e.indexOf("E"))i=!0;else{if(t=Number(e),!isNaN(t))return"double";if(-1===e.indexOf(","))i=!0;else{if(e=e.replace(",","."),t=Number(e),!isNaN(t))return"double";i=!0}}}if(i){if(!/^[-]?\d*[.,]?\d*$/.test(e)){const t=new Date(e);return this._isValidDate(t,e)?"date":"string"}return"string"}return"string"}})).reduce(((e,t)=>void 0===e||e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))}_isValidDate(t,i){if(!t||"[object Date]"!==Object.prototype.toString.call(t)||isNaN(t.getTime()))return!1;let r=!0;if(e("chrome")&&/\d+\W*$/.test(i)){const e=i.match(/[a-zA-Z]{2,}/);if(e){let t=!1,i=0;for(;!t&&i<=e.length;)t=!O.test(e[i]),i++;r=!t}}return r}_createQueryEngine(e,t){const{latitudeFieldName:i,longitudeFieldName:r}=t.locationInfo,{objectIdField:l,fields:a,extent:d,timeInfo:f}=t.layerDefinition;let g=[];const j=[],I=new Set,x=new Set,N=[];for(const{name:e,type:t}of a)"esriFieldTypeDate"===t?I.add(e):q.indexOf(t)>-1&&x.add(e),e!==l&&N.push(e);let b=0;const _=T(e);_.next();const E=w(_,N,t.columnDelimiter);e:for(;;){const{value:e,done:t}=E.next();if(t)break e;const o=this._parseCoordinateValue(e[i]),n=this._parseCoordinateValue(e[r]);if(null!=n&&null!=o&&!isNaN(o)&&!isNaN(n)){e[i]=o,e[r]=n;for(const t in e)if(t!==i&&t!==r)if(I.has(t)){const i=new Date(e[t]);e[t]=this._isValidDate(i,e[t])?i.getTime():null}else if(x.has(t)){const i=V(e[t]);isNaN(i)?e[t]=null:e[t]=i}e[l]=b,b++,g.push(new U(n,o)),j.push(e)}}if(!n({wkid:4326},d.spatialReference))if(s(d.spatialReference))for(const e of g)[e.x,e.y]=m(e.x,e.y,P);else g=u(y,g,o.WGS84,d.spatialReference,null);const D=new h({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1}),S=new F({fields:t.layerDefinition.fields,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:f,objectIdField:l,spatialReference:d.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:D}),v=[];for(let e=0;e<g.length;e++){const{x:t,y:i}=g[e],r=j[e];r[l]=e+1,v.push(new p(new c([],[t,i]),r,null,r[l]))}return D.addMany(v),S}_parseCoordinateValue(e){if(null==e||""===e)return null;let t=V(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t}async _checkProjection(e){try{await g(l,e)}catch{throw new t("csv-layer","Projection not supported")}}}export{v as csvLatitudeFieldNames,C as csvLongitudeFieldNames};
