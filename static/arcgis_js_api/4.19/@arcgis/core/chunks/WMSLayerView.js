/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"../core/lang.js";import"./Logger.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import t from"../core/Error.js";import"./ensureType.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"./resourceExtension.js";import{f as s}from"./commonProperties2.js";import{E as i}from"./ExportWMSImageParameters.js";const p=p=>{let a=class extends p{initialize(){this.exportImageParameters=new i({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(e){const{layer:r}=this;if(!e)return Promise.reject(new t("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:r}));const{popupEnabled:o}=r;if(!o)return Promise.reject(new t("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:o}));const s=this.createFetchPopupFeaturesQuery(e);if(!s)return Promise.resolve([]);const{extent:i,width:p,height:a,x:m,y:n}=s;if(!(i&&p&&a))throw new t("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:i,width:p,height:a});const u=r.fetchFeatureInfo(i,p,a,m,n);return Promise.resolve(u?[u]:[])}};return e([r()],a.prototype,"exportImageParameters",void 0),e([r({readOnly:!0})],a.prototype,"exportImageVersion",null),e([r()],a.prototype,"layer",void 0),e([r(s)],a.prototype,"timeExtent",void 0),a=e([o("esri.layers.mixins.WMSLayerView")],a),a};export{p as W};
