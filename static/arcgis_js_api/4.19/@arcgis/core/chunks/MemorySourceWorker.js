/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"./tslib.es6.js";import"./ArrayPool.js";import"../core/lang.js";import"./deprecate.js";import"./object.js";import"../kernel.js";import"../config.js";import"./Logger.js";import"./string.js";import"./metadata.js";import"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"./PropertyOrigin.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"./Message.js";import e from"../core/Error.js";import"./ensureType.js";import"../core/accessorSupport/decorators/subclass.js";import"./Evented.js";import"./JSONSupport.js";import"../core/urlUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./jsonMap.js";import"./enumeration.js";import"./reader.js";import"./writer.js";import"./resourceExtension.js";import{W as t}from"../geometry/SpatialReference.js";import"../request.js";import"./assets.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"./Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"./mathUtils2.js";import"./vec3f64.js";import"./common.js";import"./vec3.js";import"./zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import{getJsonType as i,isPoint as s}from"../geometry/support/jsonUtils.js";import"../geometry.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./domains.js";import"./arcadeOnDemand.js";import{getFieldDefaultValue as r}from"../layers/support/fieldUtils.js";import"./unitUtils.js";import"./normalizeUtilsCommon.js";import"../geometry/support/normalizeUtils.js";import"./MemCache.js";import"./ItemCache.js";import"../core/watchUtils.js";import{k as o}from"./fieldType.js";import"./mat4.js";import"./pe.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformationStep.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/projection.js";import"./Scheduler.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./defaultsJSON.js";import n from"../layers/support/FieldsIndex.js";import"./QueryEngineCapabilities.js";import"./OptimizedFeatureSet.js";import{l as a,m as l,n as p}from"./featureConversionUtils.js";import"./aaBoundingBox.js";import{i as u,f as d}from"./objectIdUtils.js";import{b as m,c,a as y}from"./clientSideDefaults.js";import"./quantizationUtils.js";import"./json.js";import{c as f,p as j}from"./projectionSupport.js";import"./centroid.js";import"./quickselect.js";import"./PooledRBush.js";import{F as g}from"./FeatureStore.js";import"./optimizedFeatureQueryEngineAdapter.js";import{Q as h}from"./QueryEngine.js";import"./spatialQuerySupport.js";import{l as I,a as b,m as F,c as _,s as E}from"./sourceUtils.js";const x=t,T={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:t},q={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function R(e){return s(e)?null!=e.z:!!e.hasZ}function S(e){return s(e)?null!=e.m:!!e.hasM}export default class{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}async load(t){const i=[],{features:s}=t,a=this._inferLayerProperties(s,t.fields),l=t.fields||[],p=null!=t.hasM?t.hasM:a.hasM,j=null!=t.hasZ?t.hasZ:a.hasZ,I=!t.spatialReference&&!a.spatialReference,b=I?x:t.spatialReference||a.spatialReference,F=I?T:null,_=t.geometryType||a.geometryType,E=!_;let R=t.objectIdField||a.objectIdField,S=t.timeInfo;if(!E&&(I&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!_))throw new e("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!R)throw new e("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(a.objectIdField&&R!==a.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${R}" doesn't match the field name "${a.objectIdField}", found in the provided fields`}),R=a.objectIdField),R&&!a.objectIdField){let e=null;l.some((t=>t.name===R&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):l.unshift({alias:R,name:R,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const t of l){if(null==t.name&&(t.name=t.alias),null==t.alias&&(t.alias=t.name),!t.name)throw new e("feature-layer:invalid-field-name","field name is missing",{field:t});if(t.name===R&&(t.type="esriFieldTypeOID"),-1===o.jsonValues.indexOf(t.type))throw new e("feature-layer:invalid-field-type",`invalid type for field "${t.name}"`,{field:t})}const D={};this._requiredFields=[];for(const e of l)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=r(e);e.nullable||void 0!==t?D[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new n(l),this._createDefaultAttributes=m(D,R),S){if(S.startTimeField){const e=this._fieldsIndex.get(S.startTimeField);e?(S.startTimeField=e.name,e.type="esriFieldTypeDate"):S.startTimeField=null}if(S.endTimeField){const e=this._fieldsIndex.get(S.endTimeField);e?(S.endTimeField=e.name,e.type="esriFieldTypeDate"):S.endTimeField=null}if(S.trackIdField){const e=this._fieldsIndex.get(S.trackIdField);e?S.trackIdField=e.name:(S.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:S}}))}S.startTimeField||S.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:S}}),S=null)}const O={warnings:i,featureErrors:[],layerDefinition:{...q,drawingInfo:c(_),templates:y(D),extent:F,geometryType:_,objectIdField:R,fields:l,hasZ:!!j,hasM:!!p,timeInfo:S},assignedObjectIds:{}};if(this._queryEngine=new h({fields:l,geometryType:_,hasM:p,hasZ:j,objectIdField:R,spatialReference:b,featureStore:new g({geometryType:_,hasM:p,hasZ:j}),timeInfo:S,cacheSpatialQueries:!0}),!s||!s.length)return this._nextObjectId=u,O;const w=d(R,s);return this._nextObjectId=w+1,await f(s,b),this._loadInitialFeatures(O,s)}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([I(t,i),f(e.adds,t),f(e.updates,t)]),this._applyEdits(e)}queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_inferLayerProperties(e,t){let s,r,o=null,n=null,a=null;for(const t of e){const e=t.geometry;if(e&&(o||(o=i(e)),n||(n=e.spatialReference),null==s&&(s=R(e)),null==r&&(r=S(e)),o&&n&&null!=s&&null!=r))break}if(t&&t.length){let e=null;t.some((t=>{const i="esriFieldTypeOID"===t.type,s=!t.type&&t.name&&"objectid"===t.name.toLowerCase();return e=t,i||s}))&&(a=e.name)}return{geometryType:o,spatialReference:n,objectIdField:a,hasM:r,hasZ:s}}_loadInitialFeatures(e,t){const{geometryType:s,hasM:r,hasZ:o,objectIdField:n,spatialReference:l,featureStore:p}=this._queryEngine,u=[];for(const r of t){if(null!=r.uid&&(e.assignedObjectIds[r.uid]=-1),r.geometry&&s!==i(r.geometry)){e.featureErrors.push(b("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),o=F(this._fieldsIndex,this._requiredFields,t,r.attributes,!0,e.warnings);o?e.featureErrors.push(o):(this._assignObjectId(t,r.attributes,!0),r.attributes=t,null!=r.uid&&(e.assignedObjectIds[r.uid]=r.attributes[n]),r.geometry&&(r.geometry=j(r.geometry,r.geometry.spatialReference,l)),u.push(r))}if(p.addMany(a([],u,s,o,r,n)),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}_applyEdits(e){const{adds:t,updates:i,deletes:s}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),i&&i.length&&this._applyUpdateEdits(r,i),s&&s.length){for(const e of s)r.deleteResults.push(_(e));this._queryEngine.featureStore.removeManyById(s)}return{fullExtent:this._queryEngine.fullExtent,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:r,hasM:o,hasZ:n,objectIdField:l,spatialReference:p,featureStore:u}=this._queryEngine,d=[];for(const o of t){if(o.geometry&&r!==i(o.geometry)){s.push(b("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=F(this._fieldsIndex,this._requiredFields,t,o.attributes);if(n)s.push(n);else{if(this._assignObjectId(t,o.attributes),o.attributes=t,null!=o.uid){const t=o.attributes[l];e.uidToObjectId[o.uid]=t}o.geometry&&(o.geometry=j(E(o.geometry,p),o.geometry.spatialReference,p)),d.push(o),s.push(_(o.attributes[l]))}}u.addMany(a([],d,r,n,o,l))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:r,hasZ:o,objectIdField:n,spatialReference:a,featureStore:u}=this._queryEngine;for(const d of t){const{attributes:t,geometry:m}=d,c=t&&t[n];if(null==c){e.push(b(`Identifier field ${n} missing`));continue}if(!u.has(c)){e.push(b(`Feature with object id ${c} missing`));continue}const y=l(u.getFeature(c),s,o,r);if(m){if(s!==i(m)){e.push(b("Incorrect geometry type."));continue}y.geometry=j(E(m,a),m.spatialReference,a)}if(t){const i=F(this._fieldsIndex,this._requiredFields,y.attributes,t);if(i){e.push(i);continue}}u.add(p(y,s,o,r,n)),e.push(_(c))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&t&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++}}
