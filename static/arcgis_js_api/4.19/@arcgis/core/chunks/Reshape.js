/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import"./ArrayPool.js";import"../core/lang.js";import"./deprecate.js";import"./object.js";import"../kernel.js";import"../config.js";import{b as e,i as s,h as i,u as o,g as r}from"./Logger.js";import"./string.js";import"./metadata.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"./PropertyOrigin.js";import"../core/scheduling.js";import{createTask as a}from"../core/promiseUtils.js";import"./Message.js";import"../core/Error.js";import"./compilerUtils.js";import"./ensureType.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{E as l}from"./Evented.js";import"../core/Collection.js";import"./collectionUtils.js";import"./JSONSupport.js";import"./Promise.js";import"./Loadable.js";import"./asyncUtils.js";import"../core/urlUtils.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../core/accessorSupport/decorators/cast.js";import"./jsonMap.js";import"./enumeration.js";import"./reader.js";import"./shared.js";import"./writer.js";import"./resourceExtension.js";import"./persistableUrlUtils.js";import"../geometry/SpatialReference.js";import"./locale.js";import"./number.js";import"../intl.js";import"../request.js";import"./assets.js";import"../geometry/Geometry.js";import m from"../geometry/Point.js";import"./Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalUser.js";import"../portal/Portal.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../portal/PortalItem.js";import"./mathUtils2.js";import"./vec3f64.js";import"./common.js";import"./vec3.js";import"./mathUtils.js";import"./colorUtils.js";import"../Color.js";import"./zmUtils.js";import"../geometry/Multipoint.js";import{c,j as h}from"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./domains.js";import"./arcadeOnDemand.js";import"../layers/support/fieldUtils.js";import"../popup/content/Content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/CustomContent.js";import"./date.js";import"../popup/support/FieldInfoFormat.js";import"../popup/FieldInfo.js";import"../popup/content/FieldsContent.js";import"./MediaInfo.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/support/ChartMediaInfoValue.js";import"./chartMediaInfoUtils.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/MediaContent.js";import"../popup/content/TextContent.js";import"../popup/content.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/RelatedRecordsInfo.js";import"./Identifiable.js";import"../support/actions/ActionBase.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../PopupTemplate.js";import"../symbols/Symbol.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol3DLayer.js";import"./screenUtils.js";import"./opacityUtils.js";import"./materialUtils.js";import"../symbols/edges/Edges3D.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./utils.js";import"./Symbol3DMaterial.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/patterns/StylePattern3D.js";import"../symbols/FillSymbol3DLayer.js";import"./colors.js";import"./Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/Symbol3D.js";import"./Thumbnail.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"./Symbol3DVerticalOffset.js";import"../symbols/LabelSymbol3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"./urlUtils.js";import"../symbols/PictureFillSymbol.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import d from"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../symbols.js";import"./uid.js";import j from"../Graphic.js";import y from"../core/Handles.js";import"../layers/Layer.js";import"./LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../tasks/support/ColorRamp.js";import"../tasks/support/AlgorithmicColorRamp.js";import"../tasks/support/MultipartColorRamp.js";import"./colorRamps.js";import"../renderers/Renderer.js";import"../renderers/visualVariables/VisualVariable.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../renderers/visualVariables/SizeVariable.js";import"./sizeVariableUtils.js";import"./unitUtils.js";import"./lengthUtils.js";import"./visualVariableUtils.js";import"./VisualVariablesMixin.js";import"./symbolConversion.js";import"../symbols/support/jsonUtils.js";import"../renderers/support/ClassBreakInfo.js";import"./commonProperties.js";import"../renderers/ClassBreaksRenderer.js";import"./diffUtils.js";import"../renderers/support/UniqueValueInfo.js";import"./devEnvironmentUtils.js";import"./styleUtils.js";import"../renderers/UniqueValueRenderer.js";import"./normalizeUtilsCommon.js";import"../geometry/support/normalizeUtils.js";import"./MemCache.js";import"./ItemCache.js";import"./utils3.js";import"../symbols/support/cimSymbolUtils.js";import"./utils2.js";import"./LRUCache.js";import"../renderers/DictionaryRenderer.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/DotDensityRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"../renderers/HeatmapRenderer.js";import"../renderers/SimpleRenderer.js";import"../renderers/support/jsonUtils.js";import"./timeUtils.js";import"../TimeExtent.js";import"../TimeInterval.js";import"./ReadOnlyMultiOriginJSONSupport.js";import"./MultiOriginJSONSupport.js";import{whenOnce as u,pausable as v}from"../core/watchUtils.js";import"./arcgisLayerUrl.js";import"./fieldType.js";import"../geometry/HeightModelInfo.js";import"./mat4.js";import"./pe.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformationStep.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/projection.js";import"./OperationalLayer.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"./commonProperties2.js";import"./Scheduler.js";import"../core/HandleOwner.js";import"./_commonjsHelpers.js";import"../core/workers/RemoteClient.js";import"../core/workers/Connection.js";import"../core/workers/workers.js";import"../form/ExpressionInfo.js";import"../form/elements/FieldElement.js";import"../form/support/elements.js";import"../form/elements/inputs/Input.js";import"../form/elements/inputs/TextInput.js";import"../form/elements/inputs/BarcodeScannerInput.js";import"../form/elements/inputs/ComboBoxInput.js";import"../form/elements/inputs/DateTimePickerInput.js";import"../form/elements/inputs/RadioButtonsInput.js";import"../form/elements/inputs/TextAreaInput.js";import"../form/elements/inputs/TextBoxInput.js";import"../form/elements/support/inputs.js";import"../form/elements/GroupElement.js";import"../form/FormTemplate.js";import"../geometry/support/geodesicUtils.js";import"../geometry/Circle.js";import"./vec4f64.js";import"./quatf64.js";import"./mat3.js";import"./BufferView.js";import"./vec2.js";import"./vec4.js";import"./quat.js";import"./domUtils.js";import"./widgetUtils.js";import"./projector.js";import"./accessibleHandler.js";import"./messageBundle.js";import"../widgets/support/widget.js";import"./vmEvent.js";import"./index.js";import"../widgets/Widget.js";import"./zscale.js";import"./queryZScale.js";import"../layers/support/Field.js";import"../tasks/support/FeatureSet.js";import"../layers/FeatureLayer.js";import"./ArcGISService.js";import"./BlendLayer.js";import"./CustomParametersMixin.js";import"./PortalLayer.js";import"./RefreshableLayer.js";import"./ScaleRangeLayer.js";import"../layers/support/TimeInfo.js";import"./TemporalLayer.js";import"../layers/support/FeatureReductionSelection.js";import"../layers/support/FeatureReductionCluster.js";import"./labelUtils.js";import"../layers/support/LabelClass.js";import"./defaultsJSON.js";import"./defaults.js";import"./featureReductionUtils.js";import"../layers/support/FeatureTemplate.js";import"../layers/support/FeatureType.js";import"./fieldProperties.js";import"../layers/support/FieldsIndex.js";import"../layers/support/GeometryFieldsInfo.js";import"./labelingInfo.js";import"../layers/support/LayerFloorInfo.js";import"../layers/support/Relationship.js";import"./DataLayerSource.js";import"./styleUtils2.js";import"../support/popupUtils.js";import"../tasks/support/AttachmentQuery.js";import"../tasks/support/Query.js";import"../tasks/support/StatisticDefinition.js";import"../tasks/support/RelationshipQuery.js";import"./GraphicsCollection.js";import"../layers/GraphicsLayer.js";import"./utils4.js";import"../tasks/Task.js";import"../rest/query/support/AttachmentInfo.js";import"./query.js";import"./executeRelationshipQuery.js";import"./pbf.js";import"./OptimizedFeatureSet.js";import"./pbfQueryUtils.js";import"./featureConversionUtils.js";import"../tasks/QueryTask.js";import"./aaBoundingBox.js";import"./vec4f32.js";import"./quantizationUtils.js";import"./mat2d.js";import"../symbols/support/symbolUtils.js";import"./byteSizeEstimations.js";import"./dehydratedFeatureComparison.js";import"./dehydratedFeatures.js";import"./ElevationProvider.js";import"./interactiveToolUtils.js";import"./throttle.js";import"../widgets/Attachments.js";import"../widgets/Attachments/AttachmentsViewModel.js";import"../widgets/Feature/FeatureViewModel.js";import"../widgets/Feature.js";import"./AnchorElementViewModel.js";import"../widgets/Spinner/SpinnerViewModel.js";import"../widgets/Popup.js";import"./Queue.js";import{V as g}from"./InputManager.js";import"./layerViewUtils.js";import"./actions.js";import"../widgets/Popup/PopupViewModel.js";import"./GoTo.js";import"./MapUtils.js";import"./screenUtils2.js";import"./mat2df64.js";import"./vec2f64.js";import"./requestImageUtils.js";import"./VertexColor.glsl.js";import"./Program.js";import"./FramebufferObject.js";import"./renderState.js";import"./glUtil.js";import"./InterleavedLayout.js";import"./mat4f32.js";import"./vec3f32.js";import"./stack.js";import"./geometryUtils.js";import"./ColorMaterial.js";import"./Util.js";import"./glUtil3D.js";import"./Object3D.js";import"./VertexArrayObject.js";import"./sdfPrimitives.js";import"./PiUtils.glsl.js";import"./GLMaterialTexture.js";import"./VerticalOffset.glsl.js";import"./RibbonLineMaterial.js";import"./Texture.js";import"./CameraSpace.glsl.js";import"../views/interactive/snapping/FeatureSnappingLayerSource.js";import"./Settings.js";import"../views/interactive/snapping/SnappingOptions.js";import{E as b,S as _,i as f,h as S}from"../views/draw/DrawAction.js";import"./elevationInfoUtils.js";import{E as x}from"./AppendVertex.js";import"./Keys.js";import"../views/draw/MultipointDrawAction.js";import{k as w}from"./InteractiveToolBase.js";import"./DrawTool.js";import"./VisualElement.js";import"./LaserlineVisualElement.js";import"./Object3DVisualElement.js";import"./RightAngleQuadVisualElement.js";import"../views/draw/PointDrawAction.js";import"../views/draw/PolygonDrawAction.js";import"../views/draw/PolylineDrawAction.js";import"../views/draw/SegmentDrawAction.js";import"../views/draw/Draw.js";import"./drapedUtils.js";import"./GraphicManipulator.js";import{b as G}from"../widgets/Sketch/SketchViewModel.js";import M from"./GraphicMover.js";class I{constructor(t,e,s){this.graphic=t,this.mover=e,this.selected=s,this.type="reshape-start"}}class k{constructor(t,e,s){this.graphic=t,this.mover=e,this.selected=s,this.type="reshape"}}class C{constructor(t,e,s){this.graphic=t,this.mover=e,this.selected=s,this.type="reshape-stop"}}class V{constructor(t,e,s){this.mover=t,this.dx=e,this.dy=s,this.type="move-start"}}class H{constructor(t,e,s){this.mover=t,this.dx=e,this.dy=s,this.type="move"}}class E{constructor(t,e,s){this.mover=t,this.dx=e,this.dy=s,this.type="move-stop"}}class R{constructor(t){this.added=t,this.type="vertex-select"}}class U{constructor(t){this.removed=t,this.type="vertex-deselect"}}class D{constructor(t,e,s,i){this.added=t,this.graphic=e,this.oldGraphic=s,this.vertices=i,this.type="vertex-add"}}class A{constructor(t,e,s,i){this.removed=t,this.graphic=e,this.oldGraphic=s,this.vertices=i,this.type="vertex-remove"}}const P={removeVertex:["Backspace","Delete"]},L=S.reshapeGraphics,O={vertices:{default:new d({style:"circle",size:L.vertex.size,color:L.vertex.color,outline:{color:L.vertex.outlineColor,width:1}}),hover:new d({style:"circle",size:L.vertex.hoverSize,color:L.vertex.hoverColor,outline:{color:L.vertex.hoverOutlineColor,width:1}}),selected:new d({style:"circle",size:L.selected.size,color:L.selected.color,outline:{color:L.selected.outlineColor,width:1}})},midpoints:{default:new d({style:"circle",size:L.midpoint.size,color:L.midpoint.color,outline:{color:L.midpoint.outlineColor,width:1}}),hover:new d({style:"circle",size:L.midpoint.size,color:L.midpoint.color,outline:{color:L.midpoint.outlineColor,width:1}})}};let F=class extends l.EventedAccessor{constructor(t){super(t),this._handles=new y,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingTask=null,this._stagedVertex=null,this._totalDx=0,this._totalDy=0,this._viewHandles=new y,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.graphic=null,this.handleGraphics=[],this.layer=null,this.midpointGraphics=[],this.midpointSymbol=new d({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedHandles=[],this.snappingManager=null,this.type="reshape",this.view=null}initialize(){this._setup(),this._handles.add([u(this,"view.ready",(()=>{const{layer:t,view:e}=this;G(e,t),this._viewHandles.add([e.on("key-down",(t=>this._keyDownHandler(t)),g.TOOL)])})),v(this,"graphic",(()=>this.refresh())),v(this,"layer",((t,e)=>{e&&(this._clearSelection(),this._resetGraphics(e)),this.refresh()})),v(this,"enableMidpoints",(()=>{this.refresh()}))])}destroy(){this._reset(),this._mover&&this._mover.destroy(),this._mover=null,this._handles.removeAll(),this._handles=null,this._viewHandles.removeAll(),this._viewHandles=null}get state(){const t=!!this.get("view.ready"),e=!(!this.get("graphic")||!this.get("layer"));return t&&e?"active":t?"ready":"disabled"}set symbols(t){const{midpoints:e=O.midpoints,vertices:s=O.vertices}=t||{};this._set("symbols",{midpoints:e,vertices:s})}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.handleGraphics,this.midpointGraphics),e.length&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedHandles(){this.selectedHandles.length&&this._removeVertex(this.selectedHandles)}_setup(){this.graphic&&this.layer&&(this._setupGraphics(),this._setupMover())}_setUpGeometryHelper(){const t=this.graphic.geometry;e(t)||"polygon"!==t.type&&"polyline"!==t.type||(this._geometryHelper=new b(x.fromGeometry(t,"local"),t.type))}_saveSnappingContextForHandle(t,e){var s;this._snappingContext=new _({geometry:this._geometryHelper,elevationInfo:{mode:"on-the-ground",offset:0},pointer:(null==(s=e.viewEvent)?void 0:s.pointerType)||"mouse",excludeFeature:this.graphic,visualizer:new f,vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._resetGraphicStateVars(),this._resetGraphics(),this._resetSnappingStateVars(),this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){var t;s(this.snappingManager)&&this.snappingManager.doneSnapping(),null==(t=this._geometryHelper)||t.destroy(),this._geometryHelper=null,this._snappingTask=i(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphicStateVars(){this._totalDx=0,this._totalDy=0}_resetGraphics(t){const e=t||this.layer;e&&(e.removeMany(this.handleGraphics),e.removeMany(this.midpointGraphics)),this.handleGraphics.forEach((t=>t.destroy())),this.midpointGraphics.forEach((t=>t.destroy())),this._set("handleGraphics",[]),this._set("midpointGraphics",[]),this._set("selectedHandles",[])}_setupGraphics(){const t=o(this.graphic.geometry),e=c(t.clone());if("polygon"===t.type)for(const t of e){const e=t[t.length-1];t[0][0]===e[0]&&t[0][1]===e[1]&&t.length>2&&t.pop()}this._set("handleGraphics",this._createHandleGraphics(e)),this.enableMidpoints&&this._set("midpointGraphics",this._createMidpointGraphics(e)),this._saveRelatedIndices(this.handleGraphics),this.layer.addMany(this.midpointGraphics),this.layer.addMany(this.handleGraphics)}_createHandleGraphics(t){const{_graphicAttributes:e,symbols:s,view:{spatialReference:i}}=this,o=[];return null==t||t.forEach(((t,r)=>{t.forEach(((t,p)=>{var a;const[n,l]=t;o.push(new j({geometry:new m({x:n,y:l,spatialReference:i}),symbol:null==s||null==(a=s.vertices)?void 0:a.default,attributes:{...e,pathIndex:r,pointIndex:p}}))}))})),o}_createMidpointGraphics(t){const{_graphicAttributes:e,symbols:s,view:{spatialReference:i}}=this,o=[];return null==t||t.forEach(((t,p)=>{t.forEach(((a,n)=>{const[l,c]=a,d=t[n+1]?n+1:0;if("polygon"===r(this.graphic.geometry,"type")||0!==d){const[r,a]=t[d],[y,u]=h([l,c],[r,a]);o.push(new j({geometry:new m({x:y,y:u,spatialReference:i}),symbol:s.midpoints.default,attributes:{...e,pathIndex:p,pointIndexStart:n,pointIndexEnd:d}}))}}))})),o}_saveRelatedIndices(t){if(!t)return;const e=t.map((({geometry:t})=>({x:t.x,y:t.y})));for(let s=0;s<e.length;s++){const i=[];for(let t=0;t<e.length;t++){if(s===t)continue;const o=e[s],r=e[t];o.x===r.x&&o.y===r.y&&i.push(t)}t[s].attributes.relatedGraphicIndices=i}}_setupMover(){this._mover=new M({enableMoveAllGraphics:!1,graphics:[].concat(this.handleGraphics,this.midpointGraphics,this.graphic),view:this.view,callbacks:{onGraphicClick:t=>this._onGraphicClickCallback(t),onGraphicMoveStart:t=>this._onGraphicMoveStartCallback(t),onGraphicMove:t=>this._onGraphicMoveCallback(t),onGraphicMoveStop:t=>this._onGraphicMoveStopCallback(t),onGraphicPointerOver:t=>this._onGraphicPointerOverCallback(t),onGraphicPointerOut:t=>this._onGraphicPointerOutCallback(t)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t);else if(this._isMidpoint(e)){if(2===t.viewEvent.button)return;const s=this.graphic.clone(),i=this._createHandleFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],s,i)}else if(this._isHandle(e))if(t.viewEvent.stopPropagation(),2===t.viewEvent.button)this._removeVertex(e);else{t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedHandles.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)}}_onGraphicMoveStartCallback(t){const e=t.graphic,{dx:s,dy:i}=t;if(this._resetGraphicStateVars(),this._resetSnappingStateVars(),e===this.graphic)return this.handleGraphics.forEach((t=>t.visible=!1)),this.midpointGraphics.forEach((t=>t.visible=!1)),this._clearSelection(),void this._emitMoveStartEvent(s,i);if(this._isMidpoint(e)){this._clearSelection();const t=this.graphic.clone(),s=this._createHandleFromMidpoint(e);this._emitVertexAddEvent([e],t,s),this._addToSelection(e)}else this.selectedHandles.includes(e)||(this._clearSelection(),this._addToSelection(e));this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._onHandleMove(e,s,i,t),this._emitReshapeStartEvent(e)}_onGraphicMoveCallback(t){const{graphic:e,dx:s,dy:i}=t;this._totalDx+=s,this._totalDy+=i,e===this.graphic?(this._syncGraphicsWithGeometry(),this._emitMoveEvent(s,i)):(this._onHandleMove(e,s,i,t),this._emitReshapeEvent(e))}_onGraphicMoveStopCallback(t){const{graphic:e,dx:s,dy:i}=t;if(this._totalDx+=s,this._totalDy+=i,e===this.graphic){this._syncGraphicsWithGeometry();for(const t of[].concat(this.handleGraphics,this.midpointGraphics))t.visible=!0;this._emitMoveStopEvent(),this._resetGraphicStateVars()}else this._onHandleMove(e,s,i,t),this._resetSnappingStateVars(),this._isMidpoint(e)&&this.refresh(),this._emitReshapeStopEvent(e),this._resetGraphicStateVars()}_syncGraphicsWithGeometry(){const t=this.graphic.geometry,e="polyline"===t.type?t.paths:t.rings;this._updateHandleGraphicLocations(e),this._updateMidpointGraphicLocations(e)}_updateHandleGraphicLocations(t){for(const e of this.handleGraphics){const{pathIndex:s,pointIndex:i}=e.attributes,[o,r]=t[s][i];e.set("geometry",new m(o,r,this.view.spatialReference))}}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:s,pointIndexStart:i,pointIndexEnd:o}=e.attributes,[r,p]=t[s][i],[a,n]=t[s][o],[l,c]=h([r,p],[a,n]);e.geometry=new m({x:l,y:c,spatialReference:this.view.spatialReference})}}_getVertexFromEditGeometry(t){var e;const{pathIndex:s,pointIndex:i}=t.attributes;return null==(e=this._geometryHelper)?void 0:e.editGeometry.components[s].vertices[i]}_onHandleMove(t,e,o,r){i(this._snappingTask);const p=t.geometry,n="graphic-move-stop"===r.type;if(s(this.snappingManager)&&1===this.selectedHandles.length&&!n){const s=this.snappingManager;this._stagedVertex=s.update(p,this._snappingContext),this._syncGeometryAfterHandleMove(t,new m(this._stagedVertex),e,o,n),this._emitReshapeEvent(t),this._snappingTask=a((async i=>{const r=await s.snap(p,this._snappingContext,i);r.valid&&(this._stagedVertex=r.apply(),this._syncGeometryAfterHandleMove(t,new m(this._stagedVertex),e,o,n),this._emitReshapeEvent(t))}))}else{const i=s(this._stagedVertex)?new m(this._stagedVertex):p;this._syncGeometryAfterHandleMove(t,i,e,o,n),"graphic-move"===r.type&&this._emitReshapeEvent(t)}}async _syncGeometryAfterHandleMove(t,e,s,i,o=!1){const{x:r,y:p}=e,a=this._getUpdatedGeometryAfterHandleMove(t,e);let n="polyline"===a.type?a.paths:a.rings;this._isHandle(t)&&(n=this._moveRelatedCoordinates(n,t,r,p),n=this._moveSelectedHandleCoordinates(n,t,s,i,"polygon"===a.type),this._updateMidpointGraphicLocations(n)),this.graphic.geometry=a,this._syncEditGeometryAfterHandleMove(t,r,p),o&&(t.geometry=e)}_getUpdatedGeometryAfterHandleMove(t,e){const{x:s,y:i}=e,r=o(this.graphic.geometry).clone(),p="polyline"===r.type?r.paths:r.rings,{pathIndex:a,pointIndex:n}=t.attributes,l=p[a].length-1;return p[a][n]=[s,i],"polygon"===r.type&&(0===n?p[a][l]=[s,i]:n===l&&(p[a][0]=[s,i])),r}_moveRelatedCoordinates(t,e,s,i){const{relatedGraphicIndices:o}=e.attributes;for(const r of o){const o=this.handleGraphics[r],{pathIndex:p,pointIndex:a}=o.attributes;t[p][a]=[s,i],o.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,s,i,o){for(const r of this.selectedHandles)if(r!==e){const{pathIndex:e,pointIndex:p,relatedGraphicIndices:a}=r.attributes,n=w(r.geometry,s,i,this.view),l=t[e].length-1;t[e][p]=[n.x,n.y],r.geometry=n,o&&(0===p?t[e][l]=[n.x,n.y]:p===l&&(t[e][0]=[n.x,n.y]));for(const e of a){const s=this.handleGraphics[e],{pathIndex:i,pointIndex:o}=s.attributes;t[i][o]=[n.x,n.y],s.geometry=n}}return t}_syncEditGeometryAfterHandleMove(t,e,s){const i=this._getVertexFromEditGeometry(t),o=e-i.pos[0],r=s-i.pos[1];this._geometryHelper.moveVertices([i],o,r,0)}_onGraphicPointerOverCallback(t){const e=t.graphic;this._isHandle(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._isHandle(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default"}_createHandleFromMidpoint(t){const{_graphicAttributes:e}=this,s=[],i=o(this.graphic.geometry).clone(),{pathIndex:r,pointIndexStart:p,pointIndexEnd:a}=t.attributes,{x:n,y:l}=t.geometry,m=0===a?p+1:a,c="polyline"===i.type?i.paths:i.rings;return c[r].splice(m,0,[n,l]),t.attributes={...e,pathIndex:r,pointIndex:m,relatedGraphicIndices:[]},s.push({coordinates:c[r][m],componentIndex:r,vertexIndex:m}),this.graphic.geometry=i,s}_removeHandles(t){const e=o(this.graphic.geometry).clone(),s="polygon"===e.type?e.rings:e.paths,i=[];t instanceof j&&(t=[t]);for(const e of t){const{x:t,y:o}=e.geometry;for(let e=0;e<s.length;e++){const r=s[e];for(let p=0;p<r.length;p++){const[a,n]=r[p];t===a&&o===n&&(i.push({coordinates:s[e][p],componentIndex:e,vertexIndex:p}),s[e].splice(Number(p),1))}}}if("polygon"===e.type)for(const t of s){const[e,i]=t[0],[o,r]=t[t.length-1];(1===t.length||t.length<3&&e===o&&i===r)&&s.splice(s.indexOf(t),1),t.length>2&&(e!==o||i!==r)&&t.push(t[0])}else for(const t of s)1===t.length&&s.splice(s.indexOf(t),1);return this.graphic.geometry=e,i}_addToSelection(t){t instanceof j&&(t=[t]);for(const e of t)e.symbol=this.symbols.vertices.selected;this._set("selectedHandles",this.selectedHandles.concat(t)),this._emitSelectEvent(t)}_removeFromSelection(t,e){const{vertices:s}=this.symbols,i=e?s.hover:s.default;t instanceof j&&(t=[t]);for(const e of t)this.selectedHandles.splice(this.selectedHandles.indexOf(e),1),this._set("selectedHandles",this.selectedHandles),e.set("symbol",i);this._emitDeselectEvent(t)}_clearSelection(){if(this.selectedHandles.length){const t=this.selectedHandles;for(const t of this.selectedHandles)t.set("symbol",this.symbols.vertices.default);this._set("selectedHandles",[]),this._emitDeselectEvent(t)}}_keyDownHandler(t){P.removeVertex.includes(t.key)&&!t.repeat&&this.selectedHandles.length&&this._removeVertex(this.selectedHandles)}_removeVertex(t){if("polygon"===this.graphic.geometry.type&&this.handleGraphics.length<4||this.handleGraphics.length<3)return;const e=this.graphic.clone();t instanceof j&&(t=[t]);const s=this._removeHandles(t);this.refresh(),this._emitVertexRemoveEvent(t,e,s)}_isHandle(t){return this.handleGraphics.includes(t)}_isSelected(t){return this._isHandle(t)&&this.selectedHandles.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_emitMoveStartEvent(t,e){const s=new V(this.graphic,t,e);this.emit("move-start",s),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(s)}_emitMoveEvent(t,e){const s=new H(this.graphic,t,e);this.emit("move",s),this.callbacks.onMove&&this.callbacks.onMove(s)}_emitMoveStopEvent(){const t=new E(this.graphic,this._totalDx,this._totalDy);this.emit("move-stop",t),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(t)}_emitReshapeStartEvent(t){const e=new I(this.graphic,t,this.selectedHandles);this.emit("reshape-start",e),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(e)}_emitReshapeEvent(t){const e=new k(this.graphic,t,this.selectedHandles);this.emit("reshape",e),this.callbacks.onReshape&&this.callbacks.onReshape(e)}_emitReshapeStopEvent(t){const e=new C(this.graphic,t,this.selectedHandles);this.emit("reshape-stop",e),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(e)}_emitSelectEvent(t){const e=new R(t);this.emit("select",e),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(e)}_emitDeselectEvent(t){const e=new U(t);this.emit("deselect",e),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(e)}_emitVertexAddEvent(t,e,s){const i=new D(t,this.graphic,e,s);this.emit("vertex-add",i),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(i)}_emitVertexRemoveEvent(t,e,s){const i=new A(t,this.graphic,e,s);this.emit("vertex-remove",i),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(i)}};t([p()],F.prototype,"callbacks",void 0),t([p()],F.prototype,"enableMidpoints",void 0),t([p()],F.prototype,"graphic",void 0),t([p({readOnly:!0})],F.prototype,"handleGraphics",void 0),t([p()],F.prototype,"layer",void 0),t([p({readOnly:!0})],F.prototype,"midpointGraphics",void 0),t([p()],F.prototype,"midpointSymbol",void 0),t([p({readOnly:!0})],F.prototype,"selectedHandles",void 0),t([p()],F.prototype,"snappingManager",void 0),t([p({readOnly:!0})],F.prototype,"state",null),t([p({value:O})],F.prototype,"symbols",null),t([p({readOnly:!0})],F.prototype,"type",void 0),t([p()],F.prototype,"view",void 0),F=t([n("esri.views.draw.support.Reshape")],F);var T=F;export default T;
