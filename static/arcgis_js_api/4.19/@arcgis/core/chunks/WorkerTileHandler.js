/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{A as e}from"./ArrayPool.js";import"../core/lang.js";import"./object.js";import"../config.js";import{i as t}from"./Logger.js";import{n as r}from"./string.js";import{isAborted as i,isAbortError as s}from"../core/promiseUtils.js";import"./Message.js";import"../core/Error.js";import"./ensureType.js";import"./mathUtils2.js";import"./colorUtils.js";import"../Color.js";import"./colorUtils2.js";import"./_commonjsHelpers.js";import{e as n,d as a}from"./earcut.js";import{P as l}from"./pbf.js";import"./vec4f32.js";import{C as o,a as c,b as h,p as x,c as u,r as f,M as d,I as y,T as p,l as _,i as g,S as m}from"./StyleRepository.js";import"./unitBezier.js";import"./definitions.js";import{R as V}from"./Rect.js";import{B as I}from"./BidiEngine.js";import{D as B}from"./config.js";import"./GeometryUtils2.js";import{s as b,g as w,c as M,t as P}from"./TurboLine.js";import{P as k,T as v,a as L,S as A}from"./TileClipper.js";function N(e){return!(e<11904)&&(e>=12704&&e<=12735||(e>=12544&&e<=12591||(e>=65072&&e<=65103||(e>=63744&&e<=64255||(e>=13056&&e<=13311||(e>=11904&&e<=12031||(e>=12736&&e<=12783||(e>=12288&&e<=12351||(e>=13312&&e<=19903||(e>=19968&&e<=40959||(e>=12800&&e<=13055||(e>=65280&&e<=65519||(e>=12352&&e<=12447||(e>=12272&&e<=12287||(e>=12032&&e<=12255||(e>=12784&&e<=12799||(e>=12448&&e<=12543||(e>=65040&&e<=65055||(e>=42128&&e<=42191||e>=40960&&e<=42127)))))))))))))))))))}function T(e){switch(e){case 10:case 32:case 38:case 40:case 41:case 43:case 45:case 47:case 173:case 183:case 8203:case 8208:case 8211:case 8231:return!0}return!1}function D(e){switch(e){case 9:case 10:case 11:case 12:case 13:case 32:return!0}return!1}class C{constructor(e,t,r,i,s,n,a){this._glyphItems=e,this._maxWidth=t,this._lineHeight=r,this._letterSpacing=i,this._hAnchor=s,this._vAnchor=n,this._justify=a}getShaping(e,t,r){const i=this._letterSpacing,s=this._lineHeight,n=this._justify,a=this._maxWidth,l=[];let o=0,c=0;const h=e.length;for(let t=0;t<h;t++){const s=e.charCodeAt(t),n=r&&(746===(x=s)||747===x||!(x<4352)&&(x>=12704&&x<=12735||x>=12544&&x<=12591||x>=65072&&x<=65103&&!(x>=65097&&x<=65103)||x>=63744&&x<=64255||x>=13056&&x<=13311||x>=11904&&x<=12031||x>=12736&&x<=12783||x>=12288&&x<=12351&&!(x>=12296&&x<=12305||x>=12308&&x<=12319||12336===x)||x>=13312&&x<=19903||x>=19968&&x<=40959||x>=12800&&x<=13055||x>=12592&&x<=12687||x>=43360&&x<=43391||x>=55216&&x<=55295||x>=4352&&x<=4607||x>=44032&&x<=55215||x>=12352&&x<=12447||x>=12272&&x<=12287||x>=12688&&x<=12703||x>=12032&&x<=12255||x>=12784&&x<=12799||x>=12448&&x<=12543&&12540!==x||x>=65280&&x<=65519&&!(65288===x||65289===x||65293===x||x>=65306&&x<=65310||65339===x||65341===x||65343===x||x>=65371&&x<=65503||65507===x||x>=65512&&x<=65519)||x>=65104&&x<=65135&&!(x>=65112&&x<=65118||x>=65123&&x<=65126)||x>=5120&&x<=5759||x>=6320&&x<=6399||x>=65040&&x<=65055||x>=19904&&x<=19967||x>=40960&&x<=42127||x>=42128&&x<=42191));let a;for(const e of this._glyphItems)if(a=e[s],a)break;l.push({codePoint:s,x:o,y:c,vertical:n,glyphMosaicItem:a}),a&&(o+=a.metrics.advance+i)}var x;let u=o;if(a>0){u=o/Math.max(1,Math.ceil(o/a))}const f=e.indexOf("â€‹")>=0,d=[];for(let e=0;e<h-1;e++){const t=l[e].codePoint,r=N(t);if(T(t)||r){let i=0;if(10===t)i-=1e4;else if(r&&f)i+=150;else{40!==t&&65288!==t||(i+=50);const r=l[e+1].codePoint;41!==r&&65289!==r||(i+=50)}d.push(this._buildBreak(e+1,l[e].x,u,d,i,!1))}}const y=this._optimalBreaks(this._buildBreak(h,o,u,d,0,!0));let p=0;const _=t?-s:s;let g=0;for(let e=0;e<y.length;e++){const t=y[e];let r=g;for(;r<t&&D(l[r].codePoint);)l[r].glyphMosaicItem=null,++r;let i=t-1;for(;i>r&&D(l[i].codePoint);)l[i].glyphMosaicItem=null,--i;if(r<=i){const e=l[r].x;for(let t=r;t<=i;t++)l[t].x-=e,l[t].y=c;let t=l[i].x;l[i].glyphMosaicItem&&(t+=l[i].glyphMosaicItem.metrics.advance),p=Math.max(t,p),n&&this._applyJustification(l,r,i)}g=t,c+=_}if(l.length>0){const e=y.length-1,r=(n-this._hAnchor)*p;let i=(-this._vAnchor*(e+1)+.5)*s;t&&e&&(i+=e*s);for(const e of l)e.x+=r,e.y+=i}return l.filter((e=>e.glyphMosaicItem))}static getTextBox(e,t){if(!e.length)return null;let r=1/0,i=1/0,s=0,n=0;for(const a of e){const e=a.glyphMosaicItem.metrics.advance,l=a.x,o=a.y-17,c=l+e,h=o+t;r=Math.min(r,l),s=Math.max(s,c),i=Math.min(i,o),n=Math.max(n,h)}return{x:r,y:i,width:s-r,height:n-i}}static getBox(e){if(!e.length)return null;let t=1/0,r=1/0,i=0,s=0;for(const n of e){const{height:e,left:a,top:l,width:o}=n.glyphMosaicItem.metrics,c=n.x,h=n.y-(e-Math.abs(l)),x=c+o+a,u=h+e;t=Math.min(t,c),i=Math.max(i,x),r=Math.min(r,h),s=Math.max(s,u)}return{x:t,y:r,width:i-t,height:s-r}}static addDecoration(e,t){const r=e.length;if(0===r)return;let i=e[0].x+e[0].glyphMosaicItem.metrics.left,s=e[0].y;for(let n=1;n<r;n++){const r=e[n];if(r.y!==s){const a=e[n-1].x+e[n-1].glyphMosaicItem.metrics.left+e[n-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:s+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new V(4,0,4,8),metrics:{width:a-i,height:8,left:0,top:0,advance:0},page:0,code:0}}),s=r.y,i=r.x+r.glyphMosaicItem.metrics.left}}const n=e[r-1].x+e[r-1].glyphMosaicItem.metrics.left+e[r-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:s+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new V(4,0,4,8),metrics:{width:n-i,height:8,left:0,top:0,advance:0},page:0,code:0}})}_breakScore(e,t,r,i){const s=(e-t)*(e-t);return i?e<t?s/2:2*s:s+Math.abs(r)*r}_buildBreak(e,t,r,i,s,n){let a=null,l=this._breakScore(t,r,s,n);for(const e of i){const i=t-e.x,o=this._breakScore(i,r,s,n)+e.score;o<=l&&(a=e,l=o)}return{index:e,x:t,score:l,previousBreak:a}}_optimalBreaks(e){return e?this._optimalBreaks(e.previousBreak).concat(e.index):[]}_applyJustification(e,t,r){const i=e[r],s=i.vertical?24:i.glyphMosaicItem?i.glyphMosaicItem.metrics.advance:0,n=(i.x+s)*this._justify;for(let i=t;i<=r;i++)e[i].x-=n}}class S{constructor(e,t,r=0,i=-1,s=.5){this.x=e,this.y=t,this.angle=r,this.segment=i,this.minzoom=s}}class E{constructor(e,t,r,i,s,n=.5,a=h){this.anchor=e,this.labelAngle=t,this.glyphAngle=r,this.page=i,this.alternateVerticalGlyph=s,this.minzoom=n,this.maxzoom=a}}class z{constructor(e,t,r,i,s,n,a,l,o,c,h,x){this.tl=e,this.tr=t,this.bl=r,this.br=i,this.mosaicRect=s,this.labelAngle=n,this.minAngle=a,this.maxAngle=l,this.anchor=o,this.minzoom=c,this.maxzoom=h,this.page=x}}class F{constructor(e){this.shapes=e}}class U{getIconPlacement(e,t,r){const i=new k(e.x,e.y),s=0===r.rotationAlignment,n=r.keepUpright;let a=r.rotate*o;s&&(a+=e.angle);const l=new F([]);return r.allowOverlap&&r.ignorePlacement||!B||(l.iconColliders=[]),this._addIconPlacement(l,i,t,r,a),s&&n&&this._addIconPlacement(l,i,t,r,a+c),l}_addIconPlacement(e,t,r,i,s){const n=r.pixelRatio,a=r.width/n,l=r.height/n,o=i.offset;let c=o[0],x=o[1];switch(i.anchor){case 0:c-=a/2,x-=l/2;break;case 1:x-=l/2;break;case 2:c-=a,x-=l/2;break;case 3:c-=a/2;break;case 4:c-=a/2,x-=l;break;case 5:break;case 7:x-=l;break;case 6:c-=a;break;case 8:c-=a,x-=l}const u=r.rect,f=2/n,d=c-f,y=x-f,p=d+u.width/n,_=y+u.height/n,g=new k(d,y),m=new k(p,_),V=new k(d,_),I=new k(p,y);if(0!==s){const e=Math.cos(s),t=Math.sin(s);g.rotate(e,t),m.rotate(e,t),V.rotate(e,t),I.rotate(e,t)}const b=new z(g,I,V,m,u,s,0,256,t,.5,h,0);if(e.shapes.push(b),(!i.allowOverlap||!i.ignorePlacement)&&B){const r=i.size,n=i.padding,o={xTile:t.x,yTile:t.y,dxPixels:c*r-n,dyPixels:x*r-n,hard:!i.optional,partIndex:0,width:a*r+2*n,height:l*r+2*n,angle:s,minLod:.5,maxLod:h};e.iconColliders.push(o)}}getTextPlacement(e,t,r,i){const s=new k(e.x,e.y),n=i.rotate*o,a=0===i.rotationAlignment,l=i.keepUpright,x=i.padding;let u=.5;const f=!a?0:e.angle,d=e.segment>=0&&a,y=i.allowOverlap&&i.ignorePlacement?null:[],p=[],_=!d;let g=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,V=g,I=m;const B=(d||a)&&l,b=i.size/24;let w=!1;for(const e of t)if(e.vertical){w=!0;break}let M,P=0,v=0;if(!d&&w){const e=C.getTextBox(t,24*i.lineHeight);switch(i.anchor){case 1:P=e.height/2,v=-e.width/2;break;case 2:P=-e.height/2,v=e.width/2;break;case 3:P=e.height/2,v=e.width/2;break;case 4:P=-e.height/2,v=-e.width/2;break;case 5:P=e.height;break;case 7:v=-e.width;break;case 6:v=e.width;break;case 8:P=-e.height}}P+=24*i.offset[0],v+=24*i.offset[1];for(const o of t){const t=o.glyphMosaicItem;if(!t||t.rect.isEmpty)continue;const L=t.rect,A=t.metrics,N=t.page;if(y&&_){if(void 0!==M&&M!==o.y){let t,r,s,a;w?(t=-I+P,r=g+v,s=I-V,a=m-g):(t=g+P,r=V+v,s=m-g,a=I-V);const l={xTile:e.x,yTile:e.y,dxPixels:t*b-x,dyPixels:r*b-x,hard:!i.optional,partIndex:1,width:s*b+2*x,height:a*b+2*x,angle:n,minLod:.5,maxLod:h};y.push(l),g=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,V=g,I=m}M=o.y}const T=[];if(d){const i=.5*t.metrics.width,s=(o.x+A.left-4+i)*b*8;if(u=this._placeGlyph(e,u,s,r,e.segment,1,o.vertical,N,T),l&&(u=this._placeGlyph(e,u,s,r,e.segment,-1,o.vertical,N,T)),u>=2)break}else T.push(new E(s,f,f,N,!1)),a&&l&&T.push(new E(s,f+c,f+c,N,!1));const D=o.x+A.left,C=o.y-17-A.top,S=D+A.width,F=C+A.height;let U,R,O,j,G,q,K,H;if(!d&&w)if(o.vertical){const e=(D+S)/2-A.height/2,t=(C+F)/2+A.width/2;U=new k(-t-4+P,e-4+v),R=new k(U.x+L.width,U.y+L.height),O=new k(U.x,R.y),j=new k(R.x,U.y)}else U=new k(4-C+P,D-4+v),R=new k(U.x-L.height,U.y+L.width),O=new k(R.x,U.y),j=new k(U.x,R.y);else U=new k(D-4+P,C-4+v),R=new k(U.x+L.width,U.y+L.height),O=new k(U.x,R.y),j=new k(R.x,U.y);for(const t of T){let r,s,a,l;if(t.alternateVerticalGlyph){if(!G){const e=(C+F)/2+v;G=new k((D+S)/2+P-A.height/2-4,e+A.width/2+4),q=new k(G.x+L.height,G.y-L.width),K=new k(q.x,G.y),H=new k(G.x,q.y)}r=G,s=K,a=H,l=q}else r=U,s=O,a=j,l=R;const c=C,h=F,u=t.glyphAngle+n;if(0!==u){const e=Math.cos(u),t=Math.sin(u);r=r.clone(),s=s.clone(),a=a.clone(),l=l.clone(),r.rotate(e,t),l.rotate(e,t),s.rotate(e,t),a.rotate(e,t)}let f=0,M=256;if(d&&w?o.vertical?t.alternateVerticalGlyph?(f=32,M=96):(f=224,M=32):(f=224,M=96):(f=192,M=64),p.push(new z(r,a,s,l,L,t.labelAngle,f,M,t.anchor,t.minzoom,t.maxzoom,t.page)),y&&(!B||this._legible(t.labelAngle)))if(_)D<g&&(g=D),c<V&&(V=c),S>m&&(m=S),h>I&&(I=h);else if(t.minzoom<2){const r={xTile:e.x,yTile:e.y,dxPixels:(D+P)*b-x,dyPixels:(c+P)*b-x,hard:!i.optional,partIndex:1,width:(S-D)*b+2*x,height:(h-c)*b+2*x,angle:u,minLod:t.minzoom,maxLod:t.maxzoom};y.push(r)}}}if(u>=2)return null;if(y&&_){let t,r,s,a;w?(t=-I+P,r=g+v,s=I-V,a=m-g):(t=g+P,r=V+v,s=m-g,a=I-V);const l={xTile:e.x,yTile:e.y,dxPixels:t*b-x,dyPixels:r*b-x,hard:!i.optional,partIndex:1,width:s*b+2*x,height:a*b+2*x,angle:n,minLod:.5,maxLod:h};y.push(l)}const L=new F(p);return y&&y.length>0&&(L.textColliders=y),L}_legible(e){const t=f(e);return t<65||t>=193}_placeGlyph(e,t,r,i,s,n,a,l,o){let f=n;const d=f<0?x(e.angle+c,u):e.angle;let y=0;r<0&&(f*=-1,r*=-1,y=c),f>0&&++s;let p=new k(e.x,e.y),_=i[s],g=h;if(i.length<=s)return g;for(;;){const e=_.x-p.x,n=_.y-p.y,c=Math.sqrt(e*e+n*n),h=Math.max(r/c,t),m=e/c,V=n/c,I=x(Math.atan2(V,m)+y,u);if(o.push(new E(p,d,I,l,!1,h,g)),a&&o.push(new E(p,d,I,l,!0,h,g)),h<=t)return h;p=_.clone();do{if(s+=f,i.length<=s||s<0)return h;_=i[s]}while(p.isEqual(_));let B=_.x-p.x,b=_.y-p.y;const w=Math.sqrt(B*B+b*b);B*=c/w,b*=c/w,p.x-=B,p.y-=b,g=h}}}class R{constructor(e,t){this.values={};const r=t.keys,i=t.values;for(;e.next();)switch(e.tag()){case 1:this.id=e.getUInt64();break;case 2:{const t=e.getMessage(),s=this.values;for(;!t.empty();){const e=t.getUInt32(),n=t.getUInt32();s[r[e]]=i[n]}t.release();break}case 3:this.type=e.getUInt32();break;case 4:this._pbfGeometry=e.getMessage();break;default:e.skip()}}getGeometry(e){if(void 0!==this._geometry)return this._geometry;if(!this._pbfGeometry)return null;const t=this._pbfGeometry;let r,i;this._pbfGeometry=null,e?e.reset(this.type):r=[];let s,n=1,a=0,l=0,o=0;for(;!t.empty();){if(0===a){const e=t.getUInt32();n=7&e,a=e>>3}switch(a--,n){case 1:l+=t.getSInt32(),o+=t.getSInt32(),e?e.moveTo(l,o):(i&&r.push(i),i=[],i.push(new k(l,o)));break;case 2:l+=t.getSInt32(),o+=t.getSInt32(),e?e.lineTo(l,o):i.push(new k(l,o));break;case 7:e?e.close():i&&!i[0].equals(l,o)&&i.push(i[0].clone());break;default:throw t.release(),new Error("Invalid path operation")}}return e?s=e.result():(i&&r.push(i),s=r),t.release(),this._geometry=s,s}}class O extends d{constructor(){super(12)}add(e,t,r){const i=this.array;i.push(e),i.push(t),i.push(r)}}class j{constructor(e){for(this.extent=4096,this.keys=[],this.values=[],this._pbfLayer=e.clone();e.next();)switch(e.tag()){case 1:this.name=e.getString();break;case 3:this.keys.push(e.getString());break;case 4:this.values.push(e.processMessage(j._parseValue));break;case 5:this.extent=e.getUInt32();break;default:e.skip()}}getData(){return this._pbfLayer}static _parseValue(e){for(;e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getInt64();case 5:return e.getUInt64();case 6:return e.getSInt64();case 7:return e.getBool();default:e.skip()}return null}}class G extends d{constructor(e){super(e)}add(e,t,r,i,s,n,a,l){const o=this.array;let c=d.i1616to32(e,t);o.push(c);c=d.i8888to32(Math.round(31*r),Math.round(31*i),Math.round(31*s),Math.round(31*n)),o.push(c),c=d.i1616to32(a,0),o.push(c),l&&o.push(...l)}}class q extends d{constructor(e){super(e)}add(e,t,r){const i=this.array;i.push(d.i1616to32(e,t)),r&&i.push(...r)}}class K extends d{constructor(e){super(e)}add(e,t,r,i,s,n,a){const l=this.array,o=this.index;let c=d.i1616to32(e,t);l.push(c);return c=d.i8888to32(Math.round(15*r),Math.round(15*i),s,n),l.push(c),a&&l.push(...a),o}}class H extends d{constructor(e){super(e)}add(e,t,r,i,s,n,a,l,o,c,h,x){const u=this.array;let y=d.i1616to32(e,t);u.push(y),y=d.i1616to32(Math.round(8*r),Math.round(8*i)),u.push(y),y=d.i8888to32(s/4,n/4,l,o),u.push(y),y=d.i8888to32(0,f(a),10*c,Math.min(10*h,255)),u.push(y),x&&u.push(...x)}}class Y extends d{constructor(e){super(e)}add(e,t,r,i,s){const n=this.array,a=d.i1616to32(2*e+r,2*t+i);n.push(a),s&&n.push(...s)}}class W{constructor(e,t){this.layerExtent=4096,this._features=[],this.layer=e,this.zoom=t,this._filter=e.getFeatureFilter()}pushFeature(e){this._filter&&!this._filter.filter(e,this.zoom)||this._features.push(e)}hasFeatures(){return this._features.length>0}}class Z extends W{constructor(e,t,r,i){super(e,t),this.type=4,this._circleVertexBuffer=r,this._circleIndexBuffer=i}get circleIndexStart(){return this._circleIndexStart}get circleIndexCount(){return this._circleIndexCount}processFeatures(e){const t=this._circleVertexBuffer,r=this._circleIndexBuffer;this._circleIndexStart=3*r.index,this._circleIndexCount=0;const i=this.layer,s=this.zoom;e&&e.setExtent(this.layerExtent);for(const n of this._features){const a=n.getGeometry(e);if(!a)continue;const l=i.circleMaterial.encodeAttributes(n,s,i);for(const e of a)if(e)for(const i of e){const e=t.index;t.add(i.x,i.y,0,0,l),t.add(i.x,i.y,0,1,l),t.add(i.x,i.y,1,0,l),t.add(i.x,i.y,1,1,l),r.add(e+0,e+1,e+2),r.add(e+1,e+2,e+3),this._circleIndexCount+=6}}}serialize(){let e=6;e+=this.layerUIDs.length,e+=this._circleVertexBuffer.array.length,e+=this._circleIndexBuffer.array.length;const t=new Uint32Array(e),r=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[i++]=this.layerUIDs[e];t[i++]=this._circleIndexStart,t[i++]=this._circleIndexCount,t[i++]=this._circleVertexBuffer.array.length;for(let e=0;e<this._circleVertexBuffer.array.length;e++)r[i++]=this._circleVertexBuffer.array[e];t[i++]=this._circleIndexBuffer.array.length;for(let e=0;e<this._circleIndexBuffer.array.length;e++)t[i++]=this._circleIndexBuffer.array[e];return t.buffer}}const J=new v;class Q extends W{constructor(e,t,r,i,s,n){super(e,t),this.type=1,this._fillVertexBuffer=r,this._fillIndexBuffer=i,this._outlineVertexBuffer=s,this._outlineIndexBuffer=n}get fillIndexStart(){return this._fillIndexStart}get fillIndexCount(){return this._fillIndexCount}get outlineIndexStart(){return this._outlineIndexStart}get outlineIndexCount(){return this._outlineIndexCount}processFeatures(e){this._fillIndexStart=3*this._fillIndexBuffer.index,this._fillIndexCount=0,this._outlineIndexStart=3*this._outlineIndexBuffer.index,this._outlineIndexCount=0;const t=this.layer,r=this.zoom;e&&e.setExtent(this.layerExtent);let i=void 0===t.getPaintValue("fill-pattern",r)&&t.getPaintValue("fill-antialias",r);if(t.outlineUsesFillColor){if(i&&!t.hasDataDrivenOpacity){const e=t.getPaintValue("fill-opacity",r),s=t.getPaintValue("fill-opacity",r+1);e<1&&s<1&&(i=!1)}if(i&&!t.hasDataDrivenColor){const e=t.getPaintValue("fill-color",r),s=t.getPaintValue("fill-color",r+1);e[3]<1&&s[3]<1&&(i=!1)}}const{fillMaterial:s,outlineMaterial:n,hasDataDrivenFill:a,hasDataDrivenOutline:l}=t;for(const o of this._features){const c=a?s.encodeAttributes(o,r,t):null,h=i&&l?n.encodeAttributes(o,r,t):null,x=o.getGeometry(e),u=null==e?void 0:e.validateTessellation;this._processFeature(x,i,t.outlineUsesFillColor,c,h,u)}}serialize(){let e=10;e+=this.layerUIDs.length,e+=this._fillVertexBuffer.array.length,e+=this._fillIndexBuffer.array.length,e+=this._outlineVertexBuffer.array.length,e+=this._outlineIndexBuffer.array.length;const t=new Uint32Array(e),r=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[i++]=this.layerUIDs[e];t[i++]=this._fillIndexStart,t[i++]=this._fillIndexCount,t[i++]=this._outlineIndexStart,t[i++]=this._outlineIndexCount,t[i++]=this._fillVertexBuffer.array.length;for(let e=0;e<this._fillVertexBuffer.array.length;e++)r[i++]=this._fillVertexBuffer.array[e];t[i++]=this._fillIndexBuffer.array.length;for(let e=0;e<this._fillIndexBuffer.array.length;e++)t[i++]=this._fillIndexBuffer.array[e];t[i++]=this._outlineVertexBuffer.array.length;for(let e=0;e<this._outlineVertexBuffer.array.length;e++)r[i++]=this._outlineVertexBuffer.array[e];t[i++]=this._outlineIndexBuffer.array.length;for(let e=0;e<this._outlineIndexBuffer.array.length;e++)t[i++]=this._outlineIndexBuffer.array[e];return t.buffer}_processFeature(e,t,r,i,s,n){if(!e)return;const a=e.length,l=!s||0===s.length;if(t&&(!r||l))for(let t=0;t<a;t++)this._processOutline(e[t],s);let o;for(let t=0;t<a;t++){const r=Q._area(e[t]);r>128?(void 0!==o&&this._processFill(e,o,i,n),o=[t]):r<-128&&void 0!==o&&o.push(t)}void 0!==o&&this._processFill(e,o,i,n)}_processOutline(e,t){const r=this._outlineVertexBuffer,i=this._outlineIndexBuffer,s=i.index;let n,a,l;const o=new k(0,0),c=new k(0,0),h=new k(0,0);let x=-1,u=-1,f=-1,d=-1,y=-1,p=!1;let _=e.length;if(_<2)return;const g=e[0];let m=e[_-1];for(;_&&m.isEqual(g);)--_,m=e[_-1];if(!(_-0<2)){for(let s=0;s<_;++s){0===s?(n=e[_-1],a=e[0],l=e[1],o.assignSub(a,n),o.normalize(),o.rightPerpendicular()):(n=a,a=l,l=s!==_-1?e[s+1]:e[0],o.assign(c));const g=this._isClipEdge(n,a);-1===d&&(p=g),c.assignSub(l,a),c.normalize(),c.rightPerpendicular();const m=o.x*c.y-o.y*c.x;h.assignAdd(o,c),h.normalize();const V=-h.x*-o.x+-h.y*-o.y;let I=Math.abs(0!==V?1/V:1);I>8&&(I=8),m>=0?(f=r.add(a.x,a.y,o.x,o.y,0,1,t),-1===d&&(d=f),x>=0&&u>=0&&f>=0&&!g&&i.add(x,u,f),u=r.add(a.x,a.y,I*-h.x,I*-h.y,0,-1,t),-1===y&&(y=u),x>=0&&u>=0&&f>=0&&!g&&i.add(x,u,f),x=u,u=f,f=r.add(a.x,a.y,h.x,h.y,0,1,t),x>=0&&u>=0&&f>=0&&!g&&i.add(x,u,f),u=r.add(a.x,a.y,c.x,c.y,0,1,t),x>=0&&u>=0&&f>=0&&!g&&i.add(x,u,f)):(f=r.add(a.x,a.y,I*h.x,I*h.y,0,1,t),-1===d&&(d=f),x>=0&&u>=0&&f>=0&&!g&&i.add(x,u,f),u=r.add(a.x,a.y,-o.x,-o.y,0,-1,t),-1===y&&(y=u),x>=0&&u>=0&&f>=0&&!g&&i.add(x,u,f),x=u,u=f,f=r.add(a.x,a.y,-h.x,-h.y,0,-1,t),x>=0&&u>=0&&f>=0&&!g&&i.add(x,u,f),x=r.add(a.x,a.y,-c.x,-c.y,0,-1,t),x>=0&&u>=0&&f>=0&&!g&&i.add(x,u,f))}x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d),x>=0&&d>=0&&y>=0&&!p&&i.add(x,y,d),this._outlineIndexCount+=3*(i.index-s)}}_processFill(t,r,i,s){let l;r.length>1&&(l=[]);let o=0;for(const e of r)0!==o&&l.push(o),o+=t[e].length;const c=2*o,h=e.acquire();for(const e of r){const r=t[e],i=r.length;for(let e=0;e<i;++e)h.push(r[e].x,r[e].y)}const x=n(h,l,2);if(s&&a(h,l,2,x)>0){const e=[],s=[];if(function(e,t,r,i){let s,n;J.beginPolygon(e,t);for(const e of i){const t=r[e];if(!(t.length<3)){J.beginContour();for(let e=0;e<t.length;++e){s=t[e].x,n=t[e].y;const r=[s,n,0];J.addVertex(r,r)}J.endContour()}}J.endPolygon()}(e,s,t,r),s.length>0){const t=this._fillVertexBuffer.index;let r=0;for(;r<e.length;)this._fillVertexBuffer.add(e[r++],e[r++],i);let n=0;for(;n<s.length;)this._fillIndexBuffer.add(t+s[n+0],t+s[n+1],t+s[n+2]),n+=3;this._fillIndexCount+=s.length}}else{const e=x.length;if(e>0){const t=this._fillVertexBuffer.index;let r=0;for(;r<c;)this._fillVertexBuffer.add(h[r++],h[r++],i);let s=0;for(;s<e;)this._fillIndexBuffer.add(t+x[s++],t+x[s++],t+x[s++]);this._fillIndexCount+=e}}e.release(h)}_isClipEdge(e,t){return e.x===t.x?e.x<=-64||e.x>=4160:e.y===t.y&&(e.y<=-64||e.y>=4160)}static _area(e){let t=0;const r=e.length-1;for(let i=0;i<r;i++)t+=(e[i].x-e[i+1].x)*(e[i].y+e[i+1].y);return t+=(e[r].x-e[0].x)*(e[r].y+e[0].y),.5*t}}class X extends W{constructor(e,t,r,i){super(e,t),this.type=2,this._tessellationOptions={},this.tessellationProperties={_lineVertexBuffer:null,_lineIndexBuffer:null,_hasPattern:null,_ddValues:null,_capType:null,_joinType:null,_miterLimitCosine:null,_roundLimitCosine:null},this.tessellationProperties._lineVertexBuffer=r,this.tessellationProperties._lineIndexBuffer=i,this.tessellationProperties._hasPattern=e.getPaintValue("line-pattern",this.zoom)||e.getPaintValue("line-dasharray",this.zoom).length>0,this._isThinLine=e.isThinLine,this._isThinLine?this._tessellationCallbacks={vertex:$(this.tessellationProperties),bridge:ee(this.tessellationProperties)}:this._tessellationCallbacks={vertex:te(this.tessellationProperties),bridge:re(this.tessellationProperties)}}get lineIndexStart(){return this._lineIndexStart}get lineIndexCount(){return this._lineIndexCount}processFeatures(e){this._lineIndexStart=3*this.tessellationProperties._lineIndexBuffer.index,this._lineIndexCount=0;const t=this.layer,r=this.zoom;e&&e.setExtent(this.layerExtent);for(const i of this._features){const s=t.hasDataDrivenLine?t.lineMaterial.encodeAttributes(i,r,t):null;this.tessellationProperties._capType=t.getLayoutValue("line-cap",r,i),this.tessellationProperties._joinType=t.getLayoutValue("line-join",r,i),this.tessellationProperties._miterLimitCosine=w(t.getLayoutValue("line-miter-limit",r,i)),this.tessellationProperties._roundLimitCosine=w(t.getLayoutValue("line-round-limit",r,i));const n=i.getGeometry(e);this._processFeature(n,s)}M()}serialize(){let e=6;e+=this.layerUIDs.length,e+=this.tessellationProperties._lineVertexBuffer.array.length,e+=this.tessellationProperties._lineIndexBuffer.array.length;const t=new Uint32Array(e),r=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[i++]=this.layerUIDs[e];t[i++]=this._lineIndexStart,t[i++]=this._lineIndexCount,t[i++]=this.tessellationProperties._lineVertexBuffer.array.length;for(let e=0;e<this.tessellationProperties._lineVertexBuffer.array.length;e++)r[i++]=this.tessellationProperties._lineVertexBuffer.array[e];t[i++]=this.tessellationProperties._lineIndexBuffer.array.length;for(let e=0;e<this.tessellationProperties._lineIndexBuffer.array.length;e++)t[i++]=this.tessellationProperties._lineIndexBuffer.array[e];return t.buffer}_processFeature(e,t){if(!e)return;const r=e.length;for(let i=0;i<r;i++)this._processGeometry(e[i],t)}_processGeometry(e,t){if(e.length<2)return;let r,i,s=e[0],n=1;for(;n<e.length;)r=e[n].x-s.x,i=e[n].y-s.y,r*r+i*i<1e-6?e.splice(n,1):(s=e[n],++n);if(e.length<2)return;const a=3*this.tessellationProperties._lineIndexBuffer.index;this._tessellationOptions.trackDistance=this.tessellationProperties._hasPattern,this._tessellationOptions.initialDistance=0,this._tessellationOptions.thin=this._isThinLine,this._tessellationOptions.wrapDistance=65535,this._tessellationOptions.outerBisectorAutoSplitThreshold=.2631578947368421,this._tessellationOptions.enableOuterBisectorSplit=this.tessellationProperties._hasPattern,this._tessellationOptions.innerBisectorAutoSplitThreshold=.2631578947368421,this._tessellationOptions.enableInnerBisectorSplit=this.tessellationProperties._hasPattern,this.tessellationProperties._ddValues=t,P(e,this._tessellationOptions,this._tessellationCallbacks),this._lineIndexCount+=3*this.tessellationProperties._lineIndexBuffer.index-a}}const $=e=>t=>{t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)},ee=e=>t=>{e._lineIndexBuffer.add(t.leftExit0,t.rightEntry0,t.leftExit2),e._lineIndexBuffer.add(t.rightEntry0,t.rightEntry2,t.leftExit2)},te=e=>t=>{const r=2===e._joinType?e._miterLimitCosine:e._roundLimitCosine,i=t.isCap&&0!==e._capType;let s=!1;t.cosine>.97?(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues),t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues)):t.cosine<1-.97?(t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):t.canSplit?(b(),t.sign>0?(t.splitInner?(t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.leftInner.x,t.leftInner.y,0,-1,t.distance,e._ddValues),t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.rightInner.x,t.rightInner.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)),t.cosine<r?(s=!t.isCap,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):t.splitOuter?(s=s||t.gapOuter,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.leftOuter.x,-t.leftOuter.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.rightOuter.x,-t.rightOuter.y,0,1,t.distance,e._ddValues)):(t.entry2=t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues))):(t.splitInner?(t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.leftInner.x,-t.leftInner.y,0,1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.rightInner.x,-t.rightInner.y,0,1,t.distance,e._ddValues)):(t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues)),t.cosine<r?(s=!t.isCap,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues)):t.splitOuter?(s=s||t.gapOuter,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.leftOuter.x,t.leftOuter.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.rightOuter.x,t.rightOuter.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)))):t.sign>0?(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues),t.cosine<r?(s=!t.isCap,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):(t.entry2=t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues))):(t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues),t.cosine<r?(s=!t.isCap,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)));let n;if(t.canSplit&&(t.splitInner||t.splitOuter)||s||i?(n=t.entry1=t.exit1=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,0,0,0,0,t.distance,e._ddValues)):n=t.entry1=t.exit1=null,s&&1!==e._joinType)e._lineIndexBuffer.add(n,t.sign>0?t.exit2:t.entry0,t.sign>0?t.entry2:t.exit0);else if(i&&1===e._capType||s&&1===e._joinType){let r,i,s,a,l,o;if(t.isCap){const e=Math.PI;l=Math.ceil(e/.8),o=e/l,t.isFirstVertex?(r=t.prevNormal.x,i=t.prevNormal.y,s=t.entry0,a=t.entry2):t.isLastVertex&&(r=-t.nextNormal.x,i=-t.nextNormal.y,s=t.exit2,a=t.exit0)}else{const e=2*Math.acos(t.cosine);l=Math.ceil(e/.8),o=e/l,r=t.sign>0?-t.prevNormal.x:t.nextNormal.x,i=t.sign>0?-t.prevNormal.y:t.nextNormal.y,s=t.sign>0?t.entry2:t.exit0,a=t.sign>0?t.exit2:t.entry0}const c=Math.cos(o),h=Math.sin(o),x=h*r+c*i;let u,f;r=c*r-h*i,i=x;for(let o=0;o<l;++o){if(u=f,o<l-1)if(t.isCap){const s=t.isFirstVertex?-1:1;f=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,r,i,s,0,t.distance,e._ddValues)}else f=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,r,i,0,t.sign,t.distance,e._ddValues);e._lineIndexBuffer.add(0===o?s:u,n,o===l-1?a:f);const x=h*r+c*i;r=c*r-h*i,i=x}}else if(i&&2===e._capType){const r=t.isFirstVertex?1:-1;let i,s;e._hasPattern?(i=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x-r*t.inbound.x,t.prevNormal.y-r*t.inbound.y,-r,-1,t.distance,e._ddValues),s=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x-r*t.inbound.x,-t.prevNormal.y-r*t.inbound.y,-r,1,t.distance,e._ddValues)):(i=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x-r*t.inbound.x,t.prevNormal.y-r*t.inbound.y,0,-1,t.distance,e._ddValues),s=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x-r*t.inbound.x,-t.prevNormal.y-r*t.inbound.y,0,1,t.distance,e._ddValues)),r>0?(e._lineIndexBuffer.add(n,t.entry2,s),e._lineIndexBuffer.add(n,s,i),e._lineIndexBuffer.add(n,i,t.entry0)):(e._lineIndexBuffer.add(n,s,t.exit2),e._lineIndexBuffer.add(n,i,s),e._lineIndexBuffer.add(n,t.exit0,i))}},re=e=>t=>{e._lineIndexBuffer.add(t.leftExit0,t.rightEntry0,null!=t.leftExit1?t.leftExit1:t.leftExit2),e._lineIndexBuffer.add(t.rightEntry0,null!=t.rightEntry1?t.rightEntry1:t.rightEntry2,null!=t.leftExit1?t.leftExit1:t.leftExit2),null!=t.leftExit1&&null!=t.rightEntry1?(e._lineIndexBuffer.add(t.leftExit1,t.rightEntry1,t.leftExit2),e._lineIndexBuffer.add(t.rightEntry1,t.rightEntry2,t.leftExit2)):null!=t.leftExit1?e._lineIndexBuffer.add(t.leftExit1,t.rightEntry2,t.leftExit2):null!=t.rightEntry1&&e._lineIndexBuffer.add(t.rightEntry1,t.rightEntry2,t.leftExit2)};function ie(e,t){return e.iconMosaicItem&&t.iconMosaicItem?e.iconMosaicItem.page===t.iconMosaicItem.page?0:e.iconMosaicItem.page-t.iconMosaicItem.page:e.iconMosaicItem&&!t.iconMosaicItem?1:!e.iconMosaicItem&&t.iconMosaicItem?-1:0}class se extends W{constructor(e,t,r,i,s,n,a,l){super(e,t),this.type=3,this._markerMap=new Map,this._glyphMap=new Map,this._glyphBufferDataStorage=new Map,this._isIconSDF=!1,this._iconVertexBuffer=r,this._iconIndexBuffer=i,this._textVertexBuffer=s,this._textIndexBuffer=n,this._placementEngine=a,this._workerTileHandler=l}get markerPageMap(){return this._markerMap}get glyphsPageMap(){return this._glyphMap}get symbolInstances(){return this._symbolInstances}getResources(e,t,i){const s=this.layer,n=this.zoom;e&&e.setExtent(this.layerExtent);const a=s.getLayoutProperty("icon-image"),l=s.getLayoutProperty("text-field");let o=s.getLayoutProperty("text-transform"),c=s.getLayoutProperty("text-font");const h=[];let x,u,f,d;a&&!a.isDataDriven&&(x=a.getValue(n)),l&&!l.isDataDriven&&(u=l.getValue(n)),o&&o.isDataDriven||(f=s.getLayoutValue("text-transform",n),o=null),c&&c.isDataDriven||(d=s.getLayoutValue("text-font",n),c=null);for(const y of this._features){const p=y.getGeometry(e);if(!p||0===p.length)continue;let _,g;a&&(_=a.isDataDriven?a.getValue(n,y):this._replaceKeys(x,y.values),_&&t.add(_));let m=!1;if(l&&(g=l.isDataDriven?l.getValue(n,y):this._replaceKeys(u,y.values),g)){switch(g=g.replace(/\\n/g,"\n"),o&&(f=o.getValue(n,y)),f){case 2:g=g.toLowerCase();break;case 1:g=g.toUpperCase()}if(se._bidiEngine.hasBidiChar(g)){let e;e="rtl"===se._bidiEngine.checkContextual(g)?"IDNNN":"ICNNN",g=se._bidiEngine.bidiTransform(g,e,"VLYSN"),m=!0}const e=g.length;if(e>0){c&&(d=c.getValue(n,y));for(const t of d){let r=i[t];r||(r=i[t]=new Set);for(let t=0;t<e;t++){const e=g.charCodeAt(t);r.add(e)}}}}if(!_&&!g)continue;const V=s.getLayoutValue("symbol-sort-key",n,y),I={feature:y,sprite:_,label:g,rtl:m,geometry:p,hash:(g?r(g):0)^(_?r(_):0),priority:V,textFont:d};h.push(I)}this._symbolFeatures=h}processFeatures(e){e&&e.setExtent(this.layerExtent);const t=this.layer,r=this.zoom,i=t.getLayoutValue("symbol-placement",r),s=0!==i,n=8*t.getLayoutValue("symbol-spacing",r),a=t.getLayoutProperty("icon-image"),l=t.getLayoutProperty("text-field"),c=a?new y(t,r,s):null,h=l?new p(t,r,s):null,x=this._workerTileHandler;let u;a&&(u=x.getSpriteItems()),this._iconIndexStart=3*this._iconIndexBuffer.index,this._textIndexStart=3*this._textIndexBuffer.index,this._iconIndexCount=0,this._textIndexCount=0,this._markerMap.clear(),this._glyphMap.clear();const f=[];let d=1;h&&h.size&&(d=h.size/24);const _=h?h.maxAngle*o:0,g=h?8*h.size:0;for(const e of this._symbolFeatures){let t;c&&u&&e.sprite&&(t=u[e.sprite],t&&t.sdf&&(this._isIconSDF=!0));let a;!!t&&c.update(r,e.feature);let l=0;const o=e.label;if(o){h.update(r,e.feature);const t=s?h.keepUpright:h.writingMode&&h.writingMode.indexOf(1)>=0;let i=.5;switch(h.anchor){case 5:case 1:case 7:i=0;break;case 6:case 2:case 8:i=1}let n=.5;switch(h.anchor){case 5:case 3:case 6:n=0;break;case 7:case 4:case 8:n=1}let c=.5;switch(h.justify){case 0:c=i;break;case 1:c=0;break;case 3:c=1}const u=24*h.letterSpacing,f=s?0:24*h.maxWidth,y=24*h.lineHeight,p=e.textFont.map((e=>x.getGlyphItems(e)));if(a=new C(p,f,y,u,i,n,c).getShaping(o,e.rtl,t),a&&a.length>0){let e=1e30,t=-1e30;for(const r of a)e=Math.min(e,r.x),t=Math.max(t,r.x);l=(t-e+48)*d*8}}for(let r of e.geometry){const o=[];if(1===i){if(a&&a.length>0&&h&&h.size){const e=8*h.size*(2+Math.min(2,4*Math.abs(h.offset[1])));r=se._smoothVertices(r,e)}se._pushAnchors(o,r,n,l)}else 2===i?se._pushCenterAnchor(o,r):3===e.feature.type?se._pushCentroid(o,r):o.push(new S(r[0].x,r[0].y));for(const i of o){if(i.x<0||i.x>4096||i.y<0||i.y>4096)continue;if(s&&l>0&&0===h.rotationAlignment&&!se._honorsTextMaxAngle(r,i,l,_,g))continue;const n={shaping:a,line:r,iconMosaicItem:t,anchor:i,symbolFeature:e,textColliders:[],iconColliders:[],textVertexRanges:[],iconVertexRanges:[]};f.push(n),this._processFeature(n,c,h)}}}f.sort(ie),this._addPlacedGlyphs(),this._symbolInstances=f}serialize(){let e=11;e+=this.layerUIDs.length,e+=3*this.markerPageMap.size,e+=3*this.glyphsPageMap.size,e+=se.symbolsSerializationLength(this._symbolInstances),e+=this._iconVertexBuffer.array.length,e+=this._iconIndexBuffer.array.length,e+=this._textVertexBuffer.array.length,e+=this._textIndexBuffer.array.length;const t=new Uint32Array(e),r=new Int32Array(t.buffer),i=new Float32Array(t.buffer);let s=0;t[s++]=this.type,t[s++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[s++]=this.layerUIDs[e];t[s++]=this._isIconSDF?1:0,t[s++]=this.markerPageMap.size;for(const[e,[r,i]]of this.markerPageMap)t[s++]=e,t[s++]=r,t[s++]=i;t[s++]=this.glyphsPageMap.size;for(const[e,[r,i]]of this.glyphsPageMap)t[s++]=e,t[s++]=r,t[s++]=i;t[s++]=this._iconVertexBuffer.index/4,t[s++]=this._textVertexBuffer.index/4,s=se.serializeSymbols(t,r,i,s,this._symbolInstances),t[s++]=this._iconVertexBuffer.array.length;for(let e=0;e<this._iconVertexBuffer.array.length;e++)r[s++]=this._iconVertexBuffer.array[e];t[s++]=this._iconIndexBuffer.array.length;for(let e=0;e<this._iconIndexBuffer.array.length;e++)t[s++]=this._iconIndexBuffer.array[e];t[s++]=this._textVertexBuffer.array.length;for(let e=0;e<this._textVertexBuffer.array.length;e++)r[s++]=this._textVertexBuffer.array[e];t[s++]=this._textIndexBuffer.array.length;for(let e=0;e<this._textIndexBuffer.array.length;e++)t[s++]=this._textIndexBuffer.array[e];return t.buffer}static symbolsSerializationLength(e){let t=0;t+=1;for(const r of e||[]){t+=4,t+=1;for(const e of r.textColliders)t+=10;for(const e of r.iconColliders)t+=10;t+=1,t+=2*r.textVertexRanges.length,t+=1,t+=2*r.iconVertexRanges.length}return t}static serializeSymbols(e,t,r,i,s){s=s||[],t[i++]=s.length;for(const e of s){t[i++]=e.anchor.x,t[i++]=e.anchor.y,t[i++]=e.symbolFeature.hash,t[i++]=e.symbolFeature.priority,t[i++]=e.textColliders.length+e.iconColliders.length;for(const s of e.textColliders)t[i++]=s.xTile,t[i++]=s.yTile,t[i++]=s.dxPixels,t[i++]=s.dyPixels,t[i++]=s.hard?1:0,t[i++]=s.partIndex,r[i++]=s.minLod,r[i++]=s.maxLod,t[i++]=s.width,t[i++]=s.height;for(const s of e.iconColliders)t[i++]=s.xTile,t[i++]=s.yTile,t[i++]=s.dxPixels,t[i++]=s.dyPixels,t[i++]=s.hard?1:0,t[i++]=s.partIndex,r[i++]=s.minLod,r[i++]=s.maxLod,t[i++]=s.width,t[i++]=s.height;t[i++]=e.textVertexRanges.length;for(const[r,s]of e.textVertexRanges)t[i++]=r,t[i++]=s;t[i++]=e.iconVertexRanges.length;for(const[r,s]of e.iconVertexRanges)t[i++]=r,t[i++]=s}return i}_replaceKeys(e,t){return e.replace(/{([^{}]+)}/g,(function(e,r){return r in t?t[r]:""}))}_processFeature(e,t,r){const{line:i,iconMosaicItem:s,shaping:n,anchor:a}=e,l=this.zoom,o=this.layer,c=!!s;let h=!0;c&&(h=t.optional||!s);const x=n&&n.length>0;let u,f,d=!0;if(x&&(d=r.optional),c&&(u=this._placementEngine.getIconPlacement(a,s,t)),(u||h)&&(x&&(f=this._placementEngine.getTextPlacement(a,n,i,r)),f||d)){if(u&&f||(d||h?d||f?h||u||(f=null):u=null:(u=null,f=null)),f){const t=o.hasDataDrivenText?o.textMaterial.encodeAttributes(e.symbolFeature.feature,l,o):null;if(this._storePlacedGlyphs(e,f.shapes,l,r.rotationAlignment,t),f.textColliders){e.textColliders=f.textColliders;for(const e of f.textColliders){e.minLod=Math.max(l+_(e.minLod),0),e.maxLod=Math.min(l+_(e.maxLod),25);const t=e.angle;if(t){const r=Math.cos(t),i=Math.sin(t),s=e.dxPixels*r-e.dyPixels*i,n=e.dxPixels*i+e.dyPixels*r,a=(e.dxPixels+e.width)*r-e.dyPixels*i,l=(e.dxPixels+e.width)*i+e.dyPixels*r,o=e.dxPixels*r-(e.dyPixels+e.height)*i,c=e.dxPixels*i+(e.dyPixels+e.height)*r,h=(e.dxPixels+e.width)*r-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*r,u=Math.min(s,a,o,h),f=Math.max(s,a,o,h),d=Math.min(n,l,c,x),y=Math.max(n,l,c,x);e.dxPixels=u,e.dyPixels=d,e.width=f-u,e.height=y-d}}}}if(u){const r=o.hasDataDrivenIcon?o.iconMaterial.encodeAttributes(e.symbolFeature.feature,l,o):null;if(this._addPlacedIcons(e,u.shapes,l,s.page,1===t.rotationAlignment,r),u.iconColliders){e.iconColliders=u.iconColliders;for(const e of u.iconColliders){e.minLod=Math.max(l+_(e.minLod),0),e.maxLod=Math.min(l+_(e.maxLod),25);const t=e.angle;if(t){const r=Math.cos(t),i=Math.sin(t),s=e.dxPixels*r-e.dyPixels*i,n=e.dxPixels*i+e.dyPixels*r,a=(e.dxPixels+e.width)*r-e.dyPixels*i,l=(e.dxPixels+e.width)*i+e.dyPixels*r,o=e.dxPixels*r-(e.dyPixels+e.height)*i,c=e.dxPixels*i+(e.dyPixels+e.height)*r,h=(e.dxPixels+e.width)*r-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*r,u=Math.min(s,a,o,h),f=Math.max(s,a,o,h),d=Math.min(n,l,c,x),y=Math.max(n,l,c,x);e.dxPixels=u,e.dyPixels=d,e.width=f-u,e.height=y-d}}}}}}_addPlacedIcons(e,t,r,i,s,n){const a=Math.max(r-1,0),l=this._iconVertexBuffer,o=this._iconIndexBuffer,c=this._markerMap;for(const h of t){const t=s?0:Math.max(r+_(h.minzoom),a),x=s?25:Math.min(r+_(h.maxzoom),25);if(x<=t)continue;const u=h.tl,f=h.tr,d=h.bl,y=h.br,p=h.mosaicRect,g=h.labelAngle,m=h.minAngle,V=h.maxAngle,I=h.anchor,B=l.index,b=p.x,w=p.y,M=b+p.width,P=w+p.height,k=l.index;l.add(I.x,I.y,u.x,u.y,b,w,g,m,V,t,x,n),l.add(I.x,I.y,f.x,f.y,M,w,g,m,V,t,x,n),l.add(I.x,I.y,d.x,d.y,b,P,g,m,V,t,x,n),l.add(I.x,I.y,y.x,y.y,M,P,g,m,V,t,x,n),e.iconVertexRanges.length>0&&e.iconVertexRanges[0][0]+e.iconVertexRanges[0][1]===k?e.iconVertexRanges[0][1]+=4:e.iconVertexRanges.push([k,4]),o.add(B+0,B+1,B+2),o.add(B+1,B+2,B+3),c.has(i)?c.get(i)[1]+=6:c.set(i,[this._iconIndexStart+this._iconIndexCount,6]),this._iconIndexCount+=6}}_addPlacedGlyphs(){const e=this._textVertexBuffer,t=this._textIndexBuffer,r=this._glyphMap;for(const[i,s]of this._glyphBufferDataStorage)for(const n of s){const s=e.index,a=n.symbolInstance,l=n.ddAttributes,o=e.index;e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.tl[0],n.tl[1],n.xmin,n.ymin,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,l),e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.tr[0],n.tr[1],n.xmax,n.ymin,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,l),e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.bl[0],n.bl[1],n.xmin,n.ymax,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,l),e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.br[0],n.br[1],n.xmax,n.ymax,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,l),a.textVertexRanges.length>0&&a.textVertexRanges[0][0]+a.textVertexRanges[0][1]===o?a.textVertexRanges[0][1]+=4:a.textVertexRanges.push([o,4]),t.add(s+0,s+1,s+2),t.add(s+1,s+2,s+3),r.has(i)?r.get(i)[1]+=6:r.set(i,[this._textIndexStart+this._textIndexCount,6]),this._textIndexCount+=6}this._glyphBufferDataStorage.clear()}_storePlacedGlyphs(e,t,r,i,s){const n=Math.max(r-1,0),a=1===i;let l,o,c,h,x,u,f,d,y,p,g;for(const i of t){if(l=a?0:Math.max(r+_(i.minzoom),n),o=a?25:Math.min(r+_(i.maxzoom),25),o<=l)continue;c=i.tl,h=i.tr,x=i.bl,u=i.br,f=i.labelAngle,d=i.minAngle,y=i.maxAngle,p=i.anchor,g=i.mosaicRect,this._glyphBufferDataStorage.has(i.page)||this._glyphBufferDataStorage.set(i.page,[]);this._glyphBufferDataStorage.get(i.page).push({glyphAnchor:[p.x,p.y],tl:[c.x,c.y],tr:[h.x,h.y],bl:[x.x,x.y],br:[u.x,u.y],xmin:g.x,ymin:g.y,xmax:g.x+g.width,ymax:g.y+g.height,labelAngle:f,minAngle:d,maxAngle:y,minLod:l,maxLod:o,placementLod:n,symbolInstance:e,ddAttributes:s})}}static _pushAnchors(e,t,r,i){r+=i;let s=0;const n=t.length-1;for(let e=0;e<n;e++)s+=k.distance(t[e],t[e+1]);let a=i||r;if(a*=.5,s<=a)return;const l=a/s;let o=0,c=-(r=s/Math.max(Math.round(s/r),1))/2;const h=t.length-1;for(let i=0;i<h;i++){const s=t[i],n=t[i+1],a=n.x-s.x,h=n.y-s.y,x=Math.sqrt(a*a+h*h);let u;for(;c+r<o+x;){c+=r;const t=(c-o)/x,f=g(s.x,n.x,t),d=g(s.y,n.y,t);void 0===u&&(u=Math.atan2(h,a)),e.push(new S(f,d,u,i,l))}o+=x}}static _pushCenterAnchor(e,t){let r=0;const i=t.length-1;for(let e=0;e<i;e++)r+=k.distance(t[e],t[e+1]);const s=r/2;let n=0;const a=t.length-1;for(let r=0;r<a;r++){const i=t[r],a=t[r+1],l=a.x-i.x,o=a.y-i.y,c=Math.sqrt(l*l+o*o);if(s<n+c){const t=(s-n)/c,h=g(i.x,a.x,t),x=g(i.y,a.y,t),u=Math.atan2(o,l);return void e.push(new S(h,x,u,r,0))}n+=c}}static _deviation(e,t,r){const i=(t.x-e.x)*(r.x-t.x)+(t.y-e.y)*(r.y-t.y),s=(t.x-e.x)*(r.y-t.y)-(t.y-e.y)*(r.x-t.x);return Math.atan2(s,i)}static _honorsTextMaxAngle(e,t,r,i,s){let n=0;const a=r/2;let l=new k(t.x,t.y),o=t.segment+1;for(;n>-a;){if(--o,o<0)return!1;n-=k.distance(e[o],l),l=e[o]}n+=k.distance(e[o],e[o+1]);const c=[];let h=0;const x=e.length;for(;n<a;){const t=e[o];let r,a=o;do{if(++a,a===x)return!1;r=e[a]}while(r.isEqual(t));let l,u=a;do{if(++u,u===x)return!1;l=e[u]}while(l.isEqual(r));const f=this._deviation(t,r,l);for(c.push({deviation:f,distToAnchor:n}),h+=f;n-c[0].distToAnchor>s;)h-=c.shift().deviation;if(Math.abs(h)>i)return!1;n+=k.distance(r,l),o=a}return!0}static _smoothVertices(e,t){if(t<=0)return e;let r=e.length;if(r<3)return e;const i=[];let s=0,n=0;i.push(0);for(let t=1;t<r;t++){const r=k.distance(e[t],e[t-1]);r>0&&(s+=r,i.push(s),n++,n!==t&&(e[n]=e[t]))}if(r=n+1,r<3)return e;t=Math.min(t,.2*s);const a=e[0].x,l=e[0].y,o=e[r-1].x,c=e[r-1].y,h=k.sub(e[0],e[1]);h.normalize(),e[0].x+=t*h.x,e[0].y+=t*h.y,h.assignSub(e[r-1],e[r-2]),h.normalize(),e[r-1].x+=t*h.x,e[r-1].y+=t*h.y,i[0]-=t,i[r-1]+=t;const x=[];x.push(new k(a,l));const u=1e-6,f=.5*t;for(let s=1;s<r-1;s++){let n=0,a=0,l=0;for(let r=s-1;r>=0;r--){const o=f+i[r+1]-i[s];if(o<0)break;const c=i[r+1]-i[r],h=i[s]-i[r]<f?1:o/c;if(h<u)break;const x=h*h,d=h*o-.5*x*c,y=h*c/t,p=e[r+1],_=e[r].x-p.x,g=e[r].y-p.y;n+=y/d*(p.x*h*o+.5*x*(o*_-c*p.x)-x*h*c*_/3),a+=y/d*(p.y*h*o+.5*x*(o*g-c*p.y)-x*h*c*g/3),l+=y}for(let o=s+1;o<r;o++){const r=f-i[o-1]+i[s];if(r<0)break;const c=i[o]-i[o-1],h=i[o]-i[s]<f?1:r/c;if(h<u)break;const x=h*h,d=h*r-.5*x*c,y=h*c/t,p=e[o-1],_=e[o].x-p.x,g=e[o].y-p.y;n+=y/d*(p.x*h*r+.5*x*(r*_-c*p.x)-x*h*c*_/3),a+=y/d*(p.y*h*r+.5*x*(r*g-c*p.y)-x*h*c*g/3),l+=y}x.push(new k(n/l,a/l))}return x.push(new k(o,c)),e[0].x=a,e[0].y=l,e[r-1].x=o,e[r-1].y=c,x}static _pushCentroid(e,t){const r=4096,i=4096,s=t.length-1;let n=0,a=0,l=0,o=t[0].x,c=t[0].y;o>r&&(o=r),o<0&&(o=0),c>i&&(c=i),c<0&&(c=0);for(let e=1;e<s;e++){let s=t[e].x,h=t[e].y,x=t[e+1].x,u=t[e+1].y;s>r&&(s=r),s<0&&(s=0),h>i&&(h=i),h<0&&(h=0),x>r&&(x=r),x<0&&(x=0),u>i&&(u=i),u<0&&(u=0);const f=(s-o)*(u-c)-(x-o)*(h-c);n+=f*(o+s+x),a+=f*(c+h+u),l+=f}n/=3*l,a/=3*l,isNaN(n)||isNaN(a)||e.push(new S(n,a))}}var ne;se._bidiEngine=new I,function(e){e[e.INITIALIZED=0]="INITIALIZED",e[e.NO_DATA=1]="NO_DATA",e[e.READY=2]="READY",e[e.MODIFIED=3]="MODIFIED",e[e.INVALID=4]="INVALID"}(ne||(ne={}));class ae{constructor(e,t,r,i,s){if(this._pbfTiles={},this._tileClippers={},this._client=r,this._tile=t,s){this._styleLayerUIDs=new Set;for(const e of s)this._styleLayerUIDs.add(e)}this._styleRepository=i,this._layers=this._styleRepository.layers;const[n,a,o]=t.tileKey.split("/").map(parseFloat);this._level=n;const c=Math.max(8,Math.round(1*this._level)-8);for(const t of Object.keys(e)){const r=e[t];this._pbfTiles[t]=new l(new Uint8Array(r.protobuff),new DataView(r.protobuff));if(r.refKey){const[e]=r.refKey.split("/").map(parseFloat),i=n-e;if(i>0){const e=(1<<i)-1,r=a&e,s=o&e;this._tileClippers[t]=new L(i,r,s,8,c)}}this._tileClippers[t]||(this._tileClippers[t]=new A)}}_canParseStyleLayer(e){return!this._styleLayerUIDs||this._styleLayerUIDs.has(e)}async parse(e){const t=this._initialize(e),{returnedBuckets:r}=t;this._processLayers(t),this._linkReferences(t),this._filterFeatures(t);const i=new Set,s={};for(const e of r)3===e.type&&e.getResources(e.tileClipper,i,s);if(this._tile.status===ne.INVALID)return Promise.resolve([]);const n=this._fetchResources(i,s,e);return Promise.all(n).then((()=>this._processFeatures(t.returnedBuckets)))}_initialize(e){return{signal:e&&e.signal,sourceNameToTileData:this._parseTileData(this._pbfTiles),layers:this._layers,zoom:this._level,sourceNameToTileClipper:this._tileClippers,sourceNameToUniqueSourceLayerBuckets:{},sourceNameToUniqueSourceLayers:{},returnedBuckets:[],layerIdToBucket:{},referencerUIDToReferencedId:new Map}}_processLayers(e){const{sourceNameToTileData:t,layers:r,zoom:i,sourceNameToTileClipper:s,sourceNameToUniqueSourceLayerBuckets:n,sourceNameToUniqueSourceLayers:a,returnedBuckets:l,layerIdToBucket:o,referencerUIDToReferencedId:c}=e;for(let e=r.length-1;e>=0;e--){const h=r[e];if(!this._canParseStyleLayer(h.uid)||h.minzoom&&i<Math.floor(h.minzoom)||h.maxzoom&&i>=h.maxzoom||0===h.type)continue;if(!t[h.source]||!s[h.source])continue;const x=t[h.source],u=s[h.source],f=h.sourceLayer,d=x[f];if(d){let e=a[h.source];if(e||(e=a[h.source]=new Set),e.add(h.sourceLayer),h.refLayerId)c.set(h.uid,h.refLayerId);else{const e=this._createBucket(h);if(e){e.layerUIDs=[h.uid],e.layerExtent=d.extent,e.tileClipper=u;let t=n[h.source];t||(t=n[h.source]={});let r=t[f];r||(r=t[f]=[]),r.push(e),l.push(e),o[h.id.toLowerCase()]=e}}}}}_linkReferences(e){const{layerIdToBucket:t,referencerUIDToReferencedId:r}=e;r.forEach(((e,r)=>{e=e.toLowerCase(),t[e]&&t[e].layerUIDs.push(r)}))}_filterFeatures(e){const{signal:t,sourceNameToTileData:r,sourceNameToUniqueSourceLayerBuckets:s,sourceNameToUniqueSourceLayers:n}=e,a=10*this._level,l=10*(this._level+1),o=[],c=[];for(const e of Object.keys(n)){n[e].forEach((t=>{o.push(t),c.push(e)}))}for(let e=0;e<o.length;e++){const n=c[e],h=o[e];if(!r[n]||!s[n])continue;const x=r[n][h],u=s[n][h];if(!u||0===u.length)continue;if(i(t))return;const f=x.getData();for(;f.nextTag(2);){const e=f.getMessage(),t=new R(e,x);e.release();const r=t.values;if(r){const e=r._minzoom;if(e&&e>=l)continue;const t=r._maxzoom;if(t&&t<=a)continue}for(const e of u)e.pushFeature(t)}}}_fetchResources(e,t,r){const i=[],s=this._tile.getWorkerTileHandler();let n,a;e.size>0&&(n=s.fetchSprites(e,this._client,r),i.push(n));for(const e in t){const n=t[e];n.size>0&&(a=s.fetchGlyphs(this._tile.tileKey,e,n,this._client,r),i.push(a))}return i}_processFeatures(e){const t=e.filter((e=>e.hasFeatures()||this._canParseStyleLayer(e.layer.uid)));for(const e of t)e.processFeatures(e.tileClipper);return t}_parseTileData(e){const t={};for(const r of Object.keys(e)){const i=e[r],s={};for(;i.next();)switch(i.tag()){case 3:{const e=i.getMessage(),t=new j(e);e.release(),s[t.name]=t;break}default:i.skip()}t[r]=s}return t}_createBucket(e){switch(e.type){case 0:return null;case 1:return this._createFillBucket(e);case 2:return this._createLineBucket(e);case 4:return this._createCircleBucket(e);case 3:return this._createSymbolBucket(e)}}_createFillBucket(e){return new Q(e,this._level,new q(e.fillMaterial.getStride()),new O,new K(e.outlineMaterial.getStride()),new O)}_createLineBucket(e){return new X(e,this._level,new G(e.lineMaterial.getStride()),new O)}_createCircleBucket(e){return new Z(e,this._level,new Y(e.circleMaterial.getStride()),new O)}_createSymbolBucket(e){const t=this._tile;return new se(e,this._level,new H(e.iconMaterial.getStride()),new O,new H(e.textMaterial.getStride()),new O,t.placementEngine,t.getWorkerTileHandler())}}class le{constructor(e,t,r,i){this.status=ne.INITIALIZED,this.placementEngine=new U,this.tileKey=e,this.refKeys=t,this._workerTileHandler=r,this._styleRepository=i}release(){this.tileKey="",this.refKeys=null,this.status=ne.INITIALIZED,this._workerTileHandler=null}async parse(e,r,i){const n=i&&i.signal;if(t(n)){const e=()=>{n.removeEventListener("abort",e),this.status=ne.INVALID};n.addEventListener("abort",e)}let a;try{a=await this._parse(e,i)}catch(e){if(s(e))throw e;return{result:[],transferList:[]}}this.status=ne.READY;const l=[];for(const e of a){const t=e.serialize();l.push(t)}return{result:l,transferList:l.length<=r&&l}}setObsolete(){this.status=ne.INVALID}getLayers(){return this._workerTileHandler.getLayers()}getWorkerTileHandler(){return this._workerTileHandler}async _parse(e,t){const r=e.sourceName2DataAndRefKey;if(0===Object.keys(r).length)return[];this.status=ne.MODIFIED;return new ae(r,this,t.client,this._styleRepository,e.styleLayerUIDs).parse(t)}}export default class{constructor(){this._spriteInfo={},this._glyphInfo={}}reset(){return this._spriteInfo={},this._glyphInfo={},Promise.resolve()}getLayers(){var e;return null==(e=this._styleRepository)?void 0:e.layers}async createTileAndParse(e,t){const{key:r}=e,i={};for(const t of Object.keys(e.sourceName2DataAndRefKey)){const r=e.sourceName2DataAndRefKey[t];i[t]=r.refKey}const n=new le(r,i,this,this._styleRepository);try{return await n.parse(e,this._vectorTileLayerMaxBuffers,t)}catch(e){if(n.setObsolete(),n.release(),!s(e))throw e;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const t=this._styleRepository;for(const r of e){const e=r.type,i=r.data;switch(e){case 0:t.setPaintProperties(i.layerName,i.paint);break;case 1:t.setLayoutProperties(i.layerName,i.layout);break;case 3:t.deleteStyleLayer(i.layerName);break;case 2:t.setStyleLayer(i.layer,i.index)}}}setStyle(e){this._styleRepository=new m(e.style),this._spriteInfo={},this._glyphInfo={},this._vectorTileLayerMaxBuffers=e.vectorTileLayerMaxBuffers}fetchSprites(e,t,r){const i=[],s=this._spriteInfo;return e.forEach((e=>{void 0===s[e]&&i.push(e)})),0===i.length?Promise.resolve():t.invoke("getSprites",i,{signal:r&&r.signal}).then((e=>{for(const t in e){const r=e[t];s[t]=r}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(e,t,r,i,s){const n=[];let a=this._glyphInfo[t];return a?r.forEach((e=>{a[e]||n.push(e)})):(a=this._glyphInfo[t]=[],r.forEach((e=>n.push(e)))),0===n.length?Promise.resolve():i.invoke("getGlyphs",{tileID:e,font:t,codePoints:n},s).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(a[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}
