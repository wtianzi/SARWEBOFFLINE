/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"../core/lang.js";import{L as t,i as r}from"./Logger.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{debounce as o}from"../core/promiseUtils.js";import s from"../core/Error.js";import"./ensureType.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import{urlToObject as l}from"../core/urlUtils.js";import{r as n}from"./reader.js";import{w as p}from"./writer.js";import"./resourceExtension.js";import d from"../geometry/SpatialReference.js";import u from"../request.js";import c from"../geometry/Extent.js";import m from"../portal/Portal.js";import y from"../portal/PortalItem.js";import{u as h}from"./originUtils.js";import{t as f,p as v,c as g,s as S,w}from"./arcgisLayerUrl.js";import x from"../geometry/HeightModelInfo.js";import{s as I}from"./saveUtils.js";import{i as b,u as j}from"./commonProperties2.js";import{f as _}from"./I3SIndexInfo.js";const N=t.getLogger("esri.layers.mixins.SceneService"),R=t=>{let R=class extends t{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=o((async(e,t,r)=>{switch(e){case 0:return this._save(t);case 1:return this._saveAs(r,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return d.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,i=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=i?new d(i):null}}readFullExtent(e,t,r){if(null!=e&&"object"==typeof e)return c.fromJSON(e,r);const i=t.store,o=this._readSpatialReference(t);return null==o||null==i||null==i.extent||!Array.isArray(i.extent)||i.extent.some((e=>e<O))?null:new c({xmin:i.extent[0],ymin:i.extent[1],xmax:i.extent[2],ymax:i.extent[3],spatialReference:o})}readVersion(e,t){const r=t.store,i=null!=r.version?r.version.toString():"",o={major:Number.NaN,minor:Number.NaN,versionString:i},s=i.split(".");return s.length>=2&&(o.major=parseInt(s[0],10),o.minor=parseInt(s[1],10)),o}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const i=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return f(this.url,t.name);let o=t.name;if(!o&&this.url){const e=v(this.url);r(e)&&(o=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&i&&(o=i+" - "+o),g(o)}set url(e){const t=S({layer:this,url:e,nonStandardUrlAllowed:!1,logger:N});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,i){w(this,e,"layers",t,i)}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=l(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=_(this.parsedUrl.path,this.rootNode,e,N,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===(null==e?void 0:e.type)){var t,r;const i=e.rootIndex%e.pageSize,o=null==(t=e.rootPage)||null==(r=t.nodes)?void 0:r[i];if(null==o||null==o.obb||null==o.obb.center||null==o.obb.halfSize)throw new s("sceneservice:invalid-node-page","Invalid node page.");if(o.obb.center[0]<O||null==this.fullExtent||this.fullExtent.hasZ)return;const a=o.obb.halfSize,l=o.obb.center[2],n=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);this.fullExtent.zmin=l-n,this.fullExtent.zmax=l+n}else if("node"===(null==e?void 0:e.type)){var i;const t=null==(i=e.rootNode)?void 0:i.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<O)return;const r=t[2],o=t[3];this.fullExtent.zmin=r-o,this.fullExtent.zmax=r+o}}async _fetchService(e){if(null==this.url)throw new s("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await u(this.url,{query:{f:"json"},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await u(this.parsedUrl.path,{query:{f:"json"},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=t.data;this.read(r,{origin:"service",url:this.parsedUrl}),this.validateLayer(r)}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const i=t.getTypeKeywords();for(const t of i)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),1===r&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r={...T,...t};let i=y.from(e);i||(N.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new s("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),i.id&&(i=i.clone(),i.id=null);const o=i.portal||m.getDefault();await this._ensureLoadBeforeSave(),i.type=E,i.portal=o;const a={origin:"portal-item",url:null,messages:[],portal:o,portalItem:i,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},l={layers:[this.write(null,a)]};return await Promise.all(a.resources.pendingOperations),await this._validateAgainstJSONSchema(l,a,r),i.url=this.url,i.title||(i.title=this.title),this._updateTypeKeywords(i,r,1),await o._signIn(),await o.user.addItem({item:i,folder:r&&r.folder,data:l}),await I(this.resourceReferences,a,null),this.portalItem=i,h(a),a.portalItem=i,i}async _save(e){const t={...T,...e};this.portalItem||(N.error("_save(): requires the .portalItem property to be set"),await Promise.reject(new s("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==E&&(N.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+E),await Promise.reject(new s("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${E}"`))),await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&l(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||m.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},i={layers:[this.write(null,r)]};return await Promise.all(r.resources.pendingOperations),await this._validateAgainstJSONSchema(i,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,0),await this.portalItem.update({data:i}),await I(this.resourceReferences,r,null),h(r),this.portalItem}async _validateAgainstJSONSchema(e,t,r){let i=t.messages.filter((e=>"error"===e.type)).map((e=>new s(e.name,e.message,e.details)));if(r&&r.validationOptions.ignoreUnsupported&&(i=i.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),r.validationOptions.enabled||U){const t=(await import("./schemaValidator2.js")).validate(e,r.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(N.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===r.validationOptions.failPolicy){const e=t.map((e=>new s("sceneservice:schema-validation",e))).concat(i);throw new s("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(i.length>0)throw new s("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:i})}};return e([i(b)],R.prototype,"id",void 0),e([i({type:d})],R.prototype,"spatialReference",void 0),e([n("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],R.prototype,"readSpatialReference",null),e([i({type:c})],R.prototype,"fullExtent",void 0),e([n("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],R.prototype,"readFullExtent",null),e([i({readOnly:!0,type:x})],R.prototype,"heightModelInfo",void 0),e([i({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],R.prototype,"minScale",void 0),e([i({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],R.prototype,"maxScale",void 0),e([i({readOnly:!0})],R.prototype,"version",void 0),e([n("version",["store.version"])],R.prototype,"readVersion",null),e([i({type:String,json:{read:{source:"copyrightText"}}})],R.prototype,"copyright",void 0),e([i({type:String,json:{read:!1}})],R.prototype,"sublayerTitleMode",void 0),e([i({type:String})],R.prototype,"title",void 0),e([n("portal-item","title")],R.prototype,"readTitlePortalItem",null),e([n("service","title",["name"])],R.prototype,"readTitleService",null),e([i({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],R.prototype,"layerId",void 0),e([i(j)],R.prototype,"url",null),e([p("url")],R.prototype,"writeUrl",null),e([i()],R.prototype,"parsedUrl",null),e([i({readOnly:!0})],R.prototype,"store",void 0),e([i({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],R.prototype,"rootNode",void 0),R=e([a("esri.layers.mixins.SceneService")],R),R},O=-1e38,U=!1,E="Scene Service",T={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};export{R as S};
