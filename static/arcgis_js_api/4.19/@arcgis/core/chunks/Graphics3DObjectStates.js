/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import"../core/lang.js";import{i as e}from"./Logger.js";import{f as s}from"./metadata.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import r from"../core/Accessor.js";import{P as a}from"../core/scheduling.js";import"./ensureType.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import{E as o}from"./Evented.js";import"../core/urlUtils.js";import"./resourceExtension.js";import n from"../core/Handles.js";import{c,s as d,n as l,d as p,q as m,b as y}from"./aaBoundingRect.js";import{n as g,T as u}from"./Scheduler.js";class S{constructor(){this.extents=new a({allocator:t=>t||c()}),this.tempExtent=c(),this.dirty=!1}get empty(){return 0===this.extents.length}clear(){this.extents.clear()}add(t){this.contains(t)||(this.removeContained(t),d(this.extents.pushNew(),t),this.dirty=!0)}pop(){return this.dirty&&this.mergeTight(),this.extents.pop()}merge(t){return this.mergeTight(t),t.hasProgressed}mergeTight(t=g){const e=this.extents,s=new Set;let i=0;for(;i!==e.length;){e.sort(((t,e)=>t[0]-e[0])),i=e.length,s.clear();for(let i=0;i<e.length;++i){if(t.done)return;const r=e.getItemAt(i);for(let t=i+1;t<e.length;++t){const i=e.getItemAt(t);if(i[0]>=r[2])break;s.add(i)}s.forEach((i=>{if(r===i)return;if(i[2]<=r[0])return void s.delete(i);const a=l(r),h=l(i),o=this.tempExtent;p(r,i,o);const n=a+h;(l(o)-n)/n<.05&&(d(r,o),s.delete(i),e.remove(i),t.madeProgress())})),s.add(r)}}this.dirty=!1}contains(t){return this.extents.some((e=>m(e,t)))}removeContained(t){this.extents.filterInPlace((e=>!m(t,e)))}get test(){const t=this;return{containsPoint:e=>t.extents.some((t=>y(t,e)))}}}let v=class extends r{constructor(){super(...arguments),this.dirtyExtents=new S,this.globalDirty=!1,this.dirtyGraphicsSet=new Set,this.handles=new n,this.updateElevation=!1,this.layerView=null,this.graphicsCore=null,this.events=new o}get updating(){return this.needsUpdate()}setup(t,e,s,i){this.layerView=t,this.queryGraphicUIDsInExtent=e,this.graphicsCore=s,this.elevationProvider=i;const r=this.layerView.view.resourceController.scheduler;this.handles.add([i.on("elevation-change",(t=>this._elevationChanged(t))),this.layerView.watch("suspended",(()=>this.suspendedChange())),r.registerTask(u.ELEVATION_ALIGNMENT,(t=>this.update(t)),(()=>this.needsUpdate()))])}destroy(){this.dirtyGraphicsSet.clear(),this.handles.destroy(),this.handles=null,this.layerView=null,this.graphicsCore=null,this.queryGraphicUIDsInExtent=null}clear(){this.dirtyGraphicsSet.clear(),this.notifyChange("updating")}suspendedChange(){!0===this.layerView.suspended?this.updateElevation=!1:!1===this.layerView.suspended&&this.updateElevation&&(this.globalDirty=!0,this.notifyChange("updating"))}elevationInfoChange(){this.globalDirty=!0,this.notifyChange("updating")}needsUpdate(){return this.dirtyGraphicsSet.size>0||this.dirtyExtents&&!this.dirtyExtents.empty||this.globalDirty}update(t){for(this.globalDirty&&(this.markAllGraphicsElevationDirty(),this.globalDirty=!1,t.madeProgress()),t.run((()=>this.dirtyExtents.merge(t)));this.needsUpdate()&&!t.done;)this._updateDirtyGraphics(t),this._updateDirtyExtents(t);this.layerView.view.deconflictor.setDirty(),this.notifyChange("updating")}_updateDirtyGraphics(t){const s=this.layerView.view.renderCoordsHelper,i=this.graphicsCore.asyncUpdates;for(const r of this.dirtyGraphicsSet.keys()){const a=this.graphicsCore.getGraphics3DGraphicById(r);if(this.dirtyGraphicsSet.delete(r),e(a)&&(a.alignWithElevation(this.elevationProvider,s,i),t.madeProgress()),t.done)return}}_updateDirtyExtents(t){for(;!this.dirtyExtents.empty&&!t.done;){const s=this.dirtyExtents.pop(),i=this.elevationProvider.spatialReference;this.events.emit("invalidate-elevation",{extent:s,spatialReference:i}),this.queryGraphicUIDsInExtent(s,i,(t=>{const s=this.graphicsCore.getGraphics3DGraphicById(t);e(s)&&s.needsElevationUpdates()&&this.dirtyGraphicsSet.add(t)})),t.madeProgress()}}markAllGraphicsElevationDirty(){this.dirtyExtents.clear(),this.dirtyGraphicsSet.clear(),this.graphicsCore.graphics3DGraphics.forEach(((t,e)=>this.dirtyGraphicsSet.add(e)))}_elevationChanged(t){if("scene"===t.context&&(!this.graphicsCore.layer.elevationInfo||"relative-to-scene"!==this.graphicsCore.layer.elevationInfo.mode))return;const{extent:e,spatialReference:s}=t;if(this.layerView.suspended){if(!this.updateElevation){const t=this.graphicsCore.computedExtent;t&&e[2]>t.xmin&&e[0]<t.xmax&&e[3]>t.ymin&&e[1]<t.ymax&&(this.updateElevation=!0)}this.events.emit("invalidate-elevation",{extent:e,spatialReference:s})}else e[0]===-1/0?this.globalDirty=!0:this.dirtyExtents.add(e),this.notifyChange("updating")}};t([i({readOnly:!0})],v.prototype,"updating",null),v=t([h("esri.views.3d.layers.graphics.Graphics3DElevationAlignment")],v);var f=v;class j{constructor(){this.items=[]}addObject(t,e){this.items.push({type:0,objectStateId:e,object:t})}addRenderGeometry(t,e,s){this.items.push({type:1,objectStateId:e,renderGeometry:t,owner:s})}addExternal(t,e){this.items.push({type:2,objectStateId:e,remove:t})}remove(t){for(let e=this.items.length-1;e>=0;--e){const s=this.items[e];s.objectStateId===t&&(this._removeObjectStateItem(s),this.items.splice(e,1))}}removeObject(t){for(let e=this.items.length-1;e>=0;--e){const s=this.items[e];0===s.type&&s.object===t&&(this._removeObjectStateItem(s),this.items.splice(e,1))}}removeRenderGeometry(t){for(let e=this.items.length-1;e>=0;--e){const s=this.items[e];1===s.type&&s.renderGeometry===t&&(this._removeObjectStateItem(s),this.items.splice(e,1))}}removeAll(){this.items.forEach((t=>{this._removeObjectStateItem(t)})),this.items=[]}_removeObjectStateItem(t){switch(t.type){case 0:0===t.objectStateId.channel?t.object.removeHighlight(t.objectStateId):1===t.objectStateId.channel&&t.object.removeOcclude(t.objectStateId);break;case 1:t.owner.removeRenderGeometryObjectState(t.renderGeometry,t.objectStateId);break;case 2:t.remove(t.objectStateId)}}}class b{constructor(t,e){this.stateType=t,this.objectIdField=e,this.objectStateSet=new j,this.ids=new Set,this.paused=!1}hasGraphic(t){if(this.objectIdField){const e=t.graphic.attributes[this.objectIdField];return this.ids.has(e)}return this.ids.has(t.graphic.uid)}}class E{constructor(t){this._graphicsCore=t,this._stateSets=new Array}destroy(){this._stateSets&&this._stateSets.forEach((t=>t.objectStateSet.removeAll())),this._stateSets=null}acquireSet(t,e){const i=new b(t,e);this._stateSets.push(i);const r=s((()=>this.releaseSet(i)));return{set:i,handle:r}}releaseSet(t){t.objectStateSet.removeAll();const e=this._stateSets?this._stateSets.indexOf(t):-1;-1!==e&&this._stateSets.splice(e,1)}_addObjectStateSet(t,e){t.addObjectStateSet(e.stateType,e.objectStateSet)}_removeObjectStateSet(t,e){t.removeObjectState(e.objectStateSet)}setUid(t,e){t.ids.add(e);const s=this._graphicsCore.graphics3DGraphics.get(e);s&&this._addObjectStateSet(s,t)}setUids(t,e){e.forEach((e=>this.setUid(t,e)))}setObjectIds(t,e){e.forEach((e=>t.ids.add(e))),this.initializeSet(t)}addGraphic(t){this._stateSets.forEach((e=>{!e.paused&&e.hasGraphic(t)&&this._addObjectStateSet(t,e)}))}removeGraphic(t){this._stateSets.forEach((e=>{e.hasGraphic(t)&&this._removeObjectStateSet(t,e)}))}allGraphicsDeleted(){this._stateSets&&this._stateSets.forEach((t=>t.objectStateSet.removeAll()))}initializeSet(t){const e=this._graphicsCore.graphics3DGraphics;t.objectIdField?e.forEach((e=>{e&&t.hasGraphic(e)&&this._addObjectStateSet(e,t)})):t.ids.forEach((s=>{const i=e.get(s);i&&this._addObjectStateSet(i,t)}))}get test(){return{states:this._stateSets}}}export{f as G,E as a};
