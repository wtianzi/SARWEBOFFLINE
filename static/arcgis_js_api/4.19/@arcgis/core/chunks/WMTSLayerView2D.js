/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"./ArrayPool.js";import"../core/lang.js";import"./deprecate.js";import"./object.js";import"../config.js";import"./Logger.js";import"./string.js";import"./metadata.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"./PropertyOrigin.js";import"../core/scheduling.js";import{isAbortError as i}from"../core/promiseUtils.js";import"./Message.js";import"../core/Error.js";import"./ensureType.js";import{subclass as r}from"../core/accessorSupport/decorators/subclass.js";import"./Evented.js";import"../core/Collection.js";import"./collectionUtils.js";import"./JSONSupport.js";import"./Promise.js";import"../core/urlUtils.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../core/accessorSupport/decorators/cast.js";import"./jsonMap.js";import"./reader.js";import"./writer.js";import"./resourceExtension.js";import"../geometry/SpatialReference.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"./Ellipsoid.js";import{geographicToWebMercator as s}from"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"./mathUtils2.js";import"./common.js";import"./colorUtils.js";import"./zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry.js";import"./Identifiable.js";import o from"../core/Handles.js";import"../core/watchUtils.js";import"./mat4.js";import"./aaBoundingRect.js";import"../core/HandleOwner.js";import"./_commonjsHelpers.js";import"./earcut.js";import"./mat3.js";import"./vec2.js";import"./OptimizedFeatureSet.js";import"./featureConversionUtils.js";import"./TileKey.js";import"./vec4f32.js";import"./definitions.js";import"./vec2f32.js";import"./number2.js";import"./Queue.js";import{R as a}from"./RefreshableLayerView.js";import"./vec2f64.js";import"./mat3f32.js";import"./QueueProcessor.js";import{T as l,a as p}from"./TileStrategy.js";import{T as m}from"./TileInfoView.js";import"./Program.js";import"./FramebufferObject.js";import"./mat4f32.js";import"./VertexArrayObject.js";import"./ShaderCompiler.js";import"./config.js";import"./DisplayObject.js";import"./TiledDisplayObject.js";import"./rasterUtils.js";import n from"../views/layers/LayerView.js";import"./Container.js";import"./ClipRect.js";import{L as c}from"./LayerView2D.js";import"./Bitmap.js";import"./brushes.js";import"./enums.js";import"./Utils10.js";import"./GeometryUtils2.js";import"./MaterialKey.js";import"./WGLContainer.js";import"./TileContainer.js";import"./BitmapTileContainer.js";import{B as u}from"./BitmapTileLayerView2D.js";const h=[102113,102100,3857,3785,900913];let j=class extends(a(u(c(n)))){constructor(){super(...arguments),this._handles=new o,this._tileStrategy=null,this._fetchQueue=null,this._tileRequests=new Map,this.layer=null}get tileMatrixSet(){if(this.layer.activeLayer.tileMatrixSetId)return this.layer.activeLayer.tileMatrixSet;const e=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return e?(this.layer.activeLayer.tileMatrixSetId=e.id,e):null}hitTest(){return null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this.notifyChange("updating")}attach(){const e=this.layer.activeLayer,t=this.tileMatrixSet;if(!t)return;const i=t.tileInfo.spatialReference;let r=e.fullExtent&&e.fullExtent.clone();i.isWebMercator?r=s(r):i.isWGS84||(r=t.fullExtent),this._tileInfoView=new m(t.tileInfo,r),this._fetchQueue=new l({tileInfoView:this._tileInfoView,process:e=>this.fetchTile(e)}),this._tileStrategy=new p({cachePolicy:"keep",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this._handles.add(this.watch(["layer.activeLayer.styleId","tileMatrixSet"],(()=>this._refresh()))),super.attach()}detach(){super.detach(),this._handles.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}async doRefresh(){this.updateRequested||this.suspended||this._refresh()}isUpdating(){return this._fetchQueue.length>0}acquireTile(e){const t=this._bitmapView.createTile(e),r=t.bitmap;[r.x,r.y]=this._tileInfoView.getTileCoords([0,0],t.key),r.resolution=this._tileInfoView.getTileResolution(t.key),[r.width,r.height]=this._tileInfoView.tileInfo.size,this._tileInfoView.getTileCoords(r,t.key);const s={id:e.id,fulfilled:!1,promise:this._fetchQueue.push(t.key).then((e=>{t.bitmap.source=e,t.once("attach",(()=>this.requestUpdate())),this._bitmapView.addChild(t)})).catch((e=>{i(e)||(t.bitmap.source=null,t.once("attach",(()=>this.requestUpdate())),this._bitmapView.addChild(t))}))};return s.promise.finally((()=>s.fulfilled=!0)),this._tileRequests.set(t,s),this.requestUpdate(),t}releaseTile(e){const t=this._tileRequests.get(e);t.fulfilled||this._fetchQueue.abort(t.id),this._tileRequests.delete(e),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e){return this.layer.fetchTile(e.level,e.row,e.col)}canResume(){const e=super.canResume();return e?null!==this.tileMatrixSet:e}_refresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>{if(!e.bitmap.source)return;e.bitmap.source=null;const t={id:e.key.id,fulfilled:!1,promise:this._fetchQueue.push(e.key).then((t=>{e.bitmap.source=t,e.requestRender(),this.notifyChange("updating")}))};t.promise.then((()=>t.fulfilled=!0),(()=>t.fulfilled=!0)),this._tileRequests.set(e,t)})),this.notifyChange("updating")}_getTileMatrixSetBySpatialReference(e){const t=this.view.spatialReference;if(!e.tileMatrixSets)return null;let i=e.tileMatrixSets.find((e=>e.tileInfo.spatialReference.wkid===t.wkid));return!i&&t.isWebMercator&&(i=e.tileMatrixSets.find((e=>h.indexOf(e.tileInfo.spatialReference.wkid)>-1))),i}};e([t()],j.prototype,"suspended",void 0),e([t({readOnly:!0})],j.prototype,"tileMatrixSet",null),j=e([r("esri.views.2d.layers.WMTSLayerView2D")],j);var f=j;export default f;
