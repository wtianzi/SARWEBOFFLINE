/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{i as t}from"./Logger.js";import{h as i}from"./mathUtils2.js";import{c as e,a as r,f as s}from"./vec3f64.js";import{s as h,k as o,g as n,u as a,A as _,d as p,C as u,w as v,b as w,l as c,a as d,c as l,n as y}from"./vec3.js";import{d as g}from"./mathUtils.js";import{b as f,d as m}from"./screenUtils.js";import{c as x,m as D,j,a as M,b as R,l as P}from"./mat4.js";import{f as F,c as V}from"./vec4f64.js";import{c as S}from"./quatf64.js";import{c as T,o as I}from"./vec2.js";import{c as U,e as b,d as A,t as C}from"./vec4.js";import{f as E}from"./vec2f64.js";import{r as z,w as H,I as W}from"./geometryUtils.js";import{f as k,d as G,e as L,g as X}from"./Util.js";class Y{constructor(i=null,h=null,o=null){this._viewUp=e(),this._viewForward=e(),this._viewRight=e(),this._ray=z.createWrapper(),this._viewport=F(0,0,1,1),this._padding=F(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=E(1,1e3),this._viewDirty=!0,this._viewMatrix=S(),this._projectionDirty=!0,this._projectionMatrix=S(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=S(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=S(),this._frustumDirty=!0,this._frustum=H.create(),this._fullViewport=V(),this.pixelRatio=1,this.relativeElevation=0,this._eye=t(i)?r(i):e(),this._center=t(h)?r(h):e(),this._up=t(o)?r(o):s(0,0,1)}get eye(){return this._eye}set eye(t){this._compareAndSetView(t,this._eye)}get center(){return this._center}set center(t){this._compareAndSetView(t,this._center)}get ray(){return this._ray.origin=this.eye,this._ray.direction||(this._ray.direction=e()),h(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(t){this._compareAndSetView(t,this._up)}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(t){x(this._viewMatrix,t),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),this._viewForward}get viewUp(){return this._ensureViewClean(),this._viewUp}get viewRight(){return this._ensureViewClean(),this._viewRight}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(t){this._nearFar[0]!==t&&(this._nearFar[0]=t,this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get far(){return this._nearFar[1]}set far(t){this._nearFar[1]!==t&&(this._nearFar[1]=t,this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get viewport(){return this._viewport}set viewport(t){this.x=t[0],this.y=t[1],this.width=t[2],this.height=t[3]}get x(){return this._viewport[0]}set x(t){t+=this._padding[3],this._viewport[0]!==t&&(this._viewport[0]=t,this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get y(){return this._viewport[1]}set y(t){t+=this._padding[2],this._viewport[1]!==t&&(this._viewport[1]=t,this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get width(){return this._viewport[2]}set width(t){this._viewport[2]!==t&&(this._viewport[2]=t,this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get height(){return this._viewport[3]}set height(t){this._viewport[3]!==t&&(this._viewport[3]=t,this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get fullWidth(){return this._viewport[2]+this._padding[1]+this._padding[3]}set fullWidth(t){this.width=t-(this._padding[1]+this._padding[3])}get fullHeight(){return this._viewport[3]+this._padding[0]+this._padding[2]}set fullHeight(t){this.height=t-(this._padding[0]+this._padding[2])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[3],this._fullViewport[1]=this._viewport[1]-this._padding[2],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get aspect(){return this.width/this.height}get padding(){return this._padding}set padding(t){this._padding[0]===t[0]&&this._padding[1]===t[1]&&this._padding[2]===t[2]&&this._padding[3]===t[3]||(this._viewport[0]+=t[3]-this._padding[3],this._viewport[1]+=t[2]-this._padding[2],this._viewport[2]-=t[1]+t[3]-(this._padding[1]+this._padding[3]),this._viewport[3]-=t[0]+t[2]-(this._padding[0]+this._padding[2]),U(this._padding,t),this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0)}get viewProjectionMatrix(){return this._viewProjectionDirty&&(D(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){if(this._projectionDirty){const t=this.width,i=this.height,e=this.near*Math.tan(this.fovY/2),r=e*this.aspect;j(this._projectionMatrix,-r*(1+2*this._padding[3]/t),r*(1+2*this._padding[1]/t),-e*(1+2*this._padding[2]/i),e*(1+2*this._padding[0]/i),this.near,this.far),this._projectionDirty=!1}return this._projectionMatrix}set projectionMatrix(t){x(this._projectionMatrix,t),this._projectionDirty=!1,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fov(){return this._fov}set fov(t){this._fov=t,this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return k(this._fov,this.width,this.height)}set fovX(t){this._fov=G(t,this.width,this.height),this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return L(this._fov,this.width,this.height)}set fovY(t){this._fov=X(t,this.width,this.height),this._projectionDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return o(this._center,this._eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&(M(this._viewInverseTransposeMatrix,this.viewMatrix),R(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(t){const i=2*t-1;return 2*this.near*this.far/(this.far+this.near-i*(this.far-this.near))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return this.relativeElevation&&this.relativeElevation>=0}copyFrom(t){const i=t;return n(this._eye,i._eye),n(this._center,i._center),n(this._up,i._up),U(this._viewport,i._viewport),U(this._padding,i._padding),T(this._nearFar,i._nearFar),this._fov=i._fov,this.relativeElevation=t.relativeElevation,this._viewDirty=i._viewDirty,this._viewDirty||(x(this._viewMatrix,i._viewMatrix),n(this._viewRight,i._viewRight),n(this._viewUp,i._viewUp),n(this._viewForward,i._viewForward)),i._projectionDirty?this._projectionDirty=!0:(x(this._projectionMatrix,i._projectionMatrix),this._projectionDirty=!1),this._viewProjectionDirty=!0,this._frustumDirty=i._frustumDirty,this._frustumDirty||(H.copy(i._frustum,this._frustum),this._frustumDirty=!1),i._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(x(this._viewInverseTransposeMatrix,i._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),U(this._fullViewport,i._fullViewport),this.pixelRatio=t.pixelRatio,this}copyViewFrom(t){this.eye=t.eye,this.center=t.center,this.up=t.up}clone(){return(new Y).copyFrom(this)}equals(t){return a(this._eye,t._eye)&&a(this._center,t._center)&&a(this._up,t._up)&&b(this._viewport,t._viewport)&&b(this._padding,t._padding)&&I(this._nearFar,t._nearFar)&&this._fov===t._fov&&this.pixelRatio===t.pixelRatio&&this.relativeElevation===t.relativeElevation}almostEquals(t){if(this.pixelRatio!==t.pixelRatio||Math.abs(t.fov-this._fov)>=.001)return!1;const i=5e-4;_(B,t.eye,t.center),_(J,this._eye,this._center);const e=p(B,J),r=u(B),s=u(J);return e*e>=(1-1e-10)*r*s&&v(t.eye,this._eye)<Math.max(r,s)*i*i&&A(t.padding,this._padding)<.5&&A(t.viewport,this._viewport)<.5}markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}computeRenderPixelSizeAt(t){return this.computeRenderPixelSizeAtDist(this.viewDirectionDistance(t))}computeRenderPixelSizeAtDist(t){return t*this.perRenderPixelRatio}computeScreenPixelSizeAt(t){return this.computeScreenPixelSizeAtDist(this.viewDirectionDistance(t))}viewDirectionDistance(t){return Math.abs(W(this.viewForward,h(B,t,this._eye)))}computeScreenPixelSizeAtDist(t){return t*this.perScreenPixelRatio}computeDistanceFromRadius(t,i){return t/Math.tan(Math.min(this.fovX,this.fovY)/(2*(i||1)))}getScreenCenter(t=f()){return t[0]=(this.padding[3]+this.width/2)/this.pixelRatio,t[1]=(this.padding[0]+this.height/2)/this.pixelRatio,t}getRenderCenter(t,i=.5,e=.5){return t||(t=m()),t[0]=this.padding[3]+this.width*i,t[1]=this.padding[2]+this.height*e,t.length>2&&(t[2]=.5),t}setGLViewport(t){const i=this.viewport,e=this.padding;t.setViewport(i[0]-e[3],i[1]-e[2],i[2]+e[1]+e[3],i[3]+e[0]+e[2])}applyProjection(t,e,r=!1){t!==q&&n(q,t),q[3]=1,r&&(e[2]=-q[2]),C(q,q,this.projectionMatrix),w(q,q,1/Math.abs(q[3]));const s=this.fullViewport;return e[0]=i(0,s[0]+s[2],.5+.5*q[0]),e[1]=i(0,s[1]+s[3],.5+.5*q[1]),r||(e[2]=.5*(q[2]+1)),e}projectToScreen(t,i){return this.projectToRenderScreen(t,K),this.renderToScreen(K,i)}projectToRenderScreen(t,e){if(q[0]=t[0],q[1]=t[1],q[2]=t[2],q[3]=1,C(q,q,this.viewProjectionMatrix),0===q[3])return null;w(q,q,1/Math.abs(q[3]));const r=this.fullViewport;return"x"in e?(e.x=i(0,r[0]+r[2],.5+.5*q[0]),e.y=i(0,r[1]+r[3],.5+.5*q[1])):(e[0]=i(0,r[0]+r[2],.5+.5*q[0]),e[1]=i(0,r[1]+r[3],.5+.5*q[1]),e.length>2&&(e[2]=.5*(q[2]+1))),e}unprojectFromScreen(t,i){return this.unprojectFromRenderScreen(this.screenToRender(t,K),i)}unprojectFromRenderScreen(t,i){if(D(N,this.projectionMatrix,this.viewMatrix),!M(N,N))return null;const e=this.fullViewport;return q[0]=2*(t[0]-e[0])/e[2]-1,q[1]=2*(t[1]-e[1])/e[3]-1,q[2]=2*t[2]-1,q[3]=1,C(q,q,N),0===q[3]?null:(i[0]=q[0]/q[3],i[1]=q[1]/q[3],i[2]=q[2]/q[3],i)}constrainWindowSize(t,i,e,r=1){const s=t*this.pixelRatio,h=i*this.pixelRatio,o=Math.max(s-e*r/2,0),n=Math.max(this.fullHeight-h-e/2,0),a=-Math.min(s-e*r/2,0),_=-Math.min(this.fullHeight-h-e/2,0);return[o,n,e*r-a- -Math.min(this.fullWidth-s-e*r/2,0),e-_- -Math.min(h-e/2,0)]}computeUp(t){1===t?this.computeUpGlobal():this.computeUpLocal()}screenToRender(t,i){const e=t[0]*this.pixelRatio,r=this.fullHeight-t[1]*this.pixelRatio;return i[0]=e,i[1]=r,i}renderToScreen(t,i){const e=t[0]/this.pixelRatio,r=(this.fullHeight-t[1])/this.pixelRatio;return i[0]=e,i[1]=r,i}computeUpGlobal(){h(B,this.center,this.eye);const t=c(this.center);t<1?(d(this.up,0,0,1),this.markViewDirty()):Math.abs(p(B,this.center))>.9999*c(B)*t||(l(this.up,B,this.center),l(this.up,this.up,B),y(this.up,this.up),this.markViewDirty())}computeUpLocal(){g(B,this.eye,this.center),Math.abs(B[2])<=.9999&&(w(B,B,B[2]),d(this.up,-B[0],-B[1],1-B[2]),y(this.up,this.up),this.markViewDirty())}_compareAndSetView(t,i){a(t,i)||(n(i,t),this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0)}_recomputeFrustum(){this._frustumDirty&&(H.fromMatrix(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(P(this._viewMatrix,this._eye,this._center,this._up),d(this._viewForward,-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10]),d(this._viewUp,this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9]),d(this._viewRight,this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8]),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}}const q=V(),N=S(),B=e(),J=e(),K=m();export{Y as C};
