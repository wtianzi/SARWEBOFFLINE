/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"../core/lang.js";import"./Logger.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import{debounce as s}from"../core/promiseUtils.js";import"./ensureType.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import{aliasOf as t}from"../core/accessorSupport/decorators/aliasOf.js";import"./resourceExtension.js";const i=i=>{let p=class extends i{constructor(){super(...arguments),this.refreshTimestamp=null,this.refreshDebounced=s((async(e,r)=>{let s;"number"==typeof e?s=e:(s=Date.now(),r=e),this._set("refreshTimestamp",s),this.doRefresh&&await this.doRefresh(r)}),2e3)}refresh(e=Date.now()){this._set("refreshTimestamp",e),this.doRefresh&&this.doRefresh()}};return e([r()],p.prototype,"layer",void 0),e([t("layer.refreshInterval")],p.prototype,"refreshInterval",void 0),e([r({readOnly:!0})],p.prototype,"refreshTimestamp",void 0),p=e([o("esri.layers.mixins.RefreshableLayerView")],p),p};function p(e){return"refresh"in e}export{i as R,p as i};
