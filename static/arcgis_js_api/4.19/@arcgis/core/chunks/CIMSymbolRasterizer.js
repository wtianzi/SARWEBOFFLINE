/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"./tslib.es6.js";import"./ArrayPool.js";import"../core/lang.js";import"./deprecate.js";import"./object.js";import"../kernel.js";import"../config.js";import"./Logger.js";import{n as e}from"./string.js";import"./metadata.js";import"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"./PropertyOrigin.js";import"../core/scheduling.js";import{throwIfAborted as t}from"../core/promiseUtils.js";import"./Message.js";import"../core/Error.js";import"./ensureType.js";import"../core/accessorSupport/decorators/subclass.js";import"./JSONSupport.js";import"../core/urlUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./jsonMap.js";import"./enumeration.js";import"./reader.js";import"./writer.js";import"./resourceExtension.js";import"./persistableUrlUtils.js";import"../geometry/SpatialReference.js";import r from"../request.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"./Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"./mathUtils2.js";import"./colorUtils.js";import"../Color.js";import"./zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import{getJsonType as i,isPolygon as a,isPolyline as s}from"../geometry/support/jsonUtils.js";import"../geometry.js";import"./arcadeOnDemand.js";import"../symbols/Symbol3DLayer.js";import{a as o}from"./screenUtils.js";import"./opacityUtils.js";import"./materialUtils.js";import"./Symbol3DMaterial.js";import"./colors.js";import"./Symbol3DOutline.js";import{S as n}from"../symbols/IconSymbol3DLayer.js";import{d as l,e as c,g as m}from"./utils3.js";import{scaleCIMMarker as h}from"../symbols/support/cimSymbolUtils.js";import"./aaBoundingRect.js";import"./quantizationUtils.js";import"./callExpressionWithFeature.js";import"./CIMSymbolHelper.js";import{a as p,b as g}from"./cimAnalyzer.js";import{R as f}from"./Rasterizer.js";class y{constructor(){}rasterizeText(e,t){this._textRasterizationCanvas||(this._textRasterizationCanvas=document.createElement("canvas"));const r=this._textRasterizationCanvas,i=r.getContext("2d");this.setFontProperties(i,t),this.parameters=t,this.textLines=e.split(/\r?\n/),this.lineHeight=this.computeLineHeight();const a=this.computeTextWidth(i,t),s=this.lineHeight*this.textLines.length;var o;r.width=a,r.height=s,this.renderedLineHeight=Math.round(this.lineHeight*t.pixelRatio),this.renderedHaloSize=t.halo.size*t.pixelRatio,this.renderedWidth=a*t.pixelRatio,this.renderedHeight=s*t.pixelRatio,this.fillStyle=`rgba(${(o=t.color).slice(0,3).toString()},${o[3]})`,this.haloStyle=function(e){return`rgb(${e.slice(0,3).toString()})`}(t.halo.color);const n=this.renderedLineHeight,l=this.renderedHaloSize;this.setFontProperties(i,t);const c=function(e,t){return"center"===e?.5*t:"right"===e?t:0}(i.textAlign,this.renderedWidth)+l,m=l;let h=0,p=0;l>0&&this.renderHalo(i,c,m,h,p,t),p+=m,h+=c;for(const e of this.textLines)i.globalCompositeOperation="destination-out",i.fillStyle="rgb(0, 0, 0)",i.fillText(e,h,p),i.globalCompositeOperation="source-over",i.fillStyle=this.fillStyle,i.fillText(e,h,p),p+=n;const g=i.getImageData(0,0,this.renderedWidth,this.renderedHeight),f=new Uint8Array(g.data);if(t.premultiplyColors){let e;for(let t=0;t<f.length;t+=4)e=f[t+3]/255,f[t]=f[t]*e,f[t+1]=f[t+1]*e,f[t+2]=f[t+2]*e}return{size:[this.renderedWidth,this.renderedHeight],image:new Uint32Array(f.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}renderHalo(e,t,r,i,a,s){const o=this.renderedWidth,n=this.renderedHeight;this._haloRasterizationCanvas||(this._haloRasterizationCanvas=document.createElement("canvas")),this._haloRasterizationCanvas.width=o,this._haloRasterizationCanvas.height=n;const l=this._haloRasterizationCanvas,c=l.getContext("2d");c.clearRect(0,0,o,n),this.setFontProperties(c,s),c.fillStyle=this.haloStyle,c.strokeStyle=this.haloStyle;const m=this.renderedHaloSize<3;c.lineJoin=m?"miter":"round",m?this.renderHaloEmulated(c,t,r):this.renderHaloNative(c,t,r),e.globalAlpha=this.parameters.halo.color[3],e.drawImage(l,0,0,o,n,i,a,o,n),e.globalAlpha=1}renderHaloEmulated(e,t,r){const i=this.renderedLineHeight,a=this.renderedHaloSize;for(const s of this.textLines){for(const[i,o]of d)e.fillText(s,t+a*i,r+a*o);r+=i}}renderHaloNative(e,t,r){const i=this.renderedLineHeight,a=this.renderedHaloSize;for(const s of this.textLines){const o=2*a,n=5,l=.1;for(let i=0;i<n;i++){const a=1-(n-1)*l+i*l;e.lineWidth=a*o,e.strokeText(s,t,r)}r+=i}}setFontProperties(e,t){const r=t.font,i=`${r.style} ${r.weight} ${o(t.size*t.pixelRatio)}px ${r.family}, sans-serif`;let a;switch(e.font=i,e.textBaseline="top",t.horizontalAlignment){case"left":a="left";break;case"right":a="right";break;case"center":a="center";break;default:a="left"}e.textAlign=a}computeTextWidth(e,t){let r=0;for(const t of this.textLines)r=Math.max(r,e.measureText(t).width);const i=t.font;return("italic"===i.style||"oblique"===i.style||"string"==typeof i.weight&&("bold"===i.weight||"bolder"===i.weight)||"number"==typeof i.weight&&i.weight>600)&&(r+=.3*e.measureText("A").width),r+=2*this.parameters.halo.size,Math.round(r)}computeLineHeight(){const e=1.275*this.parameters.size;return Math.round(e+2*this.parameters.halo.size)}}const d=[];{const e=16;for(let t=0;t<360;t+=360/e)d.push([Math.cos(Math.PI*t/180),Math.sin(Math.PI*t/180)])}var u;!function(e){e.Legend="legend",e.Preview="preview"}(u||(u={}));const M=(e,t,r)=>{if(e&&e.targetSize){let i;if(r){const t=Math.max(r.frame.xmax-r.frame.xmin,r.frame.ymax-r.frame.ymin);i=e.targetSize/o(t)}else i=e.targetSize/t.referenceSize;return i}return e&&e.scaleFactor?e.scaleFactor:1},x={fill:{legend:{frame:{xmax:15,xmin:0,ymax:15,ymin:0},geometry:{rings:[[[0,15],[15,7.5],[15,0],[0,0],[0,15]]]},canvasPaths:{rings:[[[0,15],[0,0],[15,7.5],[15,15],[0,15]]]}},preview:{frame:{xmax:100,xmin:0,ymax:100,ymin:0},geometry:{rings:[[[0,100],[100,100],[100,0],[0,0],[0,100]]]},canvasPaths:{rings:[[[0,100],[0,0],[100,0],[100,100],[0,100]]]}}},stroke:{legend:{frame:{xmax:24,xmin:0,ymax:-2,ymin:2},geometry:{paths:[[[0,0],[12,0],[24,0]]]},canvasPaths:{paths:[[[0,2],[12,2],[24,2]]]}},preview:{frame:{xmax:100,xmin:0,ymax:-2,ymin:2},geometry:{paths:[[[0,0],[50,0],[100,0]]]},canvasPaths:{paths:[[[0,2],[50,2],[100,2]]]}}}};class C{constructor(e,t){this._spatialReference=e,this._avoidSDF=t,this._resourceCache=new Map,this._rasterizer=new f,this._textRasterizer=new y,this._pictureMarkerCache=new Map}async rasterizeCIMSymbolAsync(e,t,r,a,s,o,n,l){a=a||(t?null!=t.centroid?"esriGeometryPolygon":i(t.geometry):null)||function(e){if(!(e&&e.data&&e.data.symbol))return null;switch(e.data.symbol.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}(e);const c=await this.analyzeCIMSymbol(e,t?function(e){const t=e?Object.keys(e):[];return t.map((t=>({name:t,alias:t,type:"string"==typeof e[t]?"esriFieldTypeString":"esriFieldTypeDouble"})))}(t.attributes):null,r,a,l);return this.rasterizeCIMSymbol(c,t,a,s,o,n)}async analyzeCIMSymbol(e,r,i,a,s){const o=[],n=r?{geometryType:a,spatialReference:this._spatialReference,fields:r}:null;let c;await p(e.data,n,o,this._avoidSDF),t(s);for(const e of o)"CIMPictureMarker"!==e.cim.type&&"CIMPictureFill"!==e.cim.type&&"CIMPictureStroke"!==e.cim.type||(c||(c=[]),c.push(this.fetchPictureMarkerResource(e,s))),i&&"text"===e.type&&"string"==typeof e.text&&e.text.indexOf("[")>-1&&(e.text=l(i,e.text,e.cim.textCase));return c&&await Promise.all(c),o}async fetchPictureMarkerResource(e,t){const i=e.materialHash;if(!this._pictureMarkerCache.get(i)){const a=(await r(e.cim.url,{responseType:"image",signal:t&&t.signal})).data;this._pictureMarkerCache.set(i,a)}}rasterizeCIMSymbol(e,t,r,i,a,s){const o=[];for(const n of e){i&&"function"==typeof i.scaleFactor&&(i.scaleFactor=i.scaleFactor(t,a,s));const e=this._getRasterizedResource(n,t,r,i,a,s);if(!e)continue;let l=0,m=e.anchorX||0,h=e.anchorY||0,p=!1,g=0,f=0;if("esriGeometryPoint"===r){const e=M(i,n,null);if(g=c(n.offsetX,t,a,s)*e||0,f=c(n.offsetY,t,a,s)*e||0,"marker"===n.type)l=c(n.rotation,t,a,s)||0,p=!!n.rotateClockwise&&n.rotateClockwise;else if("text"===n.type){if(l=c(n.angle,t,a,s)||0,void 0!==n.horizontalAlignment)switch(n.horizontalAlignment){case"left":m=-.5;break;case"right":m=.5;break;default:m=0}if(void 0!==n.verticalAlignment)switch(n.verticalAlignment){case"top":h=.5;break;case"bottom":h=-.5;break;case"baseline":h=-.25;break;default:h=0}}}null!=e&&o.push({angle:l,rotateClockWise:p,anchorX:m,anchorY:h,offsetX:g,offsetY:f,rasterizedResource:e})}return this.getSymbolImage(o)}getSymbolImage(e){const t=document.createElement("canvas"),r=t.getContext("2d");let i=0,a=0,s=0,l=0;const c=[];for(let t=0;t<e.length;t++){const n=e[t],m=n.rasterizedResource;if(!m)continue;const h=m.size,p=n.offsetX,g=n.offsetY,f=n.anchorX,y=n.anchorY,d=n.rotateClockWise||!1;let u=n.angle,M=o(p)-h[0]*(.5+f),x=o(g)-h[1]*(.5+y),C=M+h[0],z=x+h[1];if(u){d&&(u=-u);const e=Math.sin(u*Math.PI/180),t=Math.cos(u*Math.PI/180),r=M*t-x*e,i=M*e+x*t,a=M*t-z*e,s=M*e+z*t,o=C*t-z*e,n=C*e+z*t,l=C*t-x*e,c=C*e+x*t;M=Math.min(r,a,o,l),x=Math.min(i,s,n,c),C=Math.max(r,a,o,l),z=Math.max(i,s,n,c)}i=M<i?M:i,a=x<a?x:a,s=C>s?C:s,l=z>l?z:l;const I=r.createImageData(m.size[0],m.size[1]);I.data.set(new Uint8ClampedArray(m.image.buffer));const b={offsetX:p,offsetY:g,rotateClockwise:d,angle:u,rasterizedImage:I,anchorX:f,anchorY:y};c.push(b)}t.width=s-i,t.height=l-a;const m=-i,h=l;for(let e=0;e<c.length;e++){const t=c[e],i=this._imageDataToCanvas(t.rasterizedImage),a=t.rasterizedImage.width,s=t.rasterizedImage.height,n=m-a*(.5+t.anchorX),l=h-s*(.5-t.anchorY);if(t.angle){const e=(360-t.angle)*Math.PI/180;r.save(),r.translate(o(t.offsetX),-o(t.offsetY)),r.translate(m,h),r.rotate(e),r.translate(-m,-h),r.drawImage(i,n,l),r.restore()}else r.drawImage(i,n+o(t.offsetX),l-o(t.offsetY))}const p=new n({x:m/t.width-.5,y:h/t.height-.5});return{imageData:0!==t.width&&0!==t.height?r.getImageData(0,0,t.width,t.height):r.createImageData(1,1),anchorPosition:p}}_imageDataToCanvas(e){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const t=this._imageDataCanvas,r=t.getContext("2d");return t.width=e.width,t.height=e.height,r.putImageData(e,0,0),t}_imageTo32Array(e,t,r){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const i=this._imageDataCanvas,a=i.getContext("2d");return i.width=t,i.height=r,a.drawImage(e,0,0,t,r),new Uint32Array(a.getImageData(0,0,t,r).data.buffer)}_getRasterizedResource(t,r,i,a,s,o){let n,l,m,p;if("esriGeometryPolyline"===i||"esriGeometryPolygon"===i){const h=a&&a.style?a.style:u.Legend,p="esriGeometryPolyline"===i?x.stroke[h]:x.fill[h];if("line"===t.type){if("CIMSolidStroke"!==t.cim.type){if("CIMPictureStroke"===t.cim.type){const e=c(t.width,r,s,o),{image:i,width:a,height:n}=this._getPictureResource(t,e);return this._rasterizePictureResource(t,i,a,n,p,e)}return null}({analyzedCIM:n,hash:m}=z(t,r,s,o)),l=this._embedCIMLayerInVectorMarker(n,p)}else if("marker"===t.type){if("CIMPictureMarker"===t.cim.type)return null;if("CIMVectorMarker"!==t.cim.type)return null;t.cim.offsetX=c(t.offsetX,r,s,o),t.cim.offsetY=c(t.offsetY,r,s,o),t.cim.rotation=c(t.rotation,r,s,o),t.cim.markerPlacement=t.markerPlacement,({analyzedCIM:n}=z(t,r,s,o)),m=e(JSON.stringify(n)).toString(),l=this._embedCIMLayerInVectorMarker(n,p)}else{if("text"===t.type)return null;if("fill"===t.type){if("CIMHatchFill"===t.cim.type||"CIMVectorMarker"===t.cim.type||"CIMPictureMarker"===t.cim.type||"CIMPictureFill"===t.cim.type){const e=t.cim.size||t.cim.height;let i,a,l;if("CIMPictureMarker"===t.cim.type||"CIMPictureFill"===t.cim.type)({image:i,width:a,height:l}=this._getPictureResource(t,e));else{({analyzedCIM:n,hash:m}=z(t,r,s,o));const e=this._rasterizer.rasterizeJSONResource(n,1,this._avoidSDF);i=e.image,a=e.size[0],l=e.size[1]}return this._rasterizePictureResource(t,i,a,l,p,null)}if("CIMSolidFill"!==t.cim.type)return null;({analyzedCIM:n,hash:m}=z(t,r,s,o)),l=this._embedCIMLayerInVectorMarker(n,p)}}}else{if("text"===t.type)return p=this._rasterizeTextResource(t,r,a,s,o),p;({analyzedCIM:n,hash:m}=z(t,r,s,o));const e=M(a,t,null);if("CIMPictureMarker"===t.cim.type){const i=c(t.size,r,s,o)*e,{image:a,width:n,height:l}=this._getPictureResource(t,i);return p={image:a,size:[n,l],sdf:!1,simplePattern:!1,anchorX:t.anchorPoint?t.anchorPoint.x:0,anchorY:t.anchorPoint?t.anchorPoint.y:0},p}h(n,e,{preserveOutlineWidth:!1}),l=n}m+=i,a&&(m+=JSON.stringify(a));const g=this._resourceCache;return g.has(m)?g.get(m):(p=this._rasterizer.rasterizeJSONResource(l,window.devicePixelRatio||1,this._avoidSDF),g.set(m,p),p)}_rasterizeTextResource(e,t,r,i,a){const s=M(r,e,null),o=c(e.text,t,i,a);if(!o||0===o.length)return null;const n=c(e.fontName,t,i,a),l=c(e.style,t,i,a),h=c(e.weight,t,i,a),p=c(e.decoration,t,i,a),g=c(e.size,t,i,a)*s,f=c(e.horizontalAlignment,t,i,a),y=c(e.verticalAlignment,t,i,a),d=m(c(e.color,t,i,a)),u=m(c(e.outlineColor,t,i,a)),x={color:d,size:g,horizontalAlignment:f,verticalAlignment:y,font:{family:n,style:l,weight:h,decoration:p},halo:{size:c(e.outlineSize,t,i,a)||0,color:u,style:l},pixelRatio:1,premultiplyColors:!this._avoidSDF};return this._textRasterizer.rasterizeText(o,x)}_rasterizePictureResource(e,t,r,i,n,l){const c=document.createElement("canvas"),m=c.getContext("2d");c.height=o(Math.max(Math.abs(n.frame.ymax-n.frame.ymin),l)),c.width=o(Math.abs(n.frame.xmax-n.frame.xmin));const h=m.createImageData(r,i);h.data.set(new Uint8ClampedArray(t.buffer));const p=this._imageDataToCanvas(h),g=m.createPattern(p,"repeat"),f=Math.cos((-e.cim.rotation||0)*Math.PI/180),y=Math.sin((-e.cim.rotation||0)*Math.PI/180);g.setTransform({m11:f,m12:y,m21:-y,m22:f,m41:o(e.cim.offsetX)||0,m42:o(e.cim.offsetY)||0});const d=n.canvasPaths;let u,M,x;a(d)?(u=d.rings,m.fillStyle=g,M=m.fill,x=["evenodd"]):s(d)&&(u=d.paths,m.strokeStyle=g,m.lineWidth=l,M=m.stroke,u[0][0][1]=c.height/2,u[0][1][1]=c.height/2),m.beginPath();for(const e of u){const t=e?e.length:0;if(t>1){let r=e[0];m.moveTo(o(r[0]),o(r[1]));for(let i=1;i<t;++i)r=e[i],m.lineTo(o(r[0]),o(r[1]));m.closePath()}}M.apply(m,x);const C=m.getImageData(0,0,c.width,c.height),z=new Uint8Array(C.data);return{size:[c.width,c.height],image:new Uint32Array(z.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}_getPictureResource(e,t){const r=this._pictureMarkerCache.get(e.materialHash);if(!r)return null;const i=r.height/r.width,a=t?i>1?o(t):o(t)/i:r.width,s=t?i>1?o(t)*i:o(t):r.height;return{image:this._imageTo32Array(r,a,s),width:a,height:s}}_embedCIMLayerInVectorMarker(e,t){const r=a(t.geometry)?"CIMPolygonSymbol":"CIMLineSymbol";return{type:"CIMVectorMarker",frame:t.frame,markerGraphics:[{type:"CIMMarkerGraphic",geometry:t.geometry,symbol:{type:r,symbolLayers:[e]}}]}}}function z(e,t,r,i){let a,s;if("function"==typeof e.materialHash){a=(0,e.materialHash)(t,r,i),s=g(e.cim,e.materialOverrides)}else a=e.materialHash,s=e.cim;return{analyzedCIM:s,hash:a}}export{C as CIMSymbolRasterizer,u as GeometryStyle};
