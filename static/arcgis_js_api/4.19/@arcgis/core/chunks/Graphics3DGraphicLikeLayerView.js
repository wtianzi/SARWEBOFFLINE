/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import"../core/lang.js";import{i as e,d as i,b as s}from"./Logger.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import a from"../core/Accessor.js";import{isAbortError as n}from"../core/promiseUtils.js";import"./ensureType.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import h from"../core/Collection.js";import"../core/urlUtils.js";import"./resourceExtension.js";import l from"../Graphic.js";import c from"../core/Handles.js";import p from"../layers/Layer.js";import{d}from"./diffUtils.js";import{init as u}from"../core/watchUtils.js";import{W as g}from"../core/HandleOwner.js";import m from"../tasks/support/Query.js";import{h as y,l as b}from"./ColorMaterial.js";import{v as f}from"./lineUtils.js";import{G as w,a as j}from"./Graphics3DScaleVisibility.js";import{G as C,a as S}from"./Graphics3DObjectStates.js";let v=class extends a{constructor(t){super(t),this.graphicsCore=null,this.elevationAlignment=new C,this.watchUpdatingTracking=new g,this.handles=new c,this.suspendResumeExtent=null}normalizeCtorArgs(t){let e=null;t.scaleVisibilityEnabled&&(delete(t={...t}).scaleVisibilityEnabled,e=new w);const i=new j({owner:t.owner,layer:t.layer,preferredUpdatePolicy:0,graphicSymbolSupported:!0});return{...t,graphicsCore:i,scaleVisibility:e}}initialize(){const t=this.scaleVisibility;e(t)&&"minScale"in this.layer&&this.watchUpdatingTracking.add(this.layer,"scaleRangeId",(()=>t.layerMinMaxScaleChangeHandler())),"elevationInfo"in this.layer&&this.watchUpdatingTracking.add(this.layer,"elevationInfo",((t,e)=>{d(t,e)&&this.watchUpdatingTracking.addPromise(this.graphicsCore.elevationInfoChange())}))}async setup(){const t=(t,e,i)=>this.graphicsCore.spatialIndex.queryGraphicUIDsInExtent(t,e,i);if(this.elevationAlignment.setup(this.owner,t,this.graphicsCore,this.view.elevationProvider),e(this.scaleVisibility)&&"minScale"in this.layer){const e=this.owner.view.basemapTerrain;this.scaleVisibility.setup(this.owner,this.layer,t,this.graphicsCore,e)}this._set("objectStates",new S(this.graphicsCore));try{await this.graphicsCore.setup({elevationAlignment:this.elevationAlignment,scaleVisibility:this.scaleVisibility,objectStates:this.objectStates})}catch(t){if(n(t))return;throw t}this.destroyed||(this.handles.add(this.view.watch("clippingArea",(()=>this.updateClippingExtent()),!0)),this.updateClippingExtent(),this.setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this.handles=i(this.handles),this.watchUpdatingTracking.destroy(),this._set("elevationAlignment",i(this.elevationAlignment)),this._set("scaleVisibility",i(this.scaleVisibility)),this._set("objectStates",i(this.objectStates)),this._set("graphicsCore",i(this.graphicsCore))}get suspended(){return!(!e(this.scaleVisibility)||!this.scaleVisibility.suspended)}get updating(){var t,i;return!!(null!=(t=this.graphicsCore)&&t.updating||e(this.scaleVisibility)&&this.scaleVisibility.updating||null!=(i=this.watchUpdatingTracking)&&i.updating)}getGraphicFromGraphicUid(t){if(this.owner.loadedGraphics){const e=this.owner.loadedGraphics.find((e=>e.uid===t));if(e){const t=this.layer instanceof p?this.layer:null;return y(e,t)}}}whenGraphicBounds(t,e){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(t,e):Promise.reject()}computeAttachmentOrigin(t,e){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(t,e):null}getSymbolLayerSize(t,e){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(t,e):null}maskOccludee(t){const{set:e,handle:i}=this.objectStates.acquireSet(1,null);return this.objectStates.setUid(e,t.uid),i}highlight(t){if(t instanceof m)return x;if("number"==typeof t)return this.highlight([t]);if(t instanceof l)return this.highlight([t]);if(t instanceof h&&(t=t.toArray()),Array.isArray(t)&&t.length>0){if(t[0]instanceof l){const e=t.map((t=>t.uid)),{set:i,handle:s}=this.objectStates.acquireSet(0,null);return this.objectStates.setUids(i,e),s}if("number"==typeof t[0]){const e=t,{set:i,handle:s}=this.objectStates.acquireSet(0,null);return this.objectStates.setObjectIds(i,e),s}}return x}updateClippingExtent(){const t=this.view.clippingArea;this.graphicsCore.setClippingExtent(t,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}updateSuspendResumeExtent(){s(this.scaleVisibility)||(this.suspendResumeExtent=b(this.graphicsCore.computedExtent,this.suspendResumeExtent,f,this.graphicsCore.extentPadding),this.scaleVisibility.setExtent(this.suspendResumeExtent))}setupSuspendResumeExtent(){s(this.scaleVisibility)||(u(this.graphicsCore,"computedExtent",(t=>this.updateSuspendResumeExtent()),!0),this.graphicsCore.watch("extentPadding",(t=>this.updateSuspendResumeExtent())))}};t([r({constructOnly:!0})],v.prototype,"owner",void 0),t([r({constructOnly:!0})],v.prototype,"layer",void 0),t([r({readOnly:!0,aliasOf:"owner.view"})],v.prototype,"view",void 0),t([r({constructOnly:!0})],v.prototype,"graphicsCore",void 0),t([r({constructOnly:!0})],v.prototype,"scaleVisibility",void 0),t([r({readOnly:!0})],v.prototype,"elevationAlignment",void 0),t([r({readOnly:!0})],v.prototype,"objectStates",void 0),t([r({readOnly:!0})],v.prototype,"watchUpdatingTracking",void 0),t([r({readOnly:!0})],v.prototype,"suspended",null),t([r({readOnly:!0})],v.prototype,"updating",null),v=t([o("esri.views.3d.layers.graphics.Graphics3DGraphicLikeLayerView")],v);const x={remove(){},pause(){},resume(){}};var E=v;export{E as G};
