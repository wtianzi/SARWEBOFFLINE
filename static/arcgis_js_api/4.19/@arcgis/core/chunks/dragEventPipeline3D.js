/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{i as e,b as r,c as n}from"./Logger.js";import{s as t}from"./mathUtils2.js";import{c as o}from"./vec3f64.js";import{g as s,l as a,s as c,d as l,b as i,e as u,c as d}from"./vec3.js";import{s as m,h as p,b as f}from"./screenUtils.js";import{projectPoint as S}from"../geometry/projection.js";import{c as E}from"./stack.js";import{r as y,p as g,A as j}from"./geometryUtils.js";import{T as x}from"./intersectorUtils.js";import{I as b}from"./Intersector.js";import{d as I,b as v}from"./elevationInfoUtils.js";import{E as w}from"./InteractiveToolBase.js";function C(n,t){const s=o(),a=o();let c=!1;return o=>{if("start"===o.action){const r=m(o.screenStart,p(E.get())),a=y.fromScreen(n.state.camera,r,F);e(a)&&(c=g.intersectRay(t,a,s))}if(!c)return null;const l=m(o.screenEnd,p(E.get())),i=y.fromScreen(n.state.camera,l,F);return r(i)?null:g.intersectRay(t,i,a)?{...o,renderStart:s,renderEnd:a,plane:t,ray:i}:null}}function H(n,t,o,s=null,a=null){return function(n,t,o,s=null,a=null){let c=null;return l=>{if("start"===l.action&&(c=n.sceneIntersectionHelper.intersectElevationFromScreen(f(l.screenStart.x,l.screenStart.y),t,o,a),e(c)&&e(s)&&!S(c,c,s)))return null;if(r(c))return null;const i=n.sceneIntersectionHelper.intersectElevationFromScreen(f(l.screenEnd.x,l.screenEnd.y),t,o,a);return e(i)?e(s)&&!S(i,i,s)?null:{...l,mapStart:c,mapEnd:i}:null}}(n,o,v(t,n,o),s,a)}function R(e,r,n,t=null,o=null){return H(e,n,I(r),t,o)}function U(r,n,t,o){const s=n.toMap(r.screenStart,{include:[t]});return e(s)?R(n,t,s,o):null}function P(r,n,m){let p=null;const f=new w;return f.next(C(r,function(e,r){const n=A,t=k,o=g.create();e.renderCoordsHelper.worldUpAtPosition(r,n);const s=d(o,n,c(t,r,e.state.camera.eye));return d(s,s,n),g.fromPositionAndNormal(r,s,o)}(r,n))).next(function(e,r){const n=o(),d=a(r);e.renderCoordsHelper.worldUpAtPosition(r,n);const m=o(),p=o(),f=o=>{if(c(o,o,r),j.projectPoint(n,o,o),"global"===e.viewingMode){a(o)*t(l(n,o))<.001-d&&c(o,i(o,n,.001),r)}return u(o,o,r),o};return e=>(e.renderStart=f(s(m,e.renderStart)),e.renderEnd=f(s(p,e.renderEnd)),e)}(r,n)).next(function(r,n){const t=r.renderCoordsHelper;return r=>{const o=t.fromRenderCoords(r.renderStart,n),s=t.fromRenderCoords(r.renderEnd,n);return e(o)&&e(s)?{...r,mapStart:o,mapEnd:s}:null}}(r,m)).next((e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,p=e})),e=>(p=null,f.execute(e),p)}function T(r){let n=null;return t=>{switch(t.action){case"start":n=r.disableDisplay();break;case"end":case"cancel":e(n)&&(n.remove(),n=null)}return t}}function h(t,s=null){const a=new b(t.state.mode);a.options.selectionMode=!0,a.options.store=0;const c=f(),l={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},i=o(),u=n(s,t.spatialReference),d=e=>{t.map.ground&&t.map.ground.opacity<1?l.exclude.add(x):l.exclude.delete(x),t.sceneIntersectionHelper.intersectIntersectorScreen(m(e,c),a,l);const r=a.results.min;let n;if(r.getIntersectionPoint(i))n="TerrainRenderer"===r.intersector?0:1;else{if(!a.results.ground.getIntersectionPoint(i))return null;n=0}return{location:t.renderCoordsHelper.fromRenderCoords(i,u),surfaceType:n}};let p;return n=>{if("start"===n.action){const r=d(n.screenStart);p=e(r)?r.location:null}if(r(p))return null;const t=d(n.screenEnd);return e(t)&&e(t.location)?{...n,mapStart:p,mapEnd:t.location,surfaceType:t.surfaceType}:null}}const A=o(),k=o(),F=y.create();export{C as a,H as b,P as c,U as d,R as e,T as h,h as s};
