/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"../core/lang.js";import{L as r}from"./Logger.js";import{g as s}from"./metadata.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import{n as o,a}from"./PropertyOrigin.js";import{throwIfAborted as i}from"../core/promiseUtils.js";import l from"../core/Error.js";import"./ensureType.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import p from"../core/Collection.js";import{urlToObject as u}from"../core/urlUtils.js";import{r as y}from"./reader.js";import"./resourceExtension.js";import c from"../geometry/SpatialReference.js";import d from"../request.js";import b from"../geometry/Extent.js";import{C as m}from"./CollectionFlattener.js";import{V as h}from"./Version.js";import{i as f,p as S}from"./commonProperties2.js";import g from"../layers/support/Sublayer.js";import{i as x}from"./sublayerUtils.js";const v=r=>{let s=class extends r{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=null}readCapabilities(e,r){const s=r.capabilities&&r.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!s)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const t=this.type,o=-1!==s.indexOf("query"),a=-1!==s.indexOf("map"),i=!!r.exportTilesAllowed,l=-1!==s.indexOf("tilemap"),n="tile"!==t&&!!r.supportsDynamicLayers,p="tile"!==t&&(!r.tileInfo||n),u="tile"!==t&&(!r.tileInfo||n),y="tile"!==t,c=!!r.cimVersion&&h.parse(r.cimVersion).since(1,4);return{operations:{supportsQuery:o,supportsExportMap:a,supportsExportTiles:i,supportsTileMap:l},exportMap:a?{supportsArcadeExpressionForLabeling:c,supportsSublayersChanges:y,supportsDynamicLayers:n,supportsSublayerVisibility:p,supportsSublayerDefinitionExpression:u}:null,exportTiles:i?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let s=r.currentVersion;return s||(s=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchSublayerInfo(e,r){return await this.fetchAllLayersAndTables(r),this._allLayersAndTablesMap.get(e)}async fetchAllLayersAndTables(e){await this.load(e),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=d(u(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters}}).then((e=>{this._allLayersAndTablesMap=new Map;for(const r of e.data.layers)this._allLayersAndTablesMap.set(r.id,r);return{result:e.data}}),(e=>({error:e}))));const r=await this._allLayersAndTablesPromise;if(i(e),"result"in r)return r.result;throw r.error}};return e([t({readOnly:!0})],s.prototype,"capabilities",void 0),e([y("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],s.prototype,"readCapabilities",null),e([t({json:{read:{source:"copyrightText"}}})],s.prototype,"copyright",void 0),e([t({type:b})],s.prototype,"fullExtent",void 0),e([t(f)],s.prototype,"id",void 0),e([t({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],s.prototype,"legendEnabled",void 0),e([t(S)],s.prototype,"popupEnabled",void 0),e([t({type:c})],s.prototype,"spatialReference",void 0),e([t()],s.prototype,"version",void 0),e([y("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],s.prototype,"readVersion",null),s=e([n("esri.layers.mixins.ArcGISMapService")],s),s},w=r.getLogger("esri.layers.TileLayer");const L=p.ofType(g);function j(e,r){e&&e.forEach((e=>{r(e),e.sublayers&&e.sublayers.length&&j(e.sublayers,r)}))}const T=r=>{let i=class extends r{constructor(...e){super(...e),this.allSublayers=new m({root:this,rootCollectionNames:["sublayers"],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{}},this.watch("sublayers",((e,r)=>this._handleSublayersChange(e,r)),!0)}readSublayers(e,r){if(!r||!e)return;const{sublayersSourceJSON:t}=this,a=o(r.origin);if(a<2)return;if(t[a]={context:r,visibleLayers:e.visibleLayers||t[a].visibleLayers,layers:e.layers||t[a].layers},a>2)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:i,origin:l}=this.createSublayersForOrigin("web-document"),n=s(this);n.setDefaultOrigin(l),this._set("sublayers",new L(i)),n.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((r=>r.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const r=o("web-document"===e?"web-map":e);let s=2,t=this.sublayersSourceJSON[2].layers,i=this.sublayersSourceJSON[2].context,l=null;const n=[3,4,5].filter((e=>e<=r));for(const e of n){const r=this.sublayersSourceJSON[e];x(r.layers)&&(s=e,t=r.layers,i=r.context,r.visibleLayers&&(l={visibleLayers:r.visibleLayers,context:r.context}))}const p=[3,4,5].filter((e=>e>s&&e<=r));let u=null;for(const e of p){const{layers:r,visibleLayers:s,context:t}=this.sublayersSourceJSON[e];r&&(u={layers:r,context:t}),s&&(l={visibleLayers:s,context:t})}const y=function(e,r){const s=[],t={};return e?(e.forEach((e=>{const o=new g;if(o.read(e,r),t[o.id]=o,null!=e.parentLayerId&&-1!==e.parentLayerId){const r=t[e.parentLayerId];r.sublayers||(r.sublayers=[]),r.sublayers.unshift(o)}else s.unshift(o)})),s):s}(t,i),c=new Map,d=new Set;if(u)for(const e of u.layers)c.set(e.id,e);if(l)for(const e of l.visibleLayers)d.add(e);return j(y,(e=>{u&&e.read(c.get(e.id),u.context),l&&e.read({defaultVisibility:d.has(e.id)},l.context)})),{origin:a(s),sublayers:new L({items:y})}}read(e,r){super.read(e,r),this.readSublayers(e,r)}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.handles.remove("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.handles.add(e.on("before-changes",(e=>{w.error(new l("tilelayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return e([t({readOnly:!0})],i.prototype,"allSublayers",void 0),e([t({readOnly:!0,type:p.ofType(g)})],i.prototype,"serviceSublayers",void 0),e([t({value:null,type:L,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],i.prototype,"sublayers",void 0),e([t({readOnly:!0})],i.prototype,"sublayersSourceJSON",void 0),i=e([n("esri.layers.mixins.SublayersOwner")],i),i};export{v as A,T as S};
