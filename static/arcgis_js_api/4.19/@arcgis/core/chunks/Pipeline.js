/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"./ArrayPool.js";import{h as t}from"../core/lang.js";import"./deprecate.js";import"./object.js";import"../kernel.js";import"../config.js";import{L as s,b as r,i,u as o,c as a,p as n,q as h}from"./Logger.js";import"./string.js";import"./metadata.js";import{property as u}from"../core/accessorSupport/decorators/property.js";import l from"../core/Accessor.js";import"./PropertyOrigin.js";import{R as c}from"../core/scheduling.js";import{createAbortController as d,createAbortError as p,createResolver as g,all as m,throwIfAborted as f,isAbortError as y,throwIfNotAbortError as _,after as b,ignoreAbortErrors as v}from"../core/promiseUtils.js";import"./Message.js";import I from"../core/Error.js";import"./ensureType.js";import{subclass as j}from"../core/accessorSupport/decorators/subclass.js";import{E as x}from"./Evented.js";import"../core/Collection.js";import"./collectionUtils.js";import"./JSONSupport.js";import"./Promise.js";import"./Loadable.js";import"../core/urlUtils.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../core/accessorSupport/decorators/cast.js";import"./jsonMap.js";import"./enumeration.js";import"./reader.js";import"./writer.js";import"./resourceExtension.js";import"./persistableUrlUtils.js";import w,{g as S}from"../geometry/SpatialReference.js";import"./locale.js";import"./number.js";import"../intl.js";import F from"../request.js";import"./assets.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import{e as C}from"./Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalUser.js";import"../portal/Portal.js";import"./mathUtils2.js";import"./vec3f64.js";import"./common.js";import"./vec3.js";import"./colorUtils.js";import"../Color.js";import"./zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./domains.js";import"./arcadeOnDemand.js";import"../layers/support/fieldUtils.js";import"../popup/content/Content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/CustomContent.js";import"./date.js";import"../popup/support/FieldInfoFormat.js";import"../popup/FieldInfo.js";import"../popup/content/FieldsContent.js";import"./MediaInfo.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/support/ChartMediaInfoValue.js";import"./chartMediaInfoUtils.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/MediaContent.js";import"../popup/content/TextContent.js";import"../popup/content.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/RelatedRecordsInfo.js";import"./Identifiable.js";import"../support/actions/ActionBase.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../PopupTemplate.js";import"../symbols/Symbol.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol3DLayer.js";import"./screenUtils.js";import"./opacityUtils.js";import"./materialUtils.js";import"../symbols/edges/Edges3D.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./utils.js";import"./Symbol3DMaterial.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/patterns/StylePattern3D.js";import"../symbols/FillSymbol3DLayer.js";import"./colors.js";import"./Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/Symbol3D.js";import"./Thumbnail.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"./Symbol3DVerticalOffset.js";import"../symbols/LabelSymbol3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"./urlUtils.js";import"../symbols/PictureFillSymbol.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../symbols.js";import"./uid.js";import"../Graphic.js";import"../core/Handles.js";import"./unitUtils.js";import{d as q,h as T,a as M}from"./diffUtils.js";import"./normalizeUtilsCommon.js";import"../geometry/support/normalizeUtils.js";import"./MemCache.js";import"./ItemCache.js";import"./timeUtils.js";import E from"../TimeExtent.js";import{whenFalseOnce as k}from"../core/watchUtils.js";import{b as R}from"./arcgisLayerUrl.js";import"./fieldType.js";import"./mat4.js";import"./pe.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformationStep.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/projection.js";import"./Scheduler.js";import{HandleOwner as P}from"../core/HandleOwner.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"../core/workers/RemoteClient.js";import"../core/workers/Connection.js";import{openWithPorts as U}from"../core/workers/workers.js";import"../layers/support/LOD.js";import A from"../layers/support/TileInfo.js";import"./zscale.js";import"./queryZScale.js";import"../layers/support/Field.js";import"../tasks/support/FeatureSet.js";import"./defaultsJSON.js";import D from"../layers/support/FieldsIndex.js";import"./DataLayerSource.js";import O from"../tasks/support/Query.js";import"../tasks/support/StatisticDefinition.js";import"./QueryEngineCapabilities.js";import{f as L,c as G}from"./query.js";import{P as z}from"./pbf.js";import{a as Q,b as N}from"./OptimizedFeatureSet.js";import{a as V,b as B}from"./pbfQueryUtils.js";import{c as X,u as Y,o as H,p as $,n as J,q as W,s as Z,t as K}from"./featureConversionUtils.js";import"./aaBoundingBox.js";import"./geojson.js";import"./clientSideDefaults.js";import{f as ee}from"./ogcFeatureUtils.js";import"./TileKey.js";import{j as te}from"./definitions.js";import"./quantizationUtils.js";import"./number2.js";import"./Queue.js";import{Q as se}from"./QueueProcessor.js";import{T as re}from"./TileInfoView.js";import"./FramebufferObject.js";import"./visualVariablesUtils.js";import"./enums.js";import"./Utils10.js";import"./json.js";import{c as ie,p as oe}from"./projectionSupport.js";import"./centroid.js";import{F as ae}from"./FeatureSetReader.js";import"./quickselect.js";import{Q as ne}from"./QueryEngine.js";import"./spatialQuerySupport.js";import{C as he}from"./CircularArray.js";import{F as ue,r as le,C as ce,A as de,T as pe}from"./TileStore.js";import{F as ge,S as me,a as fe}from"./FeatureStore2D.js";import{S as ye,c as _e}from"./createConnection.js";import"./visualVariablesUtils2.js";class be{constructor(){this.fieldMap=new Map,this.fields=[],this.hasFeatures=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}hasField(e){return this.fieldMap.has(e)}isDateField(e){var t;return null==(t=this.fieldMap.get(e))?void 0:t.isDate}getFieldIndex(e){var t;return null==(t=this.fieldMap.get(e))?void 0:t.index}}function ve(e){const t=e.getLength(),s=e.pos()+t,r={name:"",isDate:!1};for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:r.name=e.getString();break;case 2:"esriFieldTypeDate"===B(e.getEnum())&&(r.isDate=!0);break;default:e.skip()}return r}const Ie=s.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF");function je(e){for(;e.next();)switch(e.tag()){case 1:return e.getMessage();default:e.skip()}return null}class xe extends ae{constructor(e,t,s,r){super(e),this._hasNext=!1,this._isPoints=!1,this._isPolygons=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=r,this._reader=t,this._header=s,this._hasNext=s.hasFeatures,this._isPoints="esriGeometryPoint"===r,this._isPolygons="esriGeometryPolygon"===r}static fromBuffer(e,t,s=!1){const r=function(e){try{const t=2,s=new z(new Uint8Array(e),new DataView(e));for(;s.next();)switch(s.tag()){case t:return je(s.getMessage());default:s.skip()}}catch(e){const t=new I("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});Ie.error(t)}return null}(e),i=function(e,t,s=!1){const r=e.pos(),i=new be;let o=0,a=0,n=null,h=null,u=null,l=!1;for(;e.next();)switch(e.tag()){case 1:n=e.getString();break;case 3:h=e.getString();break;case 12:u=e.processMessage(V);break;case 9:if(i.exceededTransferLimit=e.getBool(),i.exceededTransferLimit){i.offsets.geometry=s?new Float64Array(8e3):new Int32Array(8e3),i.centroid=s?new Float64Array(16e3):new Int32Array(16e3);for(let e=0;e<i.centroid.length;e++)i.centroid[e]=268435455}break;case 13:{const t=ve(e),s=t.name,r=t.name.toLowerCase().trim(),a={fieldName:s,index:o++,isDate:t.isDate};i.fields.push(a),i.fieldMap.set(t.name,a),i.fieldMap.set(r,a);break}case 15:{const r=e.getLength(),n=e.pos()+r;if(!i.exceededTransferLimit){const e=i.offsets.geometry,t=i.centroid;e.push(0),t.push(268435455),t.push(268435455)}!l&&i.exceededTransferLimit&&(l=!0,i.offsets.attributes=s?new Float64Array(8e3*o):new Uint32Array(8e3*o));let h=a*o;for(;e.pos()<n&&e.next();)switch(e.tag()){case 1:{l?i.offsets.attributes[h++]=e.pos():i.offsets.attributes.push(e.pos());const t=e.getLength();e.skipLen(t);break}case 2:if(t){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 3:{e.getUInt32();const t=e.getSInt64(),s=e.getSInt64();i.centroid[2*a]=t,i.centroid[2*a+1]=s;break}default:e.skip()}}else{i.offsets.geometry[a]=e.pos();const t=e.getLength();e.skipLen(t)}break;case 4:{const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 3:{e.getUInt32();const t=e.getSInt64(),s=e.getSInt64();i.centroid[2*a]=t,i.centroid[2*a+1]=s;break}default:e.skip()}break}default:e.skip()}a++,i.hasFeatures=!0;break}default:e.skip()}const c=n||h;if(!c)throw new I("FeatureSet has no objectId or globalId field name");return i.featureCount=a,i.fieldCount=o,i.objectIdFieldIndex=i.getFieldIndex(c),i.transform=u,i.displayIds=new Uint32Array(i.featureCount),i.groupIds=new Uint16Array(i.featureCount),e.move(r),i}(r,"esriGeometryPoint"===t,s),o=ae.createInstance();return new xe(o,r,i,t)}get geometryType(){return this._geometryType}get size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getApproximateSize(){if(this._hasFilter){const e=Math.abs(this._xmax-this._xmin)*Math.abs(this._ymax-this._ymin),t=this.size*e/262144;return Math.max(Math.round(t),0)}return this.size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";return this._header.fields.forEach((({index:t})=>{e+=this._readAttributeAtIndex(t)+"."})),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){if(void 0===this._cache.legacyFeature){var e;const t=this.readCentroid(),s={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:null!=(e=t&&{x:t.coords[0],y:t.coords[1]})?e:null};return this._cache.legacyFeature=s,s}return this._cache.legacyFeature}readOptimizedFeature(){if(void 0===this._cache.optFeature){const e=new Q(this.readGeometry(),this.readAttributes(),this.readCentroid());return e.objectId=this.getObjectId(),e.displayId=this.getDisplayId(),this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrate(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return r(t)?e:e*t.scale[0]+t.translate[0]}getYHydrate(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return r(t)?e:t.translate[1]-e*t.scale[1]}getX(){return this._header.centroid[2*this._featureIndex]*this._sx+this._tx}getY(){return this._header.centroid[2*this._featureIndex+1]*this._sy+this._ty}readLegacyPointGeometry(){return{x:this.getX(),y:this.getY()}}readLegacyGeometry(){const e=this.readGeometry();return X(e,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,s]=e.coords;return{x:t,y:s}}readGeometryArea(){return this._cache.area||this.readGeometry(),this._cache.area}readUnquantizedGeometry(){if(void 0===this._cache.unquantGeometry){const e=this.readGeometry();if(!e)return this._cache.unquantGeometry=null,null;const t=e.clone(),s=t.lengths,r=t.coords;for(let e=0,t=2;e<s.length;e++,t+=2){const i=s[e];for(let e=1;e<i;e+=1,t+=2)r[t]+=r[t-2],r[t+1]+=r[t-1]}return this._cache.unquantGeometry=t,t}return this._cache.unquantGeometry}readHydratedGeometry(){if(this._isPoints){const e=this.getXHydrate(),t=this.getYHydrate();return new N([],[e,t])}const e=this.readGeometry();if(!e)return null;const t=e.clone(),s=this.getQuantizationTransform();return i(s)&&Y(t,t,this.hasZ,this.hasM,s),t}readGeometry(){if(void 0===this._cache.geometry){let e=null;if(this._isPoints){const t=this.getX(),s=this.getY();e=new N([],[t,s])}else{const t=this._header.offsets.geometry[this._featureIndex],s=this._reader;if(0===t)return null;s.move(t);try{e=this._parseGeometry(s)}catch(e){return console.error("Failed to parse geometry!",e),null}}return this._cache.geometry=e,e}return this._cache.geometry}readCentroid(){if(void 0===this._cache.centroid){let e=null;const t=this._header.centroid[2*this._featureIndex]+this._tx,s=this._header.centroid[2*this._featureIndex+1]+this._ty;return 268435455===t?(e=this._computeCentroid(),e&&(this._header.centroid[2*this._featureIndex]=e.coords[0]-this._tx,this._header.centroid[2*this._featureIndex+1]=e.coords[1]-this._ty)):e=new N([],[t,s]),this._cache.centroid=e,e}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new xe(this.instance,e,this._header,this.geometryType);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this.size&&!this._passesFilter()&&!this._getExists(););return this._featureIndex<this.size}_readAttribute(e,t){const s=this._header.hasField(e)?e:function(e){return e.toLowerCase().trim()}(e),r=this._header.getFieldIndex(s);if(null==r)return;const i=this._readAttributeAtIndex(r);if(!t)return i;if(null==i)return i;return this._header.isDateField(s)?new Date(i):i}_readAttributes(){const e={};return this._header.fields.forEach((({fieldName:t,index:s})=>{e[t]=this._readAttributeAtIndex(s)})),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_passesFilter(){if(!this._hasFilter)return!0;let e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];if(268435455===e){if(this._isPolygons&&!this.readCentroid())return!1;e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1]}return e>=this._xmin&&e<=this._xmax&&t>=this._ymin&&t<=this._ymax}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],s=this._reader;return s.move(t),function(e){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:{const t=e.getString();return""===t?null:t}case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(s)}_preprocessPolygon(e,t){let s=0,r=0,i=0,o=!1,a=!1,n=!1,h=-1;const u=[];let l=0,c=!1;for(let d=0;d<t.length;d++){const p=t[d];let g=e[2*s],m=e[2*s+1],f=0;for(let t=1;t<p;t++){const r=g,i=m,o=g+e[2*(s+t)],a=m+e[2*(s+t)+1];g=o,m=a,f+=.5*((o-r)*(a+i))}const y=f>0;if(y&&c&&(r+=p),y||(h++,c=!1),h>=1e6)break;l+=f,o&&y&&a&&(n=!0);{e[2*i]=e[2*r],e[2*i+++1]=e[2*r+++1];let t=1,s=e[2*r],o=e[2*r+++1];for(let a=2;a<p;a++){const a=e[2*r],n=e[2*r+++1];0===s*n-a*o&&s*a+o*n>0?(s+=a,o+=n):(e[2*i]=s,e[2*i+++1]=o,t++,s=a,o=n)}e[2*i]=s,e[2*i+++1]=o,t++,u.push(t)}o=!1,a=!0,s+=p}return u.length?(this._cache.area=Math.abs(l),new N(u,e,n)):null}_parseGeometry(e){const t=e.getLength(),s=e.pos()+t,r=[],i=[];for(;e.pos()<s&&e.next();)switch(e.tag()){case 2:{const t=e.getUInt32(),s=e.pos()+t;for(;e.pos()<s;)i.push(e.getUInt32());break}case 3:{const t=e.getUInt32(),s=e.pos()+t;for(;e.pos()<s;)r.push(e.getSInt32()),r.push(e.getSInt32()),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();break}case 1:default:e.skip()}let o=0;for(const e of i)r[2*o]+=this._tx,r[2*o+1]+=this._ty,o+=e;return this._isPolygons?this._preprocessPolygon(r,i):new N(i,r)}}class we{constructor(e){this.service=e}destroy(){}}function Se(e){const{capabilities:s}=e;return(r=e.source)&&r.capabilities&&r.collectionId&&r.layerDefinition&&r.url?new Te(e):function(e){return Array.isArray(e.source)}(e)?new Fe(e):s.query.supportsFormatPBF&&t("featurelayer-pbf")?new Ce(e):new qe(e);var r}class Fe extends we{constructor(e){super(e),this._portsOpen=U(e.source).then((e=>this.client=e))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return ue.fromFeatureSet(s,this.service.objectIdField)}}class Ce extends we{async executeQuery(e,t){const{data:s}=await L(this.service.source,e,{...t,query:{...this.service.customParameters,...null==t?void 0:t.query}}),r=!e.quantizationParameters;return xe.fromBuffer(s,this.service.geometryType,r)}}class qe extends we{async executeQuery(e,t){const{source:s,capabilities:r,spatialReference:i,objectIdField:a}=this.service;if(e.quantizationParameters&&!r.query.supportsQuantization){const r=e.clone();r.quantizationParameters=null;const{data:o}=await G(s,r,i,{...t,query:{...this.service.customParameters,...null==t?void 0:t.query}}),n=H(o,a);return $(t.transform,n),ue.fromOptimizedFeatureSet(n)}const{data:n}=await G(s,e,this.service.spatialReference,{...t,query:{...o(this.service.customParameters),...null==t?void 0:t.query}});return ue.fromFeatureSet(n,this.service.objectIdField)}}class Te extends we{async executeQuery(e,t){const{capabilities:s}=this.service;if(e.quantizationParameters&&!s.query.supportsQuantization){e.clone().quantizationParameters=null;const s=await ee(this.service.source,e,t);return $(t.transform,s),ue.fromOptimizedFeatureSet(s)}const r=await ee(this.service.source,e,t);return ue.fromOptimizedFeatureSet(r)}}let Me=class extends l{constructor(e){super(e),this._queue=[],this._onGoingRequest=null,this._abortController=d()}destroy(){this.clear()}get updating(){return!this.destroyed&&(this._queue.length>0||null!=this._onGoingRequest)}clear(){if(this.destroyed)throw new Error("instance is already destroyed");let e=this._queue.pop();for(;e;)e.resolver.reject(p()),e=this._queue.pop();this._queue.length=0,this._abortController.abort(),this._abortController=d()}async push(e){if(this.destroyed)throw new Error("instance is already destroyed");const t=g();return this._queue.push({event:e,resolver:t}),this.notifyChange("updating"),Promise.resolve().then((()=>{this._processNext()})),t.promise}async _processNext(){if(this._onGoingRequest)return;const e=[],t=new Set,s=new Set,r=new Set;let i=this._queue.shift();for(;i;){const{event:{addedFeatures:o,deletedFeatures:a,updatedFeatures:n},resolver:h}=i;e.push(h);for(const{objectId:e,error:i}of o)i||(t.add(e),s.add(e),r.delete(e));for(const{objectId:e,error:t}of n)t||(s.add(e),r.delete(e));for(const{objectId:e,error:i}of a)i||(t.has(e)?t.delete(e):r.add(e),s.delete(e));i=this._queue.shift()}if(!s.size&&!r.size)return this.notifyChange("updating"),void e.forEach((e=>e()));const o=[],a=[];s.size&&s.forEach((e=>{o.push(e)})),r.size&&r.forEach((e=>{a.push(e)})),this._onGoingRequest=Promise.resolve().then((()=>this.processEdits(o,a,{signal:this._abortController.signal}))).catch((()=>{})),this.notifyChange("updating"),await this._onGoingRequest,this._onGoingRequest=null,this.notifyChange("updating"),e.forEach((e=>e())),this._queue.length>0&&this._processNext()}};e([u({constructOnly:!0})],Me.prototype,"processEdits",void 0),e([u({readOnly:!0})],Me.prototype,"updating",null),Me=e([j("esri.views.2d.layers.features.controllers.EditsQueue")],Me);class Ee{constructor(){this.source=!1,this.targets={feature:!1,aggregate:!1},this.storage={filters:!1,data:!1},this.mesh=!1,this.queryFilter=!1,this.why={mesh:[],source:[]}}static create(e){const t=new Ee;for(const s in e){const r=e[s];if("object"==typeof r)for(const e in r){const i=r[e];t[s][e]=i}t[s]=r}return t}static empty(){return Ee.create({})}static all(){return Ee.create({source:!0,targets:{feature:!0,aggregate:!0},storage:{filters:!0,data:!0},mesh:!0})}unset(e){e.source&&(this.source=!1),e.targets.feature&&(this.targets.feature=!1),e.targets.aggregate&&(this.targets.aggregate=!1),e.storage.filters&&(this.storage.filters=!1),e.storage.data&&(this.storage.data=!1),e.mesh&&(this.mesh=!1),e.queryFilter&&(this.queryFilter=!1)}any(){return this.source||this.mesh||this.storage.filters||this.storage.data||this.targets.feature||this.targets.aggregate||this.queryFilter}describe(){let e=0,t="";if(this.mesh){e+=20,t+="-> (20) Mesh needs update\n";for(const e of this.why.mesh)t+=`    + ${e}\n`}if(this.source){e+=10,t+="-> (10) The source needs update\n";for(const e of this.why.source)t+=`    + ${e}\n`}this.targets.feature&&(e+=5,t+="-> (5) Feature target parameters changed\n"),this.storage.filters&&(e+=5,t+="-> (5) Feature filter parameters changed\n"),this.targets.aggregate&&(e+=4,t+="-> (4) Aggregate target parameters changed\n"),this.storage.data&&(e+=1,t+="-> (1) Texture storage parameters changed");const s=e<5?"Fastest":e<10?"Fast":e<15?"Moderate":e<20?"Slow":"Very Slow";console.debug(`Applying ${s} update of cost ${e}/45 `),console.debug(t)}toJSON(){return{queryFilter:this.queryFilter,source:this.source,targets:this.targets,storage:this.storage,mesh:this.mesh}}}class ke{constructor(e){this.requests={done:new Array,stream:new he(10)},this._abortController=new AbortController,this.didSend=!1,this.tile=e}get invalid(){return this._invalid}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}sentEnd(){return this.requests.done.some((e=>e.message.end))}clear(){this.requests.done=[]}applyUpdate(e){this.requests.done.forEach((t=>t.message.status.unset(e)))}invalidate(e){switch(e){case"fields":return void("none"===this._invalid&&(this._invalid="fields"));case"all":return void(this._invalid="all")}}done(){this._invalid="none"}add(e){var t;e.message.status=null!=(t=e.message.status)?t:Ee.empty(),this.requests.done.push(e),e.message.end&&(this.resolved=!0)}abort(){this._abortController.abort()}}class Re{constructor(e){this.events=new x,this._pendingEdits=new Set,this._resolver=g(),this._editsQueue=new Me({processEdits:(e,t)=>this._processEdit(e,t)}),this._subscriptions=new Map,this._outSR=e.outSR,this._serviceInfo=e.serviceInfo,this._onTileUpdateMessage=e.onMessage}destroy(){this._editsQueue.clear()}async _onMessage(e){var t;const s=this._subscriptions.get(e.id);if(!s)return;const r={...e,remove:null!=(t=e.remove)?t:[],status:e.status};return this._onTileUpdateMessage(r,s.options)}update(e,s){var r;const i=s.fields.length;s.outFields=function(e,t){const s=new Set;return e&&e.forEach((e=>s.add(e))),t&&t.forEach((e=>s.add(e))),s.has("*")?["*"]:Array.from(s)}(null==(r=this._schema)?void 0:r.outFields,s.outFields),s.outFields=s.outFields.length>=.75*i?["*"]:s.outFields,s.outFields.sort();const o=q(this._schema,s);if(!o)return;t("esri-2d-update-debug")&&console.debug("Applying Update - Source:",o);const a={returnCentroid:t("esri-2d-query-centroid-enabled")&&"esriGeometryPolygon"===this._serviceInfo.geometryType,returnGeometry:!0,outFields:s.outFields,outSpatialReference:this._outSR,orderByFields:[`${this._serviceInfo.objectIdField} ASC`],where:s.definitionExpression||"1=1",gdbVersion:s.gdbVersion,historicMoment:s.historicMoment?new Date(s.historicMoment):null,timeExtent:E.fromJSON(s.timeExtent)},n=this._schema&&T(o,"outFields");this._schema&&M(o,["timeExtent","definitionExpression","gdbVersion","historicMoment"])&&(e.why.mesh.push("Layer filter changed"),e.why.source.push("Layer filter changed"),e.mesh=!0,e.source=!0,e.queryFilter=!0,this._invalidate("all")),n&&(e.why.source.push("Layer required fields changed"),e.source=!0,this._invalidate("fields")),q(a,this._queryInfo)&&(this._queryInfo=a),this._schema=s,this._resolver.resolve()}whenInitialized(){return this._resolver.promise}async applyUpdate(e){e.queryFilter?this.refresh():(this._subscriptions.forEach((t=>t.applyUpdate(e))),await this.resend())}refresh(){for(const e of this._tiles())this.unsubscribe(e),this.subscribe(e)}_tiles(){const e=[];return this._subscriptions.forEach((t=>e.push(t.tile))),e}pause(){this._subscriptions.forEach((e=>e.abort()))}subscribe(e){const t=new ke(e);this._subscriptions.set(e.id,t)}unsubscribe(e){const t=this.get(e.id);i(t)&&t.abort(),this._subscriptions.delete(e.id)}forEachPendingEdit(e){Array.from(this._subscriptions.values()).some((e=>"none"!==e.invalid))?this._pendingEdits.forEach(e):this._pendingEdits.clear()}async edit(e){return this._editsQueue.push(e)}createQuery(e={}){return new O({...this._queryInfo,...e})}get(e){return this._subscriptions.has(e)?this._subscriptions.get(e):null}async queryLastEditDate(){throw new Error("Service does not support query type")}async query(e,t){throw new Error("Service does not support query")}_invalidate(e){this._subscriptions.forEach((t=>t.invalidate(e)))}async _processEdit(e,t){t.forEach((e=>{this._pendingEdits.has(e)&&this._pendingEdits.delete(e)})),e.forEach((e=>this._pendingEdits.add(e)));const s=Array.from(this._subscriptions.values()).map((({tile:e})=>e)).map((t=>{const s=this.createTileQuery(t);return s.objectIds=e,{tile:t,query:s}})).map((async({tile:e,query:t})=>({tile:e,result:await this.query(t)}))),r=(await m(s)).map((async({tile:s,result:r})=>{if(!r.hasFeatures&&!t.length&&!e.length)return;return this._subscriptions.get(s.key.id)?this._onMessage({type:"update",id:s.key.id,addOrUpdate:r,remove:[...e,...t],end:!0,status:Ee.empty()}):void 0}));await Promise.all(r),this._invalidate("all")}}const Pe=s.getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource");class Ue extends Re{constructor(e){super(e),this.type="feature",this.mode="on-demand",this._adapter=Se(e.serviceInfo),this._queue=new se({concurrency:8,process:async e=>{if(f(e),i(e.tile)){const s=e.tile.key.id,{tile:r,signal:i}=e,o={query:t("esri-tiles-debug")?{tile:s.replace(/\//g,"."),depth:e.depth}:void 0,signal:i,transform:r.transform};return this._adapter.executeQuery(e.query,o)}return this._adapter.executeQuery(e.query,e)}}),this._patchQueue=new se({concurrency:8,process:async e=>{if(f(e),i(e.tile)){const s=e.tile.key.id,{tile:r,signal:i}=e,o={query:t("esri-tiles-debug")?{tile:s.replace(/\//g,"."),depth:e.depth}:void 0,signal:i,transform:r.transform};return this._adapter.executeQuery(e.query,o)}return this._adapter.executeQuery(e.query,e)}})}destroy(){super.destroy(),this._adapter.destroy(),this._queue.destroy(),this._patchQueue.destroy()}get updating(){return!!this._queue.length}get maxRecordCountFactor(){const{query:e}=this._serviceInfo.capabilities;return e.supportsMaxRecordCountFactor?4:null}get maxPageSize(){var e;const{query:t}=this._serviceInfo.capabilities;return(null!=(e=t.maxRecordCount)?e:8e3)*a(this.maxRecordCountFactor,1)}get pageSize(){return Math.min(8e3,this.maxPageSize)}enableEvent(e,t){}subscribe(e){super.subscribe(e),this._fetchDataTile(e).catch((t=>{y(t)||Pe.error(new I("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t}))}))}unsubscribe(e){super.unsubscribe(e)}resume(){this._queue.resume()}forEachRequest(e,t){const s=this._subscriptions.get(e),{requests:r,signal:i}=s;for(const e of r.done)t(e.message,{signal:i})}async query(e,t){return this._adapter.executeQuery(e,t)}async queryLastEditDate(){const e=this._serviceInfo.source,t={...e.query,f:"json"};return(await F(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate}createTileQuery(e){const t=this.createQuery();return t.quantizationParameters=e.getQuantizationParameters(),t.resultType="tile",t.geometry=e.extent,"esriGeometryPolyline"===this._serviceInfo.geometryType&&(t.maxAllowableOffset=e.resolution),this._serviceInfo.capabilities.query.supportsQuantization||(t.quantizationParameters=null,t.maxAllowableOffset=e.resolution),t}_createQuery(e,t){const s=new O({...this._queryInfo,...t});return this._serviceInfo.capabilities.query.supportsQuantization||(t.quantizationParameters=null,s.maxAllowableOffset=e.resolution),t.quantizationParameters&&"esriGeometryPolyline"===this._serviceInfo.geometryType&&(s.maxAllowableOffset=e.resolution),s.resultType="tile",s.geometry=e.extent,s}async _executePatchQuery(e,t,s,r){const o=t.clone();o.outFields=[this._serviceInfo.objectIdField,...s],o.returnCentroid=!1,o.returnGeometry=!1;const a=i(o.start)?o.start/8e3:0,n=r.signal;return this._patchQueue.push({tile:e,query:o,signal:n,depth:a})}async _resend(e,t){const{query:s,message:o}=e,a=i(s.outFields)?s.outFields:[],n=this._queryInfo.outFields,h=n.filter((e=>-1===a.indexOf(e)));if(!r(o.addOrUpdate))if(h.length)try{const e=this._subscriptions.get(o.id).tile,r=await this._executePatchQuery(e,s,h,t);f(t),s.outFields=n,o.addOrUpdate.joinAttributes(r),this._onMessage({...o,end:o.end,type:"append"})}catch(e){}else this._onMessage({...o,end:o.end,type:"append"})}async resend(){let e=0,t=!1;const s=[];for(this._subscriptions.forEach((e=>{e.requests.done.length||this._onMessage({id:e.tile.id,addOrUpdate:null,end:!1,type:"append"})}));!t;)t=!0,this._subscriptions.forEach((({requests:r,signal:i})=>{r.done.length>e&&(t=!1,s.push(this._resend(r.done[e],{signal:i})))})),e++;await Promise.all(s)}}const Ae=t("esri-mobile"),De={maxDrillLevel:Ae?1:4,maxRecordCountFactor:Ae?1:3};class Oe extends Ue{constructor(e){super(e)}async _fetchDataTile(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,s=this._subscriptions.get(e.key.id),r=s.signal,i=e.getQuantizationParameters();let o=0;const a=async(n,h)=>{const u=this._queryInfo,l=this._createQuery(n,{maxRecordCountFactor:t?De.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:i});o++;try{const t=await this._queue.push({tile:e,query:l,signal:r,depth:h});if(o--,f(r),!t)return;if(u!==this._queryInfo)return void a(n,h);if(t.exceededTransferLimit&&h<De.maxDrillLevel){for(const e of n.createChildTiles())a(e,h+1);return}const i={id:e.id,addOrUpdate:t,end:0===o,type:"append"};s.add({query:l,message:i}),this._onMessage(i)}catch(t){y(t)||this._onMessage({id:e.id,addOrUpdate:null,end:!0,type:"append"})}};a(e,0)}}function Le(e,t){const s=e.weakClone(),r=Z(t,e.geometry.coords[0]),i=K(t,e.geometry.coords[1]);return s.geometry=new N([],[r,i]),s}function Ge(e,t){const s=le(9,function(e){switch(e){case"esriGeometryPoint":return e=>({minX:e.geometry.coords[0],minY:e.geometry.coords[1],maxX:e.geometry.coords[0],maxY:e.geometry.coords[1]});default:return e=>{let t=1/0,s=1/0,r=-1/0,i=-1/0;return e.geometry.forEachVertex(((e,o)=>{t=Math.min(t,e),s=Math.min(s,o),r=Math.max(r,e),i=Math.max(i,o)})),{minX:t,minY:s,maxX:r,maxY:i}}}}(t));return s.load(e),s}class ze{constructor(e,t){this.onUpdate=e,this._geometryType=t,this._objectIdToFeature=new Map}get _features(){const e=[];return this._objectIdToFeature.forEach((t=>e.push(t))),e}add(e){this._objectIdToFeature.set(e.objectId,e),this._index=null}get(e){return this._objectIdToFeature.has(e)?this._objectIdToFeature.get(e):null}forEach(e){this._objectIdToFeature.forEach(e)}search(e){return this._index||(this._index=Ge(this._features,this._geometryType)),function(e,t){return e.search({minX:t.bounds[0],minY:t.bounds[1],maxX:t.bounds[2],maxY:t.bounds[3]})}(this._index,e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),this._index=null,t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._objectIdToFeature.size}}class Qe extends Re{constructor(e){super(e),this.type="geoevent",this._dataReceiveEventEnabled=!1,this._level=0,this._updateInfo={websocket:0,client:0};const{outSR:t}=e,{geometryType:s,objectIdField:r,timeInfo:i,purgeOptions:o,source:a,spatialReference:n,serviceFilter:h,maxReconnectionAttempts:u,maxReconnectionInterval:l,updateInterval:c}=e.serviceInfo,d=new ze(this._onUpdate.bind(this),s),p=new ye(d,r,i,o),g=_e(a,n,t,s,h,u,l);this._store=d,this._manager=p,this._connection=g,this._quantize=function(e){switch(e){case"esriGeometryPoint":return Le;case"esriGeometryPolygon":case"esriGeometryPolyline":default:return(t,s)=>{const r=t.weakClone(),i=new N,o=W(i,t.geometry,!1,!1,e,s,!1,!1);return r.geometry=o,r}}}(s),this._handles=[this._connection.on("feature",(e=>this._onFeature(e))),this._connection.watch("connectionStatus",(e=>this.events.emit("connectionStatus",e))),this._connection.watch("errorString",(e=>this.events.emit("errorString",e)))];let m=performance.now();this._updateIntervalId=setInterval((()=>{const t=performance.now(),s=t-m;if(s>2500){m=t;const e=Math.round(this._updateInfo.client/(s/1e3)),r=Math.round(this._updateInfo.websocket/(s/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.events.emit("updateRate",{client:e,websocket:r})}e.canAcceptRequest()&&this._manager.checkForUpdates()}),c)}destroy(){super.destroy(),clearInterval(this._updateIntervalId),this._handles.forEach((e=>e.remove())),this._connection.destroy()}_fetchDataTile(){}resume(){}enableEvent(e,t){"data-received"===e&&(this._dataReceiveEventEnabled=t)}get updating(){return!1}subscribe(e){super.subscribe(e);const t=this._subscriptions.get(e.id);this._level=e.level;const s=this._getTileFeatures(e);this._onMessage({type:"append",id:e.key.id,addOrUpdate:s,end:!0}),t.didSend=!0}unsubscribe(e){super.unsubscribe(e)}forEachRequest(e,t){const s=this._subscriptions.get(e),{tile:r,signal:o}=s,a={type:"append",tile:r,id:e,addOrUpdate:this._getTileFeatures(r),end:!0};t(a,{signal:o}),s.requests.stream.entries.forEach((e=>{i(e)&&t(e,{signal:o})}))}createTileQuery(e){throw new Error("Service does not support tile  queries")}async resend(){this._subscriptions.forEach((e=>{const{tile:t}=e,s={type:"append",id:t.id,addOrUpdate:this._getTileFeatures(t),end:!0};this._onMessage(s)}))}_getTileFeatures(e){const t=this._store.search(e).map((t=>this._quantize(t,e.transform)));return ue.fromOptimizedFeatures(t,this._serviceInfo.geometryType,e.transform)}_onFeature(e){this._updateInfo.websocket++;try{this._dataReceiveEventEnabled&&this.events.emit("feature",e);const t=J(e,this._serviceInfo.geometryType,!1,!1,this._serviceInfo.objectIdField);this._manager.add(t)}catch(e){}}_onUpdate(e,t){i(e)&&(this._updateInfo.client+=e.length),this._subscriptions.forEach(((e,t)=>{e.didSend&&e.tile.level===this._level&&this._onMessage({type:"append",id:t,addOrUpdate:null,clear:!0,end:!1})})),this._subscriptions.forEach(((e,t)=>{if(!e.didSend||e.tile.level!==this._level)return;const s=e.tile,r={type:"append",id:t,addOrUpdate:this._getTileFeatures(s),remove:[],end:!0,status:Ee.empty()};e.requests.stream.enqueue(r),this._onMessage(r)}))}}const Ne=s.getLogger("esri.views.2d.layers.features.sources.FeatureSource");class Ve extends Ue{constructor(e){super(e)}async _fetchDataTile(e){const t=this._subscriptions.get(e.key.id);let s=!1,r=0,i=0;const o=(r,o)=>{i--,f(t);const a=e.id,n=r.reader,h=r.query;if(!n.exceededTransferLimit){if(s=!0,0!==o&&!n.hasFeatures){const e={id:a,addOrUpdate:n,end:0===i,type:"append"};return t.add({message:e,query:h}),void this._onMessage(e)}const e={id:a,addOrUpdate:n,end:0===i,type:"append"};return t.add({message:e,query:h}),void this._onMessage(e)}const u={id:a,addOrUpdate:n,end:s&&0===i,type:"append"};t.add({message:u,query:h}),this._onMessage(u)};let a=0,n=0;for(;!s&&n++<20;){let n;for(let h=0;h<a+1;h++){const a=r++;i++,n=this._fetchDataTilePage(e,a,t).then((e=>e&&o(e,a))).catch((t=>{s=!0,y(t)||(Ne.error(new I("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t})),this._onMessage({id:e.id,addOrUpdate:null,end:s,type:"append"}))}))}await n,f(t),a=Math.min(a+2,6)}}async _fetchDataTilePage(e,t,s){const r=this._queryInfo,o={start:this.pageSize*t,num:this.pageSize,returnExceededLimitFeatures:!0,quantizationParameters:e.getQuantizationParameters()};i(this.maxRecordCountFactor)&&(o.maxRecordCountFactor=this.maxRecordCountFactor);const a=this._createQuery(e,o);try{const i=s.signal,o=await this._queue.push({tile:e,query:a,signal:i,depth:t});return f(s),o?r!==this._queryInfo?this._fetchDataTilePage(e,t,s):{reader:o,query:a}:null}catch(e){return _(e),null}}}const Be=s.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource");function Xe(e,t,s){const r=e.getXHydrate(),i=e.getYHydrate(),o=t.getColumnForX(r),a=Math.floor(t.normalizeCol(o));return`${s}/${Math.floor(t.getRowForY(i))}/${a}`}function Ye(e,t){if(r(e))return null;const s=t.transform,i=e.getQuantizationTransform();if(r(i)){const[t,r]=s.scale,[i,o]=s.translate,a=-i/t,n=1/t,h=o/r,u=1/-r;return e.transform(a,h,n,u)}const[o,a]=i.scale,[n,h]=i.translate,[u,l]=s.scale,[c,d]=s.translate,p=o/u,g=(n-c)/u,m=a/l,f=(-h+d)/l;return e.transform(g,f,p,m)}class He extends Ue{constructor(e){super(e),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new c(1e3),this._featureCount=e.featureCount,this._store=e.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(e,t){super.update(e,t),this._hasAggregates=e.targets.aggregate}async resend(e=!1){if(await this._downloadPromise,this._invalidated||e)return this._invalidated=!1,this._subscriptions.forEach((e=>e.clear())),this._downloadPromise=this._download(this._featureCount),void await this._downloadPromise;const t=this._queries.map((({query:e,reader:t})=>this._sendPatchQuery(e,t)));await Promise.all(t),this._subscriptions.forEach((e=>{e.requests.done.forEach((e=>this._onMessage(e.message)))}))}async refresh(){await this.resend(!0)}async edit(e){const t=this._signal,s=[...e.addedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),...e.updatedFeatures.filter((e=>!e.error)).map((e=>e.objectId))],r=[...e.deletedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),...s];for(const e of r)this._store.remove(e);const i=this.createQuery();i.objectIds=s;const o=await this._queue.push({query:i,depth:0,signal:t});f({signal:t}),this._store.insert(o),this._send(o),this._invalidateQueries()}_invalidateQueries(){this._invalidated=!0}async _sendPatchQuery(e,t){const s=i(e.outFields)?e.outFields:[],r=this._queryInfo.outFields,o=r.filter((e=>-1===s.indexOf(e)));if(!o.length)return;const a=e.clone(),n=this._signal;a.returnGeometry=!1,a.returnCentroid=!1,a.outFields=o,e.outFields=r;const h=await this._queue.push({query:a,depth:0,signal:n});f({signal:n}),t.joinAttributes(h)}async _fetchDataTile(e){this._downloadPromise||(this._downloadPromise=this._download(this._featureCount));const t=this._store.search(e),s=this._subscriptions.get(e.key.id),r=t.length-1;for(let i=0;i<r;i++){const r=Ye(t[i],e),o={type:"append",id:e.id,addOrUpdate:r,end:!1,status:Ee.empty()};s.add({query:null,message:o}),this._hasAggregates||await b(1),this._onMessage(o)}const i=Ye(r>=0?t[r]:null,e),o=this._didSendEnd,a={type:"append",id:e.id,addOrUpdate:i,end:o,status:Ee.empty()};s.add({query:null,message:a}),this._onMessage(a)}async _download(e){try{await this.whenInitialized();const t=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;t.clear();const r=Math.ceil(e/this.pageSize),i=Array.from({length:r},((e,t)=>t)).sort(((e,t)=>this._random.getInt()-this._random.getInt())).map((e=>this._downloadPage(e,t,s)));await Promise.all(i),this._store.sweepFeatures(t,this._store.storage),this._store.sweepFeatureSets(s)}catch(e){Be.error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",e)}this._sendEnd(),this._loading=!1}async _downloadPage(e,t,s){const r=this.pageSize,o={start:e*r,num:r,cacheHint:!0};i(this.maxRecordCountFactor)&&(o.maxRecordCountFactor=this.maxRecordCountFactor);const a=this.createQuery(o),n=this._signal,h=await this._queue.push({query:a,depth:e,signal:n});f({signal:n}),this._queries.push({query:a,reader:h}),this._store.insert(h),s.add(h.instance);const u=h.getCursor();for(;u.next();)t.set(u.getDisplayId());this._send(h)}_send(e){if(!this._subscriptions.size)return;let t=null;const s=new Map,o=new Set,a=new Map;this._subscriptions.forEach((e=>{var r;const i=e.tile;s.set(i.key.id,null),t=i.tileInfoView,o.add(i.level);const{row:n,col:h}=i.key,u=`${i.level}/${n}/${h}`,l=null!=(r=a.get(u))?r:[];l.push(e),a.set(u,l)}));for(const i of o){const o=t.getLODInfoAt(i),n=e.getCursor();for(;n.next();){const e=Xe(n,o,i),t=n.getIndex();if(a.has(e))for(const i of a.get(e)){const e=i.tile.id;let o=s.get(e);r(o)&&(o=[],s.set(e,o)),o.push(t)}}}s.forEach(((t,s)=>{if(i(t)){const r=this._subscriptions.get(s),i={type:"append",id:s,addOrUpdate:Ye(ge.from(e,t),r.tile),end:!1,status:Ee.empty()};r.add({query:null,message:i}),this._onMessage(i)}}))}_sendEnd(){this._subscriptions.forEach((e=>{const t={type:"append",id:e.tile.id,addOrUpdate:null,end:!0,status:Ee.empty()};e.add({query:null,message:t}),this._onMessage(t)})),this._didSendEnd=!0}}function $e(e,t,s,r,i,o){const n=function(e,t,s,r,i,o){switch(e.type){case"snapshot":return{type:"feature",origin:"snapshot",featureCount:a(e.featureCount,0),serviceInfo:e,onMessage:r,outSR:t,tileInfoView:s,canAcceptRequest:i,store:o};case"stream":return{type:"geoevent",serviceInfo:e,onMessage:r,outSR:t,canAcceptRequest:i};case"memory":case"on-demand":return{type:"feature",serviceInfo:e,onMessage:r,outSR:t,origin:n(e.source),tileInfoView:s,canAcceptRequest:i}}function n(e){return Array.isArray(e)?"local":"path"in e&&R(e.path)?"hosted":"unknown"}}(e,t,s,r,i,o);switch(n.type){case"feature":switch(n.origin){case"hosted":case"local":return new Ve(n);case"snapshot":return new He(n);case"unknown":return new Oe(n)}case"geoevent":return new Qe(n)}}function Je(e,t,s,r){r%2&&(r+=1);let i=0,o=0,a=-90,n=90,h=-180,u=180;for(let e=0;e<r/2;e++){for(let t=0;t<5;t++){const r=(h+u)/2,o=s>r?1:0;i|=o<<29-(t+5*e),h=(1-o)*h+o*r,u=(1-o)*r+o*u}for(let s=0;s<5;s++){const r=(a+n)/2,i=t>r?1:0;o|=i<<29-(s+5*e),a=(1-i)*a+i*r,n=(1-i)*r+i*n}}e.geohashX=i,e.geohashY=o}function We(e,t,s,r,i){i%2&&(i+=1);let o=0,a=0,n=-90,h=90,u=-180,l=180;for(let e=0;e<i/2;e++){for(let t=0;t<5;t++){const s=(u+l)/2,i=r>s?1:0;o|=i<<29-(t+5*e),u=(1-i)*u+i*s,l=(1-i)*s+i*l}for(let t=0;t<5;t++){const r=(n+h)/2,i=s>r?1:0;a|=i<<29-(t+5*e),n=(1-i)*n+i*r,h=(1-i)*r+i*h}}e[2*t]=o,e[2*t+1]=a}class Ze{constructor(e=[],t=8096){this._nodes=0,this._root=new Ke(0,0,0),this._statisticFields=e,this._pool=t?new he(8096):null}_acquire(e,t,s){this._nodes++;let r=null;return i(this._pool)&&(r=this._pool.dequeue()),i(r)?r.realloc(e,t,s):new Ke(e,t,s)}_release(e){this._nodes--,i(this._pool)&&this._pool.enqueue(e)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return n(this._pool,0,(e=>e.size))}get depth(){let e=0;return this._forEachNode((t=>e=Math.max(e,t.depth))),e}dropLevels(e){this._forEachNode((t=>{if(t.depth>=e)for(let e=0;e<t.children.length;e++){const s=t.children[e];t.children[e]=null,s&&this._release(s)}}))}clear(){this.dropLevels(0)}insert(e,t,s=0){const r=ue.fromOptimizedFeatures([e],"esriGeometryPoint").getCursor();r.next();const i=r.readGeometry();if(!i)return;const[o,a]=i.coords,n=e.geohashX,h=e.geohashY;this.insertCursor(r,e.displayId,o,a,n,h,t,s)}insertCursor(e,t,s,r,i,o,a,n=0){let h=this._root,u=0,l=0,c=0;for(;null!==h;){if(h.depth>=n&&(h.count+=1,h.xTotal+=s,h.yTotal+=r,h.xGeohashTotal+=i,h.yGeohashTotal+=o,h.displayId=t,this._updateStatisticsCursor(e,h,1)),u>=a)return void h.add(t);const d=Math.ceil((u+1)/2),p=Math.floor((u+1)/2),g=1-u%2,m=30-(3*d+2*p),f=30-(2*d+3*p),y=(i&7*g+3*(1-g)<<m)>>m,_=(o&3*g+7*(1-g)<<f)>>f,b=y+_*(8*g+4*(1-g));l=l<<3*g+2*(1-g)|y,c=c<<2*g+3*(1-g)|_,null==h.children[b]&&(h.children[b]=this._acquire(l,c,u+1)),u+=1,h=h.children[b]}}remove(e,t){const s=ue.fromOptimizedFeatures([e],"esriGeometryPoint").getCursor();s.next();const r=s.readGeometry();if(!r)return;const[i,o]=r.coords,a=e.geohashX,n=e.geohashY;this.removeCursor(s,i,o,a,n,t)}removeCursor(e,t,s,r,i,o){let a=this._root,n=0;for(;null!==a;){if(a.count-=1,a.xTotal-=t,a.yTotal-=s,a.xGeohashTotal-=r,a.yGeohashTotal-=i,this._updateStatisticsCursor(e,a,-1),n>=o)return void a.remove(e.getDisplayId());const h=Math.ceil((n+1)/2),u=Math.floor((n+1)/2),l=1-n%2,c=30-(3*h+2*u),d=30-(2*h+3*u),p=((r&7*l+3*(1-l)<<c)>>c)+((i&3*l+7*(1-l)<<d)>>d)*(8*l+4*(1-l)),g=a.children[p];1===g.count&&(this._release(g),a.children[p]=null),n+=1,a=g}}find(e,t,s){return this._root.find(e,t,s,0,0,0)}findSingleOccupancyNode(e,t,s,r,i){let o=this._root;for(;null!==o;){const a=o.depth,n=o.xNode,h=o.yNode,u=1-a%2,l=o.xGeohashTotal/o.count,c=o.yGeohashTotal/o.count;if(1===o.count&&e<l&&l<=s&&t<c&&c<=r)return o;if(a>=i){o=o.next;continue}const d=Math.ceil((a+1)/2),p=Math.floor((a+1)/2),g=30-(3*d+2*p),m=30-(2*d+3*p),f=~((1<<g)-1),y=~((1<<m)-1),_=(e&f)>>g,b=(t&y)>>m,v=(s&f)>>g,I=(r&y)>>m,j=n<<3*u+2*(1-u),x=h<<2*u+3*(1-u),w=j+8*u+4*(1-u),S=x+4*u+8*(1-u),F=Math.max(j,_),C=Math.max(x,b),q=Math.min(w,v),T=Math.min(S,I);let M=null,E=null;for(let e=C;e<=T;e++)for(let t=F;t<=q;t++){const s=t-j+(e-x)*(8*u+4*(1-u)),r=o.children[s];r&&(M||(M=r,M.next=o.next),E&&(E.next=r),E=r,r.next=o.next)}o=M||o.next}return null}getRegionDisplayIds(e,t,s,r,i){let o=this._root;const a=[];for(;null!==o;){const n=o.depth,h=o.xNode,u=o.yNode;if(n>=i){const i=o.xGeohashTotal/o.count,n=o.yGeohashTotal/o.count;e<=i&&i<=s&&t<=n&&n<=r&&o.displayIds.forEach((e=>a.push(e))),o=o.next;continue}const l=Math.ceil((n+1)/2),c=Math.floor((n+1)/2),d=1-n%2,p=30-(3*l+2*c),g=30-(2*l+3*c),m=~((1<<p)-1),f=~((1<<g)-1),y=(e&m)>>p,_=(t&f)>>g,b=(s&m)>>p,v=(r&f)>>g,I=h<<3*d+2*(1-d),j=u<<2*d+3*(1-d),x=I+8*d+4*(1-d),w=j+4*d+8*(1-d),S=Math.max(I,y),F=Math.max(j,_),C=Math.min(x,b),q=Math.min(w,v);let T=null,M=null;for(let e=F;e<=q;e++)for(let t=S;t<=C;t++){const s=t-I+(e-j)*(8*d+4*(1-d)),r=o.children[s];r&&(T||(T=r,T.next=o.next),M&&(M.next=r),M=r,r.next=o.next)}o=T||o.next}return a}getRegionStatistics(e,t,s,r,i){let o=this._root,a=0,n=0,h=0;const u={};let l=0;for(;null!==o;){const c=o.depth,d=o.xNode,p=o.yNode;if(c>=i){const i=o.xGeohashTotal/o.count,c=o.yGeohashTotal/o.count;e<i&&i<=s&&t<c&&c<=r&&(a+=o.count,n+=o.xTotal,h+=o.yTotal,1===o.count&&(l=o.displayId),this._aggregateStatistics(u,o.statistics)),o=o.next;continue}const g=Math.ceil((c+1)/2),m=Math.floor((c+1)/2),f=1-c%2,y=30-(3*g+2*m),_=30-(2*g+3*m),b=~((1<<y)-1),v=~((1<<_)-1),I=(e&b)>>y,j=(t&v)>>_,x=(s&b)>>y,w=(r&v)>>_,S=d<<3*f+2*(1-f),F=p<<2*f+3*(1-f),C=S+8*f+4*(1-f),q=F+4*f+8*(1-f),T=Math.max(S,I),M=Math.max(F,j),E=Math.min(C,x),k=Math.min(q,w);let R=null,P=null;for(let i=M;i<=k;i++)for(let c=T;c<=E;c++){const d=c-S+(i-F)*(8*f+4*(1-f)),p=o.children[d];if(p){if(i!==M&&i!==k&&c!==T&&c!==E){const i=p.xGeohashTotal/p.count,o=p.yGeohashTotal/p.count;e<i&&i<=s&&t<o&&o<=r&&(a+=p.count,n+=p.xTotal,h+=p.yTotal,1===p.count&&(l=p.displayId),this._aggregateStatistics(u,p.statistics));continue}R||(R=p,R.next=o.next),P&&(P.next=p),P=p,p.next=o.next}}o=R||o.next}return{count:a,attributes:this._normalizeStatistics(u,a),xTotal:n,yTotal:h,referenceId:l}}_forEachNode(e){let t=this._root;for(;null!==t;){const s=this._linkChildren(t)||t.next;e(t),t=s}}_linkChildren(e){let t=null,s=null;for(let r=0;r<=e.children.length;r++){const i=e.children[r];i&&(t||(t=i,t.next=e.next),s&&(s.next=i),s=i,i.next=e.next)}return t}_updateStatisticsCursor(e,t,s){for(const r of this._statisticFields){const i=r.name,o=r.inField?e.readAttribute(r.inField):e.getComputedNumericAtIndex(r.inFieldIndex);switch(r.statisticType){case"norm":{t.statistics[i]||(t.statistics[i]={});const a=r.inNormalizationField,n=e.readAttribute(a),h=t.statistics[i].onStatisticField||0,u=t.statistics[i].onStatisticNormalizationField||0;null==o||isNaN(o)||null==n||0===n||isNaN(n)||(t.statistics[i].onStatisticField=h+s*o,t.statistics[i].onStatisticNormalizationField=u+s*n);break}case"sum":case"avg":{t.statistics[i]||(t.statistics[i]={value:0,nanCount:0});const e=t.statistics[i].value,r=t.statistics[i].nanCount;null==o||isNaN(o)?t.statistics[i].nanCount=r+s:t.statistics[i].value=e+s*o;break}case"avg_angle":{t.statistics[i]||(t.statistics[i]={x:0,y:0,nanCount:0});const e=t.statistics[i].x,r=t.statistics[i].y,a=t.statistics[i].nanCount,n=Math.PI/180;null==o||isNaN(o)?t.statistics[i].nanCount=a+s:(t.statistics[i].x=e+s*Math.cos(o*n),t.statistics[i].y=r+s*Math.sin(o*n));break}case"mode":{t.statistics[i]||(t.statistics[i]={});const e=t.statistics[i][o]||0;t.statistics[i][o]=e+s;break}}}}_aggregateStatistics(e,t){for(const s of this._statisticFields){const r=s.name;switch(s.statisticType){case"sum":case"avg":case"avg_angle":case"mode":case"norm":e[r]||(e[r]={});for(const s in t[r]){const i=e[r][s]||0;e[r][s]=i+t[r][s]}}}}_normalizeStatistics(e,t){const s={};for(const r of this._statisticFields){const i=r.name;switch(r.statisticType){case"norm":{const r=e[i];if(t&&null==r.onStatisticNormalizationField)break;if(t&&r.onStatisticNormalizationField){s[i]=r.onStatisticField/r.onStatisticNormalizationField;break}s[i]=0;break}case"sum":{if(!t)break;const{value:r,nanCount:o}=e[i];if(!(t-o))break;s[i]=r;break}case"avg":{if(!t)break;const{value:r,nanCount:o}=e[i];if(!(t-o))break;s[i]=r/(t-o);break}case"avg_angle":{if(!t)break;const{x:r,y:o,nanCount:a}=e[i];if(!(t-a))break;const n=r/(t-a),h=o/(t-a),u=180/Math.PI,l=Math.atan2(h,n)*u;s[i]=l;break}case"mode":{const t=e[i];let r=0,o=null;for(const e in t){const s=t[e];s>r&&(r=s,o=e)}s[i]="null"===o?null:o;break}}}return s}}class Ke{constructor(e,t,s){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this.children=new Array(32);for(let e=0;e<this.children.length;e++)this.children[e]=null;this.xNode=e,this.yNode=t,this.depth=s}realloc(e,t,s){for(let e=0;e<this.children.length;e++)this.children[e]=null;return this.xNode=e,this.yNode=t,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}add(e){this.displayIds.add(e)}remove(e){this.displayIds.delete(e)}getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s);return function(e,t){let s=-90,r=90,i=-180,o=180;for(let a=0;a<t;a++){const t=Math.ceil((a+1)/2),n=Math.floor((a+1)/2),h=1-a%2,u=30-(3*t+2*n),l=30-(2*t+3*n),c=3*h+2*(1-h),d=2*h+3*(1-h),p=3*h+7*(1-h)<<l,g=(7*h+3*(1-h)<<u&e.geohashX)>>u,m=(p&e.geohashY)>>l;for(let e=c-1;e>=0;e--){const t=(i+o)/2,s=g&1<<e?1:0;i=(1-s)*i+s*t,o=(1-s)*t+s*o}for(let e=d-1;e>=0;e--){const t=(s+r)/2,i=m&1<<e?1:0;s=(1-i)*s+i*t,r=(1-i)*t+i*r}}return[i,s,o,r]}({geohashX:this.xNode<<r,geohashY:this.yNode<<i},this.depth)}find(e,t,s,r,i,o){if(r>=s)return this;const a=1-r%2,n=3*a+2*(1-a),h=2*a+3*(1-a),u=30-i-n,l=30-o-h,c=((e&7*a+3*(1-a)<<u)>>u)+((t&3*a+7*(1-a)<<l)>>l)*(8*a+4*(1-a)),d=this.children[c];return null==d?null:d.find(e,t,s,r+1,i+n,o+h)}}class et extends Q{constructor(e,t,s,r,i){super(new N([],[t,s]),r,null,e),this.geohashBoundsInfo=i}get count(){return this.attributes.cluster_count}static create(e,t,s,r,i,o,a,n){const h=new et(t,s,r,o,a);return h.displayId=e.createDisplayId(!0),h.referenceId=n,h.tileLevel=i,h}update(e,t,s,r,i,o){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=i,this.referenceId=null,this.referenceId=o,this}toJSON(){return{objectId:this.objectId,referenceId:1===this.attributes.cluster_count?this.referenceId:null,attributes:{...this.attributes,clusterId:this.objectId},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function tt(e){return 57.29577951308232*e}class st extends me{constructor(e,t,s){super(e,s),this.events=new x,this._geohashLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=ie(t,w.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}async updateSchema(e,s){const i=this._schema;try{await super.updateSchema(e,s),await this._projectionSupportCheck}catch(e){}const o=q(i,s);s&&(!r(o)||e.source||e.storage.filters)?((T(o,"params.fields")||!this._tree||e.source)&&(this._tree=new Ze(this._statisticFields),this._rebuildTree(),t("esri-2d-update-debug")&&console.debug("Aggregate mesh needs update due to tree changing")),t("esri-2d-update-debug")&&console.debug("Applying Update - ClusterStore:",o),e.targets[s.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):i&&(e.mesh=!0)}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepClusters(e,t,s){this._clusters.forEach(((r,i)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(i))}))}onTileData(e,t,s,i,o=!0){if(!this._schema||r(t.addOrUpdate))return t;const a=this._tree,n=this._getTransforms(e,this._spatialReference);{const e=t.addOrUpdate.getCursor();for(;e.next();)this._update(e,i,a)}if(t.status.mesh||!o)return t;const h=new Array,u=this._schema.params.clusterRadius;this._getClustersForTile(h,e,u,s,a,n),t.addOrUpdate=ue.fromOptimizedFeatures(h,"esriGeometryPoint"),t.addOrUpdate.attachStorage(s),t.end=!0;{const r=t.addOrUpdate.getCursor();for(;r.next();){const t=r.getDisplayId();this._bitsets.computed.unset(t),this.setComputedAttributes(s,r,t,e.scale)}}return this._aggregateValueRangesChanged&&t.end&&(this.events.emit("valueRangesChanged",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),t}onTileUpdate({added:e,removed:t}){if(e.length){const t=e[0].level;this._setGeohashLevel(t)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach((e=>{this._tiles.delete(e.key.id),this._markTileClustersForDeletion(e,s)}))}getAggregate(e){let t=null;return this._clusters.forEach((s=>{s&&s.displayId===e&&(t=s.toJSON())})),t}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);if(!t)return[];const s=t.geohashBoundsInfo;return this._tree.getRegionDisplayIds(s.xLL,s.yLL,s.xTR,s.yTR,s.level)}getDisplayIdForReferenceId(e){let t;return this._clusters.forEach((s=>{s&&s.referenceId===e&&(t=s.displayId)})),t}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){this._clusters.forEach(((t,s)=>{t&&e(t,s)}))}size(){let e=0;return this.forEach((t=>e++)),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrate(),r=e.getYHydrate(),i=this._geohashBuf[2*t],o=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,i,o,this._geohashLevel))}_update(e,t,s){const r=e.getDisplayId(),i=this._bitsets.inserted,o=t.isVisible(r);if(o===i.has(r))return;if(!o)return void this._remove(e);const a=e.getXHydrate(),n=e.getYHydrate();if(!this._setGeohash(r,a,n))return;const h=this._geohashBuf[2*r],u=this._geohashBuf[2*r+1];s.insertCursor(e,r,a,n,h,u,this._geohashLevel),i.set(r)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const i=tt(t/C.radius),o=i-360*Math.floor((i+180)/360);We(r,e,tt(Math.PI/2-2*Math.atan(Math.exp(-1*s/C.radius))),o,12)}else{const i=oe({x:t,y:s},this._spatialReference,w.WGS84);if(!i)return!1;We(r,e,i.y,i.x,12)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,t,s,o,a,n,u=!0){const l=this._schema.params.clusterPixelBuffer,c=2*s,d=this._getGeohashLevel(t.key.level),p=Math.ceil(2**t.key.level*te/c),g=Math.ceil(l/c)+0,m=Math.ceil(te/c),{row:f,col:y}=t.key,_=y*te,b=f*te,v=Math.floor(_/c)-g,I=Math.floor(b/c)-g,j=v+m+2*g,x=I+m+2*g,w=t.tileInfoView.getLODInfoAt(t.key.level);for(let s=v;s<=j;s++)for(let l=I;l<=x;l++){let c=s;w.wrap&&(c=s<0?s+p:s%p);const g=w.wrap&&s<0,m=w.wrap&&s%p!==s,f=this._lookupCluster(o,w,t.key.level,c,l,d,a);if(i(f)){const t=h(n,(e=>g?e.left:m?e.right:e.tile));if(u&&r(t))continue;if(!f.count)continue;if(i(t)&&u){const s=f.geometry.clone();let r=f.attributes;s.coords[0]=Z(t,s.coords[0]),s.coords[1]=K(t,s.coords[1]),1===f.count&&i(f.referenceId)&&(r={...f.attributes,referenceId:f.referenceId});const o=new Q(s,r);o.displayId=f.displayId,e.push(o)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),12)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=1*(Math.floor(t/1)+1)-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=S(t);if(!r)return{tile:s,left:null,right:null};const[i,o]=r.valid;return{tile:s,left:{...s,translate:[o,e.bounds[3]]},right:{...s,translate:[i-o+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,i=2*r;let o=s%2?t*i:t*i-r;const a=s*i;let n=o+i;const h=a-i,u=2**e.level*te;e.wrap&&o<0&&(o=0),e.wrap&&n>u&&(n=u);const l=o/te,c=a/te,d=n/te,p=h/te;return[e.getXForColumn(l),e.getYForRow(c),e.getXForColumn(d),e.getYForRow(p)]}_lookupCluster(e,t,s,r,o,a,n){const h=this._getClusterId(s,r,o),u=this._clusters.get(h),[l,c,d,p]=this._getClusterBounds(t,r,o),g={x:l,y:c},m={x:d,y:p};let f=0,y=0,_=0,b=0;if(this._spatialReference.isWebMercator){{const e=tt(g.x/C.radius);f=e-360*Math.floor((e+180)/360),y=tt(Math.PI/2-2*Math.atan(Math.exp(-1*g.y/C.radius)))}{const e=tt(m.x/C.radius);_=e-360*Math.floor((e+180)/360),b=tt(Math.PI/2-2*Math.atan(Math.exp(-1*m.y/C.radius)))}}else{const e=oe(g,this._spatialReference,w.WGS84),t=oe(m,this._spatialReference,w.WGS84);if(!e||!t)return null;f=e.x,y=e.y,_=t.x,b=t.y}const v={geohashX:0,geohashY:0},I={geohashX:0,geohashY:0};Je(v,y,f,a),Je(I,b,_,a);const j=v.geohashX,x=v.geohashY,S=I.geohashX,F=I.geohashY,q={xLL:j,yLL:x,xTR:S,yTR:F,level:a},T=n.getRegionStatistics(j,x,S,F,a),{count:M,xTotal:E,yTotal:k,referenceId:R}=T,P=M?E/M:0,U=M?k/M:0;if(0===M)return this._clusters.set(h,null),null;const A={cluster_count:M,...T.attributes},D=i(u)?u.update(P,U,s,A,q,R):et.create(e,h,P,U,s,A,q,R);return 0===M&&(D.geometry.coords[0]=(l+d)/2,D.geometry.coords[1]=(c+p)/2),this._clusters.set(h,D),this._updateAggregateValueRangeForCluster(D,D.tileLevel),D}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,i=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(i,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&i===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(te/s),{row:i,col:o}=e.key,a=o*te,n=i*te,h=Math.floor(a/s),u=Math.floor(n/s);for(let t=h;t<h+r;t++)for(let s=u;s<u+r;s++)this._markForDeletion(e.key.level,t,s)}}function rt(e){if(!y(e)&&!function(e){return"worker:port-closed"===e.name}(e))throw e}function it(e){return"feature"===e.type&&"snapshot"===e.mode}let ot=class extends P{constructor(){super(...arguments),this._storage=new ce,this._markedIdsBufId=this._storage.createBitset(),this._lastCleanup=performance.now(),this._cleanupNeeded=!1,this._invalidated=!1,this._tileToResolver=new Map,this.tileStore=null,this.config=null,this.processor=null,this.remoteClient=null,this.service=null}initialize(){this._initAttributeStore(),this._initStores(),this._initQueryEngine(),this._initSource(),this._updateQueue=new se({concurrency:"geoevent"===this._source.type?1:4,process:(e,t)=>this._onTileMessage(e,{signal:t})}),this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this)),this.watch("updating",(e=>!e&&this.onIdle()))]),this._checkUpdating=setInterval((()=>this.notifyChange("updating")),300)}async startup(){this._initAttributeStore(),this.tileStore.tiles.forEach((e=>this._source.subscribe(e)))}_initSource(){const e=this.tileStore.tileScheme;this._source=$e(this.service,this.spatialReference,e,((e,t)=>(this._invalidated=!0,this._patchTile(e,t))),(()=>this._updateQueue.length<50),this.featureStore),this._proxyEvents()}_proxyEvents(){if("geoevent"===this._source.type){const e=this._source.events;this.handles.add([e.on("connectionStatus",(e=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:e}).catch(rt))),e.on("errorString",(e=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:e}).catch(rt))),e.on("feature",(e=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}}).catch(rt))),e.on("updateRate",(e=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...e}}).catch(rt)))])}}_initAttributeStore(){this.attributeStore?this.attributeStore.invalidateResources():this.attributeStore=new de({type:"remote",initialize:(e,t)=>v(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.initialize",e,{signal:t}).catch(rt)),update:(e,t)=>v(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.requestUpdate",e,{signal:t}).catch(rt)),render:e=>v(this.remoteClient.invoke("tileRenderer.featuresView.requestRender",void 0,{signal:e}).catch(rt))},this.config)}_initStores(){const e="snapshot"===this.service.type?"snapshot":"on-demand",t={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new fe(t,this._storage,e),this.aggregateStore=new st(t,this.spatialReference,this._storage),this.handles.add(this.aggregateStore.events.on("valueRangesChanged",(e=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:e.valueRanges}}).catch(rt)})))}_initQueryEngine(){var e;const t=this;null==(e=this.queryEngine)||e.destroy(),this.queryEngine=new ne({definitionExpression:this.config.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds:e=>t.aggregateStore.getFeatureDisplayIdsForAggregate(e).map((e=>t.getObjectId(e)))},timeInfo:this.service.timeInfo})}destroy(){this._updateQueue.destroy(),this._source.destroy(),this.queryEngine.destroy(),this.attributeStore&&this.attributeStore.destroy(),clearInterval(this._checkUpdating)}get fieldsIndex(){return new D(this.service.fields)}get hasAggregates(){return!!this.config.schema.targets.aggregate}get spatialReference(){return this.tileStore.tileScheme.spatialReference}get updating(){return this.isUpdating()}isUpdating(){return this._source.updating||!!this._updateQueue.length}enableEvent(e){this._source.enableEvent(e.name,e.value)}pause(){this._updateQueue.pause(),this._updateQueue.clear()}async update(e,s){this._set("config",s),this._schema=s.schema,this._initQueryEngine(),await Promise.all([this._source.update(e,s.schema.source),this.featureStore.updateSchema(e,s.schema.targets.feature),this.attributeStore.update(e,s),this.attributeStore.updateFilters(e,this)]),await this.aggregateStore.updateSchema(e,s.schema.targets.aggregate),t("esri-2d-update-debug")&&e.describe()}async applyUpdate(e){e.mesh&&this.clearTiles(),this._updateQueue.clear(),this._updateQueue.resume(),await this._source.applyUpdate(e),this.notifyChange("updating"),await k(this,"updating",!0),this.hasAggregates&&(await b(10),await k(this,"updating",!0))}async onEdits(e){try{const t=e.deletedFeatures.map((e=>({...e,objectId:e.objectId&&-1!==e.objectId?e.objectId:this._lookupObjectIdByGlobalId(e.globalId)})));this.featureStore.invalidate(),await this._source.edit({...e,deletedFeatures:t})}catch(e){}}async refresh(){this.featureStore.invalidate(),this.clearTiles(),this._source.refresh(),this._cleanupNeeded=!0,this.notifyChange("updating"),await k(this,"updating",!0)}clearTiles(){for(const e of this.tileStore.tiles)this.processor.onTileClear(e)}onTileUpdate(e){this.aggregateStore.onTileUpdate(e);for(const t of e.added)this._source.subscribe(t),this._level=t.level;for(const t of e.removed)this._source.unsubscribe(t),this._cleanupNeeded=!0,this._tileToResolver.has(t.id)&&(this._tileToResolver.get(t.id).resolve(),this._tileToResolver.delete(t.id));this.notifyChange("updating")}onIdle(){this._invalidated&&((this.hasAggregates||"heatmap"===this.processor.type)&&this._repushTiles(),this._invalidated=!1),this._markAndSweep()}queryExtent(e){return this.queryEngine.executeQueryForExtent(e)}queryFeatures(e){return this.queryEngine.executeQuery(e)}queryFeatureCount(e){return this.queryEngine.executeQueryForCount(e)}queryLatestObservations(e){return this.queryEngine.executeQueryForLatestObservations(e)}queryObjectIds(e){return this.queryEngine.executeQueryForIds(e)}async queryStatistics(){return{...this.featureStore.storeStatistics,displayedFeatureCount:0,displayedVertexCount:0,displayPreProcessTime:0}}getObjectId(e){return this.featureStore.lookupObjectId(e,this._storage)}getDisplayId(e){if(this._schema.targets.aggregate){const t=this.aggregateStore.getDisplayId(e);if(r(t)){const t=this.featureStore.lookupDisplayId(e);return this.aggregateStore.getDisplayIdForReferenceId(t)}return t}return this.featureStore.lookupDisplayId(e)}getFeature(e){const t=this.featureStore.lookupFeatureByDisplayId(e,this._storage);if(r(t))return null;const s=t.readHydratedGeometry(),i=X(s,t.geometryType,t.hasZ,t.hasM);return{attributes:t.readAttributes(),geometry:i}}getAggregate(e){return this.aggregateStore.getAggregate(e)}async setHighlight(e){const t=e.map((e=>this.getDisplayId(e)));return this.attributeStore.setHighlight(e,t)}_lookupObjectIdByGlobalId(e){const t=this.service.globalIdField;if(r(t))throw new Error("Expected globalIdField to be defined");let s=null;if(this.featureStore.forEach((r=>{e===r.readAttribute(t)&&(s=r.getObjectId())})),r(s))throw new Error(`Expected to find a feature with globalId ${e}`);return s}_repushTiles(){for(const e of this.tileStore.tiles)this._patchTile({type:"append",id:e.key.id,addOrUpdate:ue.fromOptimizedFeatures([],this.service.geometryType),remove:[],end:!0,status:Ee.empty()})}_maybeForceCleanup(){performance.now()-this._lastCleanup>5e3&&this._markAndSweep()}_patchTile(e,t){const s=this._updateQueue.push(e,t).then((()=>{this.notifyChange("updating")})).catch((e=>{this.notifyChange("updating")}));return this.notifyChange("updating"),s}async _onTileMessage(e,t){f(t);const s=this.tileStore.get(e.id);if(!s)return;if(e.clear)return this.processor.onTileClear(s);const i=e.status;e.remove.length&&(this._cleanupNeeded=!0);const o=[];for(const t of e.remove)o.push(this.featureStore.lookupDisplayId(t));e.remove=o;try{if(r(e.addOrUpdate))return void this.processor.onTileMessage(s,{...e,addOrUpdate:null},this.hasAggregates,t).catch(_);if(e.addOrUpdate.setArcadeSpatialReference(this.spatialReference),this.featureStore.hasInstance(e.addOrUpdate.instance)&&i.targets.feature||(i.targets.feature=!0,this.featureStore.onTileData(s,e)),i.storage.data&&i.storage.filters||(i.storage.data=!0,i.storage.filters=!0,this.attributeStore.onTileData(s,e),"geoevent"===this._source.type?(await this.attributeStore.sendUpdates(),f(t)):this.attributeStore.sendUpdates()),this.hasAggregates&&!i.targets.aggregate){i.targets.aggregate=!0;const t=it(this._source)&&this._source.loading,r=!it(this._source)||t||e.end;if(this.aggregateStore.onTileData(s,e,this._storage,this.attributeStore,r),!r)return;i.mesh||(this.attributeStore.onTileData(s,e),this.attributeStore.sendUpdates(),this.processor.onTileClear(s))}i.mesh||(i.mesh=!0,await this.processor.onTileMessage(s,e,this.hasAggregates,t),f(t)),this._maybeForceCleanup()}catch(e){_(e)}}_mark(e,t,s){const r=(4294901760&this._storage.getInstanceId(e))>>>16;e&&(t.add(r),s.set(e))}_markAndSweep(){this._lastCleanup=performance.now();if(!(!("feature"===this._source.type&&"snapshot"===this._source.mode)&&("geoevent"===this._source.type||this._cleanupNeeded)))return;this._cleanupNeeded=!1;const e=this._storage.getBitset(this._markedIdsBufId),t=new Set;e.clear();for(const s of this.tileStore.tiles)this._source.forEachRequest(s.key.id,(s=>{if(r(s.addOrUpdate))return;const i=s.addOrUpdate.getCursor();for(;i.next();){let s=i.getDisplayId();if(!s){const e=i.getObjectId();s=this.featureStore.lookupDisplayId(e)}this._mark(s,t,e)}}));this._source.forEachPendingEdit((s=>{const r=this.featureStore.lookupDisplayId(s);this._mark(r,t,e)})),this._updateQueue.forEach((s=>{for(const r of s.remove){const s=this.featureStore.lookupDisplayId(r);this._mark(s,t,e)}})),this.config.schema.targets.aggregate&&(this.aggregateStore.sweepFeatures(e,this.featureStore),this.aggregateStore.sweepClusters(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(e,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(t)}};e([u({constructOnly:!0})],ot.prototype,"tileStore",void 0),e([u()],ot.prototype,"config",void 0),e([u({readOnly:!0})],ot.prototype,"fieldsIndex",null),e([u()],ot.prototype,"processor",void 0),e([u({constructOnly:!0})],ot.prototype,"remoteClient",void 0),e([u({constructOnly:!0})],ot.prototype,"service",void 0),e([u()],ot.prototype,"spatialReference",null),e([u()],ot.prototype,"updating",null),ot=e([j("esri.views.2d.layers.features.controllers.FeatureController2D")],ot);var at=ot;const nt=new Set;function ht(){return nt}let ut=class extends P{constructor(){super(...arguments),this.controller=null,this.processor=null,this.remoteClient=null,this.tileStore=null,this.service=null,this.viewState=null}initialize(){this.handles.add(this.watch("updating",(e=>{this.remoteClient.invoke("setUpdating",e).catch((e=>{}))})))}destroy(){var e,t,s;null==(e=this.controller)||e.destroy(),null==(t=this.processor)||t.destroy(),null==(s=this.tileStore)||s.destroy(),this.controller=this.processor=this.tileStore=this.remoteClient=null}get updating(){return!this.controller||this.controller.updating}async startup({service:e,config:t,tileInfo:s,tiles:r}){if(this.service=e,!this.tileStore){const e=new re(A.fromJSON(s));this.tileStore=new pe(e)}this.tileStore.clear(),await this._createProcessorAndController(t),await this.update({config:t},!0),this.tileStore.updateTiles(r)}async updateTiles(e){this.tileStore.updateTiles(e)}async update({config:e},t=!1){const s=Ee.empty();return t||this.controller.pause(),await Promise.all([this.processor.update(s,e),this.controller.update(s,e)]),s.toJSON()}async applyUpdate(e){return this.controller.applyUpdate(Ee.create(e))}async _createProcessorAndController(e){await Promise.all([this._handleControllerConfig(e),this._handleProcessorConfig(e)]),this.controller.processor=this.processor}async _handleControllerConfig(e){const t=await this._createController(this.service,e);return await t.startup(),t}async _handleProcessorConfig(e){return this._createProcessor(this.service,e)}async _createController(e,t){this.controller&&this.controller.destroy();const{tileStore:s,remoteClient:r}=this,i=new at({service:e,config:t,tileStore:s,remoteClient:r});return this.controller=i,i}async _createProcessor(e,t){const s=t.schema.processors[0].type,r=(await(i=s,"heatmap"===i?import("./HeatmapProcessor.js"):import("./SymbolProcessor.js"))).default;var i;const{remoteClient:o,tileStore:a}=this,n=new r({service:e,config:t,tileStore:a,remoteClient:o});return this.processor&&this.processor.destroy(),this.processor=n,n}};e([u()],ut.prototype,"controller",void 0),e([u()],ut.prototype,"processor",void 0),e([u()],ut.prototype,"updating",null),e([u()],ut.prototype,"viewState",void 0),ut=e([j("esri.views.2d.layers.features.Pipeline")],ut);var lt=ut;export default lt;export{ht as getInstances};
