/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{i as e,u as r}from"./Logger.js";import t from"../core/Error.js";import n from"../Color.js";import o from"../renderers/support/AuthoringInfo.js";import"../tasks/support/AlgorithmicColorRamp.js";import l from"../tasks/support/MultipartColorRamp.js";import"./unitUtils.js";import"../renderers/support/ClassBreakInfo.js";import{P as a,c as s}from"./colorRampUtils.js";import i from"../renderers/RasterColormapRenderer.js";import u from"../renderers/RasterStretchRenderer.js";import c from"../renderers/support/UniqueValueInfo.js";import m from"../renderers/UniqueValueRenderer.js";import f from"../layers/support/PixelBlock.js";import d from"../renderers/VectorFieldRenderer.js";import"../rasterRenderers.js";import{open as p}from"../core/workers/workers.js";import h from"../layers/support/Field.js";import b from"../layers/support/RasterInfo.js";import"./ClassBreaksDefinition.js";class w{constructor(){this._workerThread=null,this._destroyed=!1}async initialize(){const e=await p("RasterWorker");this._destroyed?e.close():this._workerThread=e}destroy(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)}async decode(e,r){if(!this._workerThread)throw new t("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("decode",e,r);return n?new f(n):null}async symbolize(e,r){if(!this._workerThread)throw new t("raster-jobhandler:no-connection","no available worker connection");const n={extent:e.extent&&e.extent.toJSON(),pixelBlock:e.pixelBlock.toJSON(),simpleStretchParams:e.simpleStretchParams,bandIds:e.bandIds},o=await this._workerThread.invoke("symbolize",n,r);return o?new f(o):null}async updateSymbolizer(e,r){var n;if(!this._workerThread)throw new t("raster-jobhandler:no-connection","no available worker connection");const o=null==e||null==(n=e.rendererJSON)?void 0:n.histograms;await Promise.all(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:e.toJSON(),histograms:o},r))}async stretch(e,r){if(!this._workerThread)throw new t("raster-jobhandler:no-connection","no available worker connection");if(null==e||!e.pixelBlock)return null;const n={srcPixelBlock:e.pixelBlock.toJSON(),stretchParams:e.stretchParams},o=await this._workerThread.invoke("stretch",n,r);return o?new f(o):null}async split(e,r){if(!this._workerThread)throw new t("raster-jobhandler:no-connection","no available worker connection");if(null==e||!e.pixelBlock)return null;const n={srcPixelBlock:e.pixelBlock.toJSON(),tileSize:e.tileSize,maximumPyramidLevel:e.maximumPyramidLevel},o=await this._workerThread.invoke("split",n,r);return o&&o.forEach(((e,r)=>{o.set(r,e?f.fromJSON(e):null)})),Promise.resolve(o)}async estimateStatisticsHistograms(e,r){if(!this._workerThread)throw new t("raster-jobhandler:no-connection","no available worker connection");if(null==e||!e.pixelBlock)return null;const n={srcPixelBlock:e.pixelBlock.toJSON()},o=await this._workerThread.invoke("estimateStatisticsHistograms",n,r);return Promise.resolve(o)}async mosaicAndTransform(e,r){var n;if(!this._workerThread)throw new t("raster-jobhandler:no-connection","no available worker connection");if(null==e||null==(n=e.srcPixelBlocks)||!n.length)return null;const o={...e,srcPixelBlocks:e.srcPixelBlocks.map((e=>e?e.toJSON():null))},l=await this._workerThread.invoke("mosaicAndTransform",o,r);return l?new f(l):null}}const y=l.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),v=l.fromJSON(a[0]);function k(t,l){const{attributeTable:a,colormap:f,dataType:p}=t;if("vector-uv"===p||"vector-magdir"===p){const r=function(e){if(!B(e))return null;return new d}(t);if(e(r))return r}if(e(f)){const n=function(t){if(!_(t))return null;let n;const{attributeTable:o,colormap:l}=t;if(e(o)){const e=j(o,"value"),r=S(o);"string"===r.type&&(n={},o.features.forEach((t=>{const o=t.attributes;n[o[e.name]]=r?o[r.name]:o[e.name]})))}return i.createFromColormap(r(l),n)}(t);if(e(n))return n}if(e(a)){const r=function(r,t,l,a){if(!C(r,t))return null;const{attributeTable:i,statistics:u}=r,f=S(i,t),d=j(i,"red"),p=j(i,"green"),h=j(i,"blue"),b=new o,w=[],y=new Set,k=!!(d&&p&&h);if(e(i))i.features.forEach((e=>{const r=e.attributes[f.name];y.has(e.attributes[f.name])||null==r||(y.add(r),w.push(new c({value:e.attributes[f.name],label:e.attributes[f.name]+"",symbol:{type:"simple-fill",style:"solid",outline:null,color:new n(k?[e.attributes[d.name],e.attributes[p.name],e.attributes[h.name],1]:[0,0,0,0])}})))}));else if(null!=u&&u[0])for(let e=u[0].min;e<=u[0].max;e++)w.push(new c({value:e,label:e.toString(),symbol:{type:"simple-fill",style:"solid",outline:null,color:new n([0,0,0,0])}}));if(w.sort(((e,r)=>e.value&&"string"==typeof e.value.valueOf()?0:e.value>r.value?1:-1)),!k){const e=s(v,w.length);w.forEach(((r,t)=>r.symbol.color=new n(e[t].slice(1,4)))),b.colorRamp=v}if(l||a){const e=l||s(a,w.length).map((e=>e.slice(1)));w.forEach(((r,t)=>r.symbol.color=new n(e[t]))),b.colorRamp=a}return new m({field:f.name,uniqueValueInfos:w,authoringInfo:b})}(t);if(e(r))return r}return function(t,n){var o,l,a,s;t=function(t,n){if(null==n)return t;let o=r(t.statistics),l=r(t.histograms);const{multidimensionalInfo:a}=t;if(n&&e(a)){const{statistics:e,histograms:r}=a.variables.find((e=>e.name===n));null!=e&&e.length&&(o=e),null!=r&&r.length&&(l=r)}return b.fromJSON({...t.toJSON(),statistics:o,histograms:l})}(t,null==n?void 0:n.variableName);const{bandCount:i}=t;let{bandIds:c,stretchType:m}=n||{};null!=(o=c)&&o.some((e=>e>=i))&&(c=null);let f=r(t.statistics),d=r(t.histograms);if(i>1){var p;c=null!=(p=c)&&p.length?c:T(t),f=null==f?null:c.map((e=>f[e])),d=null==d?null:c.map((e=>d[e]))}else c=[0];null==m&&(m=function(r){let t="percent-clip";const{pixelType:n,dataType:o,histograms:l,statistics:a}=r;"u8"!==n||"processed"!==o&&e(l)&&e(a)?"u8"===n||"elevation"===o||"scientific"===o?t="min-max":e(l)?t="percent-clip":e(a)&&(t="min-max",t="min-max"):t="none";return t}(t));let h=!1;switch(m){case"none":h=!1;break;case"percent-clip":h=!(null!=(l=d)&&l.length);break;default:h=!(null!=(a=f)&&a.length)}const w=1===(null==(s=c)?void 0:s.length)&&"scientific"===t.dataType?y:null,v=new u({stretchType:m,dynamicRangeAdjustment:h,colorRamp:w,outputMin:0,outputMax:255,gamma:1===c.length?[1]:[1,1,1],useGamma:!1});"percent-clip"===m?v.maxPercent=v.minPercent=.25:"standard-deviation"===m&&(v.numberOfStandardDeviations=2);h||("percent-clip"===m?v.histograms=d:"min-max"!==m&&"standard-deviation"!==m||(v.statistics=f));return v}(t,l)}function g(r){const t=["raster-stretch"];return _(r)&&t.push("raster-colormap"),C(r)&&t.push("unique-value"),function(r){const{attributeTable:t,bandCount:n}=r;return 1===n&&(e(t)||e(r.histograms))}(r)&&t.push("class-breaks"),function(e){return"elevation"===e.dataType}(r)&&t.push("raster-shaded-relief"),B(r)&&t.push("vector-field"),t}function x(e,r,t){const n=["nearest","bilinear","cubic","majority"].find((e=>e===(null==t?void 0:t.toLowerCase())));if("Map"===r)return null!=n?n:"bilinear";return"thematic"===e.dataType||e.attributeTable||e.colormap?"nearest"===n||"majority"===n?n:"nearest":null!=n?n:"bilinear"}function T(e){const r=e.bandCount;if(1===r)return null;if(2===r)return[0];const t=e.keyProperties&&e.keyProperties.BandProperties;let n;if(t&&t.length===r){const{red:e,green:r,blue:o,nir:l}=function(e){const r={};for(let n=0;n<e.length;n++){var t;const o=e[n],l=null==(t=o.BandName)?void 0:t.toLowerCase();if("red"===l)r.red=n;else if("green"===l)r.green=n;else if("blue"===l)r.blue=n;else if("nearinfrared"===l||"nearinfrared_1"===l||"nir"===l)r.nir=n;else if(o.WavelengthMax&&o.WavelengthMin){const e=o.WavelengthMin,t=o.WavelengthMax;null==r.blue&&e>=410&&e<=480&&t>=480&&t<=540?r.blue=n:null==r.green&&e>=490&&e<=560&&t>=560&&t<=610?r.green=n:null==r.red&&e>=595&&e<=670&&t>=660&&t<=730?r.red=n:null==r.nir&&e>=700&&e<=860&&t>=800&&t<=950&&(r.nir=n)}}return r}(t);null!=e&&null!=r&&null!=o?n=[e,r,o]:null!=l&&null!=e&&null!=r&&(n=[l,e,r])}return!n&&r>=3&&(n=[0,1,2]),n}function S(r,t){let n;return e(r)?(n=t?r.fields.find((e=>t.toLowerCase()===e.name.toLowerCase())):r.fields.find((e=>"string"===e.type&&e.name.toLowerCase().indexOf("class")>-1)),n||(n=r.fields.find((e=>"string"===e.type)),n||(n=j(r,"value")))):n=new h({name:"value"}),n}function j(r,t){return e(r)?r.fields.find((e=>e.name.toLowerCase()===t)):null}function C(r,t){const{attributeTable:n,bandCount:o}=r;if(!e(n)&&function(e){var r,t,n;return["u8","s8"].indexOf(e.pixelType)>-1&&null!=(null==(r=e.statistics)||null==(t=r[0])?void 0:t.min)&&null!=(null==(n=e.statistics[0])?void 0:n.max)&&1===e.bandCount}(r))return!0;if(!e(n)||o>1)return!1;if(t){if(null==n.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1}return!0}function _(r){const{bandCount:t,colormap:n}=r;return e(n)&&n.length&&1===t}function B(e){const{dataType:r}=e;return"vector-uv"===r||"vector-magdir"===r}function P(e){var r;return{color:null==(r=e.symbolLayers[0].material)?void 0:r.color,type:"esriSFS",style:"esriSFSSolid"}}function O(e){if("uniqueValue"===e.type){var r;const t=e.uniqueValueInfos,n=t[0].symbol;return null!=n&&null!=(r=n.symbolLayers)&&r.length&&(e.uniqueValueInfos=t.map((e=>({value:e.value,label:e.label,symbol:e.symbol?P(e.symbol):null})))),e}if("classBreaks"===e.type){var t;const r=e.classBreakInfos,n=r[0].symbol;return null!=n&&null!=(t=n.symbolLayers)&&t.length&&(e.classBreakInfos=r.map((e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?P(e.symbol):null})))),e}return e}export{w as R,T as a,x as b,k as c,g,O as n};
