/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{clone as t}from"../core/lang.js";import{b as i,h as s,u as r,i as n,c as a}from"./Logger.js";import{j as o}from"./metadata.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import{createTask as h}from"../core/promiseUtils.js";import"./ensureType.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";import{E as p}from"./Evented.js";import"../core/urlUtils.js";import"./resourceExtension.js";import d from"../geometry/Point.js";import{c as u,n as m}from"./mathUtils2.js";import{c as _,f as g}from"./vec3f64.js";import{g as f,s as y,u as v,o as x,n as w,e as S,a as b,f as T}from"./vec3.js";import E from"../Color.js";import"../geometry.js";import{b as V,c as P}from"./screenUtils.js";import M from"../core/Handles.js";import{init as R}from"../core/watchUtils.js";import{projectVectorToVector as O}from"../geometry/projection.js";import{T as I,I as C}from"./Scheduler.js";import{f as j}from"./vec4f64.js";import{I as D}from"./quatf64.js";import{g as G,a as A,b as H,s as z,f as k}from"./vec2.js";import{e as F,c as U}from"./vec4.js";import{k as Z}from"./aaBoundingBox.js";import{f as L,a as W}from"./vec4f32.js";import{p as B}from"./dehydratedFeatureComparison.js";import{m as N}from"./dehydratedFeatures.js";import{a as Q}from"./stack.js";import{L as q,u as X,r as J,M as K,w as Y,N as $,O as ee}from"./geometryUtils.js";import{G as te,W as ie}from"./ColorMaterial.js";import{O as se}from"./Object3D.js";import{H as re,j as ne,E as ae}from"./sdfPrimitives.js";import{R as oe,e as le}from"./RibbonLineMaterial.js";import{T as he}from"./Texture.js";import{d as ce}from"./Settings.js";import{S as pe,a as de,b as ue,c as me,E as _e}from"../views/draw/DrawAction.js";import{a as ge,b as fe}from"./elevationInfoUtils.js";import{c as ye,E as ve,C as xe}from"./AppendVertex.js";import{E as we,c as Se,I as be}from"./InteractiveToolBase.js";import{L as Te}from"./LaserlineVisualElement.js";import{O as Ee}from"./Object3DVisualElement.js";import{R as Ve}from"./RightAngleQuadVisualElement.js";class Pe{constructor(){this.next=new we}createSnapDragEventPipelineStep({predicate:e=(()=>!0),cancel:t,snappingManager:a,snappingContext:o}){if(i(a))return e=>e;let l=null,c=null;const p=()=>{l=s(l),a.doneSnapping(),n(c)&&c.frameTask.remove(),c=null};return t.next((e=>(p(),e))),this.next=new we,t=>{if(!e(t))return t;if(l=s(l),"start"===t.action){const e="3d"===a.view.type?a.view.resourceController.scheduler.registerTask(I.SNAPPING,(t=>r(e).processQueue(t)),(()=>!1)):C;c={context:new pe({geometry:o.geometry,elevationInfo:o.elevationInfo,pointer:o.pointer,vertexHandle:n(t.info)?t.info.handle:null,excludeFeature:o.excludeFeature,visualizer:o.visualizer}),originalPos:n(t.snapOrigin)?o.coordinateHelper.createDehydratedPoint(t.snapOrigin):t.mapStart,frameTask:e}}if(n(c)){const e=c.context.coordinateHelper.createDehydratedPoint(c.context.coordinateHelper.fromArray([c.originalPos.x,c.originalPos.y,c.originalPos.z]));e.x+=t.mapEnd.x-t.mapStart.x,e.y+=t.mapEnd.y-t.mapStart.y;const i=t.mapStart.x-c.originalPos.x,s=t.mapStart.y-c.originalPos.y,r={...t,action:"udpate"},n=c.context,o=a.update(e,c.context);if(t.mapEnd.x=o.x+i,t.mapEnd.y=o.y+s,"end"!==t.action){const t=c.frameTask;l=h((async l=>{const h=await t.schedule((()=>a.snap(e,n,l)),l);if(h.valid){const e=await t.schedule((()=>h.apply()),l);B(e,o)||(r.mapEnd.x=e.x+i,r.mapEnd.y=e.y+s,this.next.execute(r))}}))}}return"end"===t.action&&p(),t}}}class Me extends Ee{constructor(e){super(e),this._ray=J.create(),this._externalResources=null,this._handles=new M,this._isWorldDown=!1,this._start=_(),this._end=g(1,0,0),this._width=1,this._color=L(1,0,1,1),this._polygonOffset=!1,this._writeDepthEnabled=!0,this._innerWidth=0,this._innerColor=L(1,1,1,1),this._stippleIntegerRepeats=!0,this._stipplePattern=null,this._stippleOffColor=null,this._falloff=0,this._extensionType=0,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=4,this._fadedExtensions=je,this.applyProps(e)}createExternalResources(){const e=new oe(this.materialParameters);this._handles.add(this.view.state.watch("camera",(()=>{this.updateGeometry()})));const t=new Te({view:this.view,attached:this._laserlineEnabled});this._externalResources={material:e,laserline:t}}destroyExternalResources(){n(this._externalResources)&&this._externalResources.laserline.destroy(),this._externalResources=null,this._handles.removeAll()}forEachExternalMaterial(e){n(this._externalResources)&&e(this._externalResources.material)}createGeometries(e){const t=[_(),_()],i=3===this.extensionType;i&&t.push(_(),_());const s=i?new Float32Array([1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0]):null,n=te.createPolylineGeometry(t,null,s);e.addGeometry(n,r(this._externalResources).material),this.updateVertices(n)}updateVisibility(e){super.updateVisibility(e),n(this._externalResources)&&(this._externalResources.laserline.visible=e)}setStartEndFromWorldDownAtLocation(e){this._isWorldDown=!0,f(this._start,e),this.view.renderCoordsHelper.worldUpAtPosition(e,this._end),y(this._end,e,this._end),J.fromPoints(this._start,this._end,this._ray),this.updateGeometry()}get start(){return this._start}set start(e){this._isWorldDown=!1,v(this._start,e)||(f(this._start,e),J.fromPoints(this._start,this._end,this._ray),this.updateGeometry())}get end(){return this._end}set end(e){this._isWorldDown=!1,v(this._end,e)||(f(this._end,e),J.fromPoints(this._start,this._end,this._ray),this.updateGeometry())}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this.updateMaterial())}get color(){return this._color}set color(e){F(e,this._color)||(U(this._color,e),this.updateMaterial())}get polygonOffset(){return this._polygonOffset}set polygonOffset(e){e!==this._polygonOffset&&(this._polygonOffset=e,this.updateMaterial())}get writeDepthEnabled(){return this._writeDepthEnabled}set writeDepthEnabled(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this.updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this.updateMaterial())}get innerColor(){return this._innerColor}set innerColor(e){F(e,this._innerColor)||(U(this._innerColor,e),this.updateMaterial())}get stippleIntegerRepeats(){return this._stippleIntegerRepeats}set stippleIntegerRepeats(e){e!==this._stippleIntegerRepeats&&(this._stippleIntegerRepeats=e,this.updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(e){const t=n(e)!==n(this._stipplePattern);this._stipplePattern=e,t?this.recreate():this.updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){(i(e)||i(this._stippleOffColor)||!F(e,this._stippleOffColor))&&(this._stippleOffColor=n(e)?W(e):null,this.updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this.updateMaterial())}get extensionType(){return this._extensionType}set extensionType(e){e!==this._extensionType&&(this._extensionType=e,this.updateGeometry())}get _laserlineAttached(){return this._laserlineEnabled&&n(this._laserlineStyle)}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(e){this._laserlineStyle=e,n(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached,n(e)&&(this._externalResources.laserline.style=e))}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,n(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached))}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get fadedExtensions(){return this._fadedExtensions}set fadedExtensions(e){this._fadedExtensions=a(e,je),this.recreateGeometry()}updateMaterial(){if(i(this._externalResources))return;this._externalResources.material.setParameterValues(this.materialParameters)}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stippleIntegerRepeats:this._stippleIntegerRepeats,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,polygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}}updateGeometry(){n(this.object)&&this.updateVertices(this.object.geometries[0])}updateVertices(e){const t=3===this._extensionType?this.updateLineSegmentFinite(Ce):this.updateLineSegmentInfinite(this._extensionType,Ce);this.updateVertexAttributes(e,t),n(this._externalResources)&&(this._externalResources.laserline.intersectsLine=t)}updateLineSegmentFinite(e){return X.fromPoints(this._start,this._end,e)}updateLineSegmentInfinite(e,t){const i=this.view.state.camera;switch(K(this._ray,Re),e){case 0:Re.c0=-Number.MAX_VALUE;break;case 1:case 2:{const e=this._ray.origin,t=a(this.view.elevationProvider.getElevation(e[0],e[1],e[2],this.view.renderCoordsHelper.spatialReference,"ground"),0),i=this.view.renderCoordsHelper.getAltitude(e);this._isWorldDown&&i<t&&x(Re.ray.direction,Re.ray.direction),2===this._extensionType&&null!=t&&(Re.c1=Math.abs(i-t));break}}if(!Y.intersectClipRay(i.frustum,Re))return X.fromPoints(this._start,this._end,t);const s=$(Re,Oe),r=ee(Re,Ie);return X.fromPoints(s,r,t)}updateVertexAttributes(e,t){const i=e.getMutableAttribute("position").data;if(3===this.extensionType){const e=X.pointAt(t,-this.fadedExtensions.start,Oe);i[0]=e[0],i[1]=e[1],i[2]=e[2];const s=X.pointAt(t,0,Oe);i[3]=s[0],i[4]=s[1],i[5]=s[2];const r=X.pointAt(t,1,Oe);i[6]=r[0],i[7]=r[1],i[8]=r[2];const n=X.pointAt(t,1+this.fadedExtensions.end,Oe);i[9]=n[0],i[10]=n[1],i[11]=n[2]}else{const e=X.pointAt(t,0,Oe);i[0]=e[0],i[1]=e[1],i[2]=e[2];const s=X.pointAt(t,1,Oe);i[3]=s[0],i[4]=s[1],i[5]=s[2]}n(this.object)&&this.object.geometryVertexAttrsUpdated(0)}}const Re=q(),Oe=_(),Ie=_(),Ce=X.create(),je={start:.3333333333333333,end:.3333333333333333};class De extends Ee{constructor(e){super(e),this._handles=new M,this._location=_(),this._direction=g(1,0,0),this._width=1,this._offset=1,this._length=18,this._color=L(1,0,1,1),this._renderOccluded=4,this.applyProps(e)}get location(){return this._location}set location(e){v(this._location,e)||(f(this._location,e),this.updateGeometry())}get direction(){return this._direction}set direction(e){v(this._direction,e)||(f(this._direction,e),this.updateGeometry())}setDirectionFromPoints(e,t){w(this._direction,y(this._direction,t,e)),this.updateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this.updateMaterial())}get offset(){return this._offset}set offset(e){e!==this._offset&&(this._offset=e,this.updateGeometry())}get length(){return this._length}set length(e){e!==this._length&&(this._length=e,this.updateGeometry())}get color(){return this._color}set color(e){F(e,this._color)||(U(this._color,e),this.updateMaterial())}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}createExternalResources(){const e=new oe(this.materialParameters);this._handles.add(this.view.state.watch("camera",(()=>{this.updateGeometry()}))),this._externalResources={material:e}}destroyExternalResources(){this._handles.removeAll(),this._externalResources=null}createGeometries(e){const t=te.createPolylineGeometry([_(),_()]),i=te.createPolylineGeometry([_(),_()]),s=r(this._externalResources).material;e.addGeometry(t,s,D),e.addGeometry(i,s,D),this.updateVertices(e)}forEachExternalMaterial(e){n(this._externalResources)&&e(this._externalResources.material)}updateMaterial(){if(i(this._externalResources))return;this._externalResources.material.setParameterValues(this.materialParameters)}get materialParameters(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded}}updateGeometry(){const e=this.object;i(e)||this.updateVertices(e)}updateVertices(e){const t=this.view.state.camera;t.projectToScreen(this.location,Ae),S(Ge,this.location,this.direction),t.projectToScreen(Ge,He),G(He,A(He,He,Ae)),this.updateVertexAttributes(t,e,0,Ae,He,1),this.updateVertexAttributes(t,e,1,Ae,He,-1)}updateVertexAttributes(e,t,i,s,r,n){const a=t.geometryRecords[i].geometry.getMutableAttribute("position").data,o=H(ze,z(ze,r[1]*n,r[0]*-n),this.offset+this.width/2),l=k(ke,k(ke,k(ke,s,H(ke,r,this.length/2)),o),o),h=k(Fe,l,H(Fe,r,-this.length));e.unprojectFromScreen(l,Ge),a[0]=Ge[0],a[1]=Ge[1],a[2]=Ge[2],e.unprojectFromScreen(h,Ge),a[3]=Ge[0],a[4]=Ge[1],a[5]=Ge[2],t.geometryVertexAttrsUpdated(i)}}const Ge=_(),Ae=V(),He=V(),ze=V(),ke=V(),Fe=V();class Ue{constructor(e){this.resourceFactory=e,this._resources=null,this._visible=!0,this._attached=!1}destroy(){this._destroyResources()}get object(){return n(this._resources)?this._resources.object:null}get resources(){return n(this._resources)?this._resources.external:null}get visible(){return this._visible}set visible(e){e!==this._visible&&(this._visible=e,this._syncVisible())}get attached(){return this._attached}set attached(e){e!==this._attached&&(this._attached=e,this._createOrDestroyResources())}recreate(){this.attached&&this._createResources()}recreateGeometry(){if(!this.resourceFactory.recreateGeometry)return void this.recreate();const e=this.resourceFactory.view._stage;if(i(this._resources)||!e)return;const t=this._resources.object;this._resources.external.forEach((t=>{2===t.type&&e.remove(t)})),t.removeAllGeometries();const s=this.resourceFactory.recreateGeometry(this._resources.external,t,this._resources.layer);e.addMany(s),this._resources.layer.commit()}_createOrDestroyResources(){this._attached?this._resources||this._createResources():this._destroyResources()}_createResources(){this._destroyResources();const e=this.resourceFactory.view._stage;if(!e)return;const t=new ie({isPickable:!1});e.add(t);const i=new se({castShadow:!1}),s=this.resourceFactory.createResources(i,t);s.forEach((t=>e.add(t))),e.add(i),t.add(i),t.commit(),this._syncVisible();const r=this.resourceFactory.cameraChanged?R(this.resourceFactory.view.state,"camera",(e=>this.resourceFactory.cameraChanged(e))):null;this._resources={layer:t,object:i,external:s,cameraHandle:r}}_destroyResources(){if(i(this._resources))return;const e=this.resourceFactory.view._stage;null==e||e.remove(this._resources.object),null==e||e.remove(this._resources.layer),this._resources.external.forEach((t=>{null==e||e.remove(t),"dispose"in t&&t.dispose()})),this._resources.object.dispose(),this._resources.cameraHandle&&this._resources.cameraHandle.remove(),this._resources=null}_syncVisible(){i(this._resources)||(this._resources.object.setVisible(this._visible),this._resources.layer.commit())}}class Ze{constructor(e){this.view=null,this._geometry=null,this._size=3,this._color=j(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=j(1,1,1,1),this._elevationInfo=null,this.resources=new Ue({view:e.view,createResources:e=>this.createResources(e),recreateGeometry:(e,t)=>(e.geometry=this.recreateGeometry(t,e.material),n(e.geometry)?[e.geometry]:[])});let t=!0;for(const i in e)i in this?"attached"===i?t=e[i]:this[i]=e[i]:console.error("Cannot set unknown property",i);this.attached=t}destroy(){this.resources.destroy()}get visible(){return this.resources.visible}set visible(e){this.resources.visible=e}get attached(){return this.resources.attached}set attached(e){this.resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.resources.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this.preferredTextureSize;this._size=e,t<this.preferredTextureSize?n(this.resources)&&this.resources.recreate():this.updateSizeAttribute()}}get color(){return this._color}set color(e){F(e,this._color)||(U(this._color,e),this.updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this.updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,n(this.resources)&&this.resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this.updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){F(e,this._outlineColor)||(U(this._outlineColor,e),this.updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.resources&&this.resources.recreateGeometry()}updateMaterial(){const e=this.resources.resources;i(e)||e.material.setParameterValues(this.materialParameters(e.texture.id))}updateSizeAttribute(){const e=this.resources.resources,t=this.resources.object;if(i(e)||i(t))return;const s=e.geometry;if(i(s))return;const r=s.getMutableAttribute("size").data,n=this.geometrySize;r[0]=n,r[1]=n,t.geometryVertexAttrsUpdated(0)}materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:We,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get geometrySize(){return this._size/Le}recreateGeometry(e,t){const i=this.createRenderGeometry();return n(i)&&e.addGeometry(i,t),i}createResources(e){const t=this.createTexture(),i=new re(this.materialParameters(t.id)),s=this.recreateGeometry(e,i);return{material:i,texture:t,geometry:s,forEach(e){e(t),e(i),n(this.geometry)&&e(this.geometry)}}}get preferredTextureSize(){return u(m(2*this.geometrySize),16,128)}createTexture(){const e=this.preferredTextureSize;return new he(ne(this._primitive,e,e*Le),{mipmap:!1,wrap:{s:33071,t:33071},width:e,height:e,components:4,noUnpackFlip:!0})}calculateMapBounds(e){if(i(this.resources.resources)||i(this.resources.resources.geometry))return!1;const t=this.resources.resources.geometry.vertexAttributes.get("position");return O(t.data,this.view.renderCoordsHelper.spatialReference,Be,this.view.spatialReference),Z(e,Be),!0}createRenderGeometry(){const e=this.geometry;if(i(e))return null;const{renderCoordsHelper:t,elevationProvider:s}=this.view,r=le(e,s,ae.fromElevationInfo(this.elevationInfo),t),n=b(Q.get(),e.x,e.y,r),a=Q.get();O(n,e.spatialReference,a,t.spatialReference);const o=this.geometrySize;return te.createPointGeometry(null,a,null,[o,o],[0,0,0,1])}}const Le=.5,We=[Le/2,Le/2,1-Le/2,1-Le/2],Be=_();class Ne extends de{visualizeIntersectionPoint(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t;return o(new Ze({view:r,primitive:"circle",geometry:i.createPoint(e.intersectionPoint),elevationInfo:s,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:E.toUnitRGBA(ce.orange),pixelSnappingEnabled:!1}))}visualizePoint(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t;return o(new Ze({view:r,primitive:"circle",geometry:i.createPoint(e.point),elevationInfo:s,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:E.toUnitRGBA(ce.orange),pixelSnappingEnabled:!1}))}visualizeLine(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t;return o(this.createLineSegmentHintFromMap(e.type,e.lineStart,e.lineEnd,i,s,r,e.fadeLeft,e.fadeRight))}visualizeParallelSign(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t,n=ue(e.lineStart,i,s,t.view),a=ue(e.lineEnd,i,s,t.view),l=T(a,n,a,.5),h=new De({view:r,attached:!1,offset:ce.parallelLineHintOffset,length:ce.parallelLineHintLength,width:ce.parallelLineHintWidth,color:E.toUnitRGBA(ce.orange),location:l,renderOccluded:16});return h.setDirectionFromPoints(n,l),h.attached=!0,o(h)}visualizeRightAngleQuad(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t;return o(new Ve({view:r,attached:!0,color:E.toUnitRGBA(ce.orange),renderOccluded:2,outlineRenderOccluded:16,outlineColor:E.toUnitRGBA(ce.orange),outlineSize:ce.rightAngleHintOutlineSize,size:ce.rightAngleHintSize,geometry:{previous:ue(e.previousVertex,i,s,r),center:ue(e.centerVertex,i,s,r),next:ue(e.nextVertex,i,s,r)}}))}createLineSegmentHintFromMap(e,t,i,s,r,n,a=!0,o=!0){const l=_(),h=_();return me(t,i,s,r,n,l,h),this.createLineSegmentHint(e,n,l,h,a,o)}createLineSegmentHint(e,t,i,s,r=!0,n=!0){const a=new Me({view:t,extensionType:3,start:i,end:s,color:E.toUnitRGBA(ce.orange),renderOccluded:16});switch(e){case 0:a.width=ce.lineHintWidthTarget,a.fadedExtensions={start:0,end:ce.lineHintFadedExtensions};break;case 2:a.width=ce.lineHintWidthReference,a.fadedExtensions={start:0,end:0};break;case 1:a.width=ce.lineHintWidthReference,a.fadedExtensions={start:r?ce.lineHintFadedExtensions:0,end:n?ce.lineHintFadedExtensions:0}}return a.attached=!0,a}}class Qe{constructor({grabbableForEvent:e}){this.events=new p,this.interactive=!0,this.selectable=!1,this.cursor=null,this.grabbable=!0,this.grabbableForEvent=e}intersectionDistance(e,t){return 0}attach(){}detach(){}}const qe=["freehand","hybrid","click"],Xe="click";let Je=class extends p{constructor(e){var t,i;super(),this._manipulator=null,this._stagedVertex=null,this.geometryType=null,this.elevationInfo=null,this.snapToSceneEnabled=null,this._handles=new M,this._defaultZ=0,this._elevationDrawSurface=null,this._snappingDrawSurface=null,this._snappingManager=null,this._snappingPipeline=new Pe,this._createOperationCompleted=!1,this._pointerDownStates=new Set,this._snappingTask=null,this.view=e.view,this.drawingMode=a(e.drawingMode,"click"),this.geometryType=e.geometryType,this.elevationInfo=e.elevationInfo,this.coordinateHelper=ye(e.hasZ,e.hasM,this.view.spatialReference,this.view.viewingMode),this._defaultZ=e.defaultZ,this.snapToSceneEnabled=e.snapToSceneEnabled,this._snappingDrawSurface=r(e.snappingDrawSurface),this._snappingManager=e.snappingManager;const o=null==(t=e.view)||null==(i=t.resourceController)?void 0:i.scheduler;this._frameTask=o?o.registerTask(I.SNAPPING,(e=>this._frameTask.processQueue(e)),(()=>!1)):C,this._elevationDrawSurface=e.elevationDrawSurface,this._editGeometry=new _e(new ve(this.coordinateHelper),"segment"===this.geometryType?"polyline":this.geometryType),this._activeComponent=new xe(this._editGeometry.editGeometry),this._editGeometry.editGeometry.components.push(this._activeComponent),this._editGeometry.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:this.coordinateHelper.toArray(e.pos)}))),i=t.map((e=>e.coordinates));switch(e.type){case"vertex-add":this.emit(e.type,{...e,added:i,vertices:t});break;case"vertex-update":this.emit(e.type,{...e,updated:i,vertices:t});break;case"vertex-remove":this.emit(e.type,{...e,removed:i,vertices:t})}})),this._manipulator=new Qe({grabbableForEvent:e=>"click"!==this.drawingMode||"touch"===e.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size}),e.manipulators.add(this._manipulator),this._manipulator.grabbable="point"!==this.geometryType;const l=this.createManipulatorDragPipeline(this._manipulator),h=this._manipulator.events.on("immediate-double-click",(e=>{this._manipulator.dragging||"point"===this.geometryType||(this.complete(),e.stopPropagation())})),c=this._manipulator.events.on("immediate-click",(e=>{if(this._manipulator.dragging)return;const t=this._activeComponent,i=this._closeOnClickVertexIndex(e.screenPoint);if(n(i))this.discardStagedVertex(),this.complete();else{const i=this._screenToMap(e.screenPoint);if(n(i))switch(this.drawingMode){case"freehand":break;case"click":case"hybrid":this._snappingTask=s(this._snappingTask),this.hasStagedVertex?this.commitStagedVertex():this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(i)),("point"===this.geometryType||"segment"===this.geometryType&&2===t.vertices.length||"segment"===this.geometryType&&"hybrid"===this.drawingMode&&1===t.vertices.length)&&this.complete()}}e.stopPropagation()}));this._handles.add([l,c,h])}get isCompleted(){return this._createOperationCompleted}get _snappingEnabled(){return n(this._snappingManager)&&this._snappingManager.options.effectiveEnabled}createManipulatorDragPipeline(e){switch(this.drawingMode){case"click":return this.createManipulatorDragPipelineClick(e);case"freehand":return this.createManipulatorDragPipelineFreehand(e);case"hybrid":return this.createManipulatorDragPipelineHybrid(e)}}createManipulatorDragPipelineClick(e){return Se(e,((e,t,i,s)=>{const r="touch"===s&&this._snappingEnabled;!this.isCompleted&&r&&(t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,("segment"===this.geometryType||r&&0===this.vertices.length)&&this.commitStagedVertex()),e))).next(this._snappingPipeline.createSnapDragEventPipelineStep({predicate:()=>r,cancel:i,snappingManager:this._snappingManager,snappingContext:new pe({geometry:this._editGeometry,elevationInfo:this.elevationInfo,pointer:s,visualizer:new Ne})}),this._snappingPipeline.next).next((e=>(r&&(this.stagedVertex=e.mapEnd,"end"===e.action&&this.commitStagedVertex()),e))).next((e=>("end"===e.action&&("segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),e))),i.next((()=>{r&&n(this._snappingManager)&&this._snappingManager.doneSnapping()})))}))}createManipulatorDragPipelineFreehand(e){return Se(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))}createManipulatorDragPipelineHybrid(e){return Se(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))}destroy(){this._handles.destroy(),this._handles=null,this._editGeometry.destroy(),this._frameTask.remove()}onInputEvent(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}}get canRedo(){return this._editGeometry.canRedo}redo(){this._editGeometry.redo()}get canUndo(){return this._editGeometry.canUndo}undo(){n(this._snappingManager)&&this._snappingManager.doneSnapping(),this._editGeometry.undo()}complete(e=!1){s(this._snappingTask),this.commitStagedVertex(),this._createOperationCompleted=!0,n(this._snappingManager)&&this._snappingManager.doneSnapping(),this.emit("complete",{vertices:this.vertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:e,type:"complete"})}cancel(){this.complete(!0)}get interactive(){return this._manipulator.interactive}set interactive(e){this._manipulator.interactive=e}get numVertices(){return n(this._stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}get numCommittedVertices(){return this._activeComponent.vertices.length}get vertices(){const e=this._activeComponent.vertices.map((e=>this.coordinateHelper.toArray(e.pos)));return n(this._stagedVertex)&&e.push(this.coordinateHelper.pointToArray(this._stagedVertex)),e}get spatialReference(){return this.view.spatialReference}get hasStagedVertex(){return n(this._stagedVertex)}get stagedVertex(){return this._stagedVertex}set stagedVertex(e){if(i(e))return void this.discardStagedVertex();if(n(this._stagedVertex)&&B(this._stagedVertex,e))return;i(this._stagedVertex)?this._stagedVertex=t(e):(this._stagedVertex.x=e.x,this._stagedVertex.y=e.y,this._stagedVertex.z=e.z,this._stagedVertex.m=e.m,this._stagedVertex.hasZ=e.hasZ,this._stagedVertex.hasM=e.hasM,this._stagedVertex.spatialReference=e.spatialReference);const s={componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)};this.emit("cursor-update",{updated:null,vertices:[s],operation:"apply",type:"vertex-update"})}commitStagedVertex(){if(this._snappingTask=s(this._snappingTask),n(this._stagedVertex)){const e=this._stagedVertex;this._stagedVertex=null,this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(e))}}discardStagedVertex(){this._stagedVertex=null}_onPointerMove(e){if(s(this._snappingTask),this._manipulator.dragging||this._pointerDownStates.has(e.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return;const t=P(e.x,e.y),i=this._closeOnClickVertexIndex(t);if(n(i)){this.discardStagedVertex();const e={componentIndex:0,vertexIndex:i,coordinates:this.coordinateHelper.toArray(this._activeComponent.vertices[i].pos)};this.emit("cursor-update",{updated:null,vertices:[e],operation:"apply",type:"vertex-update"})}else{const i=this._screenToMap(t);if(this._manipulator.cursor=n(i)?"crosshair":null,n(i))if(n(this._snappingManager)){const t=this._snappingManager,s=new pe({geometry:this._editGeometry,elevationInfo:this.elevationInfo,pointer:e.pointerType,visualizer:new Ne});this.stagedVertex=t.update(i,s),this._snappingTask=h((async e=>{const r=await this._frameTask.schedule((()=>t.snap(i,s,e)),e);r.valid&&await this._frameTask.schedule((()=>{this.stagedVertex=r.apply()}),e)}))}else this.stagedVertex=i}e.stopPropagation()}_onHold(e){s(this._snappingTask),"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()}_screenToMapDragEventStep(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),i(e))return null;const s=this._screenToMap(t.screenEnd);return n(s)?{...t,mapStart:e,mapEnd:s}:null}}_screenToMap(e){return this._getDrawSurface().screenToMap(e)}_mapToScreen(e){return this._getDrawSurface().mapToScreen(e)}_getDrawSurface(){let e=null;if(this.coordinateHelper.hasZ){let t=this._defaultZ,i=!1;n(this.elevationInfo)&&"absolute-height"===this.elevationInfo.mode&&(i=!0),n(this.snapToSceneEnabled)&&(i=this.snapToSceneEnabled),n(this.elevationInfo)&&"on-the-ground"===this.elevationInfo.mode&&(i=!1);const s=this._activeComponent.vertices.length;("segment"===this.geometryType||"polygon"===this.geometryType)&&s>0&&(t=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),i=!1),i?e=this._snappingDrawSurface:(this._elevationDrawSurface.defaultZ=t,e=this._elevationDrawSurface)}else this._elevationDrawSurface.defaultZ=null,e=this._elevationDrawSurface;return e}_vertexWithinPointerDistance(e,t){const i=this._mapToScreen(e);return!!n(i)&&function(e,t,i){const s=e.x-t.x,r=e.y-t.y;return s*s+r*r<=i}(i,t,25)}_closeOnClickVertexIndex(e){const t=this._activeComponent;if("polygon"===this.geometryType&&t.vertices.length>2){if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[0].pos,Ke),e))return 0;if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[t.vertices.length-1].pos,Ke),e))return t.vertices.length-1}return null}};Je=e([c("esri.views.3d.interactive.editingTools.draw3D.DrawOperation")],Je);const Ke=new d({x:0,y:0,z:0});class Ye{constructor(e,t,i,s=null){this.elevationInfo=e,this.defaultZ=t,this.view=i,this.excludeGraphics=s}screenToMap(e){if(n(this.defaultZ))return this.view.sceneIntersectionHelper.intersectElevationFromScreen(V(e.x,e.y),this.elevationInfo,this.defaultZ,this.excludeGraphics);const t=this.view.sceneIntersectionHelper.intersectElevationFromScreen(V(e.x,e.y),this.elevationInfo,0,this.excludeGraphics);return n(t)&&(t.z=void 0),t}mapToScreen(e){const t=N(e.x,e.y,ge(this.view,e,this.elevationInfo),e.spatialReference);return this.view.toScreen(t)}}class $e{constructor(e,t,i=[]){this.view=e,this.elevationInfo=t,this.exclude=i}screenToMap(e){const t=this.view.toMap(e,{exclude:this.exclude});return n(t)&&(t.z=fe(t,this.view,this.elevationInfo)),t}mapToScreen(e){let t=e;return n(this.elevationInfo)&&(t=N(e.x,e.y,ge(this.view,e,this.elevationInfo),e.spatialReference)),this.view.toScreen(t)}}let et=class extends(p.EventedMixin(be)){constructor(e){super(e),this.drawOperation=null,this.hasZ=!0,this.defaultZ=0,this.elevationInfo=null,this.snapToScene=null,this.mode=null,this.geometryType=null,this.type="draw-3d"}initialize(){const e=a(this.elevationInfo,{mode:this.hasZ?"absolute-height":"on-the-ground",offset:0});this.drawOperation=new Je({view:this.view,manipulators:this.manipulators,geometryType:this.geometryType,drawingMode:this.mode,hasZ:this.hasZ,defaultZ:this.defaultZ,snapToSceneEnabled:this.snapToScene,snappingDrawSurface:new $e(this.view,e),elevationDrawSurface:new Ye(e,this.defaultZ,this.view),hasM:!1,elevationInfo:e}),this.drawOperation.on("vertex-add",(e=>this.onVertexAdd(e))),this.drawOperation.on("vertex-remove",(e=>this.onVertexRemove(e))),this.drawOperation.on("vertex-update",(e=>this.onVertexUpdate(e))),this.drawOperation.on("cursor-update",(e=>this.onCursorUpdate(e))),this.drawOperation.on("complete",(e=>this.onComplete(e)))}destroy(){this.drawOperation.destroy(),this.drawOperation=null,this._set("view",null)}onInputEvent(e){this.drawOperation.onInputEvent(e)}set enabled(e){this.drawOperation.interactive=e,this._set("enabled",e)}reset(){}get canRedo(){return this.drawOperation.canRedo}redo(){this.drawOperation.redo()}get canUndo(){return this.drawOperation.canUndo}undo(){this.drawOperation.undo()}completeCreateOperation(){this.drawOperation.complete()}activate(){}deactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}getVertexCoords(){return this.drawOperation.vertices}onVertexAdd(e){this.emit("vertex-add",e)}onVertexRemove(e){this.emit("vertex-remove",e)}onVertexUpdate(e){this.emit("vertex-update",e)}onCursorUpdate(e){this.emit("cursor-update",e)}onComplete(e){this.emit("complete",e)}};e([l({constructOnly:!0,nonNullable:!0})],et.prototype,"view",void 0),e([l({value:!0})],et.prototype,"enabled",null),e([l({constructOnly:!0})],et.prototype,"hasZ",void 0),e([l({constructOnly:!0,nonNullable:!0})],et.prototype,"defaultZ",void 0),e([l({constructOnly:!0})],et.prototype,"elevationInfo",void 0),e([l()],et.prototype,"snapToScene",void 0),e([l({constructOnly:!0})],et.prototype,"mode",void 0),e([l({constructOnly:!0})],et.prototype,"geometryType",void 0),e([l({readOnly:!0})],et.prototype,"type",void 0),et=e([c("esri.views.3d.interactive.editingTools.draw.DrawTool")],et);export{et as D,Ye as E,Ze as P,$e as S,Ue as V,qe as a,Je as b,Me as c,Xe as d,Pe as e,Ne as f};
