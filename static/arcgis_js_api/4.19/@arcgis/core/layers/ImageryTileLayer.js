/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../chunks/ArrayPool.js";import"../core/lang.js";import"../chunks/deprecate.js";import"../chunks/object.js";import"../kernel.js";import"../config.js";import{i as t,u as s}from"../chunks/Logger.js";import"../chunks/string.js";import"../chunks/metadata.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"../chunks/PropertyOrigin.js";import"../core/scheduling.js";import{eachAlways as i,createAbortError as o}from"../core/promiseUtils.js";import"../chunks/Message.js";import n from"../core/Error.js";import"../chunks/compilerUtils.js";import{I as a}from"../chunks/ensureType.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import"../chunks/Evented.js";import"../core/Collection.js";import"../chunks/collectionUtils.js";import{a as p}from"../chunks/JSONSupport.js";import"../chunks/Promise.js";import"../chunks/Loadable.js";import"../chunks/asyncUtils.js";import{urlToObject as u}from"../core/urlUtils.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../core/accessorSupport/decorators/cast.js";import{s as m}from"../chunks/jsonMap.js";import{e as c}from"../chunks/enumeration.js";import{r as f}from"../chunks/reader.js";import{w as h}from"../chunks/writer.js";import"../chunks/resourceExtension.js";import"../chunks/persistableUrlUtils.js";import d from"../geometry/SpatialReference.js";import"../chunks/locale.js";import"../chunks/number.js";import"../intl.js";import"../request.js";import"../chunks/assets.js";import"../geometry/Geometry.js";import y from"../geometry/Point.js";import"../chunks/Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import g from"../geometry/Extent.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalUser.js";import"../portal/Portal.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../portal/PortalItem.js";import"../chunks/mathUtils2.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../chunks/vec3.js";import"../chunks/colorUtils.js";import"../Color.js";import"../chunks/zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry.js";import"./support/CodedValueDomain.js";import"./support/Domain.js";import"./support/InheritedDomain.js";import"./support/RangeDomain.js";import"../chunks/domains.js";import"../chunks/arcadeOnDemand.js";import"./support/fieldUtils.js";import"../popup/content/Content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/CustomContent.js";import"../chunks/date.js";import"../popup/support/FieldInfoFormat.js";import"../popup/FieldInfo.js";import"../popup/content/FieldsContent.js";import"../chunks/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../chunks/chartMediaInfoUtils.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/MediaContent.js";import"../popup/content/TextContent.js";import"../popup/content.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/RelatedRecordsInfo.js";import"../chunks/Identifiable.js";import"../support/actions/ActionBase.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import x from"../PopupTemplate.js";import"../symbols/Symbol.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol3DLayer.js";import"../chunks/screenUtils.js";import"../chunks/opacityUtils.js";import"../chunks/materialUtils.js";import"../symbols/edges/Edges3D.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/utils.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/patterns/StylePattern3D.js";import"../symbols/FillSymbol3DLayer.js";import"../chunks/colors.js";import"../chunks/Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/Symbol3D.js";import"../chunks/Thumbnail.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../chunks/Symbol3DVerticalOffset.js";import"../symbols/LabelSymbol3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../chunks/urlUtils.js";import"../symbols/PictureFillSymbol.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../symbols.js";import"../chunks/uid.js";import"../Graphic.js";import"../core/Handles.js";import j from"./Layer.js";import"../chunks/LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../tasks/support/ColorRamp.js";import"../tasks/support/AlgorithmicColorRamp.js";import"../tasks/support/MultipartColorRamp.js";import"../chunks/colorRamps.js";import"../renderers/Renderer.js";import"../renderers/visualVariables/VisualVariable.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../renderers/visualVariables/SizeVariable.js";import"../chunks/sizeVariableUtils.js";import"../chunks/unitUtils.js";import"../chunks/lengthUtils.js";import"../chunks/visualVariableUtils.js";import"../chunks/VisualVariablesMixin.js";import"../chunks/symbolConversion.js";import"../symbols/support/jsonUtils.js";import"../renderers/support/ClassBreakInfo.js";import"../chunks/commonProperties.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/support/ColormapInfo.js";import"../chunks/colorUtils2.js";import"../chunks/colorRampUtils.js";import"../renderers/RasterColormapRenderer.js";import"../renderers/RasterShadedReliefRenderer.js";import"../renderers/RasterStretchRenderer.js";import"../chunks/diffUtils.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/devEnvironmentUtils.js";import"../chunks/styleUtils.js";import"../renderers/UniqueValueRenderer.js";import"../chunks/normalizeUtilsCommon.js";import"../geometry/support/normalizeUtils.js";import w from"./support/PixelBlock.js";import"../chunks/vectorFieldUtils.js";import"../chunks/MemCache.js";import"../chunks/ItemCache.js";import"../chunks/utils3.js";import"../symbols/support/cimSymbolUtils.js";import"../chunks/utils2.js";import"../renderers/VectorFieldRenderer.js";import{read as v,rasterRendererTypes as I,websceneRasterRendererTypes as b}from"../rasterRenderers.js";import"../chunks/LRUCache.js";import"../chunks/timeUtils.js";import"../TimeExtent.js";import"../chunks/ReadOnlyMultiOriginJSONSupport.js";import{M as S}from"../chunks/MultiOriginJSONSupport.js";import"../core/watchUtils.js";import"../chunks/arcgisLayerUrl.js";import"../chunks/fieldType.js";import"../chunks/mat4.js";import"../chunks/pe.js";import"../chunks/aaBoundingRect.js";import"../chunks/geodesicConstants.js";import"../geometry/support/GeographicTransformationStep.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/projection.js";import{O as k}from"../chunks/OperationalLayer.js";import"../chunks/ElevationInfo.js";import"../chunks/unitConversionUtils.js";import{b as T}from"../chunks/commonProperties2.js";import"../chunks/Scheduler.js";import"../chunks/_commonjsHelpers.js";import"../core/workers/RemoteClient.js";import"../core/workers/Connection.js";import"../core/workers/workers.js";import"./support/LOD.js";import C from"./support/TileInfo.js";import R from"./support/Field.js";import M from"../tasks/support/FeatureSet.js";import{B as P}from"../chunks/BlendLayer.js";import{P as _}from"../chunks/PortalLayer.js";import{R as F}from"../chunks/RefreshableLayer.js";import{S as O}from"../chunks/ScaleRangeLayer.js";import{createPopupTemplate as D}from"../support/popupUtils.js";import{r as L}from"../chunks/serviceTileInfoProperty.js";import{T as A}from"../chunks/TilemapCache.js";import"./support/DimensionalDefinition.js";import B from"./support/RasterInfo.js";import"../chunks/rasterRendererHelper.js";import{b as E,g as U,i as z,p as N,a as H,T as V,c as q,e as J}from"../chunks/RasterSymbolizer.js";import"../chunks/LercCodec.js";import"../chunks/ClassBreaksDefinition.js";import{g as G,f as W,h as X,i as $}from"../chunks/pixelUtils.js";import{B as Y,R as K,i as Q,g as Z,a as ee,b as te,c as se,d as re,I as ie}from"../chunks/xmlUtilities.js";import"../chunks/RawBlockCache.js";import"../chunks/rasterProjectionHelper.js";let oe=class extends p{constructor(){super(...arguments),this.type="identity"}forwardTransform(e){return e}inverseTransform(e){return e}};e([r({json:{write:!0}})],oe.prototype,"spatialReference",void 0),e([c({IdentityXform:"identity"})],oe.prototype,"type",void 0),oe=e([l("esri.layers.support.rasterTransforms.IdentityTransform")],oe);var ne=oe;function ae(e,t,s){const{x:r,y:i}=t;if(s<2){return{x:e[0]+r*e[2]+i*e[4],y:e[1]+r*e[3]+i*e[5]}}if(2===s){const t=r*r,s=i*i,o=r*i;return{x:e[0]+r*e[2]+i*e[4]+t*e[6]+o*e[8]+s*e[10],y:e[1]+r*e[3]+i*e[5]+t*e[7]+o*e[9]+s*e[11]}}const o=r*r,n=i*i,a=r*i,l=o*r,p=o*i,u=r*n,m=i*n;return{x:e[0]+r*e[2]+i*e[4]+o*e[6]+a*e[8]+n*e[10]+l*e[12]+p*e[14]+u*e[16]+m*e[18],y:e[1]+r*e[3]+i*e[5]+o*e[7]+a*e[9]+n*e[11]+l*e[13]+p*e[15]+u*e[17]+m*e[19]}}function le(e,t,s){const{xmin:r,ymin:i,xmax:o,ymax:n,spatialReference:a}=t;let l=[];if(s<2)l.push({x:r,y:n}),l.push({x:o,y:n}),l.push({x:r,y:i}),l.push({x:o,y:i});else{let e=10;for(let t=0;t<e;t++)l.push({x:r,y:i+(n-i)*t/(e-1)}),l.push({x:o,y:i+(n-i)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:r+(o-r)*t/e,y:i}),l.push({x:r+(o-r)*t/e,y:n})}l=l.map((t=>ae(e,t,s)));const p=l.map((e=>e.x)),u=l.map((e=>e.y));return new g({xmin:Math.min.apply(null,p),xmax:Math.max.apply(null,p),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:a})}let pe=class extends p{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:s,coeffY:r}=t;if(null==s||!s.length||null==r||!r.length||s.length!==r.length)return null;const i=[];for(let e=0;e<s.length;e++)i.push(s[e]),i.push(r[e]);return i}writeForwardCoefficients(e,t,s){const r=[],i=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):i.push(e[t]);t.coeffX=r,t.coeffY=i}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,s,r,i,o,n]=e,a=r*n-o*i,l=o*i-r*n;return[(o*s-t*n)/a,(r*s-t*i)/l,n/a,i/l,-o/a,-r/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:s,inverseCoeffY:r}=t;if(null==s||!s.length||null==r||!r.length||s.length!==r.length)return null;const i=[];for(let e=0;e<s.length;e++)i.push(s[e]),i.push(r[e]);return i}writeInverseCoefficients(e,t,s){const r=[],i=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):i.push(e[t]);t.inverseCoeffX=r,t.inverseCoeffY=i}forwardTransform(e){if("point"===e.type){const t=ae(this.forwardCoefficients,e,this.polynomialOrder);return new y({x:t.x,y:t.y,spatialReference:e.spatialReference})}return le(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=ae(this.inverseCoefficients,e,this.polynomialOrder);return new y({x:t.x,y:t.y,spatialReference:e.spatialReference})}return le(this.inverseCoefficients,e,this.polynomialOrder)}};e([r({json:{write:!0}})],pe.prototype,"polynomialOrder",void 0),e([r()],pe.prototype,"forwardCoefficients",void 0),e([f("forwardCoefficients",["coeffX","coeffY"])],pe.prototype,"readForwardCoefficients",null),e([h("forwardCoefficients")],pe.prototype,"writeForwardCoefficients",null),e([r({json:{write:!0}})],pe.prototype,"inverseCoefficients",null),e([f("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],pe.prototype,"readInverseCoefficients",null),e([h("inverseCoefficients")],pe.prototype,"writeInverseCoefficients",null),e([r({json:{write:!0}})],pe.prototype,"spatialReference",void 0),e([c({PolynomialXform:"polynomial"})],pe.prototype,"type",void 0),pe=e([l("esri.layers.support.rasterTransforms.PolynomialTransform")],pe);var ue=pe;const me={PolynomialXform:ue,IdentityXform:ne},ce=Object.keys(me);const fe=new Map;fe.set("int16","esriFieldTypeSmallInteger"),fe.set("int32","esriFieldTypeInteger"),fe.set("int64","esriFieldTypeInteger"),fe.set("float32","esriFieldTypeSingle"),fe.set("float64","esriFieldTypeDouble"),fe.set("text","esriFieldTypeString");let he=class extends Y{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new n("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:s,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",s),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,s,r={}){const i=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(i<0)return null;const o=this._buildCacheFilePath(i,t,s,r.multidimensionalDefinition),n=this._getIndexRecordFromBundle(t,s),a=await this.request(o,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!a)return null;const l=new Uint8Array(a.data),p=this._getTileEndAndContentType(l,n);if(0===p.recordSize)return null;const u=await this.request(o,{range:{from:p.position,to:p.position+p.recordSize},responseType:"array-buffer",signal:r.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,s;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:i,histograms:o,colormap:n,blockWidth:a,blockHeight:l,firstPyramidLevel:p,maximumPyramidLevel:u}=e,m=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),c=e.extent.spatialReference,f=null==(t=e.geodataXform)?void 0:t.spatialReference,h=new d(null!=c&&c.wkid||null!=c&&c.wkt?c:f);let x=new g({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:h});const j=new y({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),w=Math.round((x.xmax-x.xmin)/j.x),v=Math.round((x.ymax-x.ymin)/j.y),I=this._parseTransform(e.geodataXform),b=I?x:null;I&&(x=I.forwardTransform(x),j.x=(x.xmax-x.xmin)/w,j.y=(x.ymax-x.ymin)/v);const S=null!=(s=e.properties)?s:{},k=e.format.toLowerCase().replace("cache/",""),T=new y(e.origin.x,e.origin.y,h);let R,M,P,_;if(n&&n.colors)for(R=[],M=0;M<n.colors.length;M++)P=n.colors[M],_=n.values?n.values[M]:M,R.push([_,255&P,P<<16>>>24,P<<8>>>24,P>>>24]);const F=e.LODInfos,O=[];for(M=0;M<F.levels.length;M++)O.push({level:F.levels[M],resolution:F.resolutions[M],scale:96/.0254*F.resolutions[M]});const D=new C({dpi:96,lods:O,format:k,origin:T,size:[a,l],spatialReference:h}),L={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},A=[{maxCol:Math.ceil(w/a)-1,maxRow:Math.ceil(v/l)-1,minCol:0,minRow:0}];let E=2;if(u>0)for(M=0;M<u;M++)A.push({maxCol:Math.ceil(w/E/a)-1,maxRow:Math.ceil(v/E/l)-1,minCol:0,minRow:0}),E*=2;const U=e.mdInfo;return{storageInfo:L,rasterInfo:new B({width:w,height:v,pixelType:r,bandCount:i,extent:x,nativeExtent:b,transform:I,spatialReference:h,pixelSize:j,keyProperties:S,statistics:m,histograms:o,multidimensionalInfo:U,colormap:R,storageInfo:new K({blockWidth:a,blockHeight:l,pyramidBlockWidth:a,pyramidBlockHeight:l,origin:T,tileInfo:D,firstPyramidLevel:p,maximumPyramidLevel:u,blockBoundary:A})})}}_parseTransform(e){var t,s;if(!function(e){const t=null==e?void 0:e.type;return!e||ce.includes(t)}(e))throw new n("cloudraster:open","the data contains unsupported geodata transform types");const r=function(e){if(!(null==e?void 0:e.type))return null;const t=me[null==e?void 0:e.type];if(t){const s=new t;return s.read(e),s}return null}(e);if("identity"===r.type)return null;if(null==(t=r.forwardCoefficients)||!t.length||null==(s=r.inverseCoefficients)||!s.length)throw new n("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),s=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await Promise.all([t,s]);let i;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":fe.get(e.type),name:e.name,alias:e.alias||e.name})));const s=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:s})}}if(!i&&r[1]){i=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),s=3&t.getUint8(0);if(3!==s)return{header:{version:s},recordSet:null};const r=t.getUint32(4,!0),i=t.getUint16(8,!0),o=t.getUint16(10,!0),n={version:s,recordCount:r,headerByteCount:i,recordByteCount:o};let a=32;const l=[],p=[];let u;if(3===s){for(;13!==t.getUint8(a);)u=String.fromCharCode(t.getUint8(a+11)).trim(),l.push({name:E(new Uint8Array(e,a,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(a+16)}),a+=32;if(a+=1,l.length>0)for(;p.length<r&&e.byteLength-a>o;){const s=[];32===t.getUint8(a)?(a+=1,l.forEach((t=>{if("C"===t.type)s.push(E(new Uint8Array(e,a,t.length)).trim());else if("N"===t.type)s.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,a,t.length)).trim(),10));else if("F"===t.type)s.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,a,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,a,t.length)).trim();s.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}a+=t.length})),p.push(s)):a+=o}}const m=function(e){const t=e.fields,s=e.records,r=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),o=i.map((e=>e.name)),n=[];let a=0,l=0;return s.forEach((e=>{const t={};for(t[r]=a++,l=1;l<o.length;l++)t[o[l]]=e[l-1];n.push({attributes:t})})),{displayFieldName:"",fields:i,features:n}}({fields:l,records:p});return{header:n,fields:l,records:p,recordSet:m}}}.parse(r[1]).recordSet}return M.fromJSON(i)}_buildCacheFilePath(e,s,r,i){const o=this.storageInfo.packetSize,n=Math.floor(s/o)*o,a=Math.floor(r/o)*o,l="R"+this._toHexString4(n)+"C"+this._toHexString4(a);let p="L";p+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,m=null==i?void 0:i[0];if(!t(u)||!m)return`${this.url}/_alllayers/${p}/${l}.bundle`;let c=u.variables.filter((e=>e.name===m.variableName))[0].dimensions[0].values.indexOf(m.values[0]).toString(16);const f=4-c.length;for(let e=0;e<f;e++)c="0"+c;return c="S"+c,`${this.url}/_alllayers/${m.variableName}/${c}/${p}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const s=this.storageInfo.packetSize,r=s*(e%s)+t%s;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const s=e.subarray(t,t+8);let r,i=0;for(r=0;r<5;r++)i|=(255&s[r])<<8*r;const o=0xffffffffff&i;for(i=0,r=5;r<8;r++)i|=(255&s[r])<<8*(r-5);return{position:o,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};e([r({readOnly:!0})],he.prototype,"storageInfo",void 0),e([r({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),he=e([l("esri.layers.support.rasterDatasets.CloudRaster")],he);var de=he;let ye=class extends Y{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:n,nativeExtent:a,transform:l}=this.data,{width:p,height:u,pixelType:m}=s,c=this.data.extent||new g({xmin:-.5,ymin:.5,xmax:p-.5,ymax:u-.5,spatialReference:new d({wkid:3857})}),f=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,h={x:c.width/p,y:c.height/u},y=new B({width:p,height:u,pixelType:m,extent:c,nativeExtent:a,transform:l,pixelSize:h,spatialReference:c.spatialReference,bandCount:3,keyProperties:n||{},statistics:r,isPseudoSpatialReference:f,histograms:i});this.createRemoteDatasetStorageInfo(y,512,512),this._set("rasterInfo",y),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},e),this.datasetName=o,this.url="/InMemory/"+o}fetchRawTile(e,t,s,r={}){const i=this._pixelBlockTiles.get(`${e}/${t}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(e,s,r){const o=this.rasterInfo.storageInfo.maximumPyramidLevel,a=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:s,maximumPyramidLevel:o},r):Promise.resolve(G(e,s,o)),l=t(this.rasterInfo.statistics),p=t(this.rasterInfo.histograms),u=l&&p?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},r):Promise.resolve(W(e)),m=await i([a,u]);if(!m[0].value&&m[1].value)throw new n("inmemory-raster:open","failed to build in memory raster");var c,f;(this._pixelBlockTiles=m[0].value,l)||(this.rasterInfo.statistics=null==(c=m[1].value)?void 0:c.statistics);p&&(this.rasterInfo.histograms=null==(f=m[1].value)?void 0:f.histograms)}};e([r({type:String,json:{write:!0}})],ye.prototype,"datasetFormat",void 0),e([r()],ye.prototype,"data",void 0),ye=e([l("esri.layers.support.rasterDatasets.InMemoryRaster")],ye);var ge=ye;function xe(e,t){if(!e||!t)return null;const s=[];for(let r=0;r<e.length;r++)s.push(e[r]),s.push(t[r]);return s}function je(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new d({wkid:t});if(!(e=String(e)).startsWith("GEOGCS")&&!e.startsWith("PROJCS"))return null;const s=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),r=s[s.length-1].split(",");return"EPSG"===r[0]&&e.endsWith('"]]')&&(t=Number(r[1]),!isNaN(t)&&0!==t)?new d({wkid:t}):new d({wkt:e})}function we(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const s={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(Q(e,"SRS")){if(!s.spatialReference){const t=Z(e);s.spatialReference=je(t)}}else if(Q(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=function(e){var t;const s=te(e,"GeodataXform"),r=je(se(s,"SpatialReference/WKID")||Z(s,"SpatialReference/WKT"));if("typens:PolynomialXform"!==s.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const i=null!=(t=se(s,"PolynomialOrder"))?t:1,o=re(s,"CoeffX/Double"),n=re(s,"CoeffY/Double"),a=re(s,"InverseCoeffX/Double"),l=re(s,"InverseCoeffY/Double"),p=xe(o,n),u=xe(a,l);return{spatialReference:r,transform:new ue({spatialReference:r,polynomialOrder:i,forwardCoefficients:p,inverseCoefficients:u})}}(e);s.transform=r,s.spatialReference||(s.spatialReference=t)}else{ee(e,"MDI").forEach((e=>s.metadata[e.getAttribute("key")]=Z(e)))}else if(Q(e,"PAMRasterBand")){const t=function(e){var t;const s=se(e,"NoDataValue"),r=te(e,"Histograms/HistItem"),i=se(r,"HistMin"),o=se(r,"HistMax"),n=se(r,"BucketCount"),a=null==(t=Z(r,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,p,u,m;ee(e,"Metadata/MDI").forEach((e=>{var t;const s=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=s;break;case"STATISTICS_MAXIMUM":p=s;break;case"STATISTICS_MEAN":u=s;break;case"STATISTICS_STDDEV":m=s}}));const c=se(e,"Metadata/SourceBandIndex");return{noDataValue:s,histogram:null!=a&&a.length&&null!=l&&null!=p?{min:i,max:o,size:n||a.length,counts:a}:null,sourceBandIndex:c,statistics:null!=l&&null!=p?{min:l,max:p,avg:u,stddev:m}:null}}(e);null!=t.sourceBandIndex&&null==s.rasterBands[t.sourceBandIndex]?s.rasterBands[t.sourceBandIndex]=t:s.rasterBands.push(t)}}));const r=s.rasterBands;if(r){const e=!!r[0].statistics;s.statistics=e?r.map((e=>e.statistics)):null;const t=!!r[0].histogram;s.histograms=t?r.map((e=>e.histogram)):null}return s}let ve=class extends Y{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:s,statistics:r,histograms:i,transform:o}=await this._fetchAuxiliaryData(e);const n=!s;n&&(s=new d({wkid:3857})),null!=i&&i.length&&null==r&&(r=X(i));const{width:a,height:l}=t;let p=new g({xmin:-.5,ymin:.5-l,xmax:a-.5,ymax:.5,spatialReference:s});const u=o?o.forwardTransform(p):p;let m=!0;if(o){const e=o.forwardCoefficients;m=e&&0===e[1]&&0===e[2],m&&(o=null,p=u)}const c=new ge({data:{extent:u,nativeExtent:p,transform:o,pixelBlock:t,statistics:r,histograms:i,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:n}});await c.open(),this._set("rasterInfo",c.rasterInfo),this._inMemoryRaster=c}fetchRawTile(e,t,s,r={}){return this._inMemoryRaster.fetchRawTile(e,t,s,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),s=U(t).toUpperCase();if("JPG"!==s&&"PNG"!==s&&"GIF"!==s&&"BMP"!==s)throw new n("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",s);return await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,r;const n=s(null==e?void 0:e.signal),a=null!=(t=this.ioConfig.skipExtensions)?t:[],l=a.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),p=this.datasetFormat,u="JPG"===p?"jgw":"PNG"===p?"pgw":"BMP"===p?"bpw":null,m=a.indexOf(u)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+u,{responseType:"text",signal:n}),c=await i([l,m]);if(null!=n&&n.aborted)throw o();const f=we(null==(r=c[0].value)?void 0:r.data);if(!f.transform){const e=c[1].value?c[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;f.transform=6===(null==e?void 0:e.length)?new ue({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};e([r({type:String,json:{write:!0}})],ve.prototype,"datasetFormat",void 0),ve=e([l("esri.layers.support.rasterDatasets.ImageAuxRaster")],ve);var Ie=ve;let be=class extends Y{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const s=e&&e.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:s});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=r.data;if(this.sourceJSON=i,!i)throw new n("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new n("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const o=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,null==this.tileType&&(o.indexOf(i.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===i.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=i.name.slice(i.name.indexOf("/")+1);const a=await this._fetchRasterInfo({signal:s});if(!t(a))throw new n("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?L(i.tileInfo,i):C.fromJSON(i.tileInfo),{extent:t,pixelSize:s}=a,r=.5/a.width*s.x;let o,n;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==i.maxScale&&("Raster"===this.tileType?(o=e.lods.filter((e=>e.resolution===s.x))[0],o||(o=e.lods[e.lods.length-1])):(o=e.lods.filter((e=>Math.abs(e.scale-i.maxScale)<r))[0],o||(o=e.lods.filter((e=>e.scale>i.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),s.x=s.y=o.resolution,a.width=Math.ceil((t.xmax-t.xmin)/s.x-.1),a.height=Math.ceil((t.ymax-t.ymin)/s.y-.1)),o||(o=l);const p=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==i.minScale&&"Elevation"===this.tileType&&(n=e.lods.filter((e=>Math.abs(e.scale-i.minScale)<r))[0],this._levelOffset=n.level-p.level),n||(n=p);const u=Math.max(s.x,s.y);(Math.abs(s.x-s.y)>r||!e.lods.some((e=>Math.abs(e.resolution-u)<r)))&&(s.x=s.y=o.resolution,a.width=Math.ceil((t.xmax-t.xmin)/s.x-.1),a.height=Math.ceil((t.ymax-t.ymin)/s.y-.1));const m=o.level-n.level,[c,f]=e.size,h=e.origin;let{x:d,y}=s;const g=[{minCol:Math.floor((t.xmin-h.x+.1*d)/c/d),maxCol:Math.floor((t.xmax-h.x-.1*d)/c/d),minRow:Math.floor((h.y-t.ymax+.1*y)/f/y),maxRow:Math.floor((h.y-t.ymin-.1*y)/f/y)}];if(m>0)for(let e=0;e<m;e++)d*=2,y*=2,g.push({minCol:Math.floor((t.xmin-h.x+.1*d)/c/d),maxCol:Math.floor((t.xmax-h.x-.1*d)/c/d),minRow:Math.floor((h.y-t.ymax+.1*y)/f/d),maxRow:Math.floor((h.y-t.ymin-.1*y)/f/d)});a.storageInfo=new K({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:m,tileInfo:e,blockBoundary:g}),this._set("rasterInfo",a)}if(i.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:a.storageInfo.tileInfo,parsedUrl:u(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new A({layer:e})}}async fetchRawTile(e,t,s,r={}){const{storageInfo:i,extent:o,pixelSize:n}=this.rasterInfo,a=i.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${a}/${t}/${s}`,p=this._slices?{sliceId:r.sliceId||0}:null,{data:u}=await this.request(l,{query:p,responseType:"array-buffer",signal:r.signal});if(!u)return null;const m=await this.decodePixelBlock(u,{width:i.tileInfo.size[0],height:i.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),c=i.blockBoundary[e];if("jpg"!==i.compression||s>c.minCol&&s<c.maxCol&&t>c.minRow&&t<c.maxRow)return m;const{origin:f,blockWidth:h,blockHeight:d}=i,y=2**e,g=Math.round((o.xmin-f.x)/(n.x*y))%h,x=Math.round((o.xmax-f.x)/(n.x*y))%h,j=Math.round((f.y-o.ymax)/(n.x*y))%d,w=Math.round((f.y-o.ymin)/(n.x*y))%d,v=s===c.minCol?g:0,I=t===c.minRow?j:0,b=s===c.maxCol?x:h,S=t===c.maxRow?w:d;return $(m,{x:v,y:I},{width:b-v,height:S-I}),m}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const s=this._slices[e].multidimensionalDefinition;if(s.length===t.length&&!s.some((e=>{const s=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];if(!s)return!0;return(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(s.values[0])?s.values[0][0]:s.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const s=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),i=await Promise.all([s,r]);return i[0]&&i[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:i[0]||null,histograms:i[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let r=this.identifyPixelLocation(e,0,s(t.datumTransformation));if(null===r)return null;let i=0;const{maximumPyramidLevel:o}=this.rasterInfo.storageInfo;let n=o-i+this._levelOffset;const a=r.srcLocation;for(;n>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(n,r.row,r.col,t))break}catch{}if(n--,i++,r=this.identifyPixelLocation(a,i,s(t.datumTransformation)),null===r)return null}return-1===n||null==r?null:i}async _fetchRasterInfo(e){const t=this.sourceJSON,s=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),r=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),i=d.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new B({width:s,height:r,bandCount:3,extent:g.fromJSON(t.extent),spatialReference:i,pixelSize:new y({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:i}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:o,signal:n}=e,a=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:o,f:"json"},signal:n}).then((e=>M.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:o,f:"json"},signal:n}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),p=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:o,f:"json"},signal:n}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:n}).then((e=>e.data)).catch((()=>{})),m=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),c=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:n}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([a,l,p,u,m,c]).then((e=>{let o=null;if(t.minValues&&t.minValues.length===t.bandCount){o=[];for(let e=0;e<t.minValues.length;e++)o.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new B({width:s,height:r,bandCount:t.bandCount,extent:g.fromJSON(t.extent),spatialReference:i,pixelSize:new y({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:i}),pixelType:t.pixelType.toLowerCase(),statistics:o,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const s=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=s.variables)&&t.length&&s.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),s}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}};e([r({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),e([r()],be.prototype,"tileType",void 0),be=e([l("esri.layers.support.rasterDatasets.ImageServerRaster")],be);var Se=be;const ke=new Map;ke.set("Int8","s8"),ke.set("UInt8","u8"),ke.set("Int16","s16"),ke.set("UInt16","u16"),ke.set("Int32","s32"),ke.set("UInt32","u32"),ke.set("Float32","f32"),ke.set("Float64","f32"),ke.set("Double64","f32");const Te=new Map;Te.set("lerc",".lrc"),Te.set("none",".til"),Te.set("deflate",".pzp"),Te.set("jpeg",".jzp");let Ce=class extends Y{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var r;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?s(e.signal):null,o=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:a}=this._parseHeader(o.data);if(-1===(null==(r=this.ioConfig.skipExtensions)?void 0:r.indexOf("aux.xml"))){const s=await this._fetchAuxiliaryData(e);var l;if(null!=s)n.statistics=null!=(l=s.statistics)?l:n.statistics,n.histograms=s.histograms,s.histograms&&!t(n.statistics)&&(n.statistics=X(s.histograms))}this._set("rasterInfo",n),this._files=a;const p=await this.request(a.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(p.data);let u,m,c=0,f=-1;const{blockWidth:h,blockHeight:d,compression:y}=this.rasterInfo.storageInfo,g=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:x,height:j,bandCount:w}=this.rasterInfo,v=[],I="none"===y?1:w;for(;c<this._storageIndex.length;)f++,u=Math.ceil(x/h/g**f),m=Math.ceil(j/d/g**f),c+=u*m*I*4,v.push({maxRow:m,maxCol:u,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=v,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(e,t,s,r={}){const{blockWidth:i,blockHeight:o,blockBoundary:n,compression:a}=this.rasterInfo.storageInfo,l=n[e];if(!l||l.maxRow<t||l.maxCol<s||l.minRow>t||l.minCol>s)return null;const{bandCount:p,pixelType:u}=this.rasterInfo,{ranges:m,actualTileWidth:c,actualTileHeight:f}=this._getTileLocation(e,t,s);if(!m||0===m.length)return null;if(0===m[0].from&&0===m[0].to){const e=new Uint8Array(i*o);return new w({width:i,height:o,pixels:null,mask:e,validPixelCount:0})}const{bandIds:h}=this.ioConfig,d="none"===a?1:p,y=[];let g=0;for(g=0;g<d;g++)(!h||h.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:m[g].from,to:m[g].to},responseType:"array-buffer",signal:r.signal}));const x=await Promise.all(y),j=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),v=new Uint8Array(j);let I=0;for(g=0;g<d;g++)v.set(new Uint8Array(x[g].data),I),I+=x[g].data.byteLength;const b="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",S=await this.decodePixelBlock(v.buffer,{width:i,height:o,format:b,pixelType:u});let k=0,T=0;if(c!==i||f!==o){let e=S.mask;if(e)for(g=0;g<o;g++)if(T=g*i,g<f)for(k=c;k<i;k++)e[T+k]=0;else for(k=0;k<i;k++)e[T+k]=0;else for(e=new Uint8Array(i*o),S.mask=e,g=0;g<f;g++)for(T=g*i,k=0;k<c;k++)e[T+k]=1}return S}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,s,r,i,o,n;if(z){for(s=new Uint8Array(e),i=new ArrayBuffer(e.byteLength),r=new Uint8Array(i),o=0;o<e.byteLength/4;o++)for(n=0;n<4;n++)r[4*o+n]=s[4*o+3-n];t=new Uint32Array(i)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,s){const{blockWidth:r,blockHeight:i,pyramidScalingFactor:o,compression:n}=this.rasterInfo.storageInfo,{width:a,height:l,bandCount:p}=this.rasterInfo,u="none"===n?1:p;let m,c,f,h=0,d=0;for(f=0;f<e;f++)d=o**f,m=Math.ceil(a/r/d),c=Math.ceil(l/i/d),h+=m*c;d=o**e,m=Math.ceil(a/r/d),c=Math.ceil(l/i/d),h+=t*m+s,h*=4*u;const y=this._storageIndex.subarray(h,h+4*u);let g=0,x=0;const j=[];for(let e=0;e<u;e++)g=y[4*e+0]*2**32+y[4*e+1],x=g+y[4*e+2]*2**32+y[4*e+3],j.push({from:g,to:x});return{ranges:j,actualTileWidth:s<m-1?r:Math.ceil(a/d)-r*(m-1),actualTileHeight:t<c-1?i:Math.ceil(l/d)-i*(c-1)}}_parseHeader(e){const t=te(e,"MRF_META/Raster");if(!t)throw new n("mrf:open","not a valid MRF format");const s=te(t,"Size"),r=parseInt(s.getAttribute("x"),10),i=parseInt(s.getAttribute("y"),10),o=parseInt(s.getAttribute("c"),10),a=(Z(t,"Compression")||"none").toLowerCase();if(!a||-1===["none","lerc"].indexOf(a))throw new n("mrf:open","currently does not support compression "+a);const l=Z(t,"DataType")||"UInt8",p=ke.get(l);if(null==p)throw new n("mrf:open","currently does not support pixel type "+l);const u=te(t,"PageSize"),m=parseInt(u.getAttribute("x"),10),c=parseInt(u.getAttribute("y"),10),f=te(t,"DataValues");let h,x;f&&(x=f.getAttribute("NoData"),null!=x&&(h=x.trim().split(" ").map((e=>parseFloat(e)))));if(te(e,"MRF_META/CachedSource"))throw new n("mrf:open","currently does not support MRF referencing other data files");const j=te(e,"MRF_META/GeoTags"),w=te(j,"BoundingBox");if(null==w)throw new n("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const v=parseFloat(w.getAttribute("minx")),I=parseFloat(w.getAttribute("miny")),b=parseFloat(w.getAttribute("maxx")),S=parseFloat(w.getAttribute("maxy")),k=Z(j,"Projection")||"",T=Z(e,"datafile"),C=Z(e,"IndexFile");let R;if("LOCAL_CS[]"!==k)if(k.toLowerCase().startsWith("epsg:")){const e=Number(k.slice(5));isNaN(e)||0===e||(R=new d({wkid:e}))}else R=je(k);const M=new g(v,I,b,S);M.spatialReference=R;const P=te(e,"MRF_META/Rsets"),_=parseInt(P&&P.getAttribute("scale")||"2",10),F=new K({origin:new y({x:M.xmin,y:M.ymax,spatialReference:R}),blockWidth:m,blockHeight:c,pyramidBlockWidth:m,pyramidBlockHeight:c,compression:a,pyramidScalingFactor:_}),O=new y({x:(b-v)/r,y:(S-I)/i,spatialReference:R});return{rasterInfo:new B({width:r,height:i,extent:M,spatialReference:R,bandCount:o,pixelType:p,pixelSize:O,noDataValue:h,storageInfo:F}),files:{mrf:this.url,index:C||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",Te.get(a))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return we(t)}catch{return null}}};e([r()],Ce.prototype,"_files",void 0),e([r()],Ce.prototype,"_storageIndex",void 0),e([r({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),Ce=e([l("esri.layers.support.rasterIO.MRFRaster")],Ce);var Re=Ce;const Me=function(e,t){const s=e.get(t);return s&&s.values},Pe=function(e,t){const s=e.get(t);return s&&s.values[0]};let _e=class extends Y{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var r;await this.init();const i=e?s(e.signal):null,{data:o}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!o)throw new n("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:a,firstIFD:l,isBigTiff:p}=N(o),u=[];await this.readIFDs(u,o,a,l,0,p?8:4,i);const m=H(u),{width:c,height:f,tileWidth:h,tileHeight:d,planes:x,pixelType:j,compression:w,firstPyramidLevel:v,maximumPyramidLevel:I,pyramidBlockWidth:b,pyramidBlockHeight:S,tileBoundary:k,affine:T,metadata:C}=m,R=g.fromJSON(m.extent),M=R.spatialReference,P=new y(R?{x:R.xmin,y:R.ymax,spatialReference:M}:{x:0,y:0}),_=new K({blockWidth:h,blockHeight:d,pyramidBlockWidth:b,pyramidBlockHeight:S,compression:w,origin:P,firstPyramidLevel:v,maximumPyramidLevel:I,blockBoundary:k}),F=new y({x:(R.xmax-R.xmin)/c,y:(R.ymax-R.ymin)/f,spatialReference:M}),O=C?{BandProperties:C.bandProperties,DataType:C.dataType}:{},D=new B({width:c,height:f,bandCount:x,pixelType:j,compression:w,pixelSize:F,storageInfo:_,spatialReference:M,keyProperties:O,extent:R,statistics:C?C.statistics:null});if(null!=T&&T.length&&(D.nativeExtent=new g({xmin:-.5,ymin:.5-f,xmax:c-.5,ymax:.5,spatialReference:M}),D.transform=new ue({polynomialOrder:1,forwardCoefficients:[T[2]+T[0]/2,T[5]-T[3]/2,T[0],T[3],-T[1],-T[4]]}),D.extent=D.transform.forwardTransform(D.nativeExtent),D.pixelSize=new y({x:(R.xmax-R.xmin)/c,y:(R.ymax-R.ymin)/f,spatialReference:M}),_.origin.x=-.5,_.origin.y=.5),null==(r=this.ioConfig.skipExtensions)||!r.includes("aux.xml")){const s=await this._fetchAuxiliaryData(e);if(null!=s){var L;if(D.statistics=null!=(L=s.statistics)?L:D.statistics,D.histograms=s.histograms,s.histograms&&!t(D.statistics)&&(D.statistics=X(s.histograms)),s.transform&&!T){D.transform=s.transform,D.nativeExtent=D.extent;const e=D.transform.forwardTransform(D.nativeExtent);D.pixelSize=new y({x:(e.xmax-e.xmin)/c,y:(e.ymax-e.ymin)/f,spatialReference:M}),D.extent=e}D.spatialReference||(D.spatialReference=s.spatialReference)}}if(this._set("rasterInfo",D),this._headerInfo={littleEndian:a,isBigTiff:p,ifds:u,...m},!this._headerInfo.isSupported)throw new n("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,s,r={}){var i;if(null==(i=this._headerInfo)||!i.isSupported||this.isBlockOutside(e,t,s))return null;const o=this.getTileLocation(e,t,s);if(!o)return null;const{range:n,actualTileWidth:a,actualTileHeight:l,ifd:p}=o,{data:u}=await this.request(this.url,{range:n,responseType:"array-buffer",signal:r.signal}),{blockWidth:m,blockHeight:c}=this.getBlockWidthHeight(e),f=await this.decodePixelBlock(u,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:p,offset:0,size:0},width:m,height:c,planes:null,pixelType:null});let h,d,y;if(a!==m||l!==c){let e=f.mask;if(e)for(h=0;h<c;h++)if(y=h*m,h<l)for(d=a;d<m;d++)e[y+d]=0;else for(d=0;d<m;d++)e[y+d]=0;else for(e=new Uint8Array(m*c),f.mask=e,h=0;h<l;h++)for(y=h*m,d=0;d<a;d++)e[y+d]=1}return f}async readIFDs(e,t,s,r,i,o=4,n){if(!r)return null;if(r>=t.byteLength||r<0){t=(await this.request(this.url,{range:{from:r+i,to:r+i+this._bufferSize},responseType:"array-buffer",signal:n})).data,i=r+i,r=0}const a=await this.readIFD(t,s,r,i,V.TIFF_TAGS,o,n);if(e.push(a.ifd),!a.nextIFD)return null;await this.readIFDs(e,t,s,a.nextIFD-i,i,o,n)}async readIFD(e,t,s,r,i=V.TIFF_TAGS,o=4,n){if(!e)return null;const a=q(e,t,s,r,i,o);if(a.success){const s=[];if(a.ifd.forEach((e=>{e.values||s.push(e)})),s.length>0){const i=s.map((e=>e.offlineOffsetSize)),o=Math.min.apply(null,i.map((e=>e[0])));if(Math.min.apply(null,i.map((e=>e[0]+e[1])))-o<=this._bufferSize){const{data:i}=await this.request(this.url,{range:{from:o,to:o+this._bufferSize},responseType:"array-buffer",signal:n});e=i,r=o,s.forEach((s=>J(e,t,s,r)))}}if(a.ifd.has("GEOKEYDIRECTORY")){const s=a.ifd.get("GEOKEYDIRECTORY"),i=s.values;if(i&&i.length>4){const o=i[0]+"."+i[1]+"."+i[2],a=await this.readIFD(e,t,s.valueOffset+6-r,r,V.GEO_KEYS,2,n);s.data=a.ifd,s.data&&s.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[o]})}}return a}if(a.requiredBufferSize&&a.requiredBufferSize!==e.byteLength){const s=await this.request(this.url,{range:{from:r,to:r+a.requiredBufferSize+4},responseType:"array-buffer",signal:n});return(e=s.data).byteLength<a.requiredBufferSize?null:this.readIFD(e,t,0,r,V.TIFF_TAGS,4,n)}}getTileLocation(e,t,s){const{firstPyramidLevel:r,blockBoundary:i}=this.rasterInfo.storageInfo,o=0===e?0:e-(r-1),n=this._headerInfo.ifds[o];if(!n)return null;const a=Me(n,"TILEOFFSETS");if(void 0===a)return null;const l=Me(n,"TILEBYTECOUNTS"),{minRow:p,minCol:u,maxRow:m,maxCol:c}=i[o];if(t>m||s>c||t<p||s<u)return null;const f=Pe(n,"IMAGEWIDTH"),h=Pe(n,"IMAGELENGTH"),d=Pe(n,"TILEWIDTH"),y=Pe(n,"TILELENGTH"),g=t*(c+1)+s,x=a[g],j=l[g];if(null==x||null==j)return null;return{range:{from:x,to:x+j-1},ifd:n,actualTileWidth:s===c?f%d:d,actualTileHeight:t===m?h%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return we(t)}catch{return null}}};e([r()],_e.prototype,"_files",void 0),e([r()],_e.prototype,"_headerInfo",void 0),e([r()],_e.prototype,"_bufferSize",void 0),e([r({type:String,json:{write:!0}})],_e.prototype,"datasetFormat",void 0),_e=e([l("esri.layers.support.rasterDatasets.TIFFRaster")],_e);var Fe=_e;const Oe=new Map;Oe.set("CRF",{desc:"Cloud Raster Format",constructor:de}),Oe.set("MRF",{desc:"Meta Raster Format",constructor:Re}),Oe.set("TIFF",{desc:"GeoTIFF",constructor:Fe}),Oe.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Se}),Oe.set("JPG",{desc:"JPG Raster Format",constructor:Ie}),Oe.set("PNG",{desc:"PNG Raster Format",constructor:Ie}),Oe.set("GIF",{desc:"GIF Raster Format",constructor:Ie}),Oe.set("BMP",{desc:"BMP Raster Format",constructor:Ie});const De=m()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function Le(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let Ae=class extends(P(O(F(k(_(ie(S(j)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const s=t(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._openRaster(s)),(()=>this._openRaster(s)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let s=[new R({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const r=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(r){const e=r.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));s=s.concat(e)}return s}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,s){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,i=v(r,s)||void 0;if(null!=i)return i}createPopupTemplate(e){return D(this,e)}write(e,t){const{raster:s}=this;if(this.loaded?"RasterTileServer"===s.datasetFormat&&("Raster"===s.tileType||"Map"===s.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new n("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return Oe.forEach(((t,s)=>e.add(s))),e}static async open(e){const{url:t,ioConfig:s,sourceJSON:r}=e;let i=e.datasetFormat;null==i&&t.lastIndexOf(".")&&(i=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===i||"TIF"===i?i="TIFF":"JPG"!==i&&"JPEG"!==i&&"JFIF"!==i||(i="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(i="RasterTileServer");const o={url:t,sourceJSON:r,datasetFormat:i,ioConfig:s||{bandIds:null,sampling:null}};let a,l;if(this.supportedFormats.has(i))return a=Oe.get(i).constructor,l=new a(o),await l.open({signal:e.signal}),l;if(i)throw new n("rasterfactory:open","not a supported format "+i);const p=Array.from(Oe.keys());let u=0;const m=function(){return i=p[u++],i?(a=Oe.get(i).constructor,l=new a(o),l.open({signal:e.signal}).then((()=>l)).catch((()=>m()))):null};return m()}static register(e,t,s){Oe.has(e.toUpperCase())||Oe.set(e.toUpperCase(),{desc:t,constructor:s})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new n("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};e([r({type:[a],json:{write:{overridePolicy:Le}}})],Ae.prototype,"bandIds",void 0),e([r({json:{write:{overridePolicy:Le}}}),c(De)],Ae.prototype,"interpolation",void 0),e([r({json:{write:!0}})],Ae.prototype,"multidimensionalDefinition",void 0),e([r(T)],Ae.prototype,"legendEnabled",void 0),e([r({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ae.prototype,"isReference",void 0),e([r({type:["show","hide"]})],Ae.prototype,"listMode",void 0),e([r()],Ae.prototype,"sourceJSON",void 0),e([r({readOnly:!0})],Ae.prototype,"version",void 0),e([r()],Ae.prototype,"title",void 0),e([r({readOnly:!0,json:{read:!1}})],Ae.prototype,"type",void 0),e([r({type:["ArcGISTiledImageServiceLayer"]})],Ae.prototype,"operationalLayerType",void 0),e([r({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:Le,writer(e,t,s){t[s]=!e}}}})],Ae.prototype,"popupEnabled",void 0),e([r({type:x,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Le}}})],Ae.prototype,"popupTemplate",void 0),e([r({readOnly:!0})],Ae.prototype,"defaultPopupTemplate",null),e([r({readOnly:!0,type:[R]})],Ae.prototype,"fields",null),e([r({types:I,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Le},origins:{"web-scene":{types:b,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],Ae.prototype,"renderer",null),e([f("renderer")],Ae.prototype,"readRenderer",null),Ae=e([l("esri.layers.ImageryTileLayer")],Ae);var Be=Ae;export default Be;
