/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../core/lang.js";import"../../chunks/deprecate.js";import"../../chunks/object.js";import"../../kernel.js";import"../../config.js";import{i as e}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import"../../core/accessorSupport/decorators/property.js";import"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/Message.js";import s from"../../core/Error.js";import"../../chunks/compilerUtils.js";import"../../chunks/ensureType.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Evented.js";import"../../core/Collection.js";import"../../chunks/collectionUtils.js";import"../../chunks/JSONSupport.js";import"../../chunks/Promise.js";import"../../chunks/Loadable.js";import"../../chunks/asyncUtils.js";import"../../chunks/loadAll.js";import"../../core/urlUtils.js";import"../../core/accessorSupport/decorators/aliasOf.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/jsonMap.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../chunks/resourceExtension.js";import"../../chunks/persistableUrlUtils.js";import"../../geometry/SpatialReference.js";import"../../chunks/locale.js";import"../../chunks/number.js";import{fetchMessageBundle as o,substitute as r}from"../../intl.js";import"../../request.js";import"../../chunks/assets.js";import"../../geometry/Geometry.js";import"../../geometry/Point.js";import"../../chunks/Ellipsoid.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Extent.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalFolder.js";import"../../portal/PortalGroup.js";import"../../portal/PortalUser.js";import"../../portal/Portal.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../portal/PortalItem.js";import"../../Basemap.js";import"../../chunks/writeUtils.js";import"../../chunks/mathUtils2.js";import"../../chunks/colorUtils.js";import"../../Color.js";import"../../chunks/zmUtils.js";import"../../geometry/Multipoint.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../geometry.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/domains.js";import"../../chunks/arcadeOnDemand.js";import"../../layers/support/fieldUtils.js";import"../../popup/content/Content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/CustomContent.js";import"../../chunks/date.js";import"../../popup/support/FieldInfoFormat.js";import"../../popup/FieldInfo.js";import"../../popup/content/FieldsContent.js";import"../../chunks/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/MediaContent.js";import"../../popup/content/TextContent.js";import"../../popup/content.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/RelatedRecordsInfo.js";import"../../chunks/Identifiable.js";import"../../support/actions/ActionBase.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../PopupTemplate.js";import"../../symbols/Symbol.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol3DLayer.js";import"../../chunks/screenUtils.js";import"../../chunks/opacityUtils.js";import"../../chunks/materialUtils.js";import"../../symbols/edges/Edges3D.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/utils.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/FillSymbol.js";import"../../symbols/patterns/StylePattern3D.js";import"../../symbols/FillSymbol3DLayer.js";import"../../chunks/colors.js";import"../../chunks/Symbol3DOutline.js";import"../../symbols/Font.js";import"../../symbols/IconSymbol3DLayer.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/Symbol3D.js";import"../../chunks/Thumbnail.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../chunks/Symbol3DVerticalOffset.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/MeshSymbol3D.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureFillSymbol.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../symbols.js";import"../../chunks/uid.js";import"../../Graphic.js";import"../../chunks/basemapUtils.js";import"../../renderers/PointCloudRenderer.js";import"../../chunks/PointSizeSplatAlgorithm.js";import"../../chunks/LegendOptions.js";import"../../renderers/PointCloudClassBreaksRenderer.js";import i from"../../renderers/PointCloudRGBRenderer.js";import"../../renderers/visualVariables/support/ColorStop.js";import t from"../../renderers/PointCloudStretchRenderer.js";import"../../renderers/PointCloudUniqueValueRenderer.js";import a from"../../renderers/support/AuthoringInfo.js";import l from"../../renderers/support/AuthoringInfoVisualVariable.js";import"../../tasks/support/ColorRamp.js";import"../../tasks/support/AlgorithmicColorRamp.js";import"../../tasks/support/MultipartColorRamp.js";import"../../chunks/colorRamps.js";import"../../renderers/Renderer.js";import"../../renderers/visualVariables/VisualVariable.js";import n from"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../renderers/visualVariables/support/SizeStop.js";import"../../renderers/visualVariables/SizeVariable.js";import"../../chunks/sizeVariableUtils.js";import"../../chunks/unitUtils.js";import"../../chunks/lengthUtils.js";import"../../chunks/visualVariableUtils.js";import"../../chunks/VisualVariablesMixin.js";import"../../chunks/symbolConversion.js";import"../../symbols/support/jsonUtils.js";import"../../renderers/support/ClassBreakInfo.js";import"../../chunks/commonProperties.js";import m from"../../renderers/ClassBreaksRenderer.js";import"../../chunks/diffUtils.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/devEnvironmentUtils.js";import"../../chunks/styleUtils.js";import"../../renderers/UniqueValueRenderer.js";import"../../chunks/normalizeUtilsCommon.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/MemCache.js";import"../../chunks/LRUCache.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/support/AttributeColorInfo.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/support/HeatmapColorStop.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/support/jsonUtils.js";import"../../chunks/timeUtils.js";import"../../TimeExtent.js";import"../../core/watchUtils.js";import"../../chunks/arcgisLayerUrl.js";import"../../chunks/fieldType.js";import"../../chunks/zscale.js";import"../../chunks/queryZScale.js";import"../../layers/support/Field.js";import"../../tasks/support/FeatureSet.js";import"../../chunks/DataLayerSource.js";import"../../tasks/support/AttachmentQuery.js";import"../../tasks/support/Query.js";import"../../tasks/support/StatisticDefinition.js";import"../../tasks/support/RelationshipQuery.js";import"../../chunks/ClassBreaksDefinition.js";import{c as p,g as u}from"../../chunks/layerUtils2.js";import"../../chunks/utils4.js";import"../../tasks/Task.js";import"../../rest/query/support/AttachmentInfo.js";import"../../chunks/query.js";import"../../chunks/executeRelationshipQuery.js";import"../../chunks/pbf.js";import"../../chunks/OptimizedFeatureSet.js";import"../../chunks/pbfQueryUtils.js";import"../../chunks/featureConversionUtils.js";import"../../tasks/QueryTask.js";import"../../chunks/scaleUtils.js";import"../../chunks/spatialStatistics.js";import{a as c,b as d}from"../../chunks/utils5.js";import"../../chunks/quantizationUtils.js";import"../../chunks/predominanceUtils.js";import"../../chunks/heatmapUtils.js";import"../heuristics/scaleRange.js";import y from"../heuristics/sizeRange.js";import"../../chunks/numberUtils.js";import{c as h,s as b}from"../../chunks/utils7.js";import"../statistics/summaryStatistics.js";import{getAgeExpressions as j,verifyDates as f,supportedAgeUnits as v}from"../statistics/support/ageUtils.js";import"../statistics/summaryStatisticsForAge.js";import{a as g}from"../../chunks/ageUnit.js";import{g as w,a as k,o as S,b as T,f as x,u as V,c as E,v as z,i as M,d as I,e as U,h as C,j as P,k as O,l as D,m as R,n as F,p as q,q as L}from"../../chunks/utils8.js";import"../statistics/classBreaks.js";import"../../views/support/colorUtils.js";import"../../chunks/colors2.js";import"../../chunks/symbologyUtils.js";import"../../chunks/utils9.js";import{cloneScheme as B,getSchemes as A,getSchemeById as Q}from"../symbology/color.js";function G(e){const s={...e},o=s.symbolType.indexOf("3d-volumetric")>-1;delete s.symbolType,delete s.defaultSymbolEnabled,delete s.colorMixMode,delete s.edgesType;const r=s;return r.worldScale=o,r}async function W(s,o){let r=s.colorScheme,i=null,t=null;const a=await q(s.basemap,s.view);if(i=e(a.basemapId)?a.basemapId:null,t=e(a.basemapTheme)?a.basemapTheme:null,r)return{scheme:B(r),basemapId:i,basemapTheme:t};const l=o||s.theme||"high-to-low",n=A({theme:l,basemap:i,basemapTheme:t,geometryType:s.geometryType,worldScale:s.worldScale,view:s.view});if(n)if(i=n.basemapId,t=n.basemapTheme,s.schemeId){const e=l+"/"+i+"/"+s.schemeId;r=Q({id:e,geometryType:s.geometryType})}else r=n.primaryScheme;return{scheme:r,basemapId:i,basemapTheme:t}}async function H(e,s,r,i,t,a){const l=await o("esri/smartMapping/t9n/smartMapping"),n=a.layer,p=a.field,u=n.geometryType,c=a.defaultSymbolEnabled,d=B(e.colorScheme),y=s&&s.opacity,h=[e.visualVariable.clone()];s&&s.visualVariables&&s.visualVariables.length&&h.push(...s.visualVariables.map((e=>e.clone()))),r&&r.minSize&&h.push(r.minSize);return{renderer:new m({classBreakInfos:[{minValue:-9007199254740991,maxValue:9007199254740991,symbol:D(u,{type:a.symbolType,color:d.noDataColor,size:R(d,u),outline:F(d,u,y),meshInfo:{colorMixMode:a.colorMixMode,edgesType:a.edgesType}})}],defaultLabel:c?l.other:null,defaultSymbol:c?D(u,{type:a.symbolType,color:d.noDataColor,size:R(d,u),outline:F(d,u,y),meshInfo:{colorMixMode:a.colorMixMode,edgesType:a.edgesType}}):null,field:p,normalizationType:i,normalizationField:t,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,visualVariables:h,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariable:e.visualVariable.clone(),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,colorScheme:B(e.colorScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}async function $(o){const r=await async function(o){if(!(o&&o.layer&&(o.field||o.valueExpression||o.sqlExpression)))throw new s("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(o.valueExpression&&!o.sqlExpression&&!o.view)throw new s("color-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");const r={...o};if("90-10"===r.theme)throw new s("color-visual-variable:not-supported","Only 'high-to-low', 'above-and-below', 'centered-on', 'extremes', 'above', 'below' themes are supported.");const i=[0,2,1,3],t=p(r.layer,i);if(r.layer=t,!t)throw new s("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+u(i).join(", "));const a=e(r.signal)?{signal:r.signal}:null;if(await t.load(a),"mesh"!==t.geometryType&&r.worldScale&&(!r.view||"3d"!==r.view.type))return Promise.reject(E("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"));const l=await c({field:r.field,normalizationField:r.normalizationField,valueExpression:r.valueExpression}),n=z(t,l,"color-visual-variable:invalid-parameters");if(n)throw n;return r}(o),{view:i,field:t,valueExpression:m,minValue:d,maxValue:y,layer:h,normalizationField:b,signal:j,statistics:f}=r,v=b?"field":void 0,[g,S]=await Promise.all([f||w({layer:h,field:t,valueExpression:m,sqlExpression:r.sqlExpression,sqlWhere:r.sqlWhere,normalizationType:v,normalizationField:b,minValue:d,maxValue:y,view:i,signal:j}),"90-10"===r.theme?k({layer:h,field:t,normalizationField:b,valueExpression:m,classificationMethod:"quantile",minValue:d,maxValue:y,view:i,numClasses:10,signal:j}):null]);return async function(e,s,o){const r=e.layer,{field:i,theme:t}=e,m=i&&"function"!=typeof i?r.getField(i):null,p=m&&"date"===m.type,u=await W({basemap:e.basemap,theme:e.theme,geometryType:r.geometryType,colorScheme:e.colorScheme,worldScale:e.worldScale,view:e.view}),c=u.scheme;if(!c)throw E("color-visual-variable:insufficient-info","Unable to find color scheme");const d=I(c.colors,5);if(d.length<5)throw E("color-visual-variable:insufficient-info","Color scheme does not have enough colors");const y=c.id.indexOf("seq-")>-1,h=P(s,o,t,p,"90-10"!==t),b=O(h,s,t,y),j=I(d,5),f=new n({field:i,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationField:e.normalizationField,stops:b.map(((e,s)=>({value:e,color:j[s]}))),legendOptions:e.legendOptions}),v=new l({type:"color",minSliderValue:null!=e.minValue?e.minValue:s.min,maxSliderValue:null!=e.maxValue?e.maxValue:s.max,theme:c.theme}),g=new a({visualVariables:[v]});return{basemapId:u.basemapId,basemapTheme:u.basemapTheme,visualVariable:f,statistics:s,defaultValuesUsed:h.defaultValuesUsed,colorScheme:B(c),authoringInfo:g}}(r,g,null==S?void 0:S.result)}async function J(e,r){const i=await o("esri/smartMapping/t9n/smartMapping"),t=e.layer,l=e.defaultSymbolEnabled,n=t.geometryType,p=await W({basemap:e.basemap,geometryType:n,colorScheme:e.colorScheme,worldScale:e.symbolType.indexOf("3d-volumetric")>-1,view:e.view}),u=p.scheme,{result:c,outlineResult:d}=r,y=c.classBreakInfos,h=e.classificationMethod,j="standard-deviation"===h,f=e.normalizationType;if(!u)throw new s("color-class-breaks-renderer:insufficient-info","Unable to find color scheme");const v=function(e,s){const o=e.colorsForClassBreaks;let r;if(o&&o.length>0&&(o.some((e=>(e.numClasses===s&&(r=e.colors),!!r))),!r)){const e=o[o.length-1],i=s-e.numClasses;if(i>0){const s=e.colors[e.numClasses-1];r=e.colors.splice(0);for(let e=1;e<=i;e++)r.push(s)}}return r&&(r=I(r,r.length)),r}(u,y.length);if(!v||v.length!==y.length)throw new s("color-class-breaks-renderer:insufficient-info","Color scheme does not have enough colors");const g=d&&d.opacity,w=new m({classBreakInfos:y.map(((s,o)=>({minValue:s.minValue,maxValue:s.maxValue,symbol:D(n,{type:e.symbolType,color:v[o],size:R(u,n),outline:F(u,n,g),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}),label:s.label}))),defaultLabel:l?i.other:null,defaultSymbol:l?D(n,{type:e.symbolType,color:u.noDataColor,size:R(u,n),outline:F(u,n,g),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:f,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===f?c.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new a({type:"class-breaks-color",classificationMethod:h,standardDeviationInterval:e.standardDeviationInterval})});return j||b({classBreakInfos:w.classBreakInfos,classificationMethod:h,normalizationType:f,round:!0}),d&&d.visualVariables&&d.visualVariables.length&&(w.visualVariables=d.visualVariables.map((e=>e.clone()))),{renderer:w,colorScheme:B(u),classBreaksResult:c,defaultValuesUsed:r.defaultValuesUsed,basemapId:p.basemapId,basemapTheme:p.basemapTheme}}async function N(o){const r=await async function(o){if(!(o&&o.layer&&(o.field||o.valueExpression||o.sqlExpression)))throw new s("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(o.valueExpression&&!o.sqlExpression&&!o.view)throw new s("color-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");const r={...o};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled;const i=[0,2,1,3],t=p(r.layer,i);if(r.layer=t,!t)throw new s("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+u(i).join(", "));const a=e(r.signal)?{signal:r.signal}:null;await t.load(a);const l=t.geometryType;if(r.outlineOptimizationEnabled="polygon"===l&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=("point"===l||"multipoint"===l||"polyline"===l)&&r.sizeOptimizationEnabled,"mesh"===l)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else{if("3d-volumetric-uniform"===r.symbolType&&"point"!==l)throw new s("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.indexOf("3d-volumetric")>-1&&(!r.view||"3d"!==r.view.type))throw new s("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const n=await c({field:r.field,normalizationField:r.normalizationField,valueExpression:r.valueExpression}),m=z(t,n,"color-continuous-renderer:invalid-parameters");if(m)throw m;return r}(o),{layer:i,view:t,signal:a}=r,[l,n,m]=await Promise.all([$(G(r)),r.outlineOptimizationEnabled?S({layer:i,view:t,signal:a}):null,r.sizeOptimizationEnabled?y({layer:i,view:t,signal:a}):null]),d=r.normalizationField;return H(l,n,m,d?"field":void 0,d,r)}async function Z(o){const r=await async function(o){if(!o||!o.layer||!o.field&&!o.valueExpression)throw new s("color-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(o.valueExpression&&!o.view)throw new s("color-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");const r={...o};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled,r.classificationMethod=r.classificationMethod||"equal-interval",r.normalizationType=d(r);const i=[0,2,1,3],t=p(r.layer,i);if(r.layer=t,!t)throw new s("color-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+u(i).join(", "));if(!(null!=r.minValue&&null!=r.maxValue||null==r.minValue&&null==r.maxValue))throw new s("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const a=e(r.signal)?{signal:r.signal}:null;await t.load(a);const l=t.geometryType;if(r.outlineOptimizationEnabled="polygon"===l&&r.outlineOptimizationEnabled,"mesh"===l)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else{if("3d-volumetric-uniform"===r.symbolType&&"point"!==l)throw new s("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.indexOf("3d-volumetric")>-1&&(!r.view||"3d"!==r.view.type))throw new s("color-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const n=await c({field:r.field,normalizationField:r.normalizationField}),m=z(t,n,"color-class-breaks-renderer:invalid-parameters");if(m)throw m;return r}(o);return J(r,await k(function(e){const s={...e};delete s.basemap,delete s.colorScheme,delete s.legendOptions,delete s.symbolType,delete s.defaultSymbolEnabled,delete s.colorMixMode,delete s.edgesType;const o=s;return o.analyzeData=!(null!=s.minValue&&null!=s.maxValue),o}(r),r.outlineOptimizationEnabled))}function _(s){return function(s){if(!s||!s.layer)return Promise.reject(E("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));const o={...s},r=[4],i=p(o.layer,r);if(o.layer=i,o.density=o.density||25,o.size=o.size||"100%",!M(o.size))return Promise.reject(E("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!i)return Promise.reject(E("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+u(r).join(", ")));const t=e(o.signal)?{signal:o.signal}:null;return i.load(t).then((()=>o))}(s).then((e=>({renderer:new i({field:"RGB",pointsPerInch:e.density,pointSizeAlgorithm:T(e.size)})})))}async function K(s){const o=await function(s){if(!(s&&s.layer&&s.field))return Promise.reject(E("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required"));const o=s.field.toLowerCase();if("intensity"!==o&&"elevation"!==o)return Promise.reject(E("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));const r={...s},i=[4],t=p(r.layer,i);if(r.layer=t,r.density=r.density||25,r.size=r.size||"100%",!M(r.size))return Promise.reject(E("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!t)return Promise.reject(E("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+u(i).join(", ")));const a=e(r.signal)?{signal:r.signal}:null;return t.load(a).then((()=>r))}(s),r=o.statistics?o.statistics:await w({layer:o.layer,field:o.field,signal:o.signal}),i=await async function(e,s){const o=s.layer,r=await W({basemap:s.basemap,colorScheme:s.colorScheme,geometryType:o.geometryType,schemeId:"elevation"===s.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),i=r.scheme;if(!i)throw E("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme");const t=I(i.colors,5);if(t.length<5)throw E("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors");const a=U(e,!1,!0),l=a?L(a[0],a[1],5):C(e);return{stops:h({values:l,isDate:!1,dateFormatOptions:null,colors:t,labelIndexes:[0,2,4]}),basemapId:r.basemapId,basemapTheme:r.basemapTheme,statistics:e,defaultValuesUsed:!!a,colorScheme:B(i)}}(r,o);return{renderer:new t({field:o.field,pointsPerInch:o.density,pointSizeAlgorithm:T(o.size),stops:i.stops}),basemapId:i.basemapId,basemapTheme:i.basemapTheme,statistics:i.statistics,defaultValuesUsed:i.defaultValuesUsed,colorScheme:i.colorScheme}}async function X(i){const t=await o("esri/smartMapping/t9n/smartMapping"),a=await async function(o){if(!(o&&o.layer&&o.view&&o.startTime&&o.endTime))throw new s("color-age-renderer:missing-parameters","'layer', 'view', startTime', 'endTime' parameters are required");const r={...o};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled=null==r.defaultSymbolEnabled||r.defaultSymbolEnabled;const i=[0,2,1,3],t=p(r.layer,i);if(r.layer=t,!t)throw new s("color-age-renderer:invalid-parameters","'layer' must be one of these types: "+u(i).join(", "));const a=e(r.signal)?{signal:r.signal}:null;await t.load(a);const l=t.geometryType;if(r.outlineOptimizationEnabled="polygon"===l&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=("point"===l||"multipoint"===l||"polyline"===l)&&r.sizeOptimizationEnabled,"mesh"===l)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else if("3d-volumetric-uniform"===r.symbolType&&"point"!==l)throw new s("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.indexOf("3d-volumetric")>-1&&(!r.view||"3d"!==r.view.type))throw new s("color-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");const n=f(t,r.startTime,r.endTime,"color-age-renderer:invalid-parameters");if(n)throw n;if(r.unit&&-1===v.indexOf(r.unit))throw new s("color-age-renderer:invalid-unit",`Supported units are: ${v.join(", ")}`);return r}(i),{defaultSymbolEnabled:l,view:n,startTime:m,endTime:c,symbolType:d,colorMixMode:h,edgesType:b,minValue:w,maxValue:k,signal:T}=a,E=a.layer,[z,M,I]=await Promise.all([a.unit?{unit:a.unit,statistics:null}:g({view:n,layer:E,startTime:m,endTime:c,minValue:w,maxValue:k,signal:T}),a.outlineOptimizationEnabled?S({layer:E,view:n,signal:T}):null,a.sizeOptimizationEnabled?y({layer:E,view:n,signal:T}):null]),{unit:U,statistics:C}=z,P=j({layer:E,startTime:m,endTime:c,unit:U}).valueExpression,O=r(t[`ageInfo_${U}`],{unit:U,startTime:x(m,U,E),endTime:x(c,U,E)}),D=await $(G({layer:E,basemap:a.basemap,valueExpression:P,symbolType:d,statistics:C,legendOptions:{title:O},colorScheme:a.colorScheme,theme:a.theme,view:n,minValue:a.minValue,maxValue:a.maxValue,signal:T})),R={layer:E,valueExpression:P,defaultSymbolEnabled:l,symbolType:d,colorMixMode:h,edgesType:b},F=await H(D,M,I,null,null,R);return F.renderer.authoringInfo.visualVariables.forEach((e=>V(e,m,c,U))),{...F,unit:U}}export{X as createAgeRenderer,Z as createClassBreaksRenderer,N as createContinuousRenderer,K as createPCContinuousRenderer,_ as createPCTrueColorRenderer,$ as createVisualVariable};
