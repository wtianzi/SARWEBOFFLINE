/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as r}from"../chunks/tslib.es6.js";import"../chunks/ArrayPool.js";import"../core/lang.js";import"../chunks/deprecate.js";import"../chunks/object.js";import"../config.js";import"../chunks/Logger.js";import"../chunks/string.js";import"../chunks/metadata.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import o from"../core/Accessor.js";import"../chunks/PropertyOrigin.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../chunks/Message.js";import"../core/Error.js";import"../chunks/ensureType.js";import{subclass as t}from"../core/accessorSupport/decorators/subclass.js";import{urlToObject as e}from"../core/urlUtils.js";import"../chunks/resourceExtension.js";let i=class extends o{constructor(...r){super(...r),this.requestOptions=null,this.url=null}normalizeCtorArgs(r,s){return"string"!=typeof r?r:{url:r,...s}}get parsedUrl(){return this._parseUrl(this.url)}_parseUrl(r){return r?e(r):null}_encode(r,s,o){const t={};for(const e in r){if("declaredClass"===e)continue;const i=r[e];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){t[e]=[];for(let r=0;r<i.length;r++)t[e][r]=this._encode(i[r])}else if("object"==typeof i)if(i.toJSON){const r=i.toJSON(o&&o[e]);t[e]=s?r:JSON.stringify(r)}else t[e]=s?i:JSON.stringify(i);else t[e]=i}return t}};r([s({readOnly:!0})],i.prototype,"parsedUrl",null),r([s()],i.prototype,"requestOptions",void 0),r([s({type:String})],i.prototype,"url",void 0),i=r([t("esri.tasks.Task")],i);var n=i;export default n;
