// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../geometry/Point ../../geometry ../../core/Handles ../input/InputManager ../support/screenUtils ../interactive/editGeometry/EditGeometry ../interactive/editGeometry/EditGeometryHelper ./DrawAction ./input/DrawEvents ./input/Keys ../3d/interactive/editingTools/draw/DrawTool ./support/surfaceCoordinateSystems".split(" "),
function(h,r,m,C,b,D,E,t,F,u,G,H,I,v,J,w,e,f,n,x,y,g,k,z,A){h.SegmentDrawAction=function(p){function l(a){a=p.call(this,a)||this;a._isDragging=!1;a._panEnabled=!1;a._cursorScreenPoint=null;a._viewHandles=new w;a._activePointerId=null;a._addVertexOnPointerUp=!1;a.viewAlignedCoordinateSystem=null;a.mode="freehand";return a}r._inheritsLoose(l,p);var d=l.prototype;d.initialize=function(){"2d"===this.view.type?this._addViewHandles():this._addDrawTool(this.view)};d.destroy=function(){"2d"===this.view.type?
(this._removeViewHandles(),this._viewHandles.destroy()):this._removeDrawTool();this.emit("destroy")};d.complete=function(){"2d"===this.view.type?this._completeDrawing():this._drawTool.completeCreateOperation()};d.getGeometryZValue=function(){return 0<this.vertices.length&&2<this.vertices[0].length?this.vertices[0][2]:this._get("defaultZ")};d._addViewHandles=function(){this._removeViewHandles();"click"===this.mode?this._viewHandles.add(this._getClickModeViewHandles()):this._viewHandles.add(this._getDragModeViewHandles())};
d._getDragModeViewHandles=function(){return[this.view.on("immediate-click",a=>{a.stopPropagation();if(a.mapPoint&&!this._panEnabled){const c=this.getCoordsFromScreenPoint(f.createScreenPointFromEvent(a));b.isSome(c)&&(this._vertexAddHandler(a),this._drawCompleteHandler(a))}},e.ViewEventPriorities.TOOL),this.view.on("pointer-down",a=>{this._shouldHandlePointerEvent(a)&&(this._snappingTask=b.abortMaybe(this._snappingTask),this._panEnabled||(this._resetGeometry(),this._addVertexOnPointerUp=!0,this._cursorScreenPoint=
f.createScreenPointFromEvent(a),this._activePointerId=a.pointerId,this._vertexAddHandler(a),this._isDragging=!1,"touch"===a.pointerType&&this._updateCursor(a.native)))},e.ViewEventPriorities.TOOL),this.view.on("pointer-move",a=>{this._snappingTask=b.abortMaybe(this._snappingTask);b.isNone(this._activePointerId)&&"touch"!==a.pointerType&&(this._cursorScreenPoint=f.createScreenPointFromEvent(a),this._updateCursor(a.native))},e.ViewEventPriorities.TOOL),this.view.on("pointer-drag",a=>{this._shouldHandlePointerEvent(a)&&
(this._snappingTask=b.abortMaybe(this._snappingTask),this._isDragging=!0,this._cursorScreenPoint=f.createScreenPointFromEvent(a),this._updateCursor(a.native))},e.ViewEventPriorities.TOOL),this.view.on("pointer-up",a=>{this._shouldHandlePointerEvent(a)&&this._addVertexOnPointerUp&&(this._snappingTask=b.abortMaybe(this._snappingTask),this._activePointerId=null,this._isDragging&&this._vertexAddHandler(a),2===this._committedVertices.length&&this._drawCompleteHandler(a),this._isDragging=!1)},e.ViewEventPriorities.TOOL),
this.view.on("key-down",a=>{a.key===k.KEYS.drawCompleteKey&&this._cursorScreenPoint?(this._snappingTask=b.abortMaybe(this._snappingTask),this._drawCompleteHandler(a)):a.key===k.KEYS.panKey&&(this._panEnabled=!0)},e.ViewEventPriorities.TOOL),this.view.on("key-up",a=>{a.key===k.KEYS.panKey&&(this._panEnabled=!1)},e.ViewEventPriorities.TOOL),this.view.on("drag",a=>{b.isSome(this._activePointerId)&&a.stopPropagation()},e.ViewEventPriorities.TOOL),this.view.on("drag",["Shift"],a=>{a.stopPropagation()},
e.ViewEventPriorities.TOOL)]};d._getClickModeViewHandles=function(){return[this.view.on("pointer-down",a=>{this._snappingTask=b.abortMaybe(this._snappingTask);this._cursorScreenPoint=f.createScreenPointFromEvent(a);this._activePointerId=a.pointerId;this._isDragging=!1;"touch"===a.pointerType&&this._updateCursor(a.native)},e.ViewEventPriorities.TOOL),this.view.on("pointer-move",a=>{this._snappingTask=b.abortMaybe(this._snappingTask);this._cursorScreenPoint=f.createScreenPointFromEvent(a);b.isNone(this._activePointerId)&&
"touch"!==a.pointerType&&this._updateCursor(a.native)},e.ViewEventPriorities.TOOL),this.view.on("pointer-drag",a=>{this._shouldHandlePointerEvent(a)&&(this._snappingTask=b.abortMaybe(this._snappingTask),this._isDragging=!0)},e.ViewEventPriorities.TOOL),this.view.on("pointer-up",a=>{this._shouldHandlePointerEvent(a)&&(this._snappingTask=b.abortMaybe(this._snappingTask),this._activePointerId=null,a.stopPropagation(),this._isDragging||this._vertexAddHandler(a),2!==this.vertices.length||this._isDragging||
this._drawCompleteHandler(a),this._isDragging=!1)},e.ViewEventPriorities.TOOL),this.view.on("key-down",a=>{a.key===k.KEYS.vertexAddKey&&this._cursorScreenPoint&&(this._vertexAddHandler(a),2===this.vertices.length&&this._drawCompleteHandler(a));a.key===k.KEYS.drawCompleteKey&&this._cursorScreenPoint&&2===this.vertices.length&&this._drawCompleteHandler(a)},e.ViewEventPriorities.TOOL)]};d._removeViewHandles=function(){this._viewHandles.removeAll()};d._addDrawTool=function(a){this._drawTool=new z.DrawTool({view:a,
elevationInfo:this.elevationInfo,hasZ:this.hasZ,geometryType:"segment",mode:this.mode});this.view.toolViewManager.tools.push(this._drawTool);this.view.activeTool=this._drawTool;this._drawTool.on("vertex-add",c=>{1===c.vertices.length&&this.emit("vertex-add",new g.VertexAddEvent(this.view,null,c.vertices[0].vertexIndex,this._drawTool.getVertexCoords()))});this._drawTool.on("cursor-update",c=>{1===c.vertices.length&&this.emit("cursor-update",new g.CursorUpdateEvent(this.view,null,c.vertices[0].vertexIndex,
this._drawTool.getVertexCoords()))});this._drawTool.on("complete",c=>{this.emit("draw-complete",new g.DrawCompleteEvent(null,this._drawTool.getVertexCoords()));this._removeDrawTool()})};d._removeDrawTool=function(){b.isSome(this._drawTool)&&(this.view.tools.remove(this._drawTool),this._drawTool.destroy(),this._drawTool=null)};d._addVertex=function(a,c){a=this._coordinateHelper.fromArray(a);this._isDuplicateOfLastVertex(a)||(this._lastVertexUnsnapped=this._stagedVertexUnsnapped,this._popCursorVertex(),
this._editGeometry.appendVertex(a),1===this._committedVertices.length&&(this.viewAlignedCoordinateSystem=A.createViewAlignedCoordinateSystem(this.view,this._committedVertices[0])),c=new g.VertexAddEvent(this.view,c,this._committedVertices.length-1,this.vertices),this.emit("vertex-add",c))};d._updateCursor=function(a){this._popCursorVertex();if(this._cursorScreenPoint){var c=this.getCoordsAndPointFromScreenPoint(this._cursorScreenPoint);if(b.isSome(c)){this._pushCursorVertex(c.vertex);const q=()=>
new g.CursorUpdateEvent(this.view,a,this._activeComponent.vertices.length,this.vertices,b.isSome(this._stagedVertex)?new v(this._stagedVertex):null);this.emit("cursor-update",q());b.isSome(this._snappingTask)&&this._snappingTask.promise.then(B=>{B.valid&&this.emit("cursor-update",q())},()=>{})}}};d._completeDrawing=function(a){this._activePointerId=null;this._popCursorVertex();this._cursorScreenPoint=null;this._isDragging=!1;this._snappingTask=b.abortMaybe(this._snappingTask);b.isSome(this._snappingManager)&&
this._snappingManager.doneSnapping();1>this.vertices.length||(a=new g.DrawCompleteEvent(a,this.vertices),this.emit("draw-complete",a),a.defaultPrevented||this._removeViewHandles())};d._resetGeometry=function(){this._editGeometry.destroy();this._editGeometry=new x.EditGeometryHelper(new n.EditGeometry(this._coordinateHelper),"polygon");this._activeComponent=new n.Component(this._editGeometry.editGeometry);this._editGeometry.editGeometry.components.push(this._activeComponent)};d._shouldHandlePointerEvent=
function(a){return("mouse"!==a.pointerType||0===a.button)&&(b.isNone(this._activePointerId)||this._activePointerId===a.pointerId)};d._vertexAddHandler=function(a){const c=b.isSome(this._stagedVertex)?this._coordinateHelper.pointToArray(this._stagedVertex):this.getCoordsFromScreenPoint(this._cursorScreenPoint);b.isSome(c)&&this._addVertex(c,a.native)};d._drawCompleteHandler=function(a){this._completeDrawing(a.native)};return l}(y);m.__decorate([t.property({type:["freehand","click"]})],h.SegmentDrawAction.prototype,
"mode",void 0);h.SegmentDrawAction=m.__decorate([u.subclass("esri/views/2d/engine/markup/SegmentDrawAction")],h.SegmentDrawAction);Object.defineProperty(h,"__esModule",{value:!0})});