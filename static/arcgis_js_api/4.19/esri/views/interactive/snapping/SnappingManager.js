// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/maybe ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../core/promiseUtils ../../../core/accessorSupport/trackingUtils ../../../geometry/SpatialReference ../../../geometry/Point ../../../core/Evented ../../../core/watchUtils ../../../core/HandleOwner ../../../chunks/vec2 ./snappingUtils ./SnappingOptions ./FeatureSnappingEngine ./SelfSnappingEngine ./candidates/IntersectionSnappingCandidate".split(" "),
function(h,v,k,L,q,M,N,n,O,z,P,Q,R,A,B,C,D,E,F,G,H,l,w,I,J,r){h.SnappingManager=function(x){function t(a){a=x.call(this,a)||this;a.options=new w;a.engines=[];a._currentMainCandidate=null;a._currentOtherActiveCandidates=[];a.options=new w;return a}v._inheritsLoose(t,x);var g=t.prototype;g.initialize=function(){this.handles.add([B.reaction(()=>{const {effectiveFeatureEnabled:a,effectiveSelfEnabled:b,touchSensitivityMultiplier:d,distance:c}=this.options;return{effectiveFeatureEnabled:a,effectiveSelfEnabled:b,
touchSensitivityMultiplier:d,distance:c}},()=>{this.doneSnapping();this.emit("changed")}),this.watch("options",a=>{for(const b of this.engines)b.options=a},!0),F.init(this.view,"ready",a=>this.onViewReady(a),!0)])};g.destroy=function(){this.destroyEngines()};g.onViewReady=function(a){this.destroyEngines();if(a){var b,d;this.engines=[new J.SelfSnappingEngine({view:this.view,options:this.options}),new I.FeatureSnappingEngine({view:this.view,spatialReference:null!=(b=null==(d=this.view)?void 0:d.spatialReference)?
b:C.WGS84,options:this.options})]}};g.destroyEngines=function(){for(const a of this.engines)a.destroy();this.engines.length=0};g.snap=async function(a,b,d){const c=b.coordinateHelper.fromPoint(a),f=await this.fetchCandidates(c,b,d);return{get valid(){return!A.isAborted(d)},apply:()=>{const {snappedPoint:e,hints:m}=this.processCandidates(c,f,b);this.removeVisualization();q.isSome(b.visualizer)&&this.handles.add(b.visualizer.draw(m,{coordinateHelper:b.coordinateHelper,elevationInfo:b.elevationInfo,
view:this.view}),"visualization-handle");return e}}};g.update=function(a,b){this.removeVisualization();let d=a;const c=[];if(q.isSome(this._currentMainCandidate)){const f=b.coordinateHelper;a=f.fromPoint(a);const e=this._currentMainCandidate.constraint.closestTo(a);if(l.squareDistance(l.anyMapPointToScreenPoint(a,f,b.elevationInfo,this.view),l.anyMapPointToScreenPoint(e,f,b.elevationInfo,this.view))<this.squaredPointProximityThreshold(b.pointer)){d=f.createDehydratedPoint(e);this._currentMainCandidate.targetPoint=
e;c.push(...this._currentMainCandidate.hints);for(const m of this._currentOtherActiveCandidates)m.targetPoint=e,c.push(...m.hints)}else this._currentMainCandidate=null,this._currentOtherActiveCandidates=[]}q.isSome(b.visualizer)&&this.handles.add(b.visualizer.draw(c,{coordinateHelper:b.coordinateHelper,elevationInfo:b.elevationInfo,view:this.view}),"visualization-handle");return d};g.doneSnapping=function(){this.removeVisualization();this._currentMainCandidate=null;this._currentOtherActiveCandidates=
[]};g.removeVisualization=function(){this.handles.remove("visualization-handle")};g.fetchCandidates=async function(a,b,d){return(await Promise.all(this.engines.map(c=>c.fetchCandidates(a,b,d)))).flat()};g.processCandidates=function(a,b,d){if(1>b.length)return this.doneSnapping(),{snappedPoint:d.coordinateHelper.toPoint(a,new D),hints:[]};l.sortCandidatesInPlace(a,b);const c=this._currentMainCandidate;if(q.isSome(c)){const f=this.findOldConstraintInNewCandidates(c,b);if(0<=f)if(b[f]instanceof r.IntersectionSnappingCandidate){if(H.squaredDistance(a,
c.targetPoint)<this.squaredPointProximityThreshold(d.pointer))return this.updateSnappingCandidate(c,b,d)}else return this.intersectWithOtherCandidates(f,b,a,d)}return this.intersectWithOtherCandidates(0,b,a,d)};g.findOldConstraintInNewCandidates=function(a,b){return a instanceof r.IntersectionSnappingCandidate?0<=this.findOldCandidateIndex(b,a.first)&&0<=this.findOldCandidateIndex(b,a.second)?0:-1:this.findOldCandidateIndex(b,a)};g.intersectWithOtherCandidates=function(a,b,d,c){const f=b[a],e=[],
m=c.coordinateHelper;for(let p=0;p<b.length;++p){if(p===a)continue;const u=b[p];for(const K of f.constraint.intersect(u.constraint)){const y=m.fromXYZ(K.intersection,f.targetPoint[2]);e.push([new r.IntersectionSnappingCandidate(m,y,f,u),l.squareDistance(l.anyMapPointToScreenPoint(d,c.coordinateHelper,c.elevationInfo,this.view),l.anyMapPointToScreenPoint(y,c.coordinateHelper,c.elevationInfo,this.view))])}}return 0<e.length&&(e.sort((p,u)=>p[1]-u[1]),e[0][1]<this.squaredPointProximityThreshold(c.pointer))?
this.updateSnappingCandidate(e[0][0],b,c):this.updateSnappingCandidate(f,b,c)};g.updateSnappingCandidate=function(a,b,d){this.doneSnapping();this._currentMainCandidate=a;const c=this._currentMainCandidate.targetPoint,f=[];f.push(...a.hints);for(const e of b){if(a instanceof r.IntersectionSnappingCandidate){if(e.constraint.objectEqual(a.first.constraint)||e.constraint.objectEqual(a.second.constraint))continue}else if(e.constraint.objectEqual(a.constraint))continue;e.constraint.check(c)&&(e.targetPoint=
c,this._currentOtherActiveCandidates.push(e),f.push(...e.hints))}return{snappedPoint:d.coordinateHelper.createDehydratedPoint(c),hints:f}};g.squaredPointProximityThreshold=function(a){return"touch"===a?this.squaredTouchProximityThreshold:this.squaredMouseProximityTreshold};g.findOldCandidateIndex=function(a,b){let d=-1;for(let c=0;c<a.length;++c)if(b.constraint.objectEqual(a[c].constraint)){d=c;break}return d};v._createClass(t,[{key:"updating",get:function(){return this.engines.some(a=>a.updating)}},
{key:"squaredMouseProximityTreshold",get:function(){return this.options.distance*this.options.distance}},{key:"squaredTouchProximityThreshold",get:function(){const {distance:a,touchSensitivityMultiplier:b}=this.options,d=a*b;return d*d}},{key:"test",get:function(){return{visualizationsActive:this.handles.has("visualization-handle")}}}]);return t}(E.EventedMixin(G.HandleOwner));k.__decorate([n.property({constructOnly:!0})],h.SnappingManager.prototype,"view",void 0);k.__decorate([n.property()],h.SnappingManager.prototype,
"options",void 0);k.__decorate([n.property({readOnly:!0})],h.SnappingManager.prototype,"updating",null);k.__decorate([n.property()],h.SnappingManager.prototype,"engines",void 0);k.__decorate([n.property()],h.SnappingManager.prototype,"squaredMouseProximityTreshold",null);k.__decorate([n.property()],h.SnappingManager.prototype,"squaredTouchProximityThreshold",null);h.SnappingManager=k.__decorate([z.subclass("esri.views.interactive.snapping.SnappingManager")],h.SnappingManager);Object.defineProperty(h,
"__esModule",{value:!0})});