// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("require exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/maybe ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../core/promiseUtils ../../../chunks/vec3f64 ../../../core/Handles ../../../core/watchUtils ../../../core/HandleOwner ../../../core/MapUtils ./snappingUtils ./candidates/FeatureSnappingCandidate".split(" "),
function(t,l,v,n,H,g,I,J,p,K,y,L,M,N,w,z,A,x,B,C,r,D){l.FeatureSnappingEngine=function(q){function k(a){a=q.call(this,a)||this;a.sourceModules={featureService:{module:null,loader:null},featureCollection:{module:null,loader:null},graphics:{module:null,loader:null}};return a}v._inheritsLoose(k,q);var e=k.prototype;e.initialize=function(){this.updatingHandles.add(this,"snappingSources",()=>{this.notifyChange("updating")},1);if(g.isSome(this.view)){var a;this.handles.add([null==(a=this.view.refreshManager)?
void 0:a.on("refresh",b=>{"interval"===b.trigger&&this.refreshSourceOfLayer(b.layerView.layer)}),this.view.on("layerview-create",b=>this.updateLayerView(b.layer,b.layerView)),this.view.on("layerview-destroy",b=>this.updateLayerView(b.layer,null))])}};e.refreshSourceOfLayer=function(a){for(const [,{snappingSource:b}]of this.snappingSources)b.layerSource.layer===a&&b.refresh()};e.updateLayerView=function(a,b){for(const [,c]of this.snappingSources)c.snappingSource.layerSource.layer===a&&(c.layerView=
b)};e.destroy=function(){this._set("options",null);for(const [,a]of this.snappingSources)a.destroy()};e.fetchCandidates=async function(a,b,c){if(!this.options.effectiveFeatureEnabled)return[];var d=[];const f={distance:this.computeScreeenSizeDistanceParameters(a,b),point:a,coordinateHelper:b.coordinateHelper,types:this.types,filter:null};for(const [,{snappingSource:m,layerView:h}]of this.snappingSources)!m.layerSource.enabled||g.isSome(h)&&h.suspended||d.push(m.fetchCandidates(f,c).then(({candidates:u})=>
u.filter(E=>!this.candidateIsExcluded(m,E,b.excludeFeature))));d=(await w.eachAlwaysValues(d)).flat();w.throwIfAborted(c);r.sortCandidatesInPlace(a,d);return d};e.computeScreeenSizeDistanceParameters=function(a,b){const c=this.options.distance*("touch"===b.pointer?this.options.touchSensitivityMultiplier:1);return g.isNone(this.view)?c:"2d"===this.view.type?c*this.view.resolution:this.computeScreeenSizeDistanceParameters3D(a,c,this.view,b)};e.computeScreeenSizeDistanceParameters3D=function(a,b,c,d){const {coordinateHelper:f,
elevationInfo:m}=d,h=c.state.camera.computeScreenPixelSizeAt(r.anyMapPointToRender(a,f,m,c,F))*c.renderCoordsHelper.unitInMeters/c.mapCoordsHelper.unitInMeters;b*=h;const u=this.computeScreenMagnitudeOfMapOffset(a,h,0,c,d);a=this.computeScreenMagnitudeOfMapOffset(a,0,h,c,d);return{x:b/u,y:b/a}};e.computeScreenMagnitudeOfMapOffset=function(a,b,c,d,{coordinateHelper:f,elevationInfo:m}){const h=f.clone(a);h[0]+=b;h[1]+=c;a=r.anyMapPointToScreenPoint(a,f,m,d);f=r.anyMapPointToScreenPoint(h,f,m,d);d=f.x-
a.x;f=f.y-a.y;return Math.sqrt(d*d+f*f)};e.candidateIsExcluded=function(a,b,c){if(g.isNone(c))return!1;b=this.getCandidateObjectId(b);if(g.isNone(b))return!1;a=a.layerSource.layer;return"graphics"===a.type?c.uid===b:c.sourceLayer===a&&c.attributes&&"objectIdField"in a?c.attributes[a.objectIdField]===b:!1};e.getCandidateObjectId=function(a){return a instanceof D.FeatureSnappingCandidate?a.objectId:null};e.createSourceInfo=function(a){const b=this.createFeatureSnappingSourceType(a);if(g.isNone(b))return null;
if("loading"in b)return this.updatingHandles.addPromise(b.loading.then(()=>{this.destroyed||this.notifyChange("snappingSources")})),null;const c=g.isSome(this.view)?this.view.allLayerViews.find(d=>d.layer===a.layer):null;return new G(b.source,c)};e.createFeatureSnappingSourceType=function(a){switch(a.layer.type){case "feature":case "geojson":case "csv":return this.createFeatureSnappingSourceFeatureLayer(a);case "graphics":return this.createFeatureSnappingSourceGraphicsLayer(a)}return null};e.createFeatureSnappingSourceFeatureLayer=
function(a){switch(a.layer.source.type){case "feature-layer":var b=this.getSourceModule("featureService");return g.isSome(b.module)?{source:new b.module.FeatureServiceSnappingSource({spatialReference:this.spatialReference,view:this.view,layerSource:a})}:{loading:b.loader};case "memory":case "csv":case "geojson":if("mesh"!==a.layer.geometryType)return b=this.getSourceModule("featureCollection"),g.isSome(b.module)?{source:new b.module.FeatureCollectionSnappingSource({layerSource:a})}:{loading:b.loader}}return null};
e.createFeatureSnappingSourceGraphicsLayer=function(a){const b=this.getSourceModule("graphics");return g.isSome(b.module)?{source:new b.module.GraphicsSnappingSource({spatialReference:this.spatialReference,view:this.view,layerSource:a})}:{loading:b.loader}};e.getSourceModule=function(a){const b=this.sourceModules[a];return g.isNone(b.loader)?(a=this.loadSourceModule(a).then(c=>{b.module=c}),b.loader=a,{module:b.module,loader:a}):{module:b.module,loader:b.loader}};e.loadSourceModule=function(a){switch(a){case "featureService":return this.updatingHandles.addPromise(new Promise(function(b,
c){t(["./featureSources/FeatureServiceSnappingSource"],b,c)}));case "featureCollection":return this.updatingHandles.addPromise(new Promise(function(b,c){t(["./featureSources/FeatureCollectionSnappingSource"],b,c)}));case "graphics":return this.updatingHandles.addPromise(new Promise(function(b,c){t(["./featureSources/GraphicsSnappingSource"],b,c)}))}return null};v._createClass(k,[{key:"updating",get:function(){return C.someMap(this.snappingSources,({snappingSource:a})=>a.updating)||this.updatingHandles.updating}},
{key:"snappingSources",get:function(){var a;const b=this._get("snappingSources")||new Map,c=new Map;if(null!=(a=this.options)&&a.featureSources)for(const f of this.options.featureSources.items){a=f.layer.uid;var d=b.get(a);d?(b.delete(a),c.set(a,d)):f.layer.loaded?(d=this.createSourceInfo(f),g.isSome(d)&&c.set(a,d)):this.updatingHandles.addPromise(f.layer.load())}for(const [,f]of b)f.destroy();return c}},{key:"types",get:function(){return 3}}]);return k}(B.HandleOwner);n.__decorate([p.property({constructOnly:!0})],
l.FeatureSnappingEngine.prototype,"spatialReference",void 0);n.__decorate([p.property({constructOnly:!0})],l.FeatureSnappingEngine.prototype,"view",void 0);n.__decorate([p.property()],l.FeatureSnappingEngine.prototype,"options",void 0);n.__decorate([p.property({readOnly:!0})],l.FeatureSnappingEngine.prototype,"updating",null);n.__decorate([p.property({readOnly:!0})],l.FeatureSnappingEngine.prototype,"snappingSources",null);l.FeatureSnappingEngine=n.__decorate([y.subclass("esri.views.interactive.snapping.FeatureSnappingEngine")],
l.FeatureSnappingEngine);let G=function(){function q(k,e){this.snappingSource=k;this.layerView=e;this.handles=new A;e=this.snappingSource.layerSource.layer;"refresh"in e&&this.handles.add(e.on("refresh",()=>k.refresh()));this.handles.add([x.init(k,"updating",a=>k.layerSource.updating=a,!0),x.init(k,"availability",a=>k.layerSource.availability=a,!0)])}q.prototype.destroy=function(){this.snappingSource.destroy();this.handles.destroy()};return q}();const F=z.create();Object.defineProperty(l,"__esModule",
{value:!0})});