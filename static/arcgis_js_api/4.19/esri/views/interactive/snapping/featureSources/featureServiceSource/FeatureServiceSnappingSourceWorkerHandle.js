// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/has ../../../../../core/maybe ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/property ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/urlUtils ../../../../../core/uuid ../../../../../portal/support/resourceExtension ../../../../../core/promiseUtils ../../../../../geometry/Point ../../../../../geometry/support/typeUtils ../../../../../core/HandleOwner ../../../../../core/workers/WorkerHandle".split(" "),
function(d,p,g,D,l,E,F,m,G,w,H,I,J,x,y,z,A,B){d.FeatureServiceSnappingSourceWorkerHandle=function(h){function e(a){a=h.call(this,a)||this;a.availability=0;a.workerHandleUpdating=!0;a.editId=0;return a}p._inheritsLoose(e,h);var c=e.prototype;c.destroy=function(){this.workerHandle.destroy()};c.initialize=function(){this.workerHandle=new C(this.scheduler);this.handles.add([this.workerHandle.on("notify-updating",({updating:a})=>this.workerHandleUpdating=a),this.workerHandle.on("notify-availability",({availability:a})=>
this._set("availability",a))])};c.setup=async function(a,b){const f=this.serviceInfoFromLayer(a.layer);l.isNone(f)||(a={configuration:this.convertConfiguration(a.configuration),serviceInfo:f,spatialReference:a.spatialReference.toJSON()},await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("setup",a,b)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},b)))};c.configure=async function(a,b){a=this.convertConfiguration(a);await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("configure",
a,b));this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},b))};c.refresh=async function(a){await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("refresh",{},a));this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},a))};c.fetchCandidates=async function(a,b){a={distance:a.distance,point:a.coordinateHelper.toPoint(a.point,new y).toJSON(),types:a.types,filter:l.isSome(a.filter)?a.filter.createQuery().toJSON():null};return this.workerHandle.invoke(a,
b)};c.updateTiles=async function(a,b){a={tiles:a.tiles,tileInfo:l.isSome(a.tileInfo)?a.tileInfo.toJSON():null,tileSize:a.tileSize};await this.workerHandle.invokeMethod("updateTiles",a,b);this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},b))};c.applyEdits=async function(a,b){var f,q,r,t,u,v,n=this.editId++;await this.workerHandle.invokeMethod("beginApplyEdits",{id:n},b);this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},b));a=await x.whenOrAbort(a.result,
b);n={id:n,edits:{addedFeatures:null!=(f=null==(q=a.addedFeatures)?void 0:q.map(({objectId:k})=>k))?f:[],deletedFeatures:null!=(r=null==(t=a.deletedFeatures)?void 0:t.map(({objectId:k})=>k))?r:[],updatedFeatures:null!=(u=null==(v=a.updatedFeatures)?void 0:v.map(({objectId:k})=>k))?u:[]}};await this.workerHandle.invokeMethod("endApplyEdits",n,b);this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},b))};c.getDebugInfo=function(a){return this.workerHandle.invokeMethod("getDebugInfo",
{},a)};c.convertConfiguration=function(a){return{filter:l.isSome(a.filter)?a.filter.toJSON():null,customParameters:a.customParameters}};c.serviceInfoFromLayer=function(a){var b;return"multipatch"===a.geometryType||"mesh"===a.geometryType?null:{url:a.parsedUrl.path,fields:a.fields.map(f=>f.toJSON()),geometryType:z.featureGeometryTypeKebabDictionary.toJSON(a.geometryType),capabilities:a.capabilities,objectIdField:a.objectIdField,spatialReference:a.spatialReference.toJSON(),timeInfo:null==(b=a.timeInfo)?
void 0:b.toJSON()}};p._createClass(e,[{key:"updating",get:function(){return this.updatingHandles.updating||this.workerHandleUpdating}}]);return e}(A.HandleOwner);g.__decorate([m.property({constructOnly:!0})],d.FeatureServiceSnappingSourceWorkerHandle.prototype,"scheduler",void 0);g.__decorate([m.property({readOnly:!0})],d.FeatureServiceSnappingSourceWorkerHandle.prototype,"updating",null);g.__decorate([m.property({readOnly:!0})],d.FeatureServiceSnappingSourceWorkerHandle.prototype,"availability",
void 0);g.__decorate([m.property()],d.FeatureServiceSnappingSourceWorkerHandle.prototype,"workerHandleUpdating",void 0);d.FeatureServiceSnappingSourceWorkerHandle=g.__decorate([w.subclass("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],d.FeatureServiceSnappingSourceWorkerHandle);let C=function(h){function e(c){return h.call(this,"FeatureServiceSnappingSourceWorker","fetchCandidates",c,{strategy:"dedicated"})||this}p._inheritsLoose(e,
h);e.prototype.getTransferList=function(){return[]};return e}(B.WorkerHandle);Object.defineProperty(d,"__esModule",{value:!0})});