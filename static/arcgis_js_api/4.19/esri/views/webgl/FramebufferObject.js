// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define(["../../chunks/_rollupPluginBabelHelpers","../../core/has","../../core/Logger","./Texture","./Renderbuffer"],function(t,r,u,k,p){const v=u.getLogger("esri.views.webgl.FrameBufferObject");r=function(){function m(a,b,c,e){this._context=a;this._stencilAttachment=this._depthAttachment=this._glName=null;this._colorAttachments=new Map;this._initialized=!1;this._desc={...b};a.instanceCounter.increment(4,this);if(c)if(Array.isArray(c))for(const l of c){const {attachmentPoint:f,texture:n}=l;c=n instanceof
k?n:new k(a,n);b=c.descriptor;this._colorAttachments.set(f,c);this._validateColorAttachmentPoint(f);this._validateTextureDimensions(b,this._desc)}else{var d;c instanceof k?(b=c.descriptor,this._colorAttachments.set(36064,c)):(b=c,this._colorAttachments.set(36064,new k(a,c)));0!==(null==(d=this._desc)?void 0:d.colorTarget)&&console.error("Framebuffer is initialized with a texture however the descriptor indicates using a renderbuffer color attachment!");this._validateTextureDimensions(b,this._desc)}if(e instanceof
p){var h;a=null!=(h=this._desc.depthStencilTarget)?h:3;2===a?this._stencilAttachment=e:1===a||3===a?this._depthAttachment=e:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER');m._validateBufferDimensions(e.descriptor,this._desc)}else e&&(this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!"),
e instanceof k?(this._depthStencilTexture=e,e=this._depthStencilTexture.descriptor):this._depthStencilTexture=new k(this._context,e),this._validateTextureDimensions(e,this._desc))}var g=m.prototype;g.dispose=function(){if(this._desc){var a=this._context.getBoundFramebufferObject();this._disposeColorAttachments();this._disposeDepthStencilAttachments();this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null);this._context.bindFramebuffer(a);this._context.instanceCounter.decrement(4,
this);this._desc=null}};g.getColorTexture=function(a){return(a=this._colorAttachments.get(a))&&a instanceof k?a:null};g.attachColorTexture=function(a,b=36064){if(a){this._validateColorAttachmentPoint(b);this._validateTextureDimensions(a.descriptor,this._desc);this._disposeColorAttachments();if(this._initialized){this._context.bindFramebuffer(this);const c=this._context.gl;c.framebufferTexture2D(c.FRAMEBUFFER,b,c.TEXTURE_2D,a.glName,0)}this._colorAttachments.set(b,a)}};g.detachColorTexture=function(a=
36064){const b=this._colorAttachments.get(a);if(b instanceof k){if(this._initialized){this._context.bindFramebuffer(this);const c=this._context.gl;c.framebufferTexture2D(c.FRAMEBUFFER,a,c.TEXTURE_2D,null,0)}this._colorAttachments.delete(a);return b}};g.attachDepthStencilTexture=function(a){if(a){var b=a.descriptor;34041!==b.pixelFormat&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!");34042!==b.dataType&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!");
this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!");this._validateTextureDimensions(b,this._desc);this._desc.depthStencilTarget&&4!==this._desc.depthStencilTarget&&(this._desc.depthStencilTarget=4);this._disposeDepthStencilAttachments();this._initialized&&(this._context.bindFramebuffer(this),b=this._context.gl,b.framebufferTexture2D(b.FRAMEBUFFER,b.DEPTH_STENCIL_ATTACHMENT,b.TEXTURE_2D,
a.glName,0));this._depthStencilTexture=a}};g.detachDepthStencilTexture=function(){const a=this._depthStencilTexture;if(a&&this._initialized){this._context.bindFramebuffer(this);const b=this._context.gl;this._context.gl.framebufferTexture2D(b.FRAMEBUFFER,b.DEPTH_STENCIL_ATTACHMENT,b.TEXTURE_2D,null,0)}this._depthStencilTexture=null;return a};g.attachDepthStencilBuffer=function(a){if(a){var b=a.descriptor;34041!==b.internalFormat&&33189!==b.internalFormat&&console.error("Depth/Stencil buffer must have correct internalFormat");
m._validateBufferDimensions(b,this._desc);this._disposeDepthStencilAttachments();this._desc.depthStencilTarget=34041===b.internalFormat?3:1;this._initialized&&(this._context.bindFramebuffer(this),b=this._context.gl,b.framebufferRenderbuffer(b.FRAMEBUFFER,1===this._desc.depthStencilTarget?b.DEPTH_ATTACHMENT:b.DEPTH_STENCIL_ATTACHMENT,b.RENDERBUFFER,a.glName));this._depthAttachment=a}};g.detachDepthStencilBuffer=function(){const a=this._context.gl,b=this._depthAttachment;b&&this._initialized&&(this._context.bindFramebuffer(this),
a.framebufferRenderbuffer(a.FRAMEBUFFER,1===this._desc.depthStencilTarget?a.DEPTH_ATTACHMENT:a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,null));this._depthAttachment=null;return b};g.copyToTexture=function(a,b,c,e,d,h,l){(0>a||0>b||0>d||0>h)&&console.error("Offsets cannot be negative!");(0>=c||0>=e)&&console.error("Copy width and height must be greater than zero!");var f=this._desc;const n=l.descriptor;3553!==l.descriptor.target&&console.error("Texture target must be TEXTURE_2D!");(a+c>f.width||b+e>
f.height||d+c>n.width||h+e>n.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");f=this._context;f.bindTexture(l,0);f.bindFramebuffer(this);f.gl.copyTexSubImage2D(3553,0,d,h,a,b,c,e)};g.readPixels=function(a,b,c,e,d,h,l){(0>=c||0>=e)&&console.error("Copy width and height must be greater than zero!");l||console.error("Target memory is not initialized!");this._context.bindFramebuffer(this);this._context.gl.readPixels(a,b,c,e,d,h,l)};g.resize=
function(a,b){const c=this._desc;if(c.width!==a||c.height!==b)if(this._initialized){c.width=a;c.height=b;this._colorAttachments.forEach(e=>{e&&e.resize(a,b)});if(null!=this._depthStencilTexture)this._depthStencilTexture.resize(a,b);else if(this._depthAttachment||this._stencilAttachment)this._depthAttachment&&this._depthAttachment.resize(a,b),this._stencilAttachment&&this._stencilAttachment.resize(a,b);this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null);this._initialized=
!1}else c.width=a,c.height=b,this._colorAttachments.forEach(e=>{e&&e.resize(a,b)}),this._depthStencilTexture&&this._depthStencilTexture.resize(a,b)};g.initializeAndBind=function(){var a,b,c,e;const d=this._context.gl;if(this._initialized)d.bindFramebuffer(d.FRAMEBUFFER,this.glName);else{this._glName&&d.deleteFramebuffer(this._glName);var h=this._context,l=d.createFramebuffer(),f=this._desc,n=null!=(a=f.colorTarget)?a:1;a=null!=(b=f.width)?b:1;b=null!=(c=f.height)?c:1;d.bindFramebuffer(d.FRAMEBUFFER,
l);0===this._colorAttachments.size&&(0===n?this._colorAttachments.set(36064,new k(h,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071,width:f.width,height:f.height})):(c=new p(h,{internalFormat:32854,width:a,height:b}),this._colorAttachments.set(36064,c)));this._colorAttachments.forEach((q,w)=>{q&&(q instanceof k?d.framebufferTexture2D(d.FRAMEBUFFER,w,d.TEXTURE_2D,q.glName,0):d.framebufferRenderbuffer(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.RENDERBUFFER,q.glName))});c=null!=
(e=f.depthStencilTarget)?e:0;switch(c){case 1:case 3:this._depthAttachment||(this._depthAttachment=new p(h,{internalFormat:1===f.depthStencilTarget?33189:34041,width:a,height:b}));d.framebufferRenderbuffer(d.FRAMEBUFFER,1===c?d.DEPTH_ATTACHMENT:d.DEPTH_STENCIL_ATTACHMENT,d.RENDERBUFFER,this._depthAttachment.glName);break;case 2:this._stencilAttachment||(this._stencilAttachment=new p(h,{internalFormat:36168,width:a,height:b}));d.framebufferRenderbuffer(d.FRAMEBUFFER,d.STENCIL_ATTACHMENT,d.RENDERBUFFER,
this._stencilAttachment.glName);break;case 4:this._depthStencilTexture||(h.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!"),this._depthStencilTexture=new k(h,{target:3553,pixelFormat:34041,dataType:34042,samplingMode:9728,wrapMode:33071,width:a,height:b})),d.framebufferTexture2D(d.FRAMEBUFFER,d.DEPTH_STENCIL_ATTACHMENT,d.TEXTURE_2D,this._depthStencilTexture.glName,0)}this._glName=
l;this._initialized=!0}};g._disposeColorAttachments=function(){this._colorAttachments.forEach((a,b)=>{if(a instanceof k){if(this._initialized){this._context.bindFramebuffer(this);var c=this._context.gl;c.framebufferTexture2D(c.FRAMEBUFFER,b,c.TEXTURE_2D,null,0)}a.dispose()}else a instanceof WebGLRenderbuffer&&(c=this._context.gl,this._initialized&&(this._context.bindFramebuffer(this),c.framebufferRenderbuffer(c.FRAMEBUFFER,b,c.RENDERBUFFER,null)),this._context.gl.deleteRenderbuffer(a))});this._colorAttachments.clear()};
g._disposeDepthStencilAttachments=function(){const a=this._context.gl;this._depthAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),a.framebufferRenderbuffer(a.FRAMEBUFFER,1===this._desc.depthStencilTarget?a.DEPTH_ATTACHMENT:a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,null)),this._depthAttachment.dispose(),this._depthAttachment=null);this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.STENCIL_ATTACHMENT,a.RENDERBUFFER,
null)),this._stencilAttachment.dispose(),this._stencilAttachment=null);this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,null,0)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)};m._validateBufferDimensions=function(a,b){console.assert(0<=a.width&&0<=a.height);void 0!==b.width&&0<=b.width&&void 0!==b.height&&0<=b.height?b.width===a.width&&b.height===a.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):
(b.width=a.width,b.height=a.height)};g._validateTextureDimensions=function(a,b){console.assert(0<=a.width&&0<=a.height);3553!==a.target&&console.error("Texture type must be TEXTURE_2D!");void 0!==b.width&&0<=b.width&&void 0!==b.height&&0<=b.height?b.width===a.width&&b.height===a.height||console.error("Color attachment texture must match the framebuffer's!"):(b.width=a.width,b.height=a.height)};g._validateColorAttachmentPoint=function(a){if(-1===m._MAX_COLOR_ATTACHMENTS){const b=this._context.capabilities.drawBuffers;
m._MAX_COLOR_ATTACHMENTS=b?this._context.gl.getParameter(b.MAX_COLOR_ATTACHMENTS):1}a-=36064;a+1>m._MAX_COLOR_ATTACHMENTS&&v.error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${a+1}. Implementation supports up to ${m._MAX_COLOR_ATTACHMENTS} color attachments`)};t._createClass(m,[{key:"glName",get:function(){return this._glName}},{key:"descriptor",get:function(){return this._desc}},{key:"colorTexture",get:function(){const a=this._colorAttachments.get(36064);return a&&a instanceof
k?a:null}},{key:"colorAttachment",get:function(){return this._colorAttachments.get(36064)}},{key:"depthStencilAttachment",get:function(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}},{key:"width",get:function(){return this._desc.width}},{key:"height",get:function(){return this._desc.height}}]);return m}();r._MAX_COLOR_ATTACHMENTS=-1;return r});