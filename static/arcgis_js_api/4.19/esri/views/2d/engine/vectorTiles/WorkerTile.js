// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define(["../../../../core/maybe","../../../../core/promiseUtils","../../tiling/enums","./Placement","./TileParser"],function(l,m,d,n,p){return function(){function k(a,e,b,g){this.status=d.TileStatus.INITIALIZED;this.placementEngine=new n.PlacementEngine;this.tileKey=a;this.refKeys=e;this._workerTileHandler=b;this._styleRepository=g}var f=k.prototype;f.release=function(){this.tileKey="";this.refKeys=null;this.status=d.TileStatus.INITIALIZED;this._workerTileHandler=null};f.parse=async function(a,e,
b){const g=b&&b.signal;if(l.isSome(g)){const c=()=>{g.removeEventListener("abort",c);this.status=d.TileStatus.INVALID};g.addEventListener("abort",c)}try{var h=await this._parse(a,b)}catch(c){if(m.isAbortError(c))throw c;return{result:[],transferList:[]}}this.status=d.TileStatus.READY;a=[];for(const c of h)h=c.serialize(),a.push(h);return{result:a,transferList:a.length<=e&&a}};f.setObsolete=function(){this.status=d.TileStatus.INVALID};f.getLayers=function(){return this._workerTileHandler.getLayers()};
f.getWorkerTileHandler=function(){return this._workerTileHandler};f._parse=async function(a,e){const b=a.sourceName2DataAndRefKey;if(0===Object.keys(b).length)return[];this.status=d.TileStatus.MODIFIED;return(new p(b,this,e.client,this._styleRepository,a.styleLayerUIDs)).parse(e)};return k}()});