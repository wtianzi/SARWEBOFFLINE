// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/MemCache ../../../../geometry/support/aaBoundingRect ../../tiling/TileKey ../../../../chunks/mat3f32 ./VectorTile ./TileHandler ./decluttering/jobsUtil".split(" "),function(k,f,l,m,n,p,q,r,t,u){return function(h){function g(a,c,b,d,v){a=h.call(this,a,c,b)||this;a._memCache=d;a._loader=v;a._ongoingTileRequests=new Map;a._ongoingRequestToController=new Map;return a}k._inheritsLoose(g,
h);var e=g.prototype;e.destroy=function(){this._ongoingRequestToController.forEach(a=>a.abort());this._ongoingRequestToController.clear();this._ongoingTileRequests.clear()};e.getVectorTile=async function(a,c,b,d){a=new p(a,c,b,0);b=this._memCache.get(a.id);if(f.isSome(b))return b.retain(),b;c=await this._getVectorTileData(a);l.throwIfAborted(d);if(!this._vectorTileLayer)return null;b=this._memCache.get(a.id);if(f.isSome(b))return b.retain(),b;d=this._vectorTileLayer.tileInfo.getTileBounds(n.create(),
a);b=new r.VectorTile(a,this._styleRepository,d,[512,512],this._memCache);f.isSome(c)&&c.tileData?(b.setData(c.tileData),b.retain(),this._memCache.put(a.id,b,b.getMemoryUsage()*b.referenced,m.MIN_PRIORITY)):b.setData(null);b.neededForCoverage=!0;b.transforms.tileUnitsToPixels=q.fromValues(.125,0,0,0,.125,0,0,0,1);u.declutterSingleTile(b,this._styleRepository);return b};e._getVectorTileData=function(a){const c=a.id;if(this._ongoingTileRequests.has(c))return this._ongoingTileRequests.get(c);const b=
new AbortController;a=this._getParsedVectorTileData(a,{signal:b.signal}).then(d=>{this._ongoingTileRequests.delete(c);this._ongoingRequestToController.delete(c);return d}).catch(()=>{this._ongoingTileRequests.delete(c);this._ongoingRequestToController.delete(c);return null});this._ongoingTileRequests.set(c,a);this._ongoingRequestToController.set(c,b);return a};e._getParsedVectorTileData=function(a,c){return this.fetchTileData(a,c).then(b=>this.parseTileData({key:a,data:b},c))};e.request=function(a,
c){return this._loader.request(a,"binary",c)};return g}(t.TileHandler)});