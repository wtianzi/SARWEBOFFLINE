// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/has ../../../../core/maybe ../../../../core/Logger ../../../../core/accessorSupport/ensureType ../../../../core/accessorSupport/decorators/property ../../../../core/jsonMap ../../../../core/accessorSupport/decorators/subclass ../../../../core/urlUtils ../../../../core/uuid ../../../../portal/support/resourceExtension ../../../../core/promiseUtils ../../../../core/Accessor ../../../../geometry/support/spatialReferenceUtils ../../../../geometry/SpatialReference ../../../../geometry/support/coordsUtils ../../../../geometry/Polygon ../../../../geometry/support/jsonUtils ../../../../core/screenUtils ../../../../geometry/support/aaBoundingRect ../../../../symbols/support/defaults ../../../../core/HandleOwner ../../engine/webgl/definitions ../../../webgl/capabilities ../../../../geometry/support/normalizeUtilsSync ../../engine/webgl/util/BidiText ../../../../symbols/cim/cimSymbolUtils ../../../../layers/graphics/data/projectionSupport ../../engine/webgl/GraphicTile ../../engine/webgl/TileData ../features/support/AttributeStore ../../engine/webgl/mesh/MeshData ./graphicsUtils ../features/schemaUtils ../../engine/webgl/mesh/factories/matcherUtils ../../engine/webgl/mesh/templates/WGLTemplateStore ../../engine/webgl/mesh/factories/WGLMeshFactory ../features/support/ComputedAttributeStorage ../features/support/GraphicsReader ../features/support/TileStore ./GraphicStore ../../../layers/GraphicsView".split(" "),
function(A,r,p,x,ja,ka,v,la,L,ma,na,oa,y,M,G,N,O,P,m,Q,B,C,R,S,T,U,V,W,H,X,I,Y,Z,k,J,aa,ba,ca,da,ea,fa,ha,ia){function D(w,q,e){if(e.has(w))return e.get(w);q={tile:q,addedOrModified:[],removed:[]};e.set(w,q);return q}p=function(w){function q(a){a=w.call(this,a)||this;a._storage=new da.ComputedAttributeStorage;a._displayIds=new Map;a._tiles=new Map;a._graphicStoreUpdate=!1;a._graphicsSet=new Set;a._matcher=Promise.resolve(null);a._tileUpdateSet=new Set;a._tilesToUpdate=new Map;a._graphicIdToAbortController=
new Map;a._attached=!1;a._highlightIds=new Map;a._updatingGraphicsTimer=null;a._hashToExpandedSymbol=new Map;a._hashTpExpandedSymbolPromise=new Map;a._processing=!1;a._needsProcessing=!1;a._pendingUpdate={added:new Set,updated:new Set,removed:new Set};a.lastUpdateId=-1;a.updateRequested=!1;a.graphicUpdateHandler=a.graphicUpdateHandler.bind(A._assertThisInitialized(a));return a}A._inheritsLoose(q,w);var e=q.prototype;e._createMatcher=function(a,b){a&&(a=J.createMatcherSchema({indexCount:0,fields:{}},
"feature",a),this._matcher=aa.createMatcher(a,b,null))};e._createDisplayId=function(a){this._displayIds.has(a)||this._displayIds.set(a,this._storage.createDisplayId());return this._displayIds.get(a)};e.initialize=function(){this._tileStore=new fa(this.view.featuresTilingScheme);this._attributeStore=new Y["default"]({type:"local",initialize:b=>Promise.resolve(this.container.attributeView.initialize(b)),update:b=>this.container.attributeView.requestUpdate(b),render:()=>this.container.requestRender()},
T());this._graphicStore=new ha(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,b=>{this._createDisplayId(b.uid);this._setFilterState(b.uid,b.visible)},b=>{const c=this._displayIds.get(b.uid);this._displayIds.delete(b.uid);this._storage.releaseDisplayId(c)});const a=new ba.WGLTemplateStore(this.container.getMaterialItems.bind(this.container),!0);this._createMatcher(this.renderer,a);this._meshFactory=new ca.WGLMeshFactory(null,this.uid,a);this._templateStore=a;this.watch("renderer",
b=>{this._createMatcher(b,a);for(const c of this.graphics)this._pendingUpdate.updated.add(c);this.requestUpdate()});this._tileStore.on("update",this._onTileUpdate.bind(this));this.container.on("attach",()=>{0<this.graphics.items.length&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]});this.handles.add(this.graphics.on("change",b=>this._graphicsChangeHandler(b)),"graphics");this._attached=!0;this.notifyChange("updating")})};e.destroy=function(){this._updatingGraphicsTimer&&
(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating"));this.container.destroy();this._set("graphics",null);this._graphicStore.clear();this._tileStore.destroy();this._attributeStore=null;this._hashToExpandedSymbol.clear();this.renderer=this.view=null};e.hitTest=function(a,b){if(!this.view||!this.view.position)return Promise.resolve(null);a=this.view.toMap(Q.createScreenPoint(a,b));return this.searchFeatures(a).then(c=>c&&c.length?c[0]:null)};e.searchFeatures=
async function(a,b=2){return this._graphicStore.hitTest(a.x,a.y,b,this.view.state.resolution,this.view.state.rotation)};e.update=function(a){a=a.state;const b=this.view.featuresTilingScheme.getClosestInfoForScale(a.scale).level;this._graphicStore.updateLevel(b);this._tileStore.setViewState(a);this._graphicStoreUpdate=!0;this.updateRequested=!1;0<this._pendingUpdate.updated.size&&(this._processing?this._needsProcessing=!0:this._updateGraphics())};e.viewChange=function(){this.requestUpdate()};e.requestUpdate=
function(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())};e.processUpdate=function(a){this.updateRequested&&(this.updateRequested=!1,this.update(a))};e.graphicUpdateHandler=function(a){const {graphic:b,property:c,newValue:d}=a;switch(c){case "geometry":case "symbol":this._pendingUpdate.updated.add(b);this.requestUpdate();break;case "visible":this._setFilterState(b.uid,d),this._attributeStore.sendUpdates()}};e.addHighlight=function(a){for(const b of a)this._highlightIds.has(b)?
(a=this._highlightIds.get(b),this._highlightIds.set(b,a+1)):this._highlightIds.set(b,1);this._updateHighlight()};e.removeHighlight=function(a){for(const b of a)this._highlightIds.has(b)&&(a=this._highlightIds.get(b)-1,0===a?this._highlightIds.delete(b):this._highlightIds.set(b,a));this._updateHighlight()};e._updateHighlight=function(){const a=Array.from(this._highlightIds.keys()),b=a.map(c=>this._displayIds.get(c));this._attributeStore.setHighlight(a,b)};e._getIntersectingTiles=function(a){a=this._graphicStore.getBounds(a);
if(!a||0===B.width(a)||0===B.height(a))return[];const b=k.intersectingInternationalDateline(a,this.view.spatialReference);return x.isSome(b)?[...this._tileStore.boundsIntersections(b[0]),...this._tileStore.boundsIntersections(b[1])]:this._tileStore.boundsIntersections(a)};e._updateTile=async function(a){const b=a.tile;var c=this._getGraphicsData(this._templateStore,b,a.addedOrModified);c=await this._processGraphics(b,c);this._patchTile(b.key,{type:"update",addOrUpdate:c,remove:a.removed,end:!0,clear:!1});
return c};e._patchTile=function(a,b){this._tiles.has(a)&&(a=this._tiles.get(a),this.container.onTileData(a,b),this.container.requestRender())};e._graphicsChangeHandler=function(a){for(const b of a.added)this._pendingUpdate.added.add(b);for(const b of a.moved)this._pendingUpdate.added.add(b);for(const b of a.removed)this._pendingUpdate.added.has(b)?this._pendingUpdate.added.delete(b):this._pendingUpdate.removed.add(b);this._processing?this._needsProcessing=!0:this._updateGraphics()};e._getGraphicsToUpdate=
function(){const a={added:[],removed:[],updated:[]};if(!this.graphics)return a;const b=this._pendingUpdate;for(const c of this.graphics.items)b.added.has(c)?a.added.push(c):b.updated.has(c)&&a.updated.push(c);for(const c of b.removed)this._graphicStore.has(c)&&a.removed.push(c);b.added.clear();b.removed.clear();b.updated.clear();return a};e._updateGraphics=async function(){this._processing=!0;const {added:a,removed:b,updated:c}=this._getGraphicsToUpdate(),d=this._tilesToUpdate;try{if(!this._graphicStoreUpdate){var f=
this.view.state,g=this.view.featuresTilingScheme.getClosestInfoForScale(f.scale).level;this._graphicStore.updateLevel(g);this._tileStore.setViewState(f)}f=[];const t=Array(a.length+b.length);for(g=0;g<c.length;g++){var h=c[g];const l=this._getIntersectingTiles(h);for(const u of l){var n=u.id;D(n,u,d).removed.push(this._displayIds.get(h.uid))}f.push(this._updateGraphic(h,null));t[g]=h}var z=c.length;for(h=0;h<a.length;h++){const l=a[h];t[z+h]=l;this._graphicsSet.add(l);f.push(this._addGraphic(l))}for(const l of b){this._abortProcessingGraphic(l.uid);
const u=this._getIntersectingTiles(l);for(const K of u)n=K.id,D(n,K,d).removed.push(this._displayIds.get(l.uid));this._graphicsSet.delete(l);this._graphicStore.remove(l)}this._flipUpdatingGraphics();await Promise.all(f);let E;for(z=0;z<t.length;z++){E=t[z];const l=this._getIntersectingTiles(E);for(const u of l)n=u.id,D(n,u,d).addedOrModified.push(E)}this._graphicStore.updateZ();n=[];for(var [,F]of d)n.push(this._updateTile(F));await Promise.all(n)}catch(t){}for(const t of b)(F=await this._getSymbolForGraphic(t,
{}))&&this._hashToExpandedSymbol.delete(F.hash());d.clear();this.notifyChange("updating");this._processing=!1;this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())};e._getArcadeInfo=function(a){const b=(a.attributes?Object.keys(a.attributes):[]).map(c=>({name:c,alias:c,type:"string"===typeof a.attributes[c]?"esriFieldTypeString":"esriFieldTypeDouble"}));return x.isNone(a.geometry)?null:{geometryType:m.getJsonType(a.geometry),spatialReference:N.fromJSON(a.geometry.spatialReference),
fields:b}};e._getSymbolForGraphic=async function(a,b){return x.isSome(a.symbol)?a.symbol:x.isSome(this.renderer)?this.renderer.getSymbolAsync(a,{scale:this.view.scale,abortOptions:b}):this._getNullSymbol(a)};e._getSymbolResources=async function(a,b){if(!this.container.stage)return Promise.resolve(null);var c=await this._getSymbolForGraphic(a,b),d=c.hash();let f=this._hashToExpandedSymbol.get(d);if(!f){let g=this._hashTpExpandedSymbolPromise.get(d);if(g)f=await g;else{a=this._getArcadeInfo(a);c=J.createSymbolSchema(c);
g=W.expandSymbol(c,a,b);this._hashTpExpandedSymbolPromise.set(d,g);try{f=await g,this._hashTpExpandedSymbolPromise.delete(d),this._hashToExpandedSymbol.set(d,f)}catch(h){this._hashTpExpandedSymbolPromise.delete(d),y.throwIfAborted(h)}}}if("esriTS"===f.type){b=[];[d]=V.bidiText(f.text);for(c=0;c<d.length;c++)b.push(d.charCodeAt(c));[{mosaicItem:b}]=await this.container.getMaterialItems([{symbol:f,id:0,glyphIds:b}]);return{symbol:f,mosaicItem:b}}return{symbol:f,mosaicItem:null}};e._projectAndNormalizeGeometry=
async function(a,b){if(x.isNone(a.geometry)||"mesh"===a.geometry.type)return Promise.resolve(null);var c=a.geometry;m.isPolygon(c)?c.rings=c.rings:m.isPolyline(c)?c.paths=c.paths:m.isExtent(c)&&(a=await this._getSymbolForGraphic(a,b),c=k.isMarkerSymbol(a.type)||k.isTextSymbol(a.type)?c.center:P.fromExtent(c));await H.checkProjectionSupport(c.spatialReference,this.view.spatialReference);a=U.normalizeCentralMeridianSync(c);c=H.project(a,c.spatialReference,this.view.spatialReference);O.closeRingsAndFixWinding(c);
return c};e._onTileUpdate=function(a){const b=G.getInfo(this.view.spatialReference);if(a.added&&0<a.added.length)for(const c of a.added)this._addNewTile(c,b);if(a.removed&&0<a.removed.length)for(const c of a.removed)this._removeTile(c.key)};e._addGraphic=async function(a){this._abortProcessingGraphic(a.uid);var b=y.createAbortController();this._graphicIdToAbortController.set(a.uid,b);b={signal:b.signal};try{await this._addOrUpdateGraphic(a,b),this._graphicIdToAbortController.delete(a.uid)}catch(c){if(this._graphicIdToAbortController.delete(a.uid),
!y.isAbortError(c))throw c;}};e._updateGraphic=async function(a,b){const c=this._projectAndNormalizeGeometry(a,b);b=this._getSymbolResources(a,b);const [d,f]=await Promise.all([c,b]);this._graphicStore.addOrModify(a,f,d)};e._addOrUpdateGraphic=async function(a,b){const c=this._projectAndNormalizeGeometry(a,b);b=this._getSymbolResources(a,b);try{const [d,f]=await Promise.all([c,b]);this._addProjectedGraphic(a,f,d)}catch(d){if(!y.isAbortError(d))throw d;}};e._addProjectedGraphic=function(a,b,c){this._graphicsSet.has(a)&&
this._graphicStore.addOrModify(a,b,c)};e._addTile=function(a){var b=this.view.featuresTilingScheme.getTileBounds(B.create(),a);b=new X.GraphicTile(a,b);this._tiles.set(a,b);this.container.addChild(b);return b};e._addNewTile=function(a,b){const c=this._addTile(a.key),d=this._graphicStore.queryTileData(this._templateStore,a);if(b){b=Math.round((b.valid[1]-b.valid[0])/a.resolution);for(const g of d)g.geometry&&(m.isPoint(g.geometry)||m.isMultipoint(g.geometry))&&this._wrapPoints(g,b)}const f=a.key;this._tileUpdateSet.add(a.key);
this.notifyChange("updating");this._processGraphics(a,d).then(g=>{c.patch({type:"update",clear:!1,addOrUpdate:g,remove:[],end:!0});this._tileUpdateSet.delete(f);this.notifyChange("updating")}).catch(g=>{this._tileUpdateSet.delete(f);this.notifyChange("updating");if(!y.isAbortError(g))throw g;})};e._removeTile=function(a){if(this._tiles.has(a)){var b=this._tiles.get(a);this.container.removeChild(b);b.destroy();this._tiles.delete(a)}};e._setFilterState=function(a,b){const c=this._displayIds.get(a);
a=this._attributeStore.getHighlightFlag(a);this._attributeStore.setData(c,0,0,a|(b?S.FILTER_FLAG_0:0))};e._getGraphicsData=function(a,b,c){const d=G.getInfo(this.view.spatialReference);a=this._graphicStore.getGraphicsData(a,b,c);if(d){b=Math.round((d.valid[1]-d.valid[0])/b.resolution);for(const f of a)f.geometry&&(m.isPoint(f.geometry)||m.isMultipoint(f.geometry))&&this._wrapPoints(f,b)}return a};e._wrapPoints=function(a,b){const c=a.geometry;m.isMultipoint(c)?this._wrapMultipoint(c,b):this._wrapPoint(a,
b)};e._wrapMultipoint=function(a,b){var c=a.points;const d=[];let f=0,g=0;for(const [h,n]of c)d.push([h+f,n]),f=0,b===k.TILE_SIZE?(c=5*k.PIXEL_BUFFER,h+g<c?(d.push([b,0]),f=-b):h+g>k.TILE_SIZE-c&&(d.push([-b,0]),f=b)):h+g<-k.PIXEL_BUFFER?(d.push([b,0]),f=-b):h+g>k.TILE_SIZE+k.PIXEL_BUFFER&&(d.push([-b,0]),f=b),g+=h;a.points=d};e._wrapPoint=function(a,b){const c=a.geometry;if(b===k.TILE_SIZE){const d=5*k.PIXEL_BUFFER;c.x<d?a.geometry={points:[[c.x,c.y],[b,0]]}:c.x>k.TILE_SIZE-d&&(a.geometry={points:[[c.x,
c.y],[-b,0]]})}else c.x<-k.PIXEL_BUFFER?a.geometry={points:[[c.x,c.y],[b,0]]}:c.x>k.TILE_SIZE+k.PIXEL_BUFFER&&(a.geometry={points:[[c.x,c.y],[-b,0]]})};e._processGraphics=async function(a,b,c){if(!b||!b.length||!this._meshFactory)return null;b=ea.GraphicsReader.from(b);const d=this._meshFactory,f=await this._matcher;await d.analyzeGraphics(b,f,null,null,c);this._attributeStore.sendUpdates();return this._processAnalyzedGraphics(a,b)};e._processAnalyzedGraphics=function(a,b){const c=this._meshFactory;
var d=b.getApproximateSize();b=b.getCursor();for(d=new Z.MeshData(a.key.id,{features:d,records:d,metrics:0},!1,!1,!1);b.next();){const f=b.readGraphic();f.insertAfter=-1===f.insertAfter?-1:this._displayIds.get(f.insertAfter);f.displayId=this._displayIds.get(f.attributes[this.uid]);c.writeGraphic(d,b)}a=d.serialize(a.tileInfoView.tileInfo.isWrappable);return 1!==a.length?new I.TileData:I.TileData.fromVertexData(a[0].message)};e._abortProcessingGraphic=function(a){this._graphicIdToAbortController.has(a)&&
this._graphicIdToAbortController.get(a).abort()};e._getNullSymbol=function(a){a=a.geometry;return m.isPolyline(a)?C.errorPolylineSymbol2D:m.isPolygon(a)||m.isExtent(a)?C.errorPolygonSymbol2D:C.errorPointSymbol2D};e._flipUpdatingGraphics=function(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer);this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null;this.notifyChange("updating")},160);this.notifyChange("updating")};A._createClass(q,[{key:"updating",get:function(){return!this._attached||
null!==this._updatingGraphicsTimer||0<this._tileUpdateSet.size||0<this._tilesToUpdate.size}}]);return q}(ia.GraphicsView(R.HandleOwnerMixin(M)));r.__decorate([v.property({constructOnly:!0})],p.prototype,"requestUpdateCallback",void 0);r.__decorate([v.property()],p.prototype,"container",void 0);r.__decorate([v.property({constructOnly:!0})],p.prototype,"graphics",void 0);r.__decorate([v.property()],p.prototype,"updating",null);r.__decorate([v.property()],p.prototype,"view",void 0);r.__decorate([v.property()],
p.prototype,"updateRequested",void 0);return p=r.__decorate([L.subclass("esri.views.2d.layers.support.GraphicsView2D")],p)});