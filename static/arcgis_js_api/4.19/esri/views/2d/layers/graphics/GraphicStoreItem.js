// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../../../../geometry/support/centroid ../../../../geometry/support/jsonUtils ../../../../geometry/support/aaBoundingRect ../../../../layers/graphics/OptimizedGeometry ../../../../layers/graphics/featureConversionUtils ../../../../geometry/support/quantizationUtils ./graphicsUtils".split(" "),function(u,v,w,q,x,e,n,r,t){const f=new e,p=new e;e=function(){function d(){this.bounds=x.create();this.graphic=null;this.size=[0,0,
0,0]}d.acquire=function(a=null,b,c,g,h,k){let l;0===d._pool.length?l=new d:(l=d._pool.pop(),this._set.delete(l));l.acquire(a,b,c,g,h,k);return l};d.release=function(a){a&&!this._set.has(a)&&(a.release(),this._pool.push(a),this._set.add(a))};d.getCentroidQuantized=function(a,b){if(q.isPolygon(a.geometry)){const c=a.symbol;if(v.isNone(c))return null;if(t.isMarkerSymbol(c.type)||t.isTextSymbol(c.type))return a=w.polygonCentroid(a.geometry),r.quantizePoint(b,{},{x:a[0],y:a[1]},!1,!1)}return null};var m=
d.prototype;m.acquire=function(a=null,b,c,g,h,k){a&&this.set(a,b,c,g,h,k)};m.release=function(){this.geometry=this.symbolResource=this.graphic=null};m.set=function(a,b,c,g,h,k){this.graphic=a;this.geometry=c;this.symbolResource=b;this.updateBounds(g,h,k)};m.updateBounds=function(a,b,c){t.getBounds(this.bounds,this.size,this.symbolResource,this.geometry,a,b,c)};m.getGeometryQuantized=function(a){if(q.isPolygon(this.geometry)){const b=this.geometry.rings;if(1===b.length&&2===b[0].length)return r.quantizeGeometry(a,
{paths:[[b[0][0],b[0][1]]]})}else if(q.isPolyline(this.geometry))return f.coords.length=0,f.lengths.length=0,p.coords.length=0,p.lengths.length=0,n.convertFromPolyline(f,this.geometry),n.generalizeOptimizedGeometry(p,f,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",a.scale[0]),n.quantizeOptimizedGeometry(f,p,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",a),n.convertToPolyline(f,this.geometry.hasZ,this.geometry.hasM);return r.quantizeGeometry(a,this.geometry)};u._createClass(d,
[{key:"symbol",get:function(){return this.symbolResource.symbol}}]);return d}();e._pool=[];e._set=new Set;return e});