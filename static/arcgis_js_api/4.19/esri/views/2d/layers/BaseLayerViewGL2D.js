// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../geometry/support/coordsUtils ../../../geometry/support/aaBoundingRect ../../../core/libs/earcut/earcut ../tiling/TileKey ../../layers/RefreshableLayerView ../tiling/PagedTileQueue ../tiling/TileInfoView ../tiling/TileQueue ../tiling/TileStrategy ../../layers/LayerView ../../../geometry/support/normalizeUtilsSync ../../../layers/graphics/data/projectionSupport ./support/util ../engine/webgl/TurboLine ./LayerView2D ./support/DisplayGL".split(" "),
function(w,r,p,Q,R,x,S,D,T,U,V,E,F,G,W,H,X,I,Y,Z,J,K,z,A,B,L,M){const y=new Set,t=[],u=[];let N=function(v,q,g,a,b,d,c,k=[0,0],e=F.create()){this.id=v;this.level=q;this.row=g;this.col=a;this.world=b;this.resolution=d;this.scale=c;this.coords=k;this.bounds=e};p=function(v){function q(a){a=v.call(this,a)||this;a._tileMap=new Map;a.container=new M.DisplayGL(w._assertThisInitialized(a));a.layer=null;a.tiles=[];a._renderTarget={framebuffer:null,viewport:[0,0,0,0]};return a}w._inheritsLoose(q,v);var g=
q.prototype;g.attach=function(){};g.detach=function(){};g.requestRender=function(){this.container.requestRender()};g.tilesChanged=function(a,b){};g.doRefresh=async function(){};g.isUpdating=function(){return!1};g.update=function(a){var b=this._tileInfoView;const d=this.tiles;if(b){a=b.getTileCoverage(a.state,0);const {spans:k,lodInfo:e}=a;({level:a}=e);if(k.length)for(const {row:h,colFrom:f,colTo:m}of k)for(b=f;b<=m;b++){var c=e.normalizeCol(b);const l=e.getWorldForColumn(b),n=`${a}/${h}/${c}/${l}`;
this._tileMap.has(n)||(c=new N(n,a,h,c,l,e.resolution,e.scale),e.getTileCoords(c.coords,c,!1),e.getTileBounds(c.bounds,c,!0),this._tileMap.set(n,c),d.push(c),t.push(c));y.add(n)}}for(a=d.length-1;0<=a;a--)b=d[a],y.has(b.id)||(d.splice(a,1),u.push(b),this._tileMap.delete(b.id));if(t.length||u.length)this.tilesChanged(t,u),t.length=u.length=0;y.clear();this.requestRender()};g.moveStart=function(){};g.viewChange=function(){this.requestUpdate()};g.moveEnd=function(){};g.bindRenderTarget=function(){this.context.bindFramebuffer(this.context.FRAMEBUFFER,
this._renderTarget.framebuffer);this.context.viewport(this._renderTarget.viewport[0],this._renderTarget.viewport[1],this._renderTarget.viewport[2],this._renderTarget.viewport[3])};g.getRenderTarget=function(){return this._renderTarget};g.tessellateExtent=async function(a){const b={vertices:[],indices:[]};a=await this._projectAndNormalizeGeometry(a);const d=b.vertices.length;b.vertices.push({x:a.xmin,y:a.ymin,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:0,distance:0});b.vertices.push({x:a.xmax,y:a.ymin,
xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:0,distance:0});b.vertices.push({x:a.xmin,y:a.ymax,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:1,distance:0});b.vertices.push({x:a.xmax,y:a.ymax,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:1,distance:0});b.indices.push(d+0,d+1,d+2,d+1,d+3,d+2);return b};g.tessellatePoint=async function(a,b){a=await this._projectAndNormalizeGeometry(a);return this._tessellatePoints([a],b)};g.tessellateMultipoint=async function(a,b){const d=await this._projectAndNormalizeGeometry(a);
a=d.points.map(c=>({x:c[0],y:c[1],spatialReference:d.spatialReference}));return this._tessellatePoints(a,b)};g._tessellatePoints=async function(a,b){const d={vertices:[],indices:[]};for(const c of a)a=d.vertices.length,d.vertices.push({x:c.x,y:c.y,xOffset:b.x,yOffset:b.y+b.height,uTexcoord:0,vTexcoord:0,distance:0}),d.vertices.push({x:c.x,y:c.y,xOffset:b.x+b.width,yOffset:b.y+b.height,uTexcoord:1,vTexcoord:0,distance:0}),d.vertices.push({x:c.x,y:c.y,xOffset:b.x,yOffset:b.y,uTexcoord:0,vTexcoord:1,
distance:0}),d.vertices.push({x:c.x,y:c.y,xOffset:b.x+b.width,yOffset:b.y,uTexcoord:1,vTexcoord:1,distance:0}),d.indices.push(a+0,a+1,a+2,a+1,a+3,a+2);return d};g.tessellatePolyline=async function(a,b){const d={vertices:[],indices:[]};var c=(await this._projectAndNormalizeGeometry(a)).paths;if(!c||!c.length)return d;let k;a=new B.StandardTessellationCallbacks((e,h,f,m,l,n,aa,O,C)=>{f=d.vertices.length;d.vertices.push({x:e,y:-h,xOffset:l*b/2,yOffset:n*b/2,uTexcoord:C/k,vTexcoord:(O+1)/2,distance:C});
return f},(e,h,f)=>{d.indices.push(e,h,f)});for(const e of c){k=0;for(c=1;c<e.length;++c){const h=e[c][0]-e[c-1][0],f=e[c][1]-e[c-1][1];k+=Math.sqrt(h*h+f*f)}c=e.map(h=>({x:h[0],y:-h[1]}));B.tessellate(c,P,a)}return d};g.tessellatePolygon=async function(a){const b={vertices:[],indices:[]};a=await this._projectAndNormalizeGeometry(a);const d=a.rings;if(!d||!d.length)return b;E.closeRings(a);for(const f of a.rings)for(const m of f)m[1]=-m[1];let c=Infinity,k=Infinity,e=-Infinity,h=-Infinity;A.analyzeRings(a.rings,
()=>{},(f,m,l)=>{for(;f<m;f+=2)c=Math.min(c,l[f]),k=Math.min(k,l[f+1]),e=Math.max(e,l[f]),h=Math.max(h,l[f+1])});A.analyzeRings(a.rings,()=>{},(f,m,l,n)=>{this._invokeEarcut(b,f,m,l,n,[c,k,e,h])});return b};g._invokeEarcut=function(a,b,d,c,k,e){b=c.slice(b,d);k=G.earcut(b,k,2);d=a.vertices.length;for(c=0;c<b.length;c+=2){const h=b[c],f=b[c+1];a.vertices.push({x:h,y:-f,xOffset:0,yOffset:0,uTexcoord:(h-e[0])/(e[2]-e[0]),vTexcoord:1-(f-e[1])/(e[3]-e[1]),distance:0})}for(e=0;e<k.length;++e)a.indices.push(d+
k[e])};g._projectAndNormalizeGeometry=async function(a){await z.checkProjectionSupport(a.spatialReference,this.view.spatialReference);const b=K.normalizeCentralMeridianSync(a);return z.project(b,a.spatialReference,this.view.spatialReference)};w._createClass(q,[{key:"_tileInfoView",get:function(){const a=this.layer&&this.layer.tileInfo;return a?new I(a):null}},{key:"context",get:function(){return this.view._stage.context.gl}}]);return q}(H.RefreshableLayerView(L.LayerView2DMixin(J)));r.__decorate([x.property()],
p.prototype,"_tileInfoView",null);r.__decorate([x.property()],p.prototype,"layer",void 0);r.__decorate([x.property()],p.prototype,"context",null);p=r.__decorate([D.subclass("esri.views.2d.layers.BaseLayerViewGL2D")],p);const P={trackDistance:!0,wrapDistance:1E11,thin:!1,initialDistance:0,enableOuterBisectorSplit:!0,outerBisectorAutoSplitThreshold:1/3.8,enableInnerBisectorSplit:!0,innerBisectorAutoSplitThreshold:1/3.8};return p});