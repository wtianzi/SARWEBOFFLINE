// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/has ../../../../../core/maybe ../../../../../core/promiseUtils ../../../../../core/Evented ../../../../../core/accessorSupport/diffUtils ../../../../../TimeExtent ../../../../../tasks/support/Query ../controllers/EditsQueue ../support/UpdateToken ./DataTileSubscription".split(" "),function(k,l,n,m,p,h,q,r,t,u,v){function w(g,c){const a=new Set;g&&g.forEach(b=>a.add(b));c&&c.forEach(b=>a.add(b));return a.has("*")?["*"]:Array.from(a)}let x=function(){function g(a){this.events=
new p;this._pendingEdits=new Set;this._resolver=m.createResolver();this._editsQueue=new t.EditsQueue({processEdits:(b,e)=>this._processEdit(b,e)});this._subscriptions=new Map;this._outSR=a.outSR;this._serviceInfo=a.serviceInfo;this._onTileUpdateMessage=a.onMessage}var c=g.prototype;c.destroy=function(){this._editsQueue.clear()};c._onMessage=async function(a){var b;const e=this._subscriptions.get(a.id);if(e)return a={...a,remove:null!=(b=a.remove)?b:[],status:a.status},this._onTileUpdateMessage(a,
e.options)};c.update=function(a,b){var e,d=b.fields.length;b.outFields=w(null==(e=this._schema)?void 0:e.outFields,b.outFields);b.outFields=b.outFields.length>=.75*d?["*"]:b.outFields;b.outFields.sort();if(e=h.diff(this._schema,b)){l("esri-2d-update-debug")&&console.debug("Applying Update - Source:",e);d={returnCentroid:l("esri-2d-query-centroid-enabled")&&"esriGeometryPolygon"===this._serviceInfo.geometryType,returnGeometry:!0,outFields:b.outFields,outSpatialReference:this._outSR,orderByFields:[`${this._serviceInfo.objectIdField} ASC`],
where:b.definitionExpression||"1\x3d1",gdbVersion:b.gdbVersion,historicMoment:b.historicMoment?new Date(b.historicMoment):null,timeExtent:q.fromJSON(b.timeExtent)};var f=this._schema&&h.hasDiff(e,"outFields");this._schema&&h.hasDiffAny(e,["timeExtent","definitionExpression","gdbVersion","historicMoment"])&&(a.why.mesh.push("Layer filter changed"),a.why.source.push("Layer filter changed"),a.mesh=!0,a.source=!0,a.queryFilter=!0,this._invalidate("all"));f&&(a.why.source.push("Layer required fields changed"),
a.source=!0,this._invalidate("fields"));h.diff(d,this._queryInfo)&&(this._queryInfo=d);this._schema=b;this._resolver.resolve()}};c.whenInitialized=function(){return this._resolver.promise};c.applyUpdate=async function(a){a.queryFilter?this.refresh():(this._subscriptions.forEach(b=>b.applyUpdate(a)),await this.resend())};c.refresh=function(){for(const a of this._tiles())this.unsubscribe(a),this.subscribe(a)};c._tiles=function(){const a=[];this._subscriptions.forEach(b=>a.push(b.tile));return a};c.pause=
function(){this._subscriptions.forEach(a=>a.abort())};c.subscribe=function(a){const b=new v.DataTileSubscription(a);this._subscriptions.set(a.id,b)};c.unsubscribe=function(a){const b=this.get(a.id);n.isSome(b)&&b.abort();this._subscriptions.delete(a.id)};c.forEachPendingEdit=function(a){Array.from(this._subscriptions.values()).some(b=>"none"!==b.invalid)?this._pendingEdits.forEach(a):this._pendingEdits.clear()};c.edit=async function(a){return this._editsQueue.push(a)};c.createQuery=function(a={}){return new r({...this._queryInfo,
...a})};c.get=function(a){return this._subscriptions.has(a)?this._subscriptions.get(a):null};c.queryLastEditDate=async function(){throw Error("Service does not support query type");};c.query=async function(a,b){throw Error("Service does not support query");};c._invalidate=function(a){this._subscriptions.forEach(b=>b.invalidate(a))};c._processEdit=async function(a,b){b.forEach(d=>{this._pendingEdits.has(d)&&this._pendingEdits.delete(d)});a.forEach(d=>this._pendingEdits.add(d));var e=Array.from(this._subscriptions.values()).map(({tile:d})=>
d).map(d=>{const f=this.createTileQuery(d);f.objectIds=a;return{tile:d,query:f}}).map(async({tile:d,query:f})=>({tile:d,result:await this.query(f)}));e=(await m.all(e)).map(async({tile:d,result:f})=>{if((f.hasFeatures||b.length||a.length)&&this._subscriptions.get(d.key.id))return this._onMessage({type:"update",id:d.key.id,addOrUpdate:f,remove:[...a,...b],end:!0,status:u.UpdateToken.empty()})});await Promise.all(e);this._invalidate("all")};return g}();k.DataTileSource=x;Object.defineProperty(k,"__esModule",
{value:!0})});