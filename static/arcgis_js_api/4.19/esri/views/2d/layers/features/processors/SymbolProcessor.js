// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/has ../../../../../core/maybe ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/property ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/Error ../../../../../core/urlUtils ../../../../../core/uuid ../../../../../portal/support/resourceExtension ../../../../../core/promiseUtils ../../../../../geometry/SpatialReference ../../../../../core/accessorSupport/diffUtils ../../../engine/webgl/definitions ../../../engine/webgl/util/BidiText ../../../engine/webgl/collisions/CollisionGrid ../../../engine/webgl/Utils ../../../engine/webgl/cpuMapped/DisplayRecordReader ../support/AttributeStore ../../../engine/webgl/mesh/MeshData ../../../engine/webgl/mesh/factories/matcherUtils ../textUtils ../../../engine/webgl/mesh/templates/WGLTemplateStore ../../../engine/webgl/mesh/factories/WGLMeshFactory ./BaseProcessor".split(" "),
function(v,z,A,n,u,P,Q,R,B,S,T,U,V,r,C,w,D,E,F,G,H,I,J,x,K,L,M,N){function y(q){q=q.message;const p={message:{data:{},tileKey:q.tileKey},transferList:[]};for(const a in q.data){var g=q.data[a];p.message.data[a]=null;if(n.isSome(g)){var b=g.stride;const c=g.indices.slice(0),d=g.vertices.slice(0),e=g.records.slice(0);g=n.andThen(g.metrics,h=>h.slice(0));b={stride:b,indices:c,vertices:d,records:e,metrics:g};p.transferList.push(c,d,e);p.message.data[a]=b}}return p}u.getLogger("esri.views.2d.layers.features.processors.SymbolProcessor");
u=function(q){function p(){var b=q.apply(this,arguments)||this;b.type="symbol";b._matchers={feature:null,aggregate:null};b._bufferData=new Map;return b}v._inheritsLoose(p,q);var g=p.prototype;g.initialize=function(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])};g.destroy=function(){};g.update=async function(b,a){a=a.schema.processors[0];if("symbol"===a.type){var c=w.diff(this._schema,a);w.hasDiff(c,"mesh")&&(A("esri-2d-update-debug")&&console.debug("Applying Update - Processor:",
c),b.mesh=!0,b.why.mesh.push("Symbology changed"),this._schema=a,this._factory=this._createFactory(a),this._factory.update(a,this.tileStore.tileScheme.tileInfo))}};g.onTileMessage=function(b,a,c,d){r.throwIfAborted(d);return this._onTileData(b,a,c,d)};g.onTileClear=function(b){this._bufferData.delete(b.key.id);return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:b.id,data:{clear:!0}})};g.onTileError=function(b,a,c){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:b.id,
error:a},{signal:c.signal})};g.onTileUpdate=function(b){for(const a of b.removed)this._bufferData.has(a.key.id)&&(this._bufferData.get(a.key.id).forEach(c=>{const d=new Set;G.forEachGeometryType(e=>{e=c.message.data[e];if(n.isSome(e))for(e=H.DisplayRecordReader.from(e.records).getCursor();e.next();)d.add(e.id)});return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:c.message.tileKey,data:{type:"update",addOrUpdate:null}})}),this._bufferData.delete(a.key.id));for(const a of b.added)this._bufferData.forEach(c=>
{for(const d of c)d.message.tileKey===a.id&&this._updateTileMesh("append",a,y(d),[],!1,!1,null)})};g._addBufferData=function(b,a){this._bufferData.has(b)||this._bufferData.set(b,[]);this._bufferData.get(b).push(y(a))};g._createFactory=function(b){const {geometryType:a,objectIdField:c,fields:d}=this.service,e=C.fromJSON(this.spatialReference),h={geometryType:a,fields:d,spatialReference:e},f=new L.WGLTemplateStore((l,t)=>this.remoteClient.invoke("tileRenderer.getMaterialItems",l,t),!1),{matcher:k,aggregateMatcher:m}=
b.mesh;this._store=f;this._matchers.feature=x.createMatcher(k,f,h);this._matchers.aggregate=n.andThen(m,l=>x.createMatcher(l,f,h));return new M.WGLMeshFactory(a,c,f)};g._onTileData=async function(b,a,c,d){const {type:e,addOrUpdate:h,remove:f}=a,k=a.end;if(!h)return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:b.id,data:{type:e,addOrUpdate:null,remove:f,clear:!1,end:k}},d);c=this._processFeatures(b,h,c,d);try{const m=await c;if(n.isNone(m))return this.remoteClient.invoke("tileRenderer.onTileData",
{tileKey:b.id,data:{type:e,addOrUpdate:null,remove:f,clear:!1,end:k}},d);for(const l of m)b.key.id!==l.message.tileKey&&this._addBufferData(b.key.id,l);await r.all(m.map(l=>{const t=b.key.id===l.message.tileKey;return this._updateTileMesh(e,b,l,t?a.remove:[],t&&a.end,a.clear,d.signal)}))}catch(m){this._handleError(b,m,d)}};g._updateTileMesh=async function(b,a,c,d,e,h,f){h=c.message.tileKey;h!==a.key.id&&(e=!1);a=n.andThen(c,k=>k.message);c=n.andThen(c,k=>k.transferList)||[];b={type:b,addOrUpdate:a,
remove:d,clear:!1,end:e};f={transferList:n.unwrap(c)||[],signal:f};r.throwIfAborted(f);return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:h,data:b},f)};g._processFeatures=async function(b,a,c,d){if(n.isNone(a)||!a.hasFeatures)return null;const e={transform:b.transform,hasZ:!1,hasM:!1},h=this._factory,f={viewingMode:"",scale:b.scale},k=await this._matchers.feature,m=await this._matchers.aggregate;r.throwIfAborted(d);const l=this._getLabelInfos(b,a);await h.analyze(a.getCursor(),k,m,
e,f);r.throwIfAborted(d);return this._writeFeatureSet(b,a,e,l,h,c)};g._writeFeatureSet=function(b,a,c,d,e,h){var f=a.getApproximateSize();h=new J.MeshData(b.key.id,{features:f,records:f,metrics:0},"simple"===this._schema.mesh.matcher.type&&this._schema.mesh.matcher.isDotDensity,h,!0);f={viewingMode:"",scale:b.scale};for(a=a.getCursor();a.next();)try{const k=a.getDisplayId(),m=n.isSome(d)?d.get(k):null;e.writeCursor(h,a,c,f,b.level,m)}catch(k){}return h.serialize(b.tileInfoView.tileInfo.isWrappable)};
g._handleError=function(b,a,c){if(!r.isAbortError(a))return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:b.id,error:a.message},{signal:c.signal})};g._getLabelInfos=function(b,a){const c=n.andThen(this._schema.mesh.labels,h=>h.filter(f=>{var k=b.scale;return(!f.minScale||f.minScale>=k)&&(!f.maxScale||f.maxScale<=k)}));if(n.isNone(c)||0===c.length)return null;const d=new Map;new F.CollisionGrid(D.COLLISION_EARLY_REJECT_BUCKET_SIZE);for(a=a.getCursor();a.next();){const h=a.getDisplayId(),
f=[],k=I.isAggregateId(h),m=k&&1!==a.readAttribute("cluster_count")?"aggregate":"feature";for(const l of c){if(l.target!==m)continue;var e=a.getStorage();e=k&&"feature"===m?e.getComputedStringAtIndex(a.readAttribute("referenceId"),l.fieldIndex):e.getComputedStringAtIndex(h,l.fieldIndex);if(!e)continue;e=E.bidiText(e.toString());const t=e[1];this._store.getMosaicItem(l.symbol,K.codepoints(e[0])).then(O=>{f[l.index]={glyphs:O.glyphMosaicItems,rtl:t,index:l.index}})}d.set(h,f)}return d};g._shouldDiscard=
function(b,a){switch(this.service.geometryType){case "esriGeometryPoint":return a=a.readLegacyPointGeometry(),!a||b.checkOverlap(a.x,a.y);case "esriGeometryPolygon":return a=a.readLegacyCentroid(),!a||b.checkOverlap(a.x,a.y);default:return!1}};g._markUsed=function(b,a){switch(this.service.geometryType){case "esriGeometryPoint":{const {x:c,y:d}=a.readLegacyPointGeometry();return b.markUsed(c,d)}case "esriGeometryPolygon":{const {x:c,y:d}=a.readLegacyCentroid();return b.markUsed(c,d)}}};v._createClass(p,
[{key:"supportsTileUpdates",get:function(){return!0}}]);return p}(N);return u=z.__decorate([B.subclass("esri.views.2d.layers.features.processors.SymbolProcessor")],u)});