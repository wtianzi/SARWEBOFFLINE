// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/has ../../../../core/lang ../../../../core/maybe ../../../../core/Logger ../../../../core/Error ../../../../core/screenUtils ../../../../renderers/Renderer ../../../../symbols/support/jsonUtils ../../../../renderers/ClassBreaksRenderer ../../../../renderers/UniqueValueRenderer ../../../../renderers/DictionaryRenderer ../../../../renderers/DotDensityRenderer ../../../../renderers/HeatmapRenderer ../../../../renderers/SimpleRenderer ../../../../renderers/support/jsonUtils ../support/clusterUtils ../../engine/webgl/enums ../../engine/webgl/materialKey/MaterialKey ../../engine/webgl/Utils ../../engine/webgl/util/vvFlagUtils ./support/pixelBuffering ./support/rendererUtils ../support/util".split(" "),
function(u,L,M,A,N,v,B,ja,O,ka,la,ma,na,oa,P,pa,Q,p,l,R,S,T,U,V){function q(a){switch(a.type){case "line-marker":var c;return{type:"line-marker",color:null==(c=a.color)?void 0:c.toJSON(),placement:a.placement,style:a.style};default:return O.fromJSON(a.toJSON()).toJSON()}}function n(a,c,b){if(!a)return null;var d=0;let e=!1,f=0;A.isSome(c)&&(f=T.getPtMaxVVSize(c),"visualVariables"in c&&(d=S.getVVFlags(c.visualVariables||[]),e="dot-density"===c.type));switch(a.type){case "simple-fill":case "picture-fill":return W(a,
d,e,b);case "simple-marker":case "picture-marker":return c=f,d=l.createMaterialKey(p.WGLGeometryType.MARKER,d,!1,!1),b=b?l.hydrateMaterialKey(d):d,d=q(a),a={materialKey:b,hash:a.hash(),...d,angle:a.angle,maxVVSize:c};case "simple-line":return X(a,d,b);case "text":return c=f,d=l.createMaterialKey(p.WGLGeometryType.TEXT,d,!1,!1),b=b?l.hydrateMaterialKey(d):d,d=q(a),a={materialKey:b,hash:a.hash(),...d,angle:a.angle,maxVVSize:c};case "label":return d=l.createMaterialKey(p.WGLGeometryType.LABEL,d,!1,!1,
a.labelPlacement),a={materialKey:b?l.hydrateMaterialKey(d):d,hash:a.hash(),...a.toJSON(),labelPlacement:a.labelPlacement};case "cim":return{type:"cim",rendererKey:d,data:a.data,maxVVSize:f};case "web-style":return{...q(a),type:"web-style",hash:a.hash(),rendererKey:d,maxVVSize:f};default:throw Error(`symbol not supported ${a.type}`);}}function W(a,c,b,d){b=l.createMaterialKey(p.WGLGeometryType.FILL,c,!1,b);var e=d?l.hydrateMaterialKey(b):b;const f=a.clone();b=f.outline;f.outline=null;a=[];e={materialKey:e,
hash:f.hash(),...q(f)};a.push(e);b&&(c=l.createMaterialKey(p.WGLGeometryType.LINE,c,!0,!1),d={materialKey:d?l.hydrateMaterialKey(c):c,hash:b.hash(),...q(b)},a.push(d));return{type:"composite-symbol",layers:a,hash:a.reduce((g,h)=>h.hash+g,"")}}function X(a,c,b){var d=l.createMaterialKey(p.WGLGeometryType.LINE,c,!1,!1);const e=b?l.hydrateMaterialKey(d):d;a=a.clone();d=a.marker;a.marker=null;const f=[];f.push({materialKey:e,hash:a.hash(),...q(a)});if(d){var g;c=l.createMaterialKey(p.WGLGeometryType.MARKER,
c,!1,!1);b=b?l.hydrateMaterialKey(c):c;d.color=null!=(g=d.color)?g:a.color;f.push({materialKey:b,hash:d.hash(),lineWidth:a.width,...q(d)})}return{type:"composite-symbol",layers:f,hash:f.reduce((h,k)=>k.hash+h,"")}}function Y(a,c){const b=a.labelPlacement;var d=Z[c];if(!a.symbol)return w.warn("No LabelClass symbol specified."),!0;if(!d)return w.error(new v("mapview-labeling:unsupported-geometry-type",`Unable to create labels for Feature Layer, ${c} is not supported`)),!0;d.some(e=>e===b)||(d=d[0],
b&&w.warn(`Found invalid label placement type ${b} for ${c}. Defaulting to ${d}`),a.labelPlacement=d);return!1}function C(a,c){a=M.clone(a);return a.some(b=>Y(b,c))?[]:a}function D(a,c=!1){try{var b,d;const e=aa(a,c),f={};e.map(g=>{a:{switch(g.target){case "feature":E(f,F(a),g);g=void 0;break a;case "aggregate":var h=a.featureReduction;if("selection"===h.type)throw new v("ValidationError","Mapview does not support `selection` reduction type",h);E(f,F(a),g);f.aggregate||(f.aggregate={name:"aggregate",
input:"feature",filters:null,attributes:{},params:{clusterRadius:B.pt2px(h.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(B.pt2px(h.clusterMaxSize)/64),fields:g.aggregateFields}});G(f.aggregate,g.attributes.fields);g=void 0;break a}g=void 0}return g});return{source:{definitionExpression:a.definitionExpression,fields:a.fields.map(g=>g.toJSON()),gdbVersion:a.gdbVersion,historicMoment:null==(b=a.historicMoment)?void 0:b.getTime(),outFields:a.availableFields,pixelBuffer:a.pixelBuffer,spatialReference:a.spatialReference.toJSON(),
timeExtent:null==(d=a.timeExtent)?void 0:d.toJSON()},attributes:{fields:{},indexCount:0},processors:e,targets:f}}catch(e){if("ValidationError"===e.fieldName)return w.error(e),null;throw e;}}function G(a,c){for(const b in c){const d=c[b];if(d.target!==a.name)continue;const e=a.attributes[b];e?(e.context.mesh=e.context.mesh||d.context.mesh,e.context.storage=e.context.storage||d.context.storage):a.attributes[b]=d}return a}function F(a){var c,b,d,e,f;return[null!=(c=null==(b=a.filter)?void 0:b.toJSON())?
c:null,null!=(d=null==(e=a.effect)?void 0:null==(f=e.filter)?void 0:f.toJSON())?d:null]}function E(a,c,b){a.feature||(a.feature={name:"feature",input:"source",filters:c,attributes:{}});G(a.feature,b.attributes.fields);return a}function m(a,c){return c.field?r(a,{...c,type:"field",field:c.field}):c.valueExpression?r(a,{...c,type:"expression",valueExpression:c.valueExpression}):{field:null,fieldIndex:null}}function r(a,c){switch(c.type){case "expression":var b=c.valueExpression;if(!a.fields[b]){var d=
a.indexCount++;a.fields[b]={...c,name:b,fieldIndex:d}}return{fieldIndex:a.fields[b].fieldIndex};case "label-expression":return b=JSON.stringify(c.label),a.fields[b]||(d=a.indexCount++,a.fields[b]={...c,name:b,fieldIndex:d}),{fieldIndex:a.fields[b].fieldIndex};case "field":b=c.field;if("aggregate"===c.target&&a.fields[b])return{field:b};a.fields[b]={...c,name:b};return{field:b};case "statistic":return a.fields[c.name]={...c},{field:c.name}}}function aa(a,c=!1){const b=[];let d=0;b.push(ba(a,d++,c));
return b}function H(a,c,b,d,e,f=!1){c=r(c,{type:"label-expression",target:d,context:{mesh:!0},resultType:"string",label:{labelExpression:b.labelExpression,labelExpressionInfo:b.labelExpressionInfo?{expression:b.labelExpressionInfo.expression}:null,symbol:!!b.symbol,where:b.where}});({fieldIndex:c}=c);return{...n(b,a,f),fieldIndex:c,target:d,index:e}}function ba(a,c,b=!1){const d={indexCount:0,fields:{}};var e="featureReduction"in a&&a.featureReduction;c=e?"aggregate":"feature";switch(a.renderer.type){case "heatmap":{const {blurRadius:g,
fieldOffset:h,field:k}=a.renderer;return{type:"heatmap",aggregateFields:[],attributes:d,target:c,storage:null,mesh:{blurRadius:g,fieldOffset:h,field:m(d,{target:c,field:k,resultType:"numeric"}).field}}}default:{const g=[],h="aggregate"===c?Q.createClusterRenderer(g,a.renderer,e,null):a.renderer;I(d,g);const k=y(d,c,h,b);var f=null;const t=ca(d,c,h),J=V.toJSONGeometryType(a.geometryType);a=a.labelsVisible&&a.labelingInfo||[];let x=[];if(e){if("selection"===e.type)throw new v("ValidationError","Mapview does not support `selection` reduction type",
e);e.symbol&&(f=new P({symbol:e.symbol,visualVariables:"visualVariables"in h?h.visualVariables:null}),f=y(d,c,f,b));x=e&&e.labelsVisible&&e.labelingInfo||[]}a=C(a,J);x=C(x,J);let K=0;e=[...a.map(z=>H(h,d,z,"feature",K++,b)),...x.map(z=>H(h,d,z,"aggregate",K++,b))];return{type:"symbol",target:c,attributes:d,aggregateFields:g,storage:t,mesh:{matcher:k,labels:e,aggregateMatcher:f}}}}}function I(a,c){const b={mesh:!0,storage:!0};for(const d of c){const {name:e,outStatistic:f}=d,{statisticType:g,onStatisticField:h}=
f;let k=c=null,t=null;"onStatisticValueExpression"in f?k=r(a,{type:"expression",target:"feature",valueExpression:f.onStatisticValueExpression,resultType:"numeric"}).fieldIndex:"onStatisticNormalizationField"in f?(c=r(a,{type:"field",target:"feature",field:h,resultType:"numeric"}).field,t=f.onStatisticNormalizationField):c=r(a,{type:"field",target:"feature",field:h,resultType:"numeric"}).field;r(a,{type:"statistic",target:"aggregate",name:e,context:b,inField:c,inNormalizationField:t,inFieldIndex:k,
statisticType:g})}}function ca(a,c,b){switch(b.type){case "dot-density":return da(a,c,b.attributes);case "simple":case "class-breaks":case "unique-value":return ea(a,c,b.visualVariables);case "heatmap":case "dictionary":return null}}function da(a,c,b){return b&&b.length?{type:"dot-density",mapping:b.map((d,e)=>{const {field:f,fieldIndex:g}=m(a,{valueExpression:d.valueExpression,field:d.field,resultType:"numeric",target:c});return{binding:e,field:f,fieldIndex:g}}),target:c}:{type:"dot-density",mapping:[],
target:c}}function ea(a,c,b){if(!b||!b.length)return{type:"visual-variable",mapping:[],target:c};const d={storage:!0};return{type:"visual-variable",mapping:U.simplifyVisualVariables(b).map(e=>{var f;const g=R.getVVType(e.type),{field:h,fieldIndex:k}=m(a,{target:c,valueExpression:e.valueExpression,field:e.field,context:d,resultType:"numeric"});switch(e.type){case "size":return"$view.scale"===e.valueExpression?null:{type:"size",binding:g,field:h,fieldIndex:k,normalizationField:m(a,{target:c,field:e.normalizationField,
context:d,resultType:"numeric"}).field,valueRepresentation:null!=(f=e.valueRepresentation)?f:null};case "color":return{type:"color",binding:g,field:h,fieldIndex:k,normalizationField:m(a,{target:c,field:e.normalizationField,context:d,resultType:"numeric"}).field};case "opacity":return{type:"opacity",binding:g,field:h,fieldIndex:k,normalizationField:m(a,{target:c,field:e.normalizationField,context:d,resultType:"numeric"}).field};case "rotation":return{type:"rotation",binding:g,field:h,fieldIndex:k}}}).filter(e=>
e),target:c}}function y(a,c,b,d=!1){a=A.unwrapOr(a,{indexCount:0,fields:{}});switch(b.type){case "simple":case "dot-density":return fa(a,b,"dot-density"===b.type,d);case "class-breaks":return ha(a,c,b,d);case "unique-value":return ia(a,c,b,d);case "dictionary":return{type:"dictionary",renderer:b.toJSON()}}}function fa(a,c,b,d=!1){a=c.getSymbols();return{type:"simple",symbol:n(a.length?a[0]:null,c,d),isDotDensity:b}}function ha(a,c,b,d=!1){const e=b.backgroundFillSymbol,{field:f,fieldIndex:g}=m(a,
{target:c,field:b.field,valueExpression:b.valueExpression,resultType:"numeric",context:{mesh:!0,use:"renderer.field"}});c=b.normalizationType;c="log"===c?"esriNormalizeByLog":"percent-of-total"===c?"esriNormalizeByPercentOfTotal":"field"===c?"esriNormalizeByField":null;const h=b.classBreakInfos.map(k=>({symbol:n(k.symbol,b,d),min:k.minValue,max:k.maxValue})).sort((k,t)=>k.min-t.min);return{type:"interval",attributes:a.fields,field:f,fieldIndex:g,backgroundFillSymbol:n(e,b,d),defaultSymbol:n(b.defaultSymbol,
b,d),intervals:h,normalizationField:b.normalizationField,normalizationTotal:b.normalizationTotal,normalizationType:c,isMaxInclusive:b.isMaxInclusive}}function ia(a,c,b,d=!1){const e=[],f=b.backgroundFillSymbol;c={target:c,context:{mesh:!0},resultType:"string"};if(b.field&&"string"!==typeof b.field)throw new v("ValidationError","Expected renderer.field to be a string",b);const {field:g,fieldIndex:h}=m(a,{...c,field:b.field,valueExpression:b.valueExpression});for(const k of b.uniqueValueInfos)e.push({value:""+
k.value,symbol:n(k.symbol,b,d)});return{type:"map",attributes:a.fields,field:g,fieldIndex:h,field2:m(a,{...c,field:b.field2}).field,field3:m(a,{...c,field:b.field3}).field,fieldDelimiter:b.fieldDelimiter,backgroundFillSymbol:n(f,b),defaultSymbol:n(b.defaultSymbol,b),map:e}}const w=N.getLogger("esri.views.2d.layers.features.schemaUtils"),Z={esriGeometryPoint:"above-right above-center above-left center-center center-left center-right below-center below-left below-right".split(" "),esriGeometryPolygon:["always-horizontal"],
esriGeometryPolyline:["center-along"],esriGeometryMultipoint:null};u.addAggregateFields=I;u.createMatcherSchema=y;u.createSchema=function(a){L("esri-2d-update-debug")&&console.debug("Created new schema",D(a,!0));return D(a)};u.createSymbolSchema=n;Object.defineProperty(u,"__esModule",{value:!0})});