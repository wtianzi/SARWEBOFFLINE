// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/has ../../../../core/Logger ../../../../core/accessorSupport/ensureType ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/decorators/enumeration ../../../../core/accessorSupport/decorators/subclass ../../../../core/urlUtils ../../../../core/uuid ../../../../portal/support/resourceExtension ../../../../core/promiseUtils ../../../../core/Accessor ../../../../core/screenUtils ../../../../Graphic ../../../../layers/support/rasterFunctions/pixelUtils ../../engine/Container ../../engine/ImageryBitmapSource ../../engine/BitmapContainer ../support/ExportStrategy".split(" "),
function(n,f,e,q,F,g,r,t,G,H,I,u,v,w,x,y,z,A,B,C){const D=q.getLogger("esri.views.2d.layers.imagery.ImageryView2D");e=function(p){function l(){var a=p.apply(this,arguments)||this;a.attached=!1;a.container=new z.Container;a.updateRequested=!1;a.type="Imagery";a._bitmapView=null;return a}n._inheritsLoose(l,p);var b=l.prototype;b.destroy=function(){this.attached&&(this.detach(),this.attached=!1);this.updateRequested=!1};b.update=function(a){this.strategy.update(a).catch(d=>{u.isAbortError(d)||D.error(d)})};
b.detach=function(){this.strategy.destroy();this._bitmapView.removeAllChildren();this.container.removeAllChildren()};b.hitTest=function(a,d){a=this.view.toMap(w.createScreenPoint(a,d));return Promise.resolve(new x({attributes:{},geometry:a,layer:this.layer}))};b.attach=function(){const a=10<=this.layer.version,d=10.1<=this.layer.version?this.layer.imageMaxHeight:2048,c=10.1<=this.layer.version?this.layer.imageMaxWidth:2048;this._bitmapView=new B.BitmapContainer;this.strategy=new C({container:this._bitmapView,
imageNormalizationSupported:a,imageMaxHeight:d,imageMaxWidth:c,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()});this.attached=!0};b.moveStart=function(){};b.viewChange=function(){};b.moveEnd=function(){};b.install=function(a){this.container.addChild(this._bitmapView);a.addChild(this.container)};b.uninstall=function(a){this.container.removeChild(this._bitmapView);a.removeChild(this.container)};b.redraw=function(){this.strategy.updateExports(a=>{a.source instanceof HTMLImageElement?
a.requestRender():this.layer.applyRenderer({pixelBlock:a.source.pixelBlock}).then(d=>{const c=a.source;c.pixelBlock=d.pixelBlock;c.filter=h=>this.layer.applyFilter(h);this.container.requestRender()})})};b.requestUpdate=function(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())};b.isUpdating=function(){return this.strategy.updating||this.updateRequested};b.getPixelData=function(){if(this.updating)return null;var a=this.strategy.container.children;if(1===a.length&&a[0].source)return{extent:a[0].source.extent,
pixelBlock:a[0].source.originalPixelBlock};if(1<a.length){const d=this.view.extent;a=a.map(c=>c.source).filter(c=>c.extent&&c.extent.intersects(d)).map(c=>({extent:c.extent,pixelBlock:c.originalPixelBlock}));return(a=y.mosaicPixelData(a,d))?{extent:a.extent,pixelBlock:a.pixelBlock}:null}return null};b._fetchImage=function(a,d,c,h){h=h||{};h.timeExtent=this.timeExtent;h.requestAsImageElement=!0;return this.layer.fetchImage(a,d,c,h).then(m=>m.imageElement?m.imageElement:this.layer.applyRenderer(m.pixelData,
{signal:h.signal}).then(k=>{k=new A(k.pixelBlock,k.extent.clone(),m.pixelData.pixelBlock);k.filter=E=>this.layer.applyFilter(E);return k}))};n._createClass(l,[{key:"updating",get:function(){return!this.attached||this.isUpdating()}}]);return l}(v);f.__decorate([g.property()],e.prototype,"attached",void 0);f.__decorate([g.property()],e.prototype,"container",void 0);f.__decorate([g.property()],e.prototype,"layer",void 0);f.__decorate([g.property()],e.prototype,"strategy",void 0);f.__decorate([g.property()],
e.prototype,"timeExtent",void 0);f.__decorate([g.property()],e.prototype,"view",void 0);f.__decorate([g.property()],e.prototype,"updateRequested",void 0);f.__decorate([g.property()],e.prototype,"updating",null);f.__decorate([r.enumeration({imagery:"Imagery"})],e.prototype,"type",void 0);return e=f.__decorate([t.subclass("esri.views.2d.layers.imagery.ImageryView2D")],e)});