// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/maybe ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/handleUtils ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../core/promiseUtils ../../../core/Accessor ../../../core/Collection ../../../Graphic ../../../core/watchUtils ../../../layers/buildingSublayers/BuildingGroupSublayer ./LayerView3D ./support/layerViewUpdatingProperties ../../layers/BuildingSceneLayerView ./i3s/I3SUtil ./BuildingSublayerView3D ./i3s/BuildingFilterUtil ./BuildingComponentSublayerView3D".split(" "),
function(p,k,g,n,w,J,x,l,K,y,L,M,N,q,z,r,t,u,O,A,B,C,D,E,F,G){const H=w.getLogger("esri.views.3d.layers.BuildingSceneLayerView3D"),I=E.BuildingSublayerView3DMixin(z);g=function(v){function m(){var a=v.apply(this,arguments)||this;a.sublayerViews=new r;a._abortController=q.createAbortController();a._loadingComponents=0;return a}p._inheritsLoose(m,v);var d=m.prototype;d.isUpdating=function(){return 0<this._loadingComponents||this.sublayerViews&&this.sublayerViews.some(a=>a.updating)};d.initialize=function(){D.checkSpatialReference(this.layer.spatialReference,
this.view.spatialReference,this.view.viewingMode);this.initializeSubLayerViews(this.layer.sublayers,this)};d.destroy=function(){this.sublayerViews&&(this.sublayerViews.forEach(a=>a.destroy()),this.sublayerViews=null);this._abortController.abort();this._abortController=null};d.initializeSubLayerViews=function(a,b){const c=this,e=this.view;a.forEach(f=>{if(!f.isEmpty)if("building-group"===f.type){const h=new I({sublayer:f,view:e,parent:b});this.initializeSubLayerViews(f.sublayers,h)}else"mesh"===f.geometryType&&
(this._loadingComponents++,f.load({signal:this._abortController.signal}).then(()=>{const h=new G({sublayer:f,layerView:c,view:e,parent:b});this.sublayerViews.push(h);this.handles.add([u.init(h,"updating",()=>this.notifyChange("updating"),!0),u.init(h,"updatingProgress",()=>this.notifyChange("updatingProgressValue"),!0)])}).catch(h=>{q.isAbortError(h)||H.error(`Error while creating view for sublayer ${f.id}\nLayer: ${this.layer.url}\n`,h)}).then(()=>{this._loadingComponents--;this.notifyChange("updating");
this.notifyChange("updatingProgressValue")}))})};d.getGraphicFromIntersectorMetadata=function(a){for(const b of this.sublayerViews.items)if(b.sublayer.uid===a.sublayerUid)return b.getGraphicFromIntersectorMetadata(a);return null};d.fetchPopupFeatures=async function(a,b){if(n.isSome(b)&&b.clientGraphics&&0!==b.clientGraphics.length){var c=this._findComponent(b.clientGraphics[0].sourceLayer);if(!n.isNone(c))return c.fetchPopupFeatures(a,b)}};d.whenGraphicBounds=function(a){const b=this._findComponent(a.sourceLayer);
return n.isNone(b)?Promise.reject():b.whenGraphicBounds(a)};d._findComponent=function(a){return this.sublayerViews.find(b=>a===b.sublayer)};d.highlight=function(a){a instanceof t?a=[a]:a instanceof r&&(a=a.toArray());const b=[];if(Array.isArray(a)&&0<a.length&&a[0]instanceof t){const c=new Map;for(const e of a)a=c.get(e.sourceLayer),null==a&&(a=[],c.set(e.sourceLayer,a)),a.push(e);this.sublayerViews.forEach(e=>{const f=c.get(e.sublayer);f&&b.push(e.highlight(f))})}return x.handlesGroup(b)};d.getUsedMemory=
function(){return this.sublayerViews.reduce((a,b)=>a+b.getUsedMemory(),0)};d.getUnloadedMemory=function(){return this.sublayerViews.reduce((a,b)=>a+b.getUnloadedMemory(),0)};d.ignoresMemoryFactor=function(){return!1};p._createClass(m,[{key:"filterExpression",get:function(){const a=this.layer.activeFilterId;var b=null!=a?this.layer.filters.find(c=>c.id===a):null;return(b=null!=b?b.filterBlocks.find(c=>"solid"===c.filterMode.type):null)?b.filterExpression:null}},{key:"filterExpressions",get:function(){const a=
this.layer.activeFilterId,b=null!=a?this.layer.filters.find(c=>c.id===a):null;return b&&b.filterBlocks?b.filterBlocks.toArray().map(c=>[c.filterExpression,F.parseFilterMode(c)]):[]}},{key:"updatingProgressValue",get:function(){const a=this.sublayerViews,b=this._loadingComponents+(a?a.length:0);return a.reduce((c,e)=>c+e.updatingProgress,0)/b}}]);return m}(A.LayerView3D(C));k.__decorate([l.property()],g.prototype,"sublayerViews",void 0);k.__decorate([l.property({readOnly:!0})],g.prototype,"filterExpression",
null);k.__decorate([l.property({readOnly:!0})],g.prototype,"filterExpressions",null);k.__decorate([l.property(B.updatingProgress)],g.prototype,"updatingProgress",void 0);k.__decorate([l.property({readOnly:!0,dependsOn:[]})],g.prototype,"updatingProgressValue",null);return g=k.__decorate([y.subclass("esri.views.3d.layers.BuildingSceneLayerView3D")],g)});