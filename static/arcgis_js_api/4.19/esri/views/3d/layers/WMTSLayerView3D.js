// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/Error ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../core/watchUtils ../../layers/RefreshableLayerView ./LayerView3D ./TiledLayerView3D ../../layers/LayerView".split(" "),
function(n,f,d,q,z,g,A,r,t,B,C,D,u,v,w,x,y){const p=q.getLogger("esri.views.3d.layers.WMTSLayerView3d");d=function(l){function h(){return l.apply(this,arguments)||this}n._inheritsLoose(h,l);var e=h.prototype;e.initialize=function(){const a=u.whenTrueOnce(this.view,"basemapTerrain.tilingSchemeDone").then(()=>{var b=()=>new t("layerview:no-compatible-tiling-scheme","None of the tiling schemes supported by the service are compatible with the scene.");if(!this.view.basemapTerrain.tilingSchemeLocked)throw b();
var m=this.view.basemapTerrain.tilingScheme;const k=this.layer.activeLayer;let c;if(k&&k.tileMatrixSet){if(c=k.tileMatrixSet,b=c.tileInfo,m=this._getTileInfoSupportError(b,c.fullExtent)||this._getTileInfoCompatibilityError(b,m))throw m;}else{c=this._getCompatibleTileMatrixSet();if(!c)throw b();k.tileMatrixSetId=c.id}this._set("tileInfo",c.tileInfo);this._set("fullExtent",c.fullExtent);this.layer.fullExtent=c.fullExtent});this.addResolvingPromise(a);this.when(()=>this._initialized())};e.refresh=function(){this.emit("data-changed")};
e.canResume=function(){if(!l.prototype.canResume.call(this))return!1;const a=this.layer.activeLayer.tileMatrixSet;return a&&!this._getTileInfoError(a.tileInfo,a.fullExtent)};e.doRefresh=async function(){this.suspended||this.emit("data-changed")};e._initialized=function(){this.updatingHandles.add(this,"layer.activeLayer.styleId",()=>this.refresh());this.updatingHandles.add(this,"tileMatrixSet",()=>this.refresh());this.updatingHandles.add(this.layer,"activeLayer",a=>{let b=a.tileMatrixSet;if(b){if(a=
this._getTileInfoError(b.tileInfo,b.fullExtent))p.error("The selected tile matrix set is not compatible with the view",a),b=null}else(b=this._getCompatibleTileMatrixSet())?a.tileMatrixSetId=b.id:p.error("The layer does not provide a tiling scheme that is compatible with the view");this.notifyChange("suspended");this.canResume()&&this.refresh()})};e._getCompatibleTileMatrixSet=function(){return this.layer.activeLayer.tileMatrixSets.find(a=>!this._getTileInfoError(a.tileInfo,a.fullExtent))};e._getTileInfoError=
function(a,b){return this._getTileInfoSupportError(a,b)||this._getTileInfoCompatibilityError(a,this.view.basemapTerrain.tilingScheme)};n._createClass(h,[{key:"hasMixedImageFormats",get:function(){return!0}}]);return h}(v.RefreshableLayerView(x.TiledLayerView3D(w.LayerView3D(y))));f.__decorate([g.property({readOnly:!0})],d.prototype,"hasMixedImageFormats",null);f.__decorate([g.property()],d.prototype,"fullExtent",void 0);f.__decorate([g.property()],d.prototype,"layer",void 0);f.__decorate([g.property()],
d.prototype,"suspended",void 0);f.__decorate([g.property()],d.prototype,"tileInfo",void 0);return d=f.__decorate([r.subclass("esri.views.3d.layers.WMTSLayerView3D")],d)});