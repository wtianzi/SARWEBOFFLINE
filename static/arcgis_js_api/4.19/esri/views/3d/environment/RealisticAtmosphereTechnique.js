// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("require exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../webgl-engine/core/shaderTechnique/ReloadableShaderModule ../webgl-engine/core/shaderTechnique/ShaderTechnique ../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration ../webgl-engine/lib/DefaultVertexAttributeLocations ../../webgl/Program ../../webgl/renderState ../../../chunks/RealisticAtmosphere.glsl".split(" "),function(m,g,h,n,e,f,k,p,q,c,r){f=function(b){function a(){return b.apply(this,arguments)||
this}h._inheritsLoose(a,b);var d=a.prototype;d.initializeProgram=function(t){const l=a.shader.get().build({haze:this.configuration.haze});return new q(t.rctx,l.generateSource("vertex"),l.generateSource("fragment"),p.Default3D)};d.initializePipeline=function(){return this.configuration.haze?c.makePipelineState({blending:c.separateBlendingParams(1,0,769,1),colorWrite:c.defaultColorWriteParams}):c.makePipelineState({blending:c.separateBlendingParams(770,1,771,771),depthTest:{func:515},colorWrite:c.defaultColorWriteParams})};
return a}(f.ShaderTechnique);f.shader=new e.ReloadableShaderModule(r.RealisticAtmosphereShader,()=>new Promise(function(b,a){m(["./RealisticAtmosphere.glsl"],b,a)}));e=function(b){function a(){var d=b.apply(this,arguments)||this;d.haze=!1;return d}h._inheritsLoose(a,b);return a}(k.ShaderTechniqueConfiguration);n.__decorate([k.parameter()],e.prototype,"haze",void 0);g.RealisticAtmosphereTechnique=f;g.RealisticAtmosphereTechniqueConfiguration=e;Object.defineProperty(g,"__esModule",{value:!0})});