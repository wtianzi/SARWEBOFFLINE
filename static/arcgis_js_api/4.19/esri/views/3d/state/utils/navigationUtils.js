// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/maybe ../../../../core/mathUtils ../../../../core/screenUtils ../../../../chunks/vec3f64 ../../../../chunks/vec3 ../../support/mathUtils ../../../../chunks/mat4 ../../../../chunks/mat4f64 ../../../../chunks/vec2f64 ../../../../chunks/vec2 ../../support/stack ../../../../chunks/vector ../../support/geometryUtils ../../webgl-engine/lib/Camera ../../support/geometryUtils/coordinateSystem".split(" "),function(h,ra,r,sa,m,d,B,n,N,ta,ua,z,va,p,wa,E){function O(a,c,b){const e=
z.sm4d.get();n.identity(e);n.rotate(e,e,b[3],p.axisAngle.axis(b));d.subtract(a.eye,a.eye,c);d.transformMat4(a.eye,a.eye,e);d.add(a.eye,a.eye,c);d.subtract(a.center,a.center,c);d.transformMat4(a.center,a.center,e);d.add(a.center,a.center,c);d.transformMat4(a.up,a.up,e);a.markViewDirty()}function U(a,c){d.set(c,0,0,0);for(const b of a)d.add(c,c,b);d.scale(c,c,1/a.length)}function V(a,c,b,e){return Math.sin(a/d.length(c))*(b+e.radius)}function W(a,c,b,e){b=p.ray.fromScreenAtEye(c,b,X);if(ra.isNone(b))return!1;
p.sphere.closestPointOnSilhouette(a,b,G);return p.sphere.intersectRay(a,b,e)?d.squaredDistance(G,b.origin)<d.squaredDistance(e,b.origin)?(d.copy(e,G),!1):!0:(d.subtract(C,c.eye,c.center),d.normalize(C,C),p.plane.fromNormalAndOffset(C,-d.dot(d.normalize(C,C),G),Y),p.plane.intersectRay(Y,b,e),!1)}function Z(a,c,b,e,g,f){d.cross(H,a,c);d.subtract(I,a,c);d.length(a)<=g||!e.aboveGround?(d.cross(b,I,e.eye),a=d.dot(a,c)/(d.length(a)*d.length(c)),f=Math.cos(r.clamp(B.cyclicalPI.normalize(r.deg2rad(f)),0,
P)),c=-r.acosClamped(a)-Math.max(0,d.length(c)-g)/(f*g)):(d.subtract(aa,e.eye,e.center),d.cross(b,I,aa),c=-d.length(I)/g);d.normalize(b,b);d.scale(b,b,d.length(H));return c}function Q(a,c,b,e){e=Math.cos(r.clamp(B.cyclicalPI.normalize(r.deg2rad(e)),0,P));c=c>b?-(c-b)/(e*b):c<-b?Math.PI-(c+b)/(e*b):r.acosClamped(c/b);return((a>b?-(a-b)/(e*b):a<-b?Math.PI-(a+b)/(e*b):r.acosClamped(a/b))-c)*b}function ba(a,c,b,e,g,f,k,l,q,t){q=Q(a[2],c[2],k[3],q);c=t?Q(a[0],c[0],k[3],180):c[0]-a[0];a=Math.sin(l)*c-Math.cos(l)*
q;l=Math.cos(l)*c+Math.sin(l)*q;d.normalize(ca,g);g=t?a/Math.sqrt(Math.abs(k[3]**2-d.dot(b,ca)**2)):a/k[3];b=l/Math.sqrt(Math.abs(k[3]**2-d.dot(b,e)**2));ua.set(f,g,b)}function da(a,c,b,e,g,f,k,l,q,t){d.cross(H,a,c);E.coordinateSystemFromOneAxisAndNormalVector(f.up,f.eye,J,K,L);E.coordinateSystemFromOneAxisAndNormalVector([0,0,1],f.eye,u,v,ea);d.copy(b,v);d.copy(e,u);d.normalize(b,b);d.scale(b,b,d.length(H));E.vectorCoordinates(a,d.normalize(K,K),d.normalize(L,L),d.normalize(J,J),fa);E.vectorCoordinates(c,
K,L,J,ha);ba(fa,ha,a,u,v,g,k,l,q,t)}function ia(a,c,b,e,g,f,k){n.identity(w);n.identity(x);n.identity(y);n.rotate(w,w,g,e);n.rotate(x,x,k,f);n.multiply(y,w,x);d.subtract(c,a,b);d.transformMat4(c,c,y);d.add(c,c,b)}function ja(a,c,b,e,g,f){n.identity(w);n.identity(x);n.identity(y);n.rotate(w,w,e,b);n.rotate(x,x,f,g);n.multiply(y,w,x);d.subtract(a.eye,a.eye,c);d.transformMat4(a.eye,a.eye,y);d.add(a.eye,a.eye,c);d.subtract(a.center,a.center,c);d.transformMat4(a.center,a.center,y);d.add(a.center,a.center,
c);d.subtract(a.up,a.up,c);d.transformMat4(a.up,a.up,y);d.add(a.up,a.up,c);a.markViewDirty()}function R(a,c,b,e,g,f,k=D.Pole,l=D.Angle){a=Math.abs(a[2])<b*k||Math.abs(c)>b;return(Math.abs(e)>Math.PI-l||Math.abs(e)<l)&&a&&f.aboveGround&&g<D.Tilt?!0:!1}function ka(a,c,b,e,g,f){f?(p.axisAngle.fromPoints(b,e,la),O(c,a,la)):(b=Z(b,e,ma,c,a[3],g),O(c,a,p.axisAngle.wrapAxisAngle(ma,b)))}function na(a,c,b,e,g,f,k){const l=k?20:1;d.copy(A,e);M.copyFrom(c);let q;for(let t=0;t<l&&1E-12<d.squaredDistance(b,A);t++)if(e=
d.squaredDistance(b,A),da(b,A,v,u,F,M,a,g,f,k),ja(M,a,u,F[1],v,F[0]),ia(A,A,a,u,F[1],v,F[0]),q=d.squaredDistance(b,A),q<e||0===t)c.copyFrom(M);else break}const oa=sa.createScreenPointArray();(function(a){a[a.Vertical=0]="Vertical";a[a.Horizontal=1]="Horizontal"})(h.NavigationMode||(h.NavigationMode={}));const S={Elevation:3E4,Angle:r.deg2rad(6)},D={Pole:.95,Angle:r.deg2rad(18),Tilt:45},P=r.deg2rad(80),T=m.create(),G=m.create(),C=m.create(),Y=p.plane.create(),aa=m.create(),u=m.create(),v=m.create(),
ea=m.create(),J=m.create(),K=m.create(),L=m.create(),fa=m.create(),ha=m.create(),F=ta.create(),la=p.axisAngle.create(),w=N.create(),x=N.create(),y=N.create(),A=m.create(),ca=m.create(),I=m.create(),M=new wa,H=m.create(),ma=m.create(),X={origin:m.create(),direction:m.create()},pa={origin:m.create(),direction:m.create()};h.PreservingHeadingThreshold=D;h.TiltThresholdPanningSpeed=P;h.VerticalPanTresholds=S;h.applyPanPlanar=function(a,c,b){d.subtract(T,b,c);d.subtract(a.eye,a.eye,T);d.subtract(a.center,
a.center,T);a.markViewDirty()};h.applyPanSphericalDirectRotation=ka;h.applyPanSphericalPreserveHeading=na;h.applyRotation=O;h.applyRotationWithTwoAxes=ja;h.applyZoomOnSphere=function(a,c,b){c.getScreenCenter(oa);p.sphere.intersectScreen(a,c,oa,c.center);c.markViewDirty();a=c.distance;b*=a;1E-6>Math.abs(a-b)||(b=d.scale(z.sv3d.get(),c.viewForward,b),d.subtract(c.eye,c.center,b),c.markViewDirty())};h.applyZoomToPoint=function(a,c,b,e){const g=z.sv3d.get();b=1-b;d.subtract(g,c,a.eye);const f=d.length(g);
let k=f*(1-b);0<=b&&k<e&&(k=e,b=-(k-f)/f);1E-6>Math.abs(f-k)||(d.scale(g,g,b),d.add(a.eye,a.eye,g),d.lerp(a.center,a.center,c,b))};h.centroid=U;h.centroidOnSphere=function(a,c,b){U(c,b);d.normalize(b,b);d.scale(b,b,a)};h.decideNavigationMode=function(a,c,b,e){if(d.length(a.eye)-e.radius>S.Elevation)return h.NavigationMode.Horizontal;if(!b)return h.NavigationMode.Vertical;p.ray.fromScreenAtEye(a,c,pa);return-r.sign(a.relativeElevation)*(.5*Math.PI+va.angle(a.eye,pa.direction))<S.Angle?h.NavigationMode.Vertical:
h.NavigationMode.Horizontal};h.intersectPlaneFromScreenPoint=function(a,c,b,e){return p.plane.intersectRay(a,p.ray.fromScreen(c,b,X),e)};h.lengthFromPoints=Q;h.normalizeCoordinate=function(a,c,b){b[0]=c[0]/(a.fullWidth/a.pixelRatio);b[1]=c[1]/(a.fullHeight/a.pixelRatio);return b};h.normalizeRotationDelta=function(a){for(;a>Math.PI;)a-=2*Math.PI;for(;a<-Math.PI;)a+=2*Math.PI;return a};h.offSurfaceTiltToEyeTiltGlobal=function(a,c,b,e){return V(Math.PI/2,c,b,e)+(a-Math.PI/2)};h.onSurfaceTiltToEyeTiltGlobal=
V;h.panMotionToRotationMatrix=function(a,c,b,e,g,f,k,l,q){if(R(a.center,d.dot(a.up,a.center),d.length(a.center),-B.cyclicalPI.normalize(r.deg2rad(f)),k,c))switch(a=-B.cyclicalPI.normalize(r.deg2rad(g)),{eye:g}=c,E.coordinateSystemFromOneAxisAndNormalVector([0,0,1],g,u,v,ea),g=b.translation[0]*e.pan,f="zoom"===q.mode?0:b.translation[1]*e.pan,c=Math.max(Math.sqrt(Math.abs(1-d.dot(c.center,u)**2/d.length(c.center)**2)),.5),k=-Math.cos(a)*f+Math.sin(a)*g,n.rotate(l.pan.matrix,l.pan.matrix,(Math.sin(a)*
f+Math.cos(a)*g)/c,u),l.pan.enabled=!0,q.mode){case "pan":n.rotate(l.pan.matrix,l.pan.matrix,k,v);l.pan.enabled=!0;break;case "zoom":l.zoom=-b.translation[1]*e.zoom}else{{const {eye:t,viewRight:qa}=c;c=d.cross(z.sv3d.get(),qa,t);a=b.translation[0]*e.pan;0!==a&&(n.rotate(l.pan.matrix,l.pan.matrix,-a,c),l.pan.enabled=!0);switch(q.mode){case "pan":b=b.translation[1]*e.pan;0!==b&&(n.rotate(l.pan.matrix,l.pan.matrix,b,qa),l.pan.enabled=!0);break;case "zoom":l.zoom=-b.translation[1]*e.zoom}}}};h.panToPosition=
function(a,c,b,e,g,f,k){R(b,d.dot(c.up,b),a[3],-B.cyclicalPI.normalize(r.deg2rad(g)),f,c,D.Pole,D.Angle)?na(a,c,b,e,-B.cyclicalPI.normalize(r.deg2rad(g)),f,k):ka(a,c,b,e,f,k)};h.pickPointAndInitSphere=function(a,c,b,e,g){const f=m.create(),k=p.sphere.create();let l=!0,q=!0;a.intersectScreen(b,f)?k[3]=d.length(f):(q=!1,k[3]=c.aboveGround?Math.max(d.length(c.center),.9*g.radius):d.length(c.eye)-c.relativeElevation,e?W(k,c,b,f):l=p.sphere.intersectScreen(k,c,b,f));return{sphere:k,scenePickPoint:l?f:
null,hasGeometryIntersection:q}};h.preserveHeadingThreshold=R;h.rotatePointAroundTwoAxes=ia;h.rotationAngleAndAxisDirectRotation=Z;h.rotationAnglesAndAxesHeadingPreserving=da;h.rotationAnglesHeadingPreserving=ba;h.rotationFromPointsAroundAxis=function(a,c,b){const e=z.sv3d.get(),g=z.sv3d.get(),f=z.sv3d.get();d.copy(g,a);d.copy(f,c);a=d.dot(g,b);c=d.dot(f,b);d.scale(e,b,a);d.subtract(g,g,e);d.normalize(g,g);d.scale(e,b,c);d.subtract(f,f,e);d.normalize(f,f);a=d.dot(g,f);d.cross(e,b,g);b=d.dot(f,e);
return Math.atan2(b,a)};h.sphereOrPlanePointFromScreenPoint=W;Object.defineProperty(h,"__esModule",{value:!0})});