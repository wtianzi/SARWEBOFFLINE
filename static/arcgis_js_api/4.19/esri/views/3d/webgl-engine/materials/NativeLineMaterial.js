// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../../../../core/Logger ../../../../core/screenUtils ../../../../chunks/vec3f64 ../../../../chunks/vec3 ../../../../chunks/vec2 ../../support/buffer/BufferView ../../support/geometryUtils ../lib/Util ../lib/geometryDataUtils ./renderers/utils ../lib/GLMaterial ./internal/MaterialUtil ../lib/Material ./internal/bufferWriterUtils ./internal/DefaultBufferWriter ../shaders/NativeLineTechnique".split(" "),function(K,L,
C,D,z,r,k,R,S,c,T,U,V,W,X,M,Y,E,N){const Z=D.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial");D=function(v){function q(a){a=v.call(this,a,aa)||this;a.techniqueConfig=new N.NativeLineTechniqueConfiguration;return a}L._inheritsLoose(q,v);var b=q.prototype;b.getTechniqueConfig=function(a){this.techniqueConfig.output=a;this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled;this.techniqueConfig.vertexColors=this.params.vertexColors;this.techniqueConfig.transparent=1>this.params.color[3]||
1>this.params.width;a=C.isSome(this.params.stipplePattern);this.techniqueConfig.stippleEnabled=a;this.techniqueConfig.stippleOffColorEnabled=a&&C.isSome(this.params.stippleOffColor);this.techniqueConfig.stippleIntegerRepeatsEnabled=a&&this.params.stippleIntegerRepeats;this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees;return this.techniqueConfig};b.getPassParameters=function(){return this.params};b.intersect=function(a,d,e,l,A,g,h,f,p){p?X.intersectDrapedRenderLineGeometry(a,l,g,1,
h):this.intersectLineGeometry(a,d,e,l,h)};b.intersectLineGeometry=function(a,d,e,l,A){if(l.options.selectionMode&&!V.isInstanceHidden(d))if(T.isTranslationMatrix(e)){d=a.vertexAttributes.get("position").data;var g=l.camera,h=ba;R.copy(h,l.point);k.set(B[0],h[0]-2,h[1]+2,0);k.set(B[1],h[0]+2,h[1]+2,0);k.set(B[2],h[0]+2,h[1]-2,0);k.set(B[3],h[0]-2,h[1]-2,0);for(a=0;4>a;a++)if(!g.unprojectFromRenderScreen(B[a],u[a]))return;c.plane.fromPoints(g.eye,u[0],u[1],F);c.plane.fromPoints(g.eye,u[1],u[2],G);c.plane.fromPoints(g.eye,
u[2],u[3],H);c.plane.fromPoints(g.eye,u[3],u[0],I);a=Number.MAX_VALUE;for(let p=0;p<d.length-5;p+=3)if(m[0]=d[p]+e[12],m[1]=d[p+1]+e[13],m[2]=d[p+2]+e[14],n[0]=d[p+3]+e[12],n[1]=d[p+4]+e[13],n[2]=d[p+5]+e[14],!(0>c.plane.signedDistance(F,m)&&0>c.plane.signedDistance(F,n)||0>c.plane.signedDistance(G,m)&&0>c.plane.signedDistance(G,n)||0>c.plane.signedDistance(H,m)&&0>c.plane.signedDistance(H,n)||0>c.plane.signedDistance(I,m)&&0>c.plane.signedDistance(I,n))){g.projectToRenderScreen(m,w);g.projectToRenderScreen(n,
x);if(0>w[2]&&0<x[2]){k.subtract(t,m,n);var f=g.frustum;f=-c.plane.signedDistance(f[4],m)/k.dot(t,c.plane.normal(f[4]));k.scale(t,t,f);k.add(m,m,t);g.projectToRenderScreen(m,w)}else if(0<w[2]&&0>x[2])k.subtract(t,n,m),f=g.frustum,f=-c.plane.signedDistance(f[4],n)/k.dot(t,c.plane.normal(f[4])),k.scale(t,t,f),k.add(n,n,t),g.projectToRenderScreen(n,x);else if(0>w[2]&&0>x[2])continue;w[2]=0;x[2]=0;f=c.lineSegment.distance2(c.lineSegment.fromPoints(w,x,O),h);f<a&&(a=f,k.copy(P,m),k.copy(Q,n))}e=l.rayBeginPoint;
l=l.rayEndPoint;4>a&&(a=Number.MAX_VALUE,c.lineSegment.closestLineSegmentPoint(c.lineSegment.fromPoints(P,Q,O),c.lineSegment.fromPoints(e,l,ca),y)&&(k.subtract(y,y,e),a=k.length(y),k.scale(y,y,1/a),a/=k.distance(e,l)),A(a,y))}else Z.error("intersection assumes a translation-only matrix")};b.computeAttachmentOrigin=function(a,d){a=a.vertexAttributes;if(!a)return!1;a=a.get("position");return U.computeAttachmentOriginLines(a,null,!1,d)};b.createBufferWriter=function(){const a=this.params.vertexColors?
E.PositionColorLayout:E.PositionLayout;return C.isNone(this.params.stipplePattern)?new E.DefaultBufferWriter(a):new da(a.clone().vec3f("auxpos1"))};b.getGLMaterial=function(a){return 0===a.output||4===a.output?new ea(a):void 0};return q}(M.Material);let ea=function(v){function q(a){a=v.call(this,a)||this;a.updateParameters();return a}L._inheritsLoose(q,v);var b=q.prototype;b.updateParameters=function(){this.technique=this.techniqueRep.acquireAndReleaseExisting(N.NativeLineTechnique,this.material.getTechniqueConfig(this.output),
this.technique)};b.beginSlot=function(a){return 3===a};b._updateOccludeeState=function(a){a.hasOccludees!==this.material.params.sceneHasOcludees&&(this.material.setParameterValues({sceneHasOcludees:a.hasOccludees}),this.updateParameters())};b.ensureParameters=function(a){0===this.output&&this._updateOccludeeState(a)};b.bind=function(a,d){a.bindProgram(this.technique.program);this.technique.bindPass(a,this.material.getPassParameters(),d)};b.getPipelineState=function(a,d){return this.technique.getPipelineState(d)};
return q}(W),da=function(){function v(b){this.vertexBufferLayout=b}var q=v.prototype;q.allocate=function(b){return this.vertexBufferLayout.createBuffer(b)};q.elementCount=function(b){return b.indices.get("position").length};q.write=function(b,a,d,e){Y.writeDefaultAttributes(a,this.vertexBufferLayout,b.transformation,b.invTranspTransformation,d,e);this.writeAuxpos1(b,a,d,e)};q.writeAuxpos1=function(b,a,d,e){var l=d.getField("auxpos1",S.BufferViewVec3f);d=a.indices.get("position");a=a.vertexAttributes.get("position").data;
b=b.transformation;const A=l.typedBufferStride;l=l.typedBuffer;e*=A;for(let p=0;p<d.length;p+=2){var g=3*d[p],h=a[g],f=a[g+1];const J=a[g+2];g=b[0]*h+b[4]*f+b[8]*J+b[12];const fa=b[1]*h+b[5]*f+b[9]*J+b[13];h=b[2]*h+b[6]*f+b[10]*J+b[14];for(f=0;2>f;++f)l[e]=g,l[e+1]=fa,l[e+2]=h,e+=A}};return v}();const aa={color:[1,1,1,1],vertexColors:!1,slicePlaneEnabled:!1,width:1,stipplePattern:null,stippleIntegerRepeats:!1,stippleOffColor:null,sceneHasOcludees:!1,...M.materialParametersDefaults},m=r.create(),n=
r.create(),t=r.create(),y=r.create(),w=z.createRenderScreenPointArray3(),x=z.createRenderScreenPointArray3(),P=r.create(),Q=r.create(),O=c.lineSegment.create(),ca=c.lineSegment.create(),ba=r.create(),B=[z.createRenderScreenPointArray3(),z.createRenderScreenPointArray3(),z.createRenderScreenPointArray3(),z.createRenderScreenPointArray3()],u=[r.create(),r.create(),r.create(),r.create()],F=c.plane.create(),G=c.plane.create(),H=c.plane.create(),I=c.plane.create();K.NativeLineMaterial=D;Object.defineProperty(K,
"__esModule",{value:!0})});