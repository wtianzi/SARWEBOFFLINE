// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/vec2f32 ../../support/buffer/InterleavedLayout ../lib/GLMaterial ../lib/Material ./internal/bufferWriterUtils ../shaders/LineCalloutTechnique".split(" "),function(m,h,g,q,r,n,k,l){let w=function(e){function c(a){a=e.call(this,a,t)||this;a.techniqueConfig=new l.LineCalloutTechniqueConfiguration;a._uniqueMaterialIdentifier=c.uniqueMaterialIdentifier(a.params);return a}h._inheritsLoose(c,e);var b=c.prototype;b.dispose=function(){};
b.getGLMaterial=function(a){return 0===a.output?new u(a):void 0};b.getPassParameters=function(){return this.params};b.getTechniqueConfig=function(a,d){this.techniqueConfig.occlusionTestEnabled=this.params.occlusionTest;this.techniqueConfig.verticalOffset=!!this.params.verticalOffset;this.techniqueConfig.screenSizePerspective=!!this.params.screenSizePerspective;this.techniqueConfig.depthHudEnabled=a;this.techniqueConfig.depthHudAlignStartEnabled=!!this.params.depthHUDAlignStart;this.techniqueConfig.screenCenterOffsetUnitsEnabled=
"screen"===this.params.centerOffsetUnits?1:0;this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled;this.techniqueConfig.multipassGeometryEnabled=d?d.multipassGeometryEnabled:!1;return this.techniqueConfig};b.intersect=function(){};b.createBufferWriter=function(){return new v};b.validateParameterValues=function(a){a=c.uniqueMaterialIdentifier(a);a!==this._uniqueMaterialIdentifier&&(this._uniqueMaterialIdentifier=a)};c.uniqueMaterialIdentifier=function(a){return JSON.stringify({screenOffset:a.screenOffset||
[0,0],centerOffsetUnits:a.centerOffsetUnits||"world"})};h._createClass(c,[{key:"uniqueMaterialIdentifier",get:function(){return this._uniqueMaterialIdentifier}}]);return c}(n.Material),u=function(e){function c(a){a=e.call(this,a)||this;a.isRenderSlot=!0;a.updateParameters();return a}h._inheritsLoose(c,e);var b=c.prototype;b.updateParameters=function(a){this.technique=this.techniqueRep.acquireAndReleaseExisting(l.LineCalloutTechnique,this.material.getTechniqueConfig(!1,a),this.technique);this.depthTechnique=
this.techniqueRep.acquireAndReleaseExisting(l.LineCalloutTechnique,this.material.getTechniqueConfig(!0,a),this.depthTechnique)};b.beginSlot=function(a){switch(a){case 20:return this.isRenderSlot=!0;case 21:return this.isRenderSlot=!1,!0}return!1};b.getTechnique=function(){return this.isRenderSlot?this.technique:this.depthTechnique};b.ensureParameters=function(a){this.updateParameters(a)};b.bind=function(a,d){const f=this.getTechnique();a.bindProgram(f.program);f.bindPass(a,this.material.getPassParameters(),
d)};return c}(r);const t={verticalOffset:null,screenSizePerspective:null,screenOffset:[0,0],color:[0,0,0,1],size:1,borderColor:null,occlusionTest:!1,shaderPolygonOffset:1E-5,depthHUDAlignStart:!1,centerOffsetUnits:"world",slicePlaneEnabled:!1,...n.materialParametersDefaults},x=q.newLayout().vec3f("position").vec3f("normal").vec2f("uv0").vec4f("auxpos1"),p=[g.fromValues(0,0),g.fromValues(1,0),g.fromValues(0,1),g.fromValues(1,0),g.fromValues(1,1),g.fromValues(0,1)];let v=function(){function e(){this.vertexBufferLayout=
x}var c=e.prototype;c.allocate=function(b){return this.vertexBufferLayout.createBuffer(b)};c.elementCount=function(b){return 6*b.indices.get("position").length};c.write=function(b,a,d,f){k.writePosition(a.indices.get("position"),a.vertexAttributes.get("position").data,b.transformation,d.position,f,6);k.writeNormal(a.indices.get("normal"),a.vertexAttributes.get("normal").data,b.invTranspTransformation,d.normal,f,6);k.writeBufferVec4(a.indices.get("auxpos1"),a.vertexAttributes.get("auxpos1").data,d.auxpos1,
f,6);for(b=0;b<p.length;++b)d.uv0.setVec(f+b,p[b])};return e}();m.LineCalloutMaterial=w;Object.defineProperty(m,"__esModule",{value:!0})});