// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../../../../core/ObjectPool ../../../../core/PooledArray ../../../../chunks/vec3f64 ../../../../chunks/vec3 ../../support/geometryUtils ./Util".split(" "),function(aa,N,ba,F,m,y,k,T){function J(g,e,a){a[0]=g[0]+e;a[1]=g[1]+e;a[2]=g[2]+e}function U(g,e,a,b){if(1===e)g=a(g[0]),k.sphere.copy(g,b);else{r[0]=Infinity;r[1]=Infinity;r[2]=Infinity;t[0]=-Infinity;t[1]=-Infinity;t[2]=-Infinity;for(let h=0;h<e;h++){var c=a(g[h]);if(G(c[3])){var d=
r,f=c;d[0]=Math.min(d[0],f[0]-f[3]);d[1]=Math.min(d[1],f[1]-f[3]);d[2]=Math.min(d[2],f[2]-f[3]);d=t;d[0]=Math.max(d[0],c[0]+c[3]);d[1]=Math.max(d[1],c[1]+c[3]);d[2]=Math.max(d[2],c[2]+c[3])}}y.lerp(b,r,t,.5);b[3]=Math.max(t[0]-r[0],t[1]-r[1],t[2]-r[2])/2}}function ca(g,e,a){if(!D.length)for(var b=0;8>b;++b)D.push({index:0,distance:0});for(b=0;8>b;++b){const c=V[b];D.data[b].index=b;D.data[b].distance=A(g,e,c)}D.sort((c,d)=>c.distance-d.distance);for(g=0;8>g;++g)a[g]=D.data[g].index}function O(g,e){let a=
Infinity,b=null;for(let c=0;8>c;++c){const d=A(g,e,W[c]);d<a&&(a=d,b=W[c])}return b}function A(g,e,a){return e*(g[0]*a[0]+g[1]*a[1]+g[2]*a[2])}function G(g){return!isNaN(g)&&-Infinity!==g&&Infinity!==g&&0<g}let fa=function(){function g(a,b){this._objectToBoundingSphere=a;this._maximumObjectsPerNode=10;this._maximumDepth=20;this._degenerateObjects=new Set;this._root=new l;this._objectCount=0;b&&(void 0!==b.maximumObjectsPerNode&&(this._maximumObjectsPerNode=b.maximumObjectsPerNode),void 0!==b.maximumDepth&&
(this._maximumDepth=b.maximumDepth))}var e=g.prototype;e.destroy=function(){this._degenerateObjects.clear();l.clearPool();P[0]=null;E.prune();D.prune()};e.add=function(a,b=a.length){this._objectCount+=b;this._grow(a,b);const c=l.acquire();for(let d=0;d<b;d++){const f=a[d];this._isDegenerate(f)?this._degenerateObjects.add(f):(c.init(this._root),this._add(f,c))}l.release(c)};e.remove=function(a,b=null){this._objectCount-=a.length;const c=l.acquire();for(const d of a)a=N.isSome(b)?b:k.sphere.copy(this._objectToBoundingSphere(d),
da),G(a[3])?(c.init(this._root),this._remove(d,a,c)):this._degenerateObjects.delete(d);l.release(c);this._shrink()};e.update=function(a,b){if(G(b[3])||!this._isDegenerate(a))P[0]=a,a=P,this.remove(a,b),this.add(a)};e.forEachAlongRay=function(a,b,c){const d=k.ray.wrap(a,b);this._forEachNode(this._root,f=>{if(!this._intersectsNode(d,f))return!1;f=f.node;f.terminals.forAll(h=>{this._intersectsObject(d,h)&&c(h)});null!==f.residents&&f.residents.forAll(h=>{this._intersectsObject(d,h)&&c(h)});return!0})};
e.forEachAlongRayWithVerticalOffset=function(a,b,c,d){const f=k.ray.wrap(a,b);this._forEachNode(this._root,h=>{if(!this._intersectsNodeWithOffset(f,h,d))return!1;h=h.node;h.terminals.forAll(n=>{this._intersectsObjectWithOffset(f,n,d)&&c(n)});null!==h.residents&&h.residents.forAll(n=>{this._intersectsObjectWithOffset(f,n,d)&&c(n)});return!0})};e.forEach=function(a){this._forEachNode(this._root,b=>{b=b.node;b.terminals.forAll(a);null!==b.residents&&b.residents.forAll(a);return!0});this._degenerateObjects.forEach(a)};
e.forEachDegenerateObject=function(a){this._degenerateObjects.forEach(a)};e.findClosest=function(a,b,c,d,f){return this._findClosest(a,"front-to-back"===b?1:-1,c,d,f)};e.forEachInDepthRange=function(a,b,c,d,f,h,n,w){this._forEachInDepthRange(a,b,"front-to-back"===c?1:-1,d,f,h,n,w)};e.forEachNode=function(a){this._forEachNode(this._root,b=>a(b.node,b.bounds,b.halfSize))};e._intersectsNode=function(a,b){J(b.bounds,2*-b.halfSize,r);J(b.bounds,2*b.halfSize,t);return T.rayBoxTest(a.origin,a.direction,
r,t)};e._intersectsNodeWithOffset=function(a,b,c){J(b.bounds,2*-b.halfSize,r);J(b.bounds,2*b.halfSize,t);c.applyToMinMax(r,t);return T.rayBoxTest(a.origin,a.direction,r,t)};e._intersectsObject=function(a,b){b=this._objectToBoundingSphere(b);return 0<b[3]?k.sphere.intersectsRay(b,a):!0};e._intersectsObjectWithOffset=function(a,b,c){b=this._objectToBoundingSphere(b);return 0<b[3]?k.sphere.intersectsRay(c.applyToBoundingSphere(b),a):!0};e._forEachNode=function(a,b){a=l.acquire().init(a);const c=[a];
for(;0!==c.length;){a=c.pop();if(b(a)&&!a.isLeaf())for(let d=0;d<a.node.children.length;d++)a.node.children[d]&&c.push(l.acquire().init(a).advance(d));l.release(a)}};e._forEachNodeDepthOrdered=function(a,b,c,d=1){a=l.acquire().init(a);const f=[a];for(ca(c,d,X);0!==f.length;){a=f.pop();if(b(a)&&!a.isLeaf())for(c=7;0<=c;--c)d=X[c],d>=a.node.children.length||a.node.children[d]&&f.push(l.acquire().init(a).advance(d));l.release(a)}};e._findClosest=function(a,b,c,d,f){let h=Infinity,n=Infinity,w=null;const B=
O(a,b);let z=0;const I=q=>{++z;if(!d||d(q)){var u=this._objectToBoundingSphere(q);if(!c||k.frustum.intersectsSphere(c,u)){var K=A(a,b,k.sphere.getCenter(u)),H=K-u[3];u=K+u[3];H<h&&(h=H,n=u,w=q)}}};this._forEachNodeDepthOrdered(this._root,q=>{if(null!=f&&z>=f||c&&!k.frustum.intersectsSphere(c,q.bounds))return!1;y.scale(v,B,q.halfSize);y.add(v,v,q.bounds);if(A(a,b,v)>n)return!1;q=q.node;q.terminals.forAll(u=>{I(u)});null!==q.residents&&q.residents.forAll(u=>{I(u)});return!0},a,b);return w};e._forEachInDepthRange=
function(a,b,c,d,f,h,n,w){let B=-Infinity,z=Infinity;const I={setRange:p=>{1===c?(B=Math.max(B,p.near),z=Math.min(z,p.far)):(B=Math.max(B,-p.far),z=Math.min(z,-p.near))}};I.setRange(d);const q=A(b,c,a),u=O(b,c),K=O(b,-1*c);let H=0;const Y=p=>{++H;if(!n||n(p)){var C=this._objectToBoundingSphere(p),L=k.sphere.getCenter(C);L=A(b,c,L)-q;var ea=L+C[3];L-C[3]>z||ea<B||(!h||k.frustum.intersectsSphere(h,C))&&f(p,I)}};this._forEachNodeDepthOrdered(this._root,p=>{if(null!=w&&H>=w||h&&!k.frustum.intersectsSphere(h,
p.bounds))return!1;y.scale(v,u,p.halfSize);y.add(v,v,p.bounds);if(A(b,c,v)-q>z)return!1;y.scale(v,K,p.halfSize);y.add(v,v,p.bounds);if(A(b,c,v)-q<B)return!1;p=p.node;p.terminals.forAll(C=>{Y(C)});null!==p.residents&&p.residents.forAll(C=>{Y(C)});return!0},b,c)};e._remove=function(a,b,c){E.clear();b=c.advanceTo(b,(d,f)=>{E.push(d.node);E.push(f)})?c.node.terminals:c.node.residents;b.removeUnordered(a);if(0===b.length)for(a=E.length-2;0<=a&&this._purge(E.data[a],E.data[a+1]);a-=2);};e._nodeIsEmpty=
function(a){if(0!==a.terminals.length)return!1;if(null!==a.residents)return 0===a.residents.length;for(let b=0;b<a.children.length;b++)if(a.children[b])return!1;return!0};e._purge=function(a,b){0<=b&&(a.children[b]=null);return this._nodeIsEmpty(a)?(null===a.residents&&(a.residents=new F({shrink:!0})),!0):!1};e._add=function(a,b){b.advanceTo(this._objectToBoundingSphere(a))?b.node.terminals.push(a):(b.node.residents.push(a),b.node.residents.length>this._maximumObjectsPerNode&&b.depth<this._maximumDepth&&
this._split(b))};e._split=function(a){const b=a.node.residents;a.node.residents=null;for(let c=0;c<b.length;c++){const d=l.acquire().init(a);this._add(b.getItemAt(c),d);l.release(d)}};e._grow=function(a,b){0!==b&&(U(a,b,c=>this._objectToBoundingSphere(c),x),G(x[3])&&!this._fitsInsideTree(x)&&(this._nodeIsEmpty(this._root.node)?(k.sphere.copy(x,this._root.bounds),this._root.halfSize=1.25*x[3]):(a=this._rootBoundsForRootAsSubNode(x),this._placingRootViolatesMaxDepth(a)?this._rebuildTree(x,a):this._growRootAsSubNode(a),
l.release(a))))};e._rebuildTree=function(a,b){y.copy(Q,b.bounds);Q[3]=b.halfSize;U([a,Q],2,c=>c,R);a=l.acquire().init(this._root);this._root.initFrom(null,R,1.25*R[3]);this._forEachNode(a,c=>{this.add(c.node.terminals.data,c.node.terminals.length);null!==c.node.residents&&this.add(c.node.residents.data,c.node.residents.length);return!0});l.release(a)};e._placingRootViolatesMaxDepth=function(a){const b=Math.log(a.halfSize/this._root.halfSize)*Math.LOG2E;let c=0;this._forEachNode(this._root,d=>{c=Math.max(c,
d.depth);return c+b<=this._maximumDepth});return c+b>this._maximumDepth};e._rootBoundsForRootAsSubNode=function(a){var b=a[3];let c=-Infinity;const d=this._root.bounds,f=this._root.halfSize;for(var h=0;3>h;h++){var n=Math.max(0,Math.ceil((d[h]-f-(a[h]-b))/(2*f)));const w=Math.max(0,Math.ceil((a[h]+b-(d[h]+f))/(2*f)))+1;c=Math.max(c,2**Math.ceil(Math.log(n+w)*Math.LOG2E));M[h].min=n;M[h].max=w}for(a=0;3>a;a++)b=M[a].min,h=M[a].max,n=(c-(b+h))/2,b+=Math.ceil(n),h+=Math.floor(n),S[a]=d[a]-f-b*f*2+(h+
b)*f;S[3]=c*f*Z;return l.acquire().initFrom(null,S,c*f,0)};e._growRootAsSubNode=function(a){const b=this._root.node;y.copy(x,this._root.bounds);x[3]=this._root.halfSize;this._root.init(a);a.advanceTo(x,null,!0);a.node.children=b.children;a.node.residents=b.residents;a.node.terminals=b.terminals};e._shrink=function(){for(;;){const a=this._findShrinkIndex();if(-1===a)break;this._root.advance(a);this._root.depth=0}};e._findShrinkIndex=function(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;
let a=null;const b=this._root.node.children;let c=0,d=0;for(;d<b.length&&null==a;)c=d++,a=b[c];for(;d<b.length;)if(b[d++])return-1;return c};e._isDegenerate=function(a){a=this._objectToBoundingSphere(a)[3];return!G(a)};e._fitsInsideTree=function(a){const b=this._root.bounds,c=this._root.halfSize;return a[3]<=c&&a[0]>=b[0]-c&&a[0]<=b[0]+c&&a[1]>=b[1]-c&&a[1]<=b[1]+c&&a[2]>=b[2]-c&&a[2]<=b[2]+c};aa._createClass(g,[{key:"bounds",get:function(){return this._root.bounds}},{key:"halfSize",get:function(){return this._root.halfSize}},
{key:"root",get:function(){return this._root.node}},{key:"maximumObjectsPerNode",get:function(){return this._maximumObjectsPerNode}},{key:"maximumDepth",get:function(){return this._maximumDepth}},{key:"objectCount",get:function(){return this._objectCount}}]);return g}(),l=function(){function g(){this.bounds=k.sphere.create();this.halfSize=0;this.initFrom(null,null,0,0)}var e=g.prototype;e.init=function(a){return this.initFrom(a.node,a.bounds,a.halfSize,a.depth)};e.initFrom=function(a,b,c,d=this.depth){this.node=
N.isSome(a)?a:g.createEmptyNode();N.isSome(b)&&k.sphere.copy(b,this.bounds);this.halfSize=c;this.depth=d;return this};e.advance=function(a){let b=this.node.children[a];b||(b=g.createEmptyNode(),this.node.children[a]=b);this.node=b;this.halfSize/=2;this.depth++;a=V[a];this.bounds[0]+=a[0]*this.halfSize;this.bounds[1]+=a[1]*this.halfSize;this.bounds[2]+=a[2]*this.halfSize;this.bounds[3]=this.halfSize*Z;return this};e.advanceTo=function(a,b,c=!1){for(;;){if(this.isTerminalFor(a))return b&&b(this,-1),
!0;if(this.isLeaf()){if(!c)return b&&b(this,-1),!1;this.node.residents=null}const d=this._childIndex(a);b&&b(this,d);this.advance(d)}};e.isLeaf=function(){return null!=this.node.residents};e.isTerminalFor=function(a){return a[3]>this.halfSize/2};e._childIndex=function(a){const b=this.bounds;return(b[0]<a[0]?1:0)+(b[1]<a[1]?2:0)+(b[2]<a[2]?4:0)};g.createEmptyNode=function(){return{children:[null,null,null,null,null,null,null,null],terminals:new F({shrink:!0}),residents:new F({shrink:!0})}};g.acquire=
function(){return g._pool.acquire()};g.release=function(a){g._pool.release(a)};g.clearPool=function(){g._pool.prune()};return g}();l._pool=new ba(l);const V=[m.fromValues(-1,-1,-1),m.fromValues(1,-1,-1),m.fromValues(-1,1,-1),m.fromValues(1,1,-1),m.fromValues(-1,-1,1),m.fromValues(1,-1,1),m.fromValues(-1,1,1),m.fromValues(1,1,1)],W=[m.fromValues(-1,-1,-1),m.fromValues(-1,-1,1),m.fromValues(-1,1,-1),m.fromValues(-1,1,1),m.fromValues(1,-1,-1),m.fromValues(1,-1,1),m.fromValues(1,1,-1),m.fromValues(1,
1,1)],Z=Math.sqrt(3),P=[null],S=k.sphere.create(),v=m.create(),r=m.create(),t=m.create(),E=new F,da=k.sphere.create(),x=k.sphere.create(),Q=k.sphere.create(),R=k.sphere.create(),M=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],D=new F,X=[0,0,0,0,0,0,0,0];return fa});