// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../core/object ../core/maybe ../core/Error ../request ./utils ../tasks/support/RouteResultsContainer".split(" "),function(h,x,y,q,k,z,A){async function r(b){var {data:a}=await k(b.substring(0,b.indexOf("/rest/")+6)+"info",{query:{f:"json"}});if(!a||!a.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};b=a.owningSystemUrl;({data:a}=await k(b+("/"===b[b.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"}}));a=x.getDeepValue("helperServices.routingUtilities.url",
a);if(!a)return{supportedTravelModes:[],defaultTravelMode:null};b=z.parseUrl(b);b=/\/solve$/.test(b.path)?"Route":/\/solveClosestFacility$/.test(b.path)?"ClosestFacility":"ServiceAreas";var c=await k(a+("/"===a[a.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:b}});a=[];b=null;if(c&&c.data&&c.data.results&&c.data.results.length){c=c.data.results;for(const d of c)if("supportedTravelModes"===d.paramName){if(d.value&&d.value.features)for(const {attributes:e}of d.value.features)e&&
(c=JSON.parse(e.TravelMode),a.push(c))}else"defaultTravelMode"===d.paramName&&(b=d.value)}return{supportedTravelModes:a,defaultTravelMode:b}}async function t(b){try{const {data:{supportedTravelModes:a,defaultTravelMode:c}}=await k(b+("/"===b[b.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"}});return{supportedTravelModes:a,defaultTravelMode:c}}catch(a){throw new q("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:a});}}h.collectGeometries=
function(b,a,c,d){d[c]=[a.length,a.length+b.length];b.forEach(e=>{a.push(e.geometry)})};h.dropZValuesOffInputGeometry=function(b,a){for(let c=0;c<a.length;c++){const d=b[a[c]];if(d&&d.length)for(const e of d)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")};h.fetchServiceDescription=async function(b){if(!b)throw new q("network-service:missing-url","Url to Network service is missing");
const {data:a}=await k(b,{query:{f:"json"}});a.supportedTravelModes||(a.supportedTravelModes=[]);for(let e=0;e<a.supportedTravelModes.length;e++)a.supportedTravelModes[e].id||(a.supportedTravelModes[e].id=a.supportedTravelModes[e].itemId);b=10.4<=a.currentVersion?t(b):r(b);const {defaultTravelMode:c,supportedTravelModes:d}=await b;a.defaultTravelMode=c;a.supportedTravelModes=d;return a};h.fetchTravelModesGP=r;h.handleSolveResponse=function(b){const a=[],c=[],{directions:d=[],routes:{features:e=[],
spatialReference:B=null}={},stops:{features:l=[],spatialReference:C=null}={},barriers:m,polygonBarriers:n,polylineBarriers:p,messages:D}=b.data;let u=!0,g,v;const w=e&&B||l&&C||m&&m.spatialReference||n&&n.spatialReference||p&&p.spatialReference;d.forEach(f=>{a.push(g=f.routeName);c[g]={directions:f}});e.forEach(f=>{-1===a.indexOf(g=f.attributes.Name)&&(a.push(g),c[g]={});f.geometry&&(f.geometry.spatialReference=w);c[g].route=f});l.forEach(f=>{v=f.attributes;-1===a.indexOf(g=v.RouteName||"esri.tasks.RouteTask.NULL_ROUTE_NAME")&&
(a.push(g),c[g]={});"esri.tasks.RouteTask.NULL_ROUTE_NAME"!==g&&(u=!1);f.geometry&&(f.geometry.spatialReference=w);null==c[g].stops&&(c[g].stops=[]);c[g].stops.push(f)});0<l.length&&!0===u&&(c[a[0]].stops=c["esri.tasks.RouteTask.NULL_ROUTE_NAME"].stops,delete c["esri.tasks.RouteTask.NULL_ROUTE_NAME"],a.splice(a.indexOf("esri.tasks.RouteTask.NULL_ROUTE_NAME"),1));b=a.map(f=>{c[f].routeName="esri.tasks.RouteTask.NULL_ROUTE_NAME"===f?null:f;return c[f]});return A.fromJSON({routeResults:b,pointBarriers:m,
polygonBarriers:n,polylineBarriers:p,messages:D})};h.isInputGeometryZAware=function(b,a){for(let c=0;c<a.length;c++){const d=b[a[c]];if(d&&d.length)for(const e of d)if(y.isSome(e)&&e.hasZ)return!0}return!1};h.retrieveTravelModes=t;Object.defineProperty(h,"__esModule",{value:!0})});