// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../../core/maybe ../../../core/urlUtils ../../../geometry/support/jsonUtils ../../../request ../../../geometry/support/normalizeUtils ./queryZScale ../../../tasks/operations/urlUtils ./pbfQueryUtils".split(" "),function(f,g,l,q,r,t,u,v,w){function m(a,b){const c=a.geometry;a=a.toJSON();g.isSome(c)&&(a.geometry=JSON.stringify(c),a.geometryType=q.getJsonType(c),a.inSR=c.spatialReference.wkid||JSON.stringify(c.spatialReference));a.groupByFieldsForStatistics&&(a.groupByFieldsForStatistics=
a.groupByFieldsForStatistics.join(","));a.objectIds&&(a.objectIds=a.objectIds.join(","));a.orderByFields&&(a.orderByFields=a.orderByFields.join(","));!a.outFields||!a.returnDistinctValues&&(null!=b&&b.returnCountOnly||null!=b&&b.returnExtentOnly||null!=b&&b.returnIdsOnly)?delete a.outFields:-1!==a.outFields.indexOf("*")?a.outFields="*":a.outFields=a.outFields.join(",");a.outSR?a.outSR=a.outSR.wkid||JSON.stringify(a.outSR):c&&(a.returnGeometry||a.returnCentroid)&&(a.outSR=a.inSR);a.returnGeometry&&
delete a.returnGeometry;a.outStatistics&&(a.outStatistics=JSON.stringify(a.outStatistics));a.pixelSize&&(a.pixelSize=JSON.stringify(a.pixelSize));a.quantizationParameters&&(a.quantizationParameters=JSON.stringify(a.quantizationParameters));a.parameterValues&&(a.parameterValues=JSON.stringify(a.parameterValues));a.rangeValues&&(a.rangeValues=JSON.stringify(a.rangeValues));a.dynamicDataSource&&(a.layer=JSON.stringify({source:a.dynamicDataSource}),delete a.dynamicDataSource);if(a.timeExtent){const {start:d,
end:e}=a.timeExtent;if(null!=d||null!=e)a.time=d===e?d:`${null==d?"null":d},${null==e?"null":e}`;delete a.timeExtent}return a}function n(a,b,c){return k(a,b,"pbf",c)}function k(a,b,c,d={},e={}){const p="string"===typeof a?l.urlToObject(a):a;a=b.geometry?[b.geometry]:[];d.responseType="pbf"===c?"array-buffer":"json";return t.normalizeCentralMeridian(a,null,d).then(h=>{h=h&&h[0];g.isSome(h)&&(b=b.clone(),b.geometry=h);h=v.mapParameters({...p.query,f:c,...e,...m(b,e)});return r(l.join(p.path,"query"),
{...d,query:{...h,...d.query}})})}f.executeQuery=async function(a,b,c,d){a=g.isSome(b.timeExtent)&&b.timeExtent.isEmpty?{data:{features:[]}}:await k(a,b,"json",d);u.applyFeatureSetZUnitScaling(b,c,a.data);return a};f.executeQueryForCount=function(a,b,c){return g.isSome(b.timeExtent)&&b.timeExtent.isEmpty?Promise.resolve({data:{count:0}}):k(a,b,"json",c,{returnIdsOnly:!0,returnCountOnly:!0})};f.executeQueryForExtent=function(a,b,c){return g.isSome(b.timeExtent)&&b.timeExtent.isEmpty?Promise.resolve({data:{count:0,
extent:null}}):k(a,b,"json",c,{returnExtentOnly:!0,returnCountOnly:!0}).then(d=>{const e=d.data;if(e.hasOwnProperty("extent"))return d;if(e.features)throw Error("Layer does not support extent calculation.");if(e.hasOwnProperty("count"))throw Error("Layer does not support extent calculation.");return d})};f.executeQueryForIds=function(a,b,c){return g.isSome(b.timeExtent)&&b.timeExtent.isEmpty?Promise.resolve({data:{objectIds:[]}}):k(a,b,"json",c,{returnIdsOnly:!0})};f.executeQueryPBF=async function(a,
b,c,d){if(g.isSome(b.timeExtent)&&b.timeExtent.isEmpty)return Promise.resolve({data:c.createFeatureResult()});a=await n(a,b,d);a.data=w.parsePBFFeatureQuery(a.data,c);return a};f.executeQueryPBFBuffer=n;f.queryToQueryStringParameters=m;f.runQuery=k;Object.defineProperty(f,"__esModule",{value:!0})});