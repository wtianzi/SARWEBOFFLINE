// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define(["exports","../../core/maybe","../../core/Error","../../core/urlUtils","../../request"],function(e,l,n,h,r){function p(a){const b=a.lastIndexOf("/");return-1===b?[".",a]:[a.slice(0,b),a.slice(b+1)]}function m(a){{const f=h.getPathExtension(a);a=l.isNone(f)?[a,""]:[a.slice(0,a.length-f.length-1),`.${f}`]}const [b,d]=a,[c,k]=p(b);return[c,k,d]}async function q(a){return a instanceof Blob?a:(await r(a.url,{responseType:"blob"})).data}e.addOrUpdateResource=async function(a,b,d,c){if(!a.hasPath())throw new n(`portal-item-resource-${b}:invalid-path`,
"Resource does not have a valid path");await a.portalItem.load(c);b=h.join(a.portalItem.userItemUrl,"add"===b?"addResources":"updateResources");const [k,f]=p(a.path);d=await q(d);const g=new FormData;k&&"."!==k&&g.append("resourcesPrefix",k);g.append("fileName",f);g.append("file",d,f);g.append("f","json");l.isSome(c)&&c.access&&g.append("access",c.access);await a.portalItem.portal._request(b,{method:"post",body:g,signal:l.get(c,"signal")});return a};e.contentToBlob=q;e.fetchResources=async function(a,
b={},d){await a.load(d);var c=h.join(a.itemUrl,"resources");const {start:k=1,num:f=10,sortOrder:g="asc",sortField:t="created"}=b;b={query:{start:k,num:f,sortOrder:g,sortField:t},signal:l.get(d,"signal")};c=await a.portal._request(c,b);return{total:c.total,nextStart:c.nextStart,resources:c.resources.map(({created:u,size:v,resource:w})=>({created:new Date(u),size:v,resource:a.resourceFromPath(w)}))}};e.getSiblingOfSameType=function(a,b){if(!a.hasPath())return null;const [d,,c]=m(a.path);return a.portalItem.resourceFromPath(h.join(d,
b+c))};e.getSiblingOfSameTypeI=function(a,b){if(!a.hasPath())return null;const [d,,c]=m(a.path);return a.portalItem.resourceFromPath(h.join(d,b+c))};e.removeAllResources=async function(a,b){await a.load(b);const d=h.join(a.userItemUrl,"removeResources");return a.portal._request(d,{method:"post",query:{deleteAll:!0},signal:l.get(b,"signal")})};e.removeResource=async function(a,b,d){if(!b.hasPath())throw new n("portal-item-resources-remove:invalid-path","Resource does not have a valid path");await a.load(d);
const c=h.join(a.userItemUrl,"removeResources");await a.portal._request(c,{method:"post",query:{resource:b.path},signal:l.get(d,"signal")});b.portalItem=null};e.splitPrefixFileNameAndExtension=m;Object.defineProperty(e,"__esModule",{value:!0})});