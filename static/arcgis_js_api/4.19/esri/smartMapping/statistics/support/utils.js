// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/maybe","../../../core/Error","../../../layers/support/fieldUtils"],function(e,h,m,k){function f(a,b){return new m(a,b)}function l(a,b){a=h.isSome(a)?a:"";h.isSome(b)&&b&&(a=a?"("+a+") AND ("+b+")":b);return a}function n(a){const b=a.layer;return a.fields.filter(c=>!b.getField(c))}function p(a){const b=a.layer;return a.fields.filter(c=>{c=b.getFieldUsageInfo(c);return!c||!c.supportsStatistics})}e.createError=f;e.getRangeExpr=function(a,b,c){b=null!=b?a+" \x3e\x3d "+
b:"";a=null!=c?a+" \x3c\x3d "+c:"";c="";return(c=b&&a?l(b,a):b||a)?"("+c+")":""};e.getSQLFilterForNormalization=function(a){const b=a.field,c=a.normalizationType;a=a.normalizationField;let d;if("log"===c)d="(NOT "+b+" \x3d 0)";else if("field"===c)d="(NOT "+a+" \x3d 0)";else if("natural-log"===c||"square-root"===c)d=`(${b} > 0)`;return d};e.mergeWhereClauses=l;e.verifyBasicFieldValidity=function(a,b,c){const d=n({layer:a,fields:b});if(d.length)return f(c,"Unknown fields: "+d.join(", ")+". You can only use fields defined in the layer schema");
a=p({layer:a,fields:b});if(a.length)return f(c,"Unsupported fields: "+a.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true")};e.verifyFieldType=function(a,b,c,d){let g=null;if(!b)g=f(c,"'field' is not defined in the layer schema");else if(b.name===a.objectIdField||-1===d.indexOf(b.type))g=f(c,"'field' should be one of these types: "+d.join(","));return g};e.verifyNumericField=function(a,b,c){let d;b?b.name!==a.objectIdField&&k.isNumericField(b)||
(d=f(c,"'field' should be one of these numeric types: "+k.numericTypes.join(","))):d=f(c,"'field' is not defined in the layer schema");return d};Object.defineProperty(e,"__esModule",{value:!0})});