// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../core/maybe ../../core/Error ../../renderers/Renderer ../../renderers/ClassBreaksRenderer ../../renderers/UniqueValueRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/SimpleRenderer ../../renderers/support/jsonUtils ../../chunks/location ../support/adapters/support/layerUtils ../heuristics/outline ../heuristics/sizeRange ./support/utils".split(" "),function(n,l,g,A,B,C,D,E,F,t,G,m,p,u,v,h){async function w(a){if(!a||
!a.layer)throw new g("location-renderer:missing-parameters","'layer' parameter is required");a={...a};a.symbolType=a.symbolType||"2d";var b=[0,2,1,3],c=p.createLayerAdapter(a.layer,b);a.layer=c;if(!c)throw new g("location-renderer:invalid-parameters","'layer' must be one of these types: "+p.getLayerTypeLabels(b).join(", "));b=l.isSome(a.signal)?{signal:a.signal}:null;await c.load(b);c=c.geometryType;a.outlineOptimizationEnabled="polygon"===c?a.outlineOptimizationEnabled:!1;a.sizeOptimizationEnabled=
"point"===c||"multipoint"===c||"polyline"===c?a.sizeOptimizationEnabled:!1;if("mesh"===c)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none";else{if("3d-volumetric-uniform"===a.symbolType&&"point"!==c)throw new g("location-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(-1<a.symbolType.indexOf("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new g("location-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");
}return a}async function x(a,b){let c=a.locationScheme,e=null;var d=null;d=await h.getBasemapInfo(a.basemap,a.view);e=l.isSome(d.basemapId)?d.basemapId:null;d=l.isSome(d.basemapTheme)?d.basemapTheme:null;if(c)return{scheme:m.cloneScheme(c),basemapId:e,basemapTheme:d};if(a=m.getSchemes({basemap:e,basemapTheme:d,geometryType:b,worldScale:-1<a.symbolType.indexOf("3d-volumetric"),view:a.view}))c=a.primaryScheme,e=a.basemapId,d=a.basemapTheme;return{scheme:c,basemapId:e,basemapTheme:d}}n.createRenderer=
async function(a){var b=await w(a);const c=b.layer.geometryType;a=await x(b,c);const e=a.scheme;if(!e)throw new g("location-renderer:insufficient-info","Unable to find location scheme");const {view:d,layer:q,signal:r}=b,[f,k]=await Promise.all([b.outlineOptimizationEnabled?u({view:d,layer:q,signal:r}):null,b.sizeOptimizationEnabled?v({view:d,layer:q,signal:r}):null]),y=f&&f.opacity;b=new t({symbol:h.createSymbol(c,{type:b.symbolType,color:e.color,size:h.getSymbolSizeFromScheme(e,c),outline:h.getSymbolOutlineFromScheme(e,
c,y),meshInfo:{colorMixMode:b.colorMixMode,edgesType:b.edgesType}})});f&&f.visualVariables&&f.visualVariables.length&&(b.visualVariables=f.visualVariables.map(z=>z.clone()));k&&k.minSize&&(b.visualVariables?b.visualVariables.push(k.minSize):b.visualVariables=[k.minSize]);return{renderer:b,locationScheme:m.cloneScheme(e),basemapId:a.basemapId,basemapTheme:a.basemapTheme}};Object.defineProperty(n,"__esModule",{value:!0})});