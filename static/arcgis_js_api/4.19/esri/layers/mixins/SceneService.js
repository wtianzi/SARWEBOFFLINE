// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("require exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/Error ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/promiseUtils ../../geometry/SpatialReference ../../geometry/Extent ../../request ../../portal/Portal ../../portal/PortalItem ../../core/accessorSupport/originUtils ../support/arcgisLayerUrl ../../geometry/HeightModelInfo ../../webdoc/support/saveUtils ../support/commonProperties ../support/I3SIndexInfo".split(" "),
function(E,r,v,f,O,F,G,P,h,Q,n,H,I,k,w,R,S,J,t,u,x,y,K,z,p,L,A,B,M){const m=G.getLogger("esri.layers.mixins.SceneService"),C={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};r.SCENE_SERVICE_ITEM_TYPE="Scene Service";r.SceneService=e=>{e=function(D){function q(){var a=D.apply(this,arguments)||this;a.spatialReference=null;a.fullExtent=null;a.heightModelInfo=null;a.minScale=0;a.maxScale=0;a.version={major:Number.NaN,minor:Number.NaN,
versionString:""};a.copyright=null;a.sublayerTitleMode="item-title";a.title=null;a.layerId=null;a.indexInfo=null;a._debouncedSaveOperations=J.debounce(async(b,c,d)=>{switch(b){case 0:return a._save(c);case 1:return a._saveAs(d,c)}});return a}v._inheritsLoose(q,D);var g=q.prototype;g.readSpatialReference=function(a,b){return this._readSpatialReference(b)};g._readSpatialReference=function(a){if(null!=a.spatialReference)return t.fromJSON(a.spatialReference);a=a.store;a=(a=a.indexCRS||a.geographicCRS)&&
parseInt(a.substring(a.lastIndexOf("/")+1,a.length),10);return null!=a?new t(a):null};g.readFullExtent=function(a,b,c){if(null!=a&&"object"===typeof a)return u.fromJSON(a,c);a=b.store;b=this._readSpatialReference(b);return null==b||null==a||null==a.extent||!Array.isArray(a.extent)||a.extent.some(d=>-1E38>d)?null:new u({xmin:a.extent[0],ymin:a.extent[1],xmax:a.extent[2],ymax:a.extent[3],spatialReference:b})};g.readVersion=function(a,b){a=b.store;b=null!=a.version?a.version.toString():"";a={major:Number.NaN,
minor:Number.NaN,versionString:b};b=b.split(".");2<=b.length&&(a.major=parseInt(b[0],10),a.minor=parseInt(b[1],10));return a};g.readTitlePortalItem=function(a){return"item-title"!==this.sublayerTitleMode?void 0:a};g.readTitleService=function(a,b){a=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return p.titleFromUrlAndName(this.url,b.name);b=b.name;if(!b&&this.url){const c=p.parse(this.url);F.isSome(c)&&(b=c.title)}"item-title-and-service-name"===this.sublayerTitleMode&&
a&&(b=a+" - "+b);return p.cleanTitle(b)};g.writeUrl=function(a,b,c,d){p.writeUrlWithLayerId(this,a,"layers",b,d)};g._fetchIndexAndUpdateExtent=async function(a,b){this.indexInfo=M.fetchIndexInfo(this.parsedUrl.path,this.rootNode,a,m,b);null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)};g._updateExtent=function(a){if("page"===(null==a?void 0:a.type)){var b,c,d=a.rootIndex%a.pageSize;a=null==(b=a.rootPage)?void 0:null==(c=b.nodes)?void 0:c[d];if(null==a||null==a.obb||
null==a.obb.center||null==a.obb.halfSize)throw new k("sceneservice:invalid-node-page","Invalid node page.");-1E38>a.obb.center[0]||null==this.fullExtent||this.fullExtent.hasZ||(b=a.obb.halfSize,c=a.obb.center[2],b=Math.sqrt(b[0]*b[0]+b[1]*b[1]+b[2]*b[2]),this.fullExtent.zmin=c-b,this.fullExtent.zmax=c+b)}else"node"===(null==a?void 0:a.type)&&(c=null==(d=a.rootNode)?void 0:d.mbs,!Array.isArray(c)||4!==c.length||-1E38>c[0]||(b=c[2],c=c[3],this.fullExtent.zmin=b-c,this.fullExtent.zmax=b+c))};g._fetchService=
async function(a){if(null==this.url)throw new k("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const b=await this._fetchFirstLayerId(a);null!=b&&(this.layerId=b)}return this._fetchServiceLayer(a)};g._fetchFirstLayerId=async function(a){a=await x(this.url,{query:{f:"json"},responseType:"json",signal:a});if(a.data&&Array.isArray(a.data.layers)&&0<a.data.layers.length)return a.data.layers[0].id};
g._fetchServiceLayer=async function(a){a=await x(this.parsedUrl.path,{query:{f:"json"},responseType:"json",signal:a});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));a=a.data;this.read(a,{origin:"service",url:this.parsedUrl});this.validateLayer(a)};g._ensureLoadBeforeSave=async function(){await this.load();"beforeSave"in this&&"function"===typeof this.beforeSave&&await this.beforeSave()};g.validateLayer=function(a){};g._updateTypeKeywords=function(a,b,c){a.typeKeywords||(a.typeKeywords=[]);
b=b.getTypeKeywords();for(const d of b)a.typeKeywords.push(d);a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter((d,l,N)=>N.indexOf(d)===l),1===c&&(a.typeKeywords=a.typeKeywords.filter(d=>"Hosted Service"!==d)))};g._saveAs=async function(a,b){b={...C,...b};a=K.from(a);a||(m.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new k("sceneservice:portal-item-required","_saveAs() requires a portal item to save to")));a.id&&(a=a.clone(),a.id=null);const c=a.portal||y.getDefault();
await this._ensureLoadBeforeSave();a.type="Scene Service";a.portal=c;const d={origin:"portal-item",url:null,messages:[],portal:c,portalItem:a,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},l={layers:[this.write(null,d)]};await Promise.all(d.resources.pendingOperations);await this._validateAgainstJSONSchema(l,d,b);a.url=this.url;a.title||(a.title=this.title);this._updateTypeKeywords(a,b,1);await c._signIn();await c.user.addItem({item:a,
folder:b&&b.folder,data:l});await A.saveResources(this.resourceReferences,d,null);this.portalItem=a;z.updateOrigins(d);return d.portalItem=a};g._save=async function(a){a={...C,...a};this.portalItem||(m.error("_save(): requires the .portalItem property to be set"),await Promise.reject(new k("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService")));"Scene Service"!==this.portalItem.type&&(m.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+
", expected Scene Service"),await Promise.reject(new k("sceneservice:portal-item-wrong-type",'Portal item needs to have type "Scene Service"')));await this._ensureLoadBeforeSave();const b={origin:"portal-item",url:this.portalItem.itemUrl&&w.urlToObject(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||y.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},c={layers:[this.write(null,b)]};
await Promise.all(b.resources.pendingOperations);await this._validateAgainstJSONSchema(c,b,a);this.portalItem.url=this.url;this.portalItem.title||(this.portalItem.title=this.title);this._updateTypeKeywords(this.portalItem,a,0);await this.portalItem.update({data:c});await A.saveResources(this.resourceReferences,b,null);z.updateOrigins(b);return this.portalItem};g._validateAgainstJSONSchema=async function(a,b,c){b=b.messages.filter(d=>"error"===d.type).map(d=>new k(d.name,d.message,d.details));c&&c.validationOptions.ignoreUnsupported&&
(b=b.filter(d=>"layer:unsupported"!==d.name&&"symbol:unsupported"!==d.name&&"symbol-layer:unsupported"!==d.name&&"property:unsupported"!==d.name&&"url:unsupported"!==d.name&&"scenemodification:unsupported"!==d.name));if(c.validationOptions.enabled&&(a=(await new Promise(function(d,l){E(["../support/schemaValidator"],d,l)})).validate(a,c.portalItemLayerType),0<a.length)){const d=`Layer item did not validate:\n${a.join("\n")}`;m.error(`_validateAgainstJSONSchema(): ${d}`);if("throw"===c.validationOptions.failPolicy)throw c=
a.map(l=>new k("sceneservice:schema-validation",l)).concat(b),new k("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:c});}if(0<b.length)throw new k("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:b});};v._createClass(q,[{key:"url",set:function(a){a=p.sanitizeUrlWithLayerId({layer:this,url:a,nonStandardUrlAllowed:!1,logger:m});this._set("url",
a.url);null!=a.layerId&&this._set("layerId",a.layerId)}},{key:"parsedUrl",get:function(){var a=this._get("url");if(!a)return null;a=w.urlToObject(a);null!=this.layerId&&(a.path=`${a.path}/layers/${this.layerId}`);return a}}]);return q}(e);f.__decorate([h.property(B.id)],e.prototype,"id",void 0);f.__decorate([h.property({type:t})],e.prototype,"spatialReference",void 0);f.__decorate([n.reader("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],e.prototype,"readSpatialReference",
null);f.__decorate([h.property({type:u})],e.prototype,"fullExtent",void 0);f.__decorate([n.reader("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],e.prototype,"readFullExtent",null);f.__decorate([h.property({readOnly:!0,type:L})],e.prototype,"heightModelInfo",void 0);f.__decorate([h.property({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],e.prototype,"minScale",void 0);f.__decorate([h.property({type:Number,
json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],e.prototype,"maxScale",void 0);f.__decorate([h.property({readOnly:!0})],e.prototype,"version",void 0);f.__decorate([n.reader("version",["store.version"])],e.prototype,"readVersion",null);f.__decorate([h.property({type:String,json:{read:{source:"copyrightText"}}})],e.prototype,"copyright",void 0);f.__decorate([h.property({type:String,json:{read:!1}})],e.prototype,"sublayerTitleMode",void 0);f.__decorate([h.property({type:String})],
e.prototype,"title",void 0);f.__decorate([n.reader("portal-item","title")],e.prototype,"readTitlePortalItem",null);f.__decorate([n.reader("service","title",["name"])],e.prototype,"readTitleService",null);f.__decorate([h.property({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],e.prototype,"layerId",void 0);f.__decorate([h.property(B.url)],e.prototype,"url",null);f.__decorate([I.writer("url")],e.prototype,"writeUrl",
null);f.__decorate([h.property()],e.prototype,"parsedUrl",null);f.__decorate([h.property({readOnly:!0})],e.prototype,"store",void 0);f.__decorate([h.property({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],e.prototype,"rootNode",void 0);return e=f.__decorate([H.subclass("esri.layers.mixins.SceneService")],e)};Object.defineProperty(r,"__esModule",{value:!0})});