// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define(["require","exports"],function(d,f){function e(a){return Object.freeze({__proto__:null,"default":a})}f.typeModuleMap={ArcGISFeatureLayer:async()=>(await new Promise(function(a,b){d(["../FeatureLayer"],function(c){a(e(c))},b)})).default,ArcGISImageServiceLayer:async()=>(await new Promise(function(a,b){d(["../ImageryLayer"],function(c){a(e(c))},b)})).default,ArcGISImageServiceVectorLayer:()=>Promise.resolve(null),ArcGISMapServiceLayer:async()=>(await new Promise(function(a,b){d(["../MapImageLayer"],
function(c){a(e(c))},b)})).default,ArcGISSceneServiceLayer:async()=>(await new Promise(function(a,b){d(["../SceneLayer"],function(c){a(e(c))},b)})).default,ArcGISStreamLayer:async()=>(await new Promise(function(a,b){d(["../StreamLayer"],function(c){a(e(c))},b)})).default,ArcGISTiledElevationServiceLayer:async()=>(await new Promise(function(a,b){d(["../ElevationLayer"],function(c){a(e(c))},b)})).default,ArcGISTiledImageServiceLayer:async()=>(await new Promise(function(a,b){d(["../ImageryTileLayer"],
function(c){a(e(c))},b)})).default,ArcGISTiledMapServiceLayer:async()=>(await new Promise(function(a,b){d(["../TileLayer"],function(c){a(e(c))},b)})).default,BingMapsAerial:async()=>(await new Promise(function(a,b){d(["../BingMapsLayer"],function(c){a(e(c))},b)})).default,BingMapsRoad:async()=>(await new Promise(function(a,b){d(["../BingMapsLayer"],function(c){a(e(c))},b)})).default,BingMapsHybrid:async()=>(await new Promise(function(a,b){d(["../BingMapsLayer"],function(c){a(e(c))},b)})).default,
BuildingSceneLayer:async()=>(await new Promise(function(a,b){d(["../BuildingSceneLayer"],function(c){a(e(c))},b)})).default,CSV:async()=>(await new Promise(function(a,b){d(["../CSVLayer"],function(c){a(e(c))},b)})).default,GeoRSS:async()=>(await new Promise(function(a,b){d(["../GeoRSSLayer"],function(c){a(e(c))},b)})).default,GroupLayer:async()=>(await new Promise(function(a,b){d(["../GroupLayer"],function(c){a(e(c))},b)})).default,IntegratedMeshLayer:async()=>(await new Promise(function(a,b){d(["../IntegratedMeshLayer"],
function(c){a(e(c))},b)})).default,KML:async()=>(await new Promise(function(a,b){d(["../KMLLayer"],function(c){a(e(c))},b)})).default,OpenStreetMap:async()=>(await new Promise(function(a,b){d(["../OpenStreetMapLayer"],function(c){a(e(c))},b)})).default,PointCloudLayer:async()=>(await new Promise(function(a,b){d(["../PointCloudLayer"],function(c){a(e(c))},b)})).default,VectorTileLayer:async()=>(await new Promise(function(a,b){d(["../VectorTileLayer"],function(c){a(e(c))},b)})).default,WebTiledLayer:async()=>
(await new Promise(function(a,b){d(["../WebTileLayer"],function(c){a(e(c))},b)})).default,WFS:()=>Promise.resolve(null),SubtypeGroupLayer:()=>Promise.resolve(null),WMS:async()=>(await new Promise(function(a,b){d(["../WMSLayer"],function(c){a(e(c))},b)})).default,RasterDataLayer:()=>Promise.resolve(null),RasterDataElevationLayer:()=>Promise.resolve(null)};Object.defineProperty(f,"__esModule",{value:!0})});