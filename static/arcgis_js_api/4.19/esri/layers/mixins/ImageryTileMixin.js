// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/aliasOf ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../geometry/support/spatialReferenceUtils ../../geometry/SpatialReference ../../geometry/Extent ../../geometry ../../request ../../rasterRenderers ../support/arcgisLayerUrl ../support/commonProperties ../support/TileInfo ../support/DimensionalDefinition ../support/RasterJobHandler ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer".split(" "),
function(n,p,e,J,v,w,K,f,l,L,x,M,N,O,y,z,A,P,B,C,D,E,q,r,F,k,G){const t=w.getLogger("esri.layers.mixins.ImageryTileMixin");n.ImageryTileMixin=d=>{d=function(u){function m(){var a=u.apply(this,arguments)||this;a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a.bandIds=null;a.copyright=null;a.fullExtent=null;a.interpolation="nearest";a.raster=null;a.rasterInfo=null;a.sourceJSON=null;a.spatialReference=null;a.tileInfo=null;a.symbolizer=null;return a}p._inheritsLoose(m,u);var h=m.prototype;
h.updateRenderer=async function(){if(this.loaded&&JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer)){var a=this._rasterJobHandler.instance;a&&(this.symbolizer.rendererJSON=k.normalizeRendererJSON(this.renderer.toJSON()),this.symbolizer.bind(),await a.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}};h.applyRenderer=async function(a,b){var c=a&&a.pixelBlock;if(!(c&&c.pixels&&0<c.pixels.length))return null;this.updateRenderer();c=this._rasterJobHandler.instance;
const {bandIds:g}=this;return c?await c.symbolize({...a,simpleStretchParams:b,bandIds:g}):this.symbolizer.symbolize({...a,simpleStretchParams:b,bandIds:g})};h.getTileUrl=function(a,b,c){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${a}/${b}/${c}`:""};h.getCompatibleTileInfo=function(a,b){if(!this.loaded)return null;const c=y.getInfo(a);return q.create({size:256,spatialReference:a,origin:c?{x:c.origin[0],y:c.origin[1]}:{x:b.xmin,y:b.ymax}})};h.getCompatibleFullExtent=function(a){return this.loaded?
this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(a)?this._compatibleFullExtent:this._compatibleFullExtent=this.raster.computeExtent(a):null};h.fetchTile=async function(a,b,c,g={}){if(g.requestAsImageElement)return a=this.getTileUrl(a,b,c),B(a,{responseType:"image",query:{sliceId:this._sliceId,_ts:g.timestamp},signal:g.signal}).then(H=>H.data);await this._initJobHandler();const I="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;this.multidimensionalDefinition&&
(g={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,buffer:I,...g});return this.raster.fetchTile(a,b,c,g)};h.fetchPixels=async function(a,b,c,g){await this._initJobHandler();this.multidimensionalDefinition&&(g={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,...g});return this.raster.fetchPixels(a,b,c,g)};h.identify=function(a,b={}){this.multidimensionalDefinition&&!b.multidimensionalDefinition&&(b={...b,multidimensionalDefinition:this.multidimensionalDefinition});
return this.raster.identify(a,b)};h.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};h.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};h._configDefaultSettings=function(){this._configDefaultInterpolation();this._configDefaultSlice();this._configDefaultRenderer()};h._initJobHandler=function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;
const a=new F;this._rasterJobHandler.connectionPromise=a.initialize().then(()=>{this._rasterJobHandler.instance=a;this.raster.rasterJobHandler=a;this.renderer&&this.updateRenderer()}).catch(()=>null);return this._rasterJobHandler.connectionPromise};h._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0;this.raster.rasterJobHandler=
null};h._configDefaultInterpolation=function(){if(null==this.interpolation){var a;const b=k.getDefaultInterpolation(this.rasterInfo,this.raster.tileType,null==(a=this.sourceJSON)?void 0:a.defaultResamplingMethod);this._set("interpolation",b)}};h._configDefaultSlice=function(){const {multidimensionalInfo:a}=this.raster.rasterInfo;if(v.isSome(a)){if(!this.multidimensionalDefinition){const b=a.variables[0],c=[];b.dimensions.forEach(g=>{c.push(new r({variableName:b.name,dimensionName:g.name,values:g.hasRegularIntervals?
g.extent[0]:g.values[0],isSlice:!0}))});this.multidimensionalDefinition=c}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}};h._configDefaultRenderer=function(){const a=this.raster.rasterInfo;this.bandIds||(this.bandIds=k.getDefaultBandCombination(a));if(!this.renderer){var b,c;this.renderer=k.createDefaultRenderer(a,{bandIds:this.bandIds,variableName:null==(b=this.multidimensionalDefinition)?void 0:null==(c=b[0])?void 0:c.variableName})}this.symbolizer?(this.symbolizer.rendererJSON=
k.normalizeRendererJSON(this.renderer.toJSON()),this.symbolizer.rasterInfo=a):this.symbolizer=new G({rendererJSON:this.renderer.toJSON(),rasterInfo:a});this.symbolizer.bind()||t.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")};p._createClass(m,[{key:"multidimensionalDefinition",set:function(a){this.raster&&(this._sliceId=this.raster.getSliceIndex(a));this._set("multidimensionalDefinition",a)}},{key:"url",set:function(a){this._set("url",D.sanitizeUrl(a,t))}},{key:"renderer",
set:function(a){this._set("renderer",a);this.updateRenderer()}}]);return m}(d);e.__decorate([f.property()],d.prototype,"_cachedRendererJson",void 0);e.__decorate([f.property()],d.prototype,"_sliceId",void 0);e.__decorate([f.property()],d.prototype,"_compatibleFullExtent",void 0);e.__decorate([f.property()],d.prototype,"_rasterJobHandler",void 0);e.__decorate([f.property()],d.prototype,"bandIds",void 0);e.__decorate([f.property()],d.prototype,"copyright",void 0);e.__decorate([f.property({type:A}),
l.aliasOf("rasterInfo.extent")],d.prototype,"fullExtent",void 0);e.__decorate([f.property()],d.prototype,"interpolation",void 0);e.__decorate([f.property()],d.prototype,"ioConfig",void 0);e.__decorate([f.property({type:[r]})],d.prototype,"multidimensionalDefinition",null);e.__decorate([f.property()],d.prototype,"raster",void 0);e.__decorate([f.property({readOnly:!0}),l.aliasOf("raster.rasterInfo")],d.prototype,"rasterInfo",void 0);e.__decorate([f.property()],d.prototype,"sourceJSON",void 0);e.__decorate([f.property({type:z}),
l.aliasOf("rasterInfo.spatialReference")],d.prototype,"spatialReference",void 0);e.__decorate([f.property({type:q}),l.aliasOf("rasterInfo.storageInfo.tileInfo")],d.prototype,"tileInfo",void 0);e.__decorate([f.property(E.url)],d.prototype,"url",null);e.__decorate([f.property({types:C.rasterRendererTypes})],d.prototype,"renderer",null);e.__decorate([f.property()],d.prototype,"symbolizer",void 0);return d=e.__decorate([x.subclass("esri.layers.ImageryTileMixin")],d)};Object.defineProperty(n,"__esModule",
{value:!0})});