// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/has ../core/object ../core/maybe ../core/Logger ../core/accessorSupport/decorators/property ../core/accessorSupport/decorators/cast ../core/jsonMap ../core/accessorSupport/decorators/reader ../core/accessorSupport/extensions/serializableProperty/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../core/Error ../core/urlUtils ../core/uuid ../portal/support/resourceExtension ../core/promiseUtils ../geometry/SpatialReference ../geometry/Extent ../core/Collection ./support/fieldUtils ../PopupTemplate ../request ../symbols ../core/Handles ./Layer ../renderers/Renderer ../renderers/ClassBreaksRenderer ../renderers/UniqueValueRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/SimpleRenderer ../renderers/support/types ../renderers/support/jsonUtils ../core/MultiOriginJSONSupport ./support/arcgisLayerUrl ../geometry/HeightModelInfo ./support/commonProperties ./mixins/OperationalLayer ./support/FieldsIndex ../form/FormTemplate ../tasks/support/FeatureSet ./graphics/sources/MemorySource ./mixins/ArcGISService ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./support/TimeInfo ./mixins/TemporalLayer ./support/FeatureIndex ./support/FeatureReduction ./support/LabelClass ./support/FeatureReductionCluster ./support/FeatureReductionSelection ./support/featureReductionUtils ./support/FeatureTemplate ./support/FeatureType ./support/fieldProperties ./support/GeometryFieldsInfo ./support/labelingInfo ./support/LayerFloorInfo ./support/Relationship ./support/source/DataLayerSource ../renderers/support/styleUtils ../support/popupUtils ../tasks/support/AttachmentQuery ../tasks/support/Query ../tasks/support/RelationshipQuery".split(" "),
function(L,M,e,Y,D,E,A,g,Z,aa,m,ba,ca,w,p,F,Pa,Qa,da,N,ea,x,B,fa,ha,O,ia,d,Ra,Sa,ja,Ta,Ua,Va,ka,P,G,la,y,ma,t,na,oa,pa,qa,Q,ra,sa,ta,ua,va,wa,xa,ya,R,za,Aa,Ba,Ca,H,S,T,Da,Ea,U,Fa,Ga,Ha,Ia,Ja,Ka,z,V){function k(n,r,f){return!(n&&n.hasOwnProperty(r)?!n[r]:!f)}function C(n,r,f){return n&&n.hasOwnProperty(r)?n[r]:f}function I(n,r,f){n=!(null==f||!f.writeLayerSchema);return{enabled:n,ignoreOrigin:n}}const J=new aa.JSONMap({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",
esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch"}),La={name:"supportsName",size:"supportsSize",contentType:"supportsContentType",keywords:"supportsKeywords",exifInfo:"supportsExifInfo"},W=A.getLogger("esri.layers.FeatureLayer");A=Da.defineFieldProperties();d=function(n){function r(...a){a=n.call(this,...a)||this;a._handles=new ia;a.capabilities=null;a.charts=null;a.copyright=null;a.displayField=null;a.definitionExpression=null;a.dynamicDataSource=null;a.editFieldsInfo=null;a.editingEnabled=
!0;a.editingInfo=null;a.elevationInfo=null;a.featureReduction=null;a.fields=null;a.floorInfo=null;a.formTemplate=null;a.fullExtent=null;a.gdbVersion=null;a.geometryFieldsInfo=null;a.geometryType=null;a.hasM=void 0;a.hasZ=void 0;a.heightModelInfo=null;a.historicMoment=null;a.isTable=!1;a.labelsVisible=!0;a.labelingInfo=null;a.layerId=void 0;a.legendEnabled=!0;a.minScale=0;a.maxScale=0;a.globalIdField=null;a.objectIdField=null;a.outFields=null;a.path=null;a.popupEnabled=!0;a.popupTemplate=null;a.relationships=
null;a.sourceJSON=null;a.returnM=void 0;a.returnZ=void 0;a.screenSizePerspectiveEnabled=!0;a.serviceDefinitionExpression=null;a.spatialReference=N.WGS84;a.templates=null;a.timeInfo=null;a.title=null;a.sublayerTitleMode="item-title";a.trackIdField=null;a.type="feature";a.typeIdField=null;a.types=null;a.indexes=new (x.ofType(R.FeatureIndex));a.userIsAdmin=!1;a.version=void 0;a.visible=!0;return a}M._inheritsLoose(r,n);var f=r.prototype;f.destroy=function(){var a;null==(a=this.source)?void 0:a.destroy();
this._handles=E.destroyMaybe(this._handles)};f.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,...b}:a};f.load=function(a){const b=E.isSome(a)?a.signal:null;if(this.portalItem&&this.portalItem.loaded&&this.source)this.addResolvingPromise(this.createGraphicsSource(b).then(c=>this._initLayerProperties(c)));else return a=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection"]},a).catch(c=>c).then(async()=>{if(this.url&&null==this.layerId&&/FeatureServer|MapServer\/*$/i.test(this.url)){const c=
await this._fetchFirstLayerId(b);null!=c&&(this.layerId=c)}if(!this.url&&!this._hasMemorySource())throw new p("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this._initLayerProperties(await this.createGraphicsSource(b))}),this.addResolvingPromise(a),Promise.resolve(this)};f.readCapabilities=function(a,b){b=b.layerDefinition||b;return{attachment:this._readAttachmentCapabilities(b.attachmentProperties),data:this._readDataCapabilities(b),metadata:this._readMetadataCapabilities(b),
operations:this._readOperationsCapabilities(b.capabilities||a,b),query:this._readQueryCapabilities(b),queryRelated:this._readQueryRelatedCapabilities(b),editing:this._readEditingCapabilities(b)}};f.readEditingEnabled=function(a,b){return this._readEditingEnabled(b,!1)};f.readEditingEnabledFromWebMap=function(a,b,c){return this._readEditingEnabled(b,!0,c)};f.writeEditingEnabled=function(a,b){this._writeEditingEnabled(a,b,!1)};f.writeEditingEnabledToWebMap=function(a,b,c,h){this._writeEditingEnabled(a,
b,!0,h)};f.readEditingInfo=function(a,b){({editingInfo:a}=b);return a?{lastEditDate:null!=a.lastEditDate?new Date(a.lastEditDate):null}:null};f.readFeatureReduction=function(a,b){return H.read(a,b)};f.writeWebSceneFeatureReduction=function(a,b,c,h){H.writeTarget(a,b,"layerDefinition.featureReduction",h)};f.readIsTable=function(a,b){b=b&&b.layerDefinition||b;return"Table"===b.type||!b.geometryType};f.writeIsTable=function(a,b,c,h){null!=h&&h.writeLayerSchema&&D.setDeepValue(c,a?"Table":"Feature Layer",
b)};f.readMinScale=function(a,b){return b.effectiveMinScale||a||0};f.readMaxScale=function(a,b){return b.effectiveMaxScale||a||0};f.readGlobalIdFieldFromService=function(a,b){b=b.layerDefinition||b;if(b.globalIdField)return b.globalIdField;if(b.fields)for(const c of b.fields)if("esriFieldTypeGlobalID"===c.type)return c.name};f.readObjectIdFieldFromService=function(a,b){b=b.layerDefinition||b;if(b.objectIdField)return b.objectIdField;if(b.fields)for(const c of b.fields)if("esriFieldTypeOID"===c.type)return c.name};
f.readRenderer=function(a,b,c){b=b.layerDefinition||b;if(a=b.drawingInfo&&b.drawingInfo.renderer||void 0)return(a=G.read(a,b,c)||void 0)||W.error("Failed to create renderer",{rendererDefinition:b.drawingInfo.renderer,layer:this,context:c}),a;if(b.defaultSymbol)return b.types&&b.types.length?new ja({defaultSymbol:K(b.defaultSymbol,b,c),field:b.typeIdField,uniqueValueInfos:b.types.map(h=>({id:h.id,symbol:K(h.symbol,h,c)}))}):new ka({symbol:K(b.defaultSymbol,b,c)})};f.castSource=function(a){return a?
Array.isArray(a)||a instanceof x?new Q["default"]({layer:this,items:a}):a:null};f.readSource=function(a,b){a=qa.fromJSON(b.featureSet);return new Q["default"]({layer:this,items:a&&a.features||[]})};f.readServiceDefinitionExpression=function(a,b){return b.definitionQuery||b.definitionExpression};f.readTemplates=function(a,b){var c=b.editFieldsInfo;b=c&&c.creatorField;c=c&&c.editorField;a=a&&a.map(h=>S.fromJSON(h));this._fixTemplates(a,b);this._fixTemplates(a,c);return a};f.readTitle=function(a,b){a=
b.layerDefinition&&b.layerDefinition.name||b.name;b=b.title||b.layerDefinition&&b.layerDefinition.title;if(a){b=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return this.url?y.titleFromUrlAndName(this.url,a):a;if(!a&&this.url){const c=y.parse(this.url);E.isSome(c)&&(a=c.title)}if(!a)return;"item-title-and-service-name"===this.sublayerTitleMode&&b&&b!==a&&(a=b+" - "+a);return y.cleanTitle(a)}if("item-title"===this.sublayerTitleMode&&b)return b};f.readTitleFromWebMap=
function(a,b){return b.title||b.layerDefinition&&b.layerDefinition.name};f.readTypeIdField=function(a,b){b=b.layerDefinition||b;if(a=b.typeIdField)if(b=B.getField(b.fields,a))a=b.name;return a};f.readTypes=function(a,b){b=b.layerDefinition||b;a=b.types;const c=(b=b.editFieldsInfo)&&b.creatorField,h=b&&b.editorField;return a&&a.map(l=>{l=T.fromJSON(l);this._fixTemplates(l.templates,c);this._fixTemplates(l.templates,h);return l})};f.writeUrl=function(a,b,c,h){y.writeUrlWithLayerId(this,a,null,b,h)};
f.readVersion=function(a,b){return b.currentVersion?b.currentVersion:b.hasOwnProperty("capabilities")||b.hasOwnProperty("drawingInfo")||b.hasOwnProperty("hasAttachments")||b.hasOwnProperty("htmlPopupType")||b.hasOwnProperty("relationships")||b.hasOwnProperty("timeInfo")||b.hasOwnProperty("typeIdField")||b.hasOwnProperty("types")?10:9.3};f.readVisible=function(a,b){if(b.layerDefinition&&null!=b.layerDefinition.defaultVisibility)return!!b.layerDefinition.defaultVisibility;if(null!=b.visibility)return!!b.visibility};
f.addAttachment=function(a,b){return this.load().then(()=>this._checkAttachmentSupport(a)).then(()=>{if(!("addAttachment"in this.source))throw new p("FeatureLayer","Layer source does not support addAttachment capability");return this.source.addAttachment(a,b)})};f.updateAttachment=function(a,b,c){return this.load().then(()=>this._checkAttachmentSupport(a)).then(()=>{if(!("updateAttachment"in this.source))throw new p("FeatureLayer","Layer source does not support updateAttachment capability");return this.source.updateAttachment(a,
b,c)})};f.applyEdits=async function(a,b){const c=await new Promise(function(h,l){L(["./graphics/editingSupport"],h,l)});await this.load();return c.applyEdits(this,this.source,a,b)};f.on=function(a,b){return n.prototype.on.call(this,a,b)};f.createPopupTemplate=function(a){return Ja.createPopupTemplate(this,a)};f.createGraphicsSource=async function(a){if(this._hasMemorySource())return this.emit("graphics-source-create",{graphicsSource:this.source}),this.source.load({signal:a});const b=await new Promise(function(c,
h){L(["./graphics/sources/FeatureLayerSource"],function(l){c(Object.freeze({__proto__:null,"default":l}))},h)});da.throwIfAborted(a);a=await (new b.default({layer:this})).load({signal:a});this.emit("graphics-source-create",{graphicsSource:a});return a};f.createQuery=function(){const a=new z,b=this.get("capabilities.data");a.dynamicDataSource=this.dynamicDataSource;a.gdbVersion=this.gdbVersion;a.historicMoment=this.historicMoment;a.returnGeometry=!0;b&&(b.supportsZ&&null!=this.returnZ&&(a.returnZ=
this.returnZ),b.supportsM&&null!=this.returnM&&(a.returnM=this.returnM));a.outFields=["*"];a.where=this.definitionExpression||"1\x3d1";const {timeOffset:c,timeExtent:h}=this;a.timeExtent=null!=c&&null!=h?h.offset(-c.value,c.unit):h||null;a.multipatchOption="multipatch"===this.geometryType?"xyFootprint":null;return a};f.deleteAttachments=function(a,b){return this.load().then(()=>this._checkAttachmentSupport(a)).then(()=>{if(!("deleteAttachments"in this.source))throw new p("FeatureLayer","Layer source does not support deleteAttachments capability");
return this.source.deleteAttachments(a,b)})};f.fetchRecomputedExtents=function(a){return this.load({signal:null==a?void 0:a.signal}).then(()=>{if(this.source.fetchRecomputedExtents)return this.source.fetchRecomputedExtents(a);throw new p("FeatureLayer","Layer source does not support fetchUpdates capability");})};f.getFeatureType=function(a){const {typeIdField:b,types:c}=this;if(!b||!a)return null;const h=a.attributes?a.attributes[b]:void 0;if(null==h)return null;let l=null;c.some(q=>{const {id:u}=
q;if(null==u)return!1;u.toString()===h.toString()&&(l=q);return!!l});return l};f.getFieldDomain=function(a,b){return(b=this.getFeatureType(b&&b.feature))&&(b=b.domains&&b.domains[a])&&"inherited"!==b.type?b:this._getLayerDomain(a)};f.getField=function(a){return this.fieldsIndex.get(a)};f.queryAttachments=function(a,b){a=Ka.from(a);return this.load().then(()=>{if(!this.get("capabilities.data.supportsAttachment"))throw new p("FeatureLayer","this layer doesn't support attachments");const {attachmentTypes:c,
objectIds:h,globalIds:l,num:q,size:u,start:v,where:X}=a;if(!this.get("capabilities.operations.supportsQueryAttachments")){const Ma=c&&c.length,Na=l&&l.length,Oa=u&&u.length;if(h&&1<h.length||Ma||Na||Oa||q||v||X)throw new p("FeatureLayer","when 'supportsQueryAttachments' is false, only objectIds of length 1 are supported",a);}if(!(h&&h.length||X))throw new p("FeatureLayer","'objectIds' or 'where' are required to perform attachment query",a);if(!("queryAttachments"in this.source))throw new p("FeatureLayer",
"Layer source does not support queryAttachments capability",a);return this.source.queryAttachments(a)})};f.queryFeatures=function(a,b){return this.load().then(()=>this.source.queryFeatures(z.from(a)||this.createQuery(),b)).then(c=>{if(c&&c.features)for(const h of c.features)h.layer=h.sourceLayer=this;return c})};f.queryObjectIds=function(a,b){return this.load().then(()=>{if(this.source.queryObjectIds)return this.source.queryObjectIds(z.from(a)||this.createQuery(),b);throw new p("FeatureLayer","Layer source does not support queryObjectIds capability");
})};f.queryFeatureCount=function(a,b){return this.load().then(()=>{if(this.source.queryFeatureCount)return this.source.queryFeatureCount(z.from(a)||this.createQuery(),b);throw new p("FeatureLayer","Layer source does not support queryFeatureCount capability");})};f.queryExtent=function(a,b){return this.load().then(()=>{if(this.source.queryExtent)return this.source.queryExtent(z.from(a)||this.createQuery(),b);throw new p("FeatureLayer","Layer source does not support queryExtent capability");})};f.queryRelatedFeatures=
function(a,b){return this.load().then(()=>{if("queryRelatedFeatures"in this.source)return this.source.queryRelatedFeatures(V.from(a),b);throw new p("FeatureLayer","Layer source does not support queryRelatedFeatures capability");})};f.queryRelatedFeaturesCount=function(a,b){return this.load().then(()=>{if("queryRelatedFeaturesCount"in this.source)return this.source.queryRelatedFeaturesCount(V.from(a),b);throw new p("FeatureLayer","Layer source does not support queryRelatedFeaturesCount capability");
})};f.read=function(a,b){const c=a.featureCollection;if(c){const h=c.layers;h&&1===h.length&&(n.prototype.read.call(this,h[0],b),null!=c.showLegend&&n.prototype.read.call(this,{showLegend:c.showLegend},b))}n.prototype.read.call(this,a,b);b&&"service"===b.origin&&this.revert(["objectIdField","fields","timeInfo","spatialReference"],"service")};f.write=function(a,b){var c,h;b={...b,writeLayerSchema:null!=(c=null==(h=b)?void 0:h.writeLayerSchema)?c:this._hasMemorySource()};c=b.origin;h=b.layerContainerType;
const l=b.messages;if(this.isTable){if("web-scene"===c||"web-map"===c&&"tables"!==h)return l&&l.push(new p("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a Table source cannot be written to web scenes and web maps`,{layer:this})),null;if(this._hasMemorySource())return l&&l.push(new p("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using an in-memory Table source cannot be written to web scenes and web maps`,{layer:this})),
null}else if(this.loaded&&"web-map"===c&&"tables"===h)return l&&l.push(new p("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a non-table source cannot be written to tables in web maps`,{layer:this})),null;return n.prototype.write.call(this,a,b)};f._readEditingEnabled=function(a,b,c){var h;let l=null==(h=a.layerDefinition)?void 0:h.capabilities;if(l)return this._hasEditingCapability(l);l=a.capabilities;return b&&"web-map"===(null==c?void 0:c.origin)&&!this._hasMemorySource()&&
l?this._hasEditingCapability(l):!0};f._hasEditingCapability=function(a){return a.toLowerCase().split(",").map(b=>b.trim()).includes("editing")};f._writeEditingEnabled=function(a,b,c,h){if(!a){var l,q;a=null!=(l=this.capabilities)&&null!=(q=l.operations)&&q.supportsSync?"Query,Sync":"Query";D.setDeepValue("layerDefinition.capabilities",a,b);!c||null!=h&&h.writeLayerSchema||(b.capabilities=a)}};f._checkAttachmentSupport=function(a){const {attributes:b}=a,{objectIdField:c}=this;if(!this.get("capabilities.data.supportsAttachment"))return Promise.reject(new p("FeatureLayer",
"this layer doesn't support attachments"));if(!a)return Promise.reject(new p("FeatureLayer","A feature is required to add/delete/update attachments"));if(!b)return Promise.reject(new p("FeatureLayer","'attributes' are required on a feature to query attachments"));if(!b[c])return Promise.reject(new p("FeatureLayer",`feature is missing the identifying attribute ${c}`))};f._getLayerDomain=function(a){return(a=this.fieldsIndex.get(a))?a.domain:null};f._fetchFirstLayerId=function(a){return ha(this.url,
{query:{f:"json",...this.customParameters},responseType:"json",signal:a}).then(b=>{if(b=b.data){if(Array.isArray(b.layers)&&0<b.layers.length)return b.layers[0].id;if(Array.isArray(b.tables)&&0<b.tables.length)return b.tables[0].id}})};f._initLayerProperties=async function(a){this._set("source",a);a.sourceJSON&&(this.sourceJSON=a.sourceJSON,this.read(a.sourceJSON,{origin:"service",url:this.parsedUrl}));this._verifySource();this._verifyFields();B.fixRendererFields(this.renderer,this.fields);B.fixTimeInfoFields(this.timeInfo,
this.fields);return Ia.loadStyleRenderer(this,{origin:"service"})};f._verifyFields=function(){const a=this.parsedUrl&&this.parsedUrl.path||"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+a+")");this.isTable||this._hasMemorySource()||-1!==a.search(/\/FeatureServer\//i)||this.fields&&this.fields.some(function(b){return"geometry"===b.type})||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+
a+")")};f._fixTemplates=function(a,b){a&&a.forEach(c=>{(c=c.prototype&&c.prototype.attributes)&&b&&delete c[b]})};f._verifySource=function(){if(this._hasMemorySource()){if(this.url)throw new p("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url");}else if(!this.url)throw new p("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source");};f._initMemorySource=function(a){a.forEach(b=>{b.layer=
this;b.sourceLayer=this});this._handles.add([a.on("after-add",b=>{b.item.layer=this;b.item.sourceLayer=this}),a.on("after-remove",b=>{b.item.layer=null;b.item.sourceLayer=null})],"fl-source")};f._resetMemorySource=function(a){a.forEach(b=>{b.layer=null;b.sourceLayer=null});this._handles.remove("fl-source")};f._hasMemorySource=function(){return!(this.url||!this.source)};f._readAttachmentCapabilities=function(a){const b={supportsName:!1,supportsSize:!1,supportsContentType:!1,supportsKeywords:!1,supportsExifInfo:!1};
a&&Array.isArray(a)&&a.forEach(c=>{const h=La[c.name];h&&(b[h]=!!c.isEnabled)});return b};f._readDataCapabilities=function(a){return{isVersioned:k(a,"isDataVersioned",!1),supportsAttachment:k(a,"hasAttachments",!1),supportsM:k(a,"hasM",!1),supportsZ:k(a,"hasZ",!1)}};f._readMetadataCapabilities=function(a){return{supportsAdvancedFieldProperties:k(a,"supportsFieldDescriptionProperty",!1)}};f._readOperationsCapabilities=function(a,b){a=a?a.toLowerCase().split(",").map(v=>v.trim()):[];const c=-1!==a.indexOf("editing");
let h=c&&-1!==a.indexOf("create"),l=c&&-1!==a.indexOf("delete"),q=c&&-1!==a.indexOf("update");const u=-1!==a.indexOf("changetracking");!c||h||l||q||(h=l=q=!0);return{supportsCalculate:k(b,"supportsCalculate",!1),supportsTruncate:k(b,"supportsTruncate",!1),supportsValidateSql:k(b,"supportsValidateSql",!1),supportsAdd:h,supportsDelete:l,supportsEditing:c,supportsChangeTracking:u,supportsQuery:-1!==a.indexOf("query"),supportsQueryAttachments:k(b.advancedQueryCapabilities,"supportsQueryAttachments",!1),
supportsResizeAttachments:k(b,"supportsAttachmentsResizing",!1),supportsSync:-1!==a.indexOf("sync"),supportsUpdate:q,supportsExceedsLimitStatistics:k(b,"supportsExceedsLimitStatistics",!1)}};f._readQueryCapabilities=function(a){var b;const c=a.advancedQueryCapabilities,h=a.ownershipBasedAccessControlForFeatures,l=a.archivingInfo;var q=null==(b=this.url)?void 0:b.includes("MapServer");b=!Y("mapserver-pbf-enabled")&&q&&10.81>this.version;q=(a.supportedQueryFormats||"").split(",").reduce((u,v)=>{(v=
v.toLowerCase().trim())&&u.add(v);return u},new Set);return{supportsStatistics:k(c,"supportsStatistics",a.supportsStatistics),supportsPercentileStatistics:k(c,"supportsPercentileStatistics",!1),supportsCentroid:k(c,"supportsReturningGeometryCentroid",!1),supportsDistance:k(c,"supportsQueryWithDistance",!1),supportsDistinct:k(c,"supportsDistinct",a.supportsAdvancedQueries),supportsExtent:k(c,"supportsReturningQueryExtent",!1),supportsGeometryProperties:k(c,"supportsReturningGeometryProperties",!1),
supportsHavingClause:k(c,"supportsHavingClause",!1),supportsOrderBy:k(c,"supportsOrderBy",a.supportsAdvancedQueries),supportsPagination:k(c,"supportsPagination",!1),supportsQuantization:k(a,"supportsCoordinatesQuantization",!1),supportsQuantizationEditMode:k(a,"supportsQuantizationEditMode",!1),supportsQueryGeometry:k(a,"supportsReturningQueryGeometry",!1),supportsResultType:k(c,"supportsQueryWithResultType",!1),supportsMaxRecordCountFactor:k(c,"supportsMaxRecordCountFactor",!1),supportsSqlExpression:k(c,
"supportsSqlExpression",!1),supportsStandardizedQueriesOnly:k(a,"useStandardizedQueries",!1),supportsQueryByOthers:k(h,"allowOthersToQuery",!0),supportsHistoricMoment:k(l,"supportsQueryWithHistoricMoment",!1),supportsFormatPBF:!b&&q.has("pbf"),supportsDisjointSpatialRelationship:k(c,"supportsDisjointSpatialRel",!1),supportsCacheHint:k(c,"supportsQueryWithCacheHint",!1),maxRecordCountFactor:C(a,"maxRecordCountFactor",void 0),maxRecordCount:C(a,"maxRecordCount",void 0),standardMaxRecordCount:C(a,"standardMaxRecordCount",
void 0),tileMaxRecordCount:C(a,"tileMaxRecordCount",void 0)}};f._readQueryRelatedCapabilities=function(a){a=a.advancedQueryCapabilities;const b=k(a,"supportsAdvancedQueryRelated",!1);return{supportsPagination:k(a,"supportsQueryRelatedPagination",!1),supportsCount:b,supportsOrderBy:b}};f._readEditingCapabilities=function(a){const b=a.ownershipBasedAccessControlForFeatures;return{supportsGeometryUpdate:k(a,"allowGeometryUpdates",!0),supportsGlobalId:k(a,"supportsApplyEditsWithGlobalIds",!1),supportsRollbackOnFailure:k(a,
"supportsRollbackOnFailureParameter",!1),supportsUpdateWithoutM:k(a,"allowUpdateWithoutMValues",!1),supportsUploadWithItemId:k(a,"supportsAttachmentsByUploadId",!1),supportsDeleteByAnonymous:k(b,"allowAnonymousToDelete",!0),supportsDeleteByOthers:k(b,"allowOthersToDelete",!0),supportsUpdateByAnonymous:k(b,"allowAnonymousToUpdate",!0),supportsUpdateByOthers:k(b,"allowOthersToUpdate",!0)}};M._createClass(r,[{key:"createQueryVersion",get:function(){this.commitProperty("definitionExpression");this.commitProperty("dynamicDataSource");
this.commitProperty("timeExtent");this.commitProperty("timeOffset");this.commitProperty("geometryType");this.commitProperty("gdbVersion");this.commitProperty("historicMoment");this.commitProperty("returnZ");this.commitProperty("capabilities");this.commitProperty("returnM");return(this._get("createQueryVersion")||0)+1}},{key:"fieldsIndex",get:function(){return new oa(this.fields||[])}},{key:"parsedUrl",get:function(){const a=this.url?F.urlToObject(this.url):null;null!=a&&(null!=this.dynamicDataSource?
a.path=F.join(a.path,"dynamicLayer"):null!=this.layerId&&(a.path=F.join(a.path,this.layerId.toString())));return a}},{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},{key:"renderer",set:function(a){B.fixRendererFields(a,this.fields);this._set("renderer",a)}},{key:"source",set:function(a){const b=this._get("source");b!==a&&(b&&b instanceof x&&this._resetMemorySource(b),a&&a instanceof x&&this._initMemorySource(a),this._set("source",a))}},{key:"url",set:function(a){a=y.sanitizeUrlWithLayerId({layer:this,
url:a,nonStandardUrlAllowed:!0,logger:W});this._set("url",a.url);null!=a.layerId&&this._set("layerId",a.layerId)}}]);return r}(sa.BlendLayer(ya.TemporalLayer(wa.ScaleRangeLayer(va.RefreshableLayer(ra.ArcGISService(na.OperationalLayer(ua.PortalLayer(la.MultiOriginJSONMixin(ta.CustomParametersMixin(d))))))))));e.__decorate([g.property({readOnly:!0,json:{read:!1}})],d.prototype,"capabilities",void 0);e.__decorate([m.reader("service","capabilities","advancedQueryCapabilities allowGeometryUpdates allowUpdateWithoutMValues archivingInfo capabilities hasAttachments hasM hasZ maxRecordCount maxRecordCountFactor ownershipBasedAccessControlForFeatures standardMaxRecordCount supportedQueryFormats supportsAdvancedQueries supportsApplyEditsWithGlobalIds supportsAttachmentsByUploadId supportsAttachmentsResizing supportsCalculate supportsCoordinatesQuantization supportsExceedsLimitStatistics supportsFieldDescriptionProperty supportsQuantizationEditMode supportsRollbackOnFailureParameter supportsStatistics supportsTruncate supportsValidateSql tileMaxRecordCount useStandardizedQueries".split(" "))],
d.prototype,"readCapabilities",null);e.__decorate([g.property({json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],d.prototype,"charts",void 0);e.__decorate([g.property({readOnly:!0})],d.prototype,"createQueryVersion",null);e.__decorate([g.property({type:String,json:{read:{source:"layerDefinition.copyrightText"},origins:{service:{read:{source:"copyrightText"}}}}})],d.prototype,"copyright",void 0);e.__decorate([g.property({type:String,json:{read:{source:"layerDefinition.displayField"},
origins:{service:{read:{source:"displayField"}}}}})],d.prototype,"displayField",void 0);e.__decorate([g.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],d.prototype,"definitionExpression",void 0);e.__decorate([g.property({types:O.symbolTypes,readOnly:!0})],d.prototype,"defaultSymbol",void 0);e.__decorate([g.property({type:Ha.DataLayerSource})],d.prototype,"dynamicDataSource",
void 0);e.__decorate([g.property({readOnly:!0})],d.prototype,"editFieldsInfo",void 0);e.__decorate([g.property({type:Boolean})],d.prototype,"editingEnabled",void 0);e.__decorate([m.reader(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],d.prototype,"readEditingEnabled",null);e.__decorate([m.reader("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],d.prototype,"readEditingEnabledFromWebMap",null);e.__decorate([w.writer(["portal-item","web-scene"],
"editingEnabled",{"layerDefinition.capabilities":{type:String}})],d.prototype,"writeEditingEnabled",null);e.__decorate([w.writer("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],d.prototype,"writeEditingEnabledToWebMap",null);e.__decorate([g.property({readOnly:!0})],d.prototype,"editingInfo",void 0);e.__decorate([m.reader("editingInfo")],d.prototype,"readEditingInfo",null);e.__decorate([g.property(t.elevationInfo)],d.prototype,"elevationInfo",
void 0);e.__decorate([g.property({types:{key:"type",base:za["default"],typeMap:{selection:Ca,cluster:Ba}},json:{write:{target:"layerDefinition.featureReduction"}}})],d.prototype,"featureReduction",void 0);e.__decorate([m.reader("featureReduction",["layerDefinition.featureReduction"])],d.prototype,"readFeatureReduction",null);e.__decorate([w.writer("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:H.webSceneFeatureReductionTypes}})],d.prototype,"writeWebSceneFeatureReduction",
null);e.__decorate([g.property({...A.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{read:!0},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:I}}}}})],d.prototype,"fields",void 0);e.__decorate([g.property({readOnly:!0})],d.prototype,"fieldsIndex",null);e.__decorate([g.property({type:Fa,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"},origins:{"web-scene":{write:!1}}}})],d.prototype,"floorInfo",void 0);e.__decorate([g.property({type:pa,
json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],d.prototype,"formTemplate",void 0);e.__decorate([g.property({type:ea,json:{origins:{service:{read:{source:"extent"}}},read:{source:"layerDefinition.extent"}}})],d.prototype,"fullExtent",void 0);e.__decorate([g.property()],d.prototype,"gdbVersion",void 0);e.__decorate([g.property({readOnly:!0,type:Ea,json:{read:{source:"geometryProperties"}}})],d.prototype,"geometryFieldsInfo",void 0);e.__decorate([g.property({type:"point polygon polyline multipoint multipatch mesh".split(" "),
json:{origins:{service:{read:J.read},"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:I,writer(n,r,f){(n=n?J.toJSON(n):null)&&D.setDeepValue(f,n,r)}}}},read:{source:"layerDefinition.geometryType",reader:J.read}}})],d.prototype,"geometryType",void 0);e.__decorate([g.property({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasM"}}})],d.prototype,"hasM",void 0);e.__decorate([g.property({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasZ"}}})],
d.prototype,"hasZ",void 0);e.__decorate([g.property({readOnly:!0,type:ma})],d.prototype,"heightModelInfo",void 0);e.__decorate([g.property({type:Date})],d.prototype,"historicMoment",void 0);e.__decorate([g.property(t.id)],d.prototype,"id",void 0);e.__decorate([g.property({readOnly:!0,json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],d.prototype,"isTable",void 0);e.__decorate([m.reader("service","isTable",["type","geometryType"]),m.reader("isTable",["layerDefinition.type","layerDefinition.geometryType"])],
d.prototype,"readIsTable",null);e.__decorate([w.writer("web-map","isTable")],d.prototype,"writeIsTable",null);e.__decorate([g.property(t.labelsVisible)],d.prototype,"labelsVisible",void 0);e.__decorate([g.property({type:[Aa],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:U.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:U.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],d.prototype,
"labelingInfo",void 0);e.__decorate([g.property(t.opacityDrawingInfo)],d.prototype,"opacity",void 0);e.__decorate([g.property({type:Number,json:{origins:{service:{read:{source:"id"}}},read:!1}})],d.prototype,"layerId",void 0);e.__decorate([g.property(t.legendEnabled)],d.prototype,"legendEnabled",void 0);e.__decorate([g.property({type:["show","hide"]})],d.prototype,"listMode",void 0);e.__decorate([g.property(t.minScale)],d.prototype,"minScale",void 0);e.__decorate([m.reader("service","minScale",["minScale",
"effectiveMinScale"])],d.prototype,"readMinScale",null);e.__decorate([g.property(t.maxScale)],d.prototype,"maxScale",void 0);e.__decorate([m.reader("service","maxScale",["maxScale","effectiveMaxScale"])],d.prototype,"readMaxScale",null);e.__decorate([g.property({type:String})],d.prototype,"globalIdField",void 0);e.__decorate([m.reader("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"]),m.reader("service","globalIdField",["globalIdField","fields"])],d.prototype,"readGlobalIdFieldFromService",
null);e.__decorate([g.property({type:String,json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:I}}}}})],d.prototype,"objectIdField",void 0);e.__decorate([m.reader("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"]),m.reader("service","objectIdField",["objectIdField","fields"])],d.prototype,"readObjectIdFieldFromService",null);e.__decorate([g.property({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],d.prototype,"operationalLayerType",
void 0);e.__decorate([g.property(A.outFields)],d.prototype,"outFields",void 0);e.__decorate([g.property({readOnly:!0})],d.prototype,"parsedUrl",null);e.__decorate([g.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],d.prototype,"path",void 0);e.__decorate([g.property(t.popupEnabled)],d.prototype,"popupEnabled",void 0);e.__decorate([g.property({type:fa,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],d.prototype,"popupTemplate",void 0);e.__decorate([g.property({readOnly:!0})],
d.prototype,"defaultPopupTemplate",null);e.__decorate([g.property({type:[Ga],readOnly:!0})],d.prototype,"relationships",void 0);e.__decorate([g.property({types:P.rendererTypes,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:P.webSceneRendererTypes,write:{target:"layerDefinition.drawingInfo.renderer",writer:G.write}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy(n,r,f){return{ignoreOrigin:null==f?void 0:f.writeLayerSchema}},writer:G.write}}})],
d.prototype,"renderer",null);e.__decorate([m.reader("service","renderer",["drawingInfo.renderer","defaultSymbol"]),m.reader("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],d.prototype,"readRenderer",null);e.__decorate([g.property()],d.prototype,"sourceJSON",void 0);e.__decorate([g.property({type:Boolean})],d.prototype,"returnM",void 0);e.__decorate([g.property({type:Boolean})],d.prototype,"returnZ",void 0);e.__decorate([g.property(t.screenSizePerspectiveEnabled)],
d.prototype,"screenSizePerspectiveEnabled",void 0);e.__decorate([g.property()],d.prototype,"source",null);e.__decorate([Z.cast("source")],d.prototype,"castSource",null);e.__decorate([m.reader("portal-item","source",["featureSet"]),m.reader("web-map","source",["featureSet"])],d.prototype,"readSource",null);e.__decorate([g.property({readOnly:!0})],d.prototype,"serviceDefinitionExpression",void 0);e.__decorate([m.reader("service","serviceDefinitionExpression",["definitionQuery","definitionExpression"])],
d.prototype,"readServiceDefinitionExpression",null);e.__decorate([g.property({type:N,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:{source:"layerDefinition.extent.spatialReference"}}})],d.prototype,"spatialReference",void 0);e.__decorate([g.property({type:[S]})],d.prototype,"templates",void 0);e.__decorate([m.reader("templates",["editFieldsInfo","creatorField","editorField","templates"])],d.prototype,"readTemplates",null);e.__decorate([g.property({type:xa})],d.prototype,"timeInfo",
void 0);e.__decorate([g.property()],d.prototype,"title",void 0);e.__decorate([m.reader("service","title",["name"]),m.reader("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],d.prototype,"readTitle",null);e.__decorate([m.reader("web-map","title",["layerDefinition.name","title"])],d.prototype,"readTitleFromWebMap",null);e.__decorate([g.property({type:String})],d.prototype,"sublayerTitleMode",void 0);e.__decorate([g.property({type:String,json:{read:{source:"timeInfo.trackIdField"}}})],
d.prototype,"trackIdField",void 0);e.__decorate([g.property({json:{read:!1}})],d.prototype,"type",void 0);e.__decorate([g.property({type:String})],d.prototype,"typeIdField",void 0);e.__decorate([m.reader("service","typeIdField"),m.reader("typeIdField",["layerDefinition.typeIdField"])],d.prototype,"readTypeIdField",null);e.__decorate([g.property({type:[T]})],d.prototype,"types",void 0);e.__decorate([m.reader("service","types",["types"]),m.reader("types",["layerDefinition.types"])],d.prototype,"readTypes",
null);e.__decorate([g.property({readOnly:!0,json:{write:!1}})],d.prototype,"serverGens",void 0);e.__decorate([g.property({type:x.ofType(R.FeatureIndex),readOnly:!0})],d.prototype,"indexes",void 0);e.__decorate([g.property(t.url)],d.prototype,"url",null);e.__decorate([w.writer("url")],d.prototype,"writeUrl",null);e.__decorate([g.property({readOnly:!0})],d.prototype,"userIsAdmin",void 0);e.__decorate([g.property({json:{origins:{service:{read:!0}},read:!1}})],d.prototype,"version",void 0);e.__decorate([m.reader("service",
"version","currentVersion capabilities drawingInfo hasAttachments htmlPopupType relationships timeInfo typeIdField types".split(" "))],d.prototype,"readVersion",null);e.__decorate([g.property({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],d.prototype,"visible",void 0);e.__decorate([m.reader("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],d.prototype,"readVisible",null);d=e.__decorate([ca.subclass("esri.layers.FeatureLayer")],
d);const K=ba.createTypeReader({types:O.symbolTypesRenderer});return d});