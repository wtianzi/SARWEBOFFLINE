// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/lang ../../../core/maybe ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/Error ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../core/promiseUtils ../../../core/Accessor ../../../core/Collection ../../../core/Promise ../../../core/asyncUtils ../../../core/Handles ../../../core/watchUtils ../../support/arcgisLayerUrl ../../../tasks/support/StatisticDefinition ../../../views/support/WatchUpdatingTracking ../../../views/3d/support/debugFlags ../../../portal/support/geometryServiceUtils ../../../views/3d/layers/support/FeatureTileFetcher3D ../../../views/3d/layers/support/FeatureTileFetcher3DDebugger".split(" "),
function(y,h,d,z,e,D,Q,k,R,E,F,S,T,U,t,G,A,H,B,I,v,J,K,L,M,N,O,P){function C(u,p){if(!p)return!1;for(const g of p)if(!u.has(g))return!0;return!1}var q;const w=D.getLogger("esri.layers.graphics.controllers.FeatureTileController3D");d=q=function(u){function p(a){a=u.call(this,a)||this;a.type="feature-tile-3d";a.watchUpdatingTracking=new L.WatchUpdatingTracking;a.serviceDataExtent=null;a.serviceDataCount=q.constants.NO_SERVICE_DATA_COUNT;a.vertexLimitExceeded=!1;a.displayFeatureLimit=null;a.suspended=
!1;a.tileFetcher=null;a.handles=new I;a.fetchDataInfoPromise=null;a.fetchDataInfoAbortController=null;a.lifeCycleAbortController=t.createAbortController();return a}y._inheritsLoose(p,u);var g=p.prototype;g.approximateExtentSizeAtScale=function(a,b){const c=this.layerView.view,n=b.levels[0];return(n.tileSize[0]/(n.scale/a)+n.tileSize[1]/(n.scale/a))/2*Math.ceil((c.width/b.pixelSize+c.height/b.pixelSize)/2)};g.initialize=function(){this.watchUpdatingTracking.add(this,"vertexLimitInfo",()=>this.watchUpdatingTracking.addPromise(this.updateVertexLimitExceeded(null,
this.lifeCycleAbortController.signal)));this.watchUpdatingTracking.add(this,"mode",()=>this.modeChanged(),2);this.addResolvingPromise(Promise.resolve().then(()=>this.verifyCapabilities()).then(()=>this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo())).then(()=>this.initializeTileFetcher()))};g.verifyCapabilities=function(){const a=this.layerView.layer;if(!a.get("capabilities.operations.supportsQuery"))throw new F("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",
{layer:a});};g.destroy=function(){this.cancelFetchServiceDataInfo();this.tileFetcher=e.destroyMaybe(this.tileFetcher);this.handles=e.destroyMaybe(this.handles);this.tilesHandle=e.removeMaybe(this.tilesHandle);this.lifeCycleAbortController&&(this.lifeCycleAbortController.abort(),this.lifeCycleAbortController=null);this.watchUpdatingTracking.destroy();this._set("watchUpdatingTracking",null)};g.suspend=function(){this.suspended||(this.suspended=!0,e.isSome(this.tileFetcher)&&this.tileFetcher.suspend())};
g.resume=function(){this.suspended&&(this.suspended=!1,e.isSome(this.tileFetcher)&&this.tileFetcher.resume())};g.restart=function(){const a=()=>{e.isSome(this.tileFetcher)&&this.tileFetcher.restart()};this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo().then(a,a))};g.refetch=function(){const a=()=>{e.isSome(this.tileFetcher)&&this.tileFetcher.refetch()};this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo().then(a,a))};g.initializeTileFetcher=function(){const a=this.layerView.view;
if(a){var b=v.whenOnce(a.featureTiles,"tilingScheme",this.lifeCycleAbortController.signal);this.watchUpdatingTracking.addPromise(b);b.then(()=>{const {layerView:c,tileDescriptors:n}=this,m=c.layer,l=new O.FeatureTileFetcher3D({context:this.context,filterExtent:this.extent,tileDescriptors:n,features:this.graphics});this.tileFetcher=l;this.suspended?this.tileFetcher.suspend():this.tileFetcher.resume();var r=this.layerView.view.resourceController;r&&(this.handles.add(r.memoryController.events.on("quality-changed",
f=>{l.memoryFactor=f})),this.tileFetcher.memoryFactor=r.memoryController.memoryFactor);(r="polygon"===this.context.geometryType?"polygonLodFactor":"polyline"===this.context.geometryType?"polylineLodFactor":null)&&this.handles.add(v.init(this.layerView.view,"qualitySettings.graphics3D."+r,f=>{l.lodFactor=f||1}));this.watchUpdatingTracking.add(m,"createQueryVersion",()=>this.dataFilterChanged());this.watchUpdatingTracking.add(c,"availableFields",(f,x)=>this.availableFieldsChanged(x,f));this.watchUpdatingTracking.add(c,
"requiredFields",(f,x)=>this.requiredFieldsChanged(x,f));this.handles.add([m.on("apply-edits",f=>this.applyEdits(f)),this.watch("extent",f=>l.filterExtent=f,!0),this.watch("tileDescriptors",f=>l.tileDescriptors=f,!0),v.init(this,"maximumNumberOfFeatures",f=>{l.maximumNumberOfFeatures=f;l.useTileCount=this.serviceDataCount>f},!0),v.init(this,"serviceDataCount",f=>l.useTileCount=f>this.maximumNumberOfFeatures,!0),v.init(M,"FEATURE_TILE_FETCH_SHOW_TILES",f=>{f&&l&&!l.debugger?(l.debugger=new P.FeatureTileFetcher3DDebugger(l,
a.featureTiles.tilingScheme.toTileInfo(),a),l.debugger.update()):!f&&this.tileFetcher&&l.debugger&&(l.debugger.destroy(),l.debugger=null)})]);this.supportsExceedsLimitQuery||this.watchUpdatingTracking.add(this,"maxTotalSnapshotVertices",()=>this.watchUpdatingTracking.addPromise(this.updateVertexLimitExceeded(null,this.lifeCycleAbortController.signal)))}).catch(()=>{})}};g.modeChanged=function(){switch(this.mode){case "tiles":this.tilesHandle||(this.tilesHandle=this.layerView.view.featureTiles.addClient());
break;default:w.warn("Unhandled feature layer mode "+this.mode);case "snapshot":e.isSome(this.tilesHandle)&&(this.tilesHandle.remove(),this.tilesHandle=null)}};g.dataFilterChanged=function(){this._set("maxTotalSnapshotVertices",0);this.notifyChange("maxTotalSnapshotVertices");this.refetch()};g.applyEdits=function(a){e.isNone(this.tileFetcher)||this.tileFetcher.applyEdits(a).then(b=>{b&&(b.deletedFeatures.length||b.updatedFeatures.length||b.addedFeatures.length)&&this.watchUpdatingTracking.addPromise(this.updateServiceDataExtent(this.lifeCycleAbortController.signal))}).catch(b=>
{if(!t.isAbortError(b))throw b;})};g.availableFieldsChanged=function(a,b){e.isSome(this.tileFetcher)&&C(this.tileFetcher.availableFields,b)&&this.refetch()};g.requiredFieldsChanged=function(a,b){e.isSome(this.tileFetcher)&&C(this.tileFetcher.availableFields,b)&&this.restart()};g.createVertexLimitExceededQuery=function(a){const b=this.layerView.layer,c=b.createQuery();c.outStatistics=[new K({statisticType:"exceedslimit",maxVertexCount:a,outStatisticFieldName:"exceedslimit",maxPointCount:1E8,maxRecordCount:1E8})];
b.capabilities.query.supportsCacheHint&&(c.cacheHint=!0);return c};g.createDataInfoQuery=function(){const a=this.layerView.layer,b=a.createQuery();b.outSpatialReference=this.layerView.view.spatialReference;a.capabilities.query.supportsCacheHint&&(b.cacheHint=!0);return b};g.fullExtentIsAccurate=function(){const a=this.layerView.layer;if(a.definitionExpression)return!1;switch(a.type){case "feature":return J.isHostedAgolService(a.url);case "csv":case "geojson":case "ogc-feature":return!0}};g.updateServiceDataExtent=
async function(a){try{await this.tryUpdateServiceDataExtent(a)}catch(b){t.isAbortError(b)||this._set("serviceDataExtent",z.clone(this.layerView.fullExtentInLocalViewSpatialReference))}};g.tryUpdateServiceDataExtent=async function(a){var b=this.layerView;const c=b.layer,n=c.capabilities.query.supportsExtent,m=z.clone(b.fullExtentInLocalViewSpatialReference),l=c.fullExtent,r=this.fullExtentIsAccurate(),f=this.serviceDataCount;n&&f<=q.constants.MAX_FEATURE_COUNT_FOR_EXTENT&&(!m||!r)&&"queryExtent"in
c?(b=this.createDataInfoQuery(),a=await c.queryExtent(b,{timeout:q.constants.QUERY_EXTENT_TIMEOUT,signal:a}),this._set("serviceDataExtent",a.extent)):m?this._set("serviceDataExtent",m):l?(a=await N.projectGeometry(l,b.view.spatialReference,"portalItem"in c?c.portalItem:null,a),this._set("serviceDataExtent",a)):this._set("serviceDataExtent",null)};g.updateServiceDataCount=async function(a){const b=this.layerView.layer;if("queryFeatureCount"in b)if(a=await B.result(b.queryFeatureCount(this.createDataInfoQuery(),
{timeout:q.constants.QUERY_STATISTICS_TIMEOUT,signal:a})),!0===a.ok)this._set("serviceDataCount",a.value);else{if(t.isAbortError(a.error))throw a.error;({NO_SERVICE_DATA_COUNT:a}=q.constants);this._set("serviceDataCount",a)}else({NO_SERVICE_DATA_COUNT:a}=q.constants),this._set("serviceDataCount",a)};g.updateVertexLimitExceeded=async function(a,b){var c=this.vertexLimitInfo;if(e.isNone(c))this._set("vertexLimitExceeded",!1);else{var n=1<this.minimumNumberOfVerticesForGeometry;if(0>=c.primitivesPerFeature||
n){var {primitivesPerFeature:m,primitivesPerCoordinate:l,maximumTotalNumberOfPrimitives:r}=c;0!==m&&e.isSome(a)&&await a;c=this.serviceDataCount;var f=c!==q.constants.NO_SERVICE_DATA_COUNT;a=f?Math.ceil((r-c*m)/(l||1)):Math.ceil(r/(l||1));n&&(a=Math.min(a,5E6));if(f&&this.minimumNumberOfVerticesForGeometry*c>a)this._set("vertexLimitExceeded",!0);else if(this.supportsExceedsLimitQuery)if(b=await B.result(this.layerView.layer.queryFeatures(this.createVertexLimitExceededQuery(a),{timeout:q.constants.QUERY_STATISTICS_TIMEOUT,
signal:b})),!1===b.ok){if(t.isAbortError(b.error))throw b.error;this._set("vertexLimitExceeded",!1)}else(b=b.value.features[0])&&b.attributes?this._set("vertexLimitExceeded",!!b.attributes.exceedslimit):this._set("vertexLimitExceeded",!1);else this._set("vertexLimitExceeded",this.maxTotalSnapshotVertices>a)}else this._set("vertexLimitExceeded",!1)}};g.fetchServiceDataInfo=async function(){this.cancelFetchServiceDataInfo();let a=t.createAbortController();const b=a.signal;var c=this.updateServiceDataCount(b);
c=t.eachAlways([c,this.updateVertexLimitExceeded(c,b)]);const n=c.then(()=>this.updateServiceDataExtent(b)).catch(m=>{t.isAbortError(m)||w.error("#fetchServiceDataInfo()",m)}).then(()=>{n===this.fetchDataInfoPromise&&(this.fetchDataInfoAbortController=this.fetchDataInfoPromise=null);a=null});a&&(this.fetchDataInfoPromise=n);this.fetchDataInfoAbortController=a;return c.then(()=>{},()=>{})};g.cancelFetchServiceDataInfo=function(){const a=this.fetchDataInfoAbortController;a&&(this.fetchDataInfoPromise=
this.fetchDataInfoAbortController=null,a.abort())};y._createClass(p,[{key:"extent",set:function(a){if(a&&!a.spatialReference.equals(this.layerView.view.spatialReference))w.error("#extent\x3d","extent needs to be in the same spatial reference as the view");else{var b=this._get("extent");b===a||b&&a&&b.equals(a)||(a=a?a.clone():null,this._set("extent",a))}}},{key:"updating",get:function(){return!!(e.isSome(this.tileFetcher)&&this.tileFetcher.updating||null!=this.fetchDataInfoPromise||"tiles"===this.mode&&
this.layerView.view.featureTiles&&this.layerView.view.featureTiles.updating||this.watchUpdatingTracking&&this.watchUpdatingTracking.updating)}},{key:"updatingTotal",get:function(){return this.updating&&e.isSome(this.tileFetcher)?this.tileFetcher.updatingTotal:0}},{key:"updatingRemaining",get:function(){return this.updating&&e.isSome(this.tileFetcher)?this.tileFetcher.updatingRemaining:0}},{key:"expectedFeatureDiff",get:function(){return this.updating&&e.isSome(this.tileFetcher)?this.tileFetcher.expectedFeatureDiff:
0}},{key:"memoryForUnusedFeatures",get:function(){return e.isSome(this.tileFetcher)?this.tileFetcher.memoryForUnusedFeatures:0}},{key:"maximumNumberOfFeaturesExceeded",get:function(){return!(!e.isSome(this.tileFetcher)||!this.tileFetcher.maximumNumberOfFeaturesExceeded)}},{key:"maximumNumberOfFeatures",get:function(){return e.isSome(this.displayFeatureLimit)?this.displayFeatureLimit.maximumNumberOfFeatures:0},set:function(a){a!==this.maximumNumberOfFeatures&&(null==a?this._clearOverride("maximumNumberOfFeatures"):
this._override("maximumNumberOfFeatures",a))}},{key:"hasMaximumNumberOfFeaturesOverride",get:function(){return this._isOverridden("maximumNumberOfFeatures")}},{key:"mode",get:function(){if(this.serviceDataCount===q.constants.NO_SERVICE_DATA_COUNT||this.vertexLimitExceeded)return"tiles";const {layer:a,view:b}=this.layerView;var c=b&&b.featureTiles;c=c&&c.tilingScheme;return a&&a.minScale&&this.serviceDataExtent&&c&&(c=this.approximateExtentSizeAtScale(a.minScale,c),(this.serviceDataExtent.width/c+
this.serviceDataExtent.height/c)/2>q.constants.MAX_SNAPSHOT_MIN_SCALE_FACTOR)?"tiles":!this.maximumNumberOfFeatures||this.serviceDataCount<=this.maximumNumberOfFeatures?"snapshot":"tiles"}},{key:"maxTotalSnapshotVertices",get:function(){const a=this._get("maxTotalSnapshotVertices")||0,b="snapshot"===this.mode&&e.isSome(this.tileFetcher)&&this.tileFetcher.totalVertices||0;return Math.max(a,b)}},{key:"tileDescriptors",get:function(){return"snapshot"===this.mode?new A([{id:"dummy-tile-full-extent",lij:[0,
0,0]}]):this.layerView.view.featureTiles?this.layerView.view.featureTiles.tiles:new A}},{key:"test",get:function(){return{fetchDataInfoPromise:this.fetchDataInfoPromise,tileFetcher:this.tileFetcher}}},{key:"vertexLimitInfo",get:function(){if(e.isNone(this.displayFeatureLimit)||e.isNone(this.displayFeatureLimit.averageSymbolComplexity))return null;const {averageSymbolComplexity:a,maximumTotalNumberOfPrimitives:b}=this.displayFeatureLimit,{primitivesPerCoordinate:c,primitivesPerFeature:n}=a,m=this._get("vertexLimitInfo");
return e.isNone(m)||m.maximumTotalNumberOfPrimitives!==b||m.primitivesPerCoordinate!==c||m.primitivesPerFeature!==n?{primitivesPerCoordinate:c,primitivesPerFeature:n,maximumTotalNumberOfPrimitives:b}:m}},{key:"supportsExceedsLimitQuery",get:function(){const a=this.layerView.layer;return a.capabilities&&a.capabilities.operations&&a.capabilities.operations.supportsExceedsLimitStatistics}},{key:"minimumNumberOfVerticesForGeometry",get:function(){switch(this.layerView.layer.geometryType){case "point":return 1;
case "multipoint":return 1;case "polygon":return 4;case "polyline":return 2;case "multipatch":case "mesh":return 3;default:return 0}}},{key:"debug",get:function(){return{storedFeatures:e.isSome(this.tileFetcher)?this.tileFetcher.storedFeatures:0,totalFeatures:e.isSome(this.tileFetcher)?this.tileFetcher.totalFeatures:0,totalVertices:e.isSome(this.tileFetcher)?this.tileFetcher.totalVertices:0}}}]);return p}(H.EsriPromiseMixin(G));h.__decorate([k.property({readOnly:!0})],d.prototype,"type",void 0);h.__decorate([k.property({constructOnly:!0})],
d.prototype,"graphics",void 0);h.__decorate([k.property({constructOnly:!0})],d.prototype,"layerView",void 0);h.__decorate([k.property({constructOnly:!0})],d.prototype,"context",void 0);h.__decorate([k.property()],d.prototype,"extent",null);h.__decorate([k.property()],d.prototype,"updating",null);h.__decorate([k.property({readOnly:!0})],d.prototype,"watchUpdatingTracking",void 0);h.__decorate([k.property()],d.prototype,"updatingTotal",null);h.__decorate([k.property()],d.prototype,"updatingRemaining",
null);h.__decorate([k.property()],d.prototype,"expectedFeatureDiff",null);h.__decorate([k.property()],d.prototype,"memoryForUnusedFeatures",null);h.__decorate([k.property()],d.prototype,"maximumNumberOfFeaturesExceeded",null);h.__decorate([k.property({readOnly:!0})],d.prototype,"serviceDataExtent",void 0);h.__decorate([k.property({readOnly:!0})],d.prototype,"serviceDataCount",void 0);h.__decorate([k.property({readOnly:!0})],d.prototype,"vertexLimitExceeded",void 0);h.__decorate([k.property()],d.prototype,
"displayFeatureLimit",void 0);h.__decorate([k.property({type:Number})],d.prototype,"maximumNumberOfFeatures",null);h.__decorate([k.property({readOnly:!0})],d.prototype,"mode",null);h.__decorate([k.property({readOnly:!0})],d.prototype,"maxTotalSnapshotVertices",null);h.__decorate([k.property({readOnly:!0,dependsOn:["mode"]})],d.prototype,"tileDescriptors",null);h.__decorate([k.property()],d.prototype,"tileFetcher",void 0);h.__decorate([k.property()],d.prototype,"fetchDataInfoPromise",void 0);h.__decorate([k.property({readOnly:!0})],
d.prototype,"vertexLimitInfo",null);d=q=h.__decorate([E.subclass("esri.layers.graphics.controllers.FeatureTileController3D")],d);(function(u){(function(p){p.NO_SERVICE_DATA_COUNT=Infinity;p.MAX_SNAPSHOT_MIN_SCALE_FACTOR=5;p.reset=function(){p.MAX_FEATURE_COUNT_FOR_EXTENT=1E4;p.QUERY_STATISTICS_TIMEOUT=12E3;p.QUERY_EXTENT_TIMEOUT=1E4}})(u.constants||(u.constants={}))})(d||(d={}));d.constants.reset();return d});