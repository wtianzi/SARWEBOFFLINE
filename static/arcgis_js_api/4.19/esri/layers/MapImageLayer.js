// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
require({cache:{"esri/geometry/support/scaleUtils":function(){define(["exports","../../core/unitUtils"],function(t,p){function b(d,m){m=p.getMetersPerUnitForSR(m);return d/(m*p.inchesPerMeter*96)}t.getExtentForScale=function(d,m){const l=d.extent;d=d.width;m=b(m,l.spatialReference);return l.clone().expand(m*d/l.width)};t.getResolutionForScale=b;t.getScale=function(d,m){m=m||d.extent;d=d.width;const l=p.getMetersPerUnitForSR(m&&m.spatialReference);return m&&d?m.width/d*l*p.inchesPerMeter*96:0};t.getScaleForResolution=
function(d,m){m=p.getMetersPerUnitForSR(m);return d*m*p.inchesPerMeter*96};Object.defineProperty(t,"__esModule",{value:!0})})},"esri/layers/mixins/ArcGISMapService":function(){define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/promiseUtils ../../geometry/SpatialReference ../../geometry/Extent ../../request ../../core/Version ../support/commonProperties".split(" "),
function(t,p,b,d,m,l,e,L,q,T,ja,U,ma,O,Y,aa,fa,V,S){t.ArcGISMapService=D=>{D=function(h){function z(){var k=h.apply(this,arguments)||this;k.capabilities=void 0;k.copyright=null;k.fullExtent=null;k.legendEnabled=!0;k.spatialReference=null;k.version=null;return k}p._inheritsLoose(z,h);var M=z.prototype;M.readCapabilities=function(k,u){var y=u.capabilities&&u.capabilities.split(",").map(ba=>ba.toLowerCase().trim());if(!y)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,
supportsTileMap:!1},exportMap:null,exportTiles:null};var B=this.type;k=-1!==y.indexOf("query");const r=-1!==y.indexOf("map"),w=!!u.exportTilesAllowed;y=-1!==y.indexOf("tilemap");const x="tile"!==B&&!!u.supportsDynamicLayers,P="tile"!==B&&(!u.tileInfo||x),W="tile"!==B&&(!u.tileInfo||x);B="tile"!==B;const Q=u.cimVersion?V.Version.parse(u.cimVersion).since(1,4):!1;return{operations:{supportsQuery:k,supportsExportMap:r,supportsExportTiles:w,supportsTileMap:y},exportMap:r?{supportsArcadeExpressionForLabeling:Q,
supportsSublayersChanges:B,supportsDynamicLayers:x,supportsSublayerVisibility:P,supportsSublayerDefinitionExpression:W}:null,exportTiles:w?{maxExportTilesCount:+u.maxExportTilesCount}:null}};M.readVersion=function(k,u){(k=u.currentVersion)||(k=u.hasOwnProperty("capabilities")||u.hasOwnProperty("tables")?10:u.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3);return k};M.fetchSublayerInfo=async function(k,u){await this.fetchAllLayersAndTables(u);return this._allLayersAndTablesMap.get(k)};M.fetchAllLayersAndTables=
async function(k){await this.load(k);this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=fa(ja.urlToObject(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters}}).then(y=>{this._allLayersAndTablesMap=new Map;for(const B of y.data.layers)this._allLayersAndTablesMap.set(B.id,B);return{result:y.data}},y=>({error:y})));const u=await this._allLayersAndTablesPromise;O.throwIfAborted(k);if("result"in u)return u.result;throw u.error;};return z}(D);b.__decorate([e.property({readOnly:!0})],
D.prototype,"capabilities",void 0);b.__decorate([q.reader("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],D.prototype,"readCapabilities",null);b.__decorate([e.property({json:{read:{source:"copyrightText"}}})],D.prototype,"copyright",void 0);b.__decorate([e.property({type:aa})],D.prototype,"fullExtent",void 0);b.__decorate([e.property(S.id)],D.prototype,"id",void 0);b.__decorate([e.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},
read:{source:"showLegend"},write:{target:"showLegend"}}})],D.prototype,"legendEnabled",void 0);b.__decorate([e.property(S.popupEnabled)],D.prototype,"popupEnabled",void 0);b.__decorate([e.property({type:Y})],D.prototype,"spatialReference",void 0);b.__decorate([e.property()],D.prototype,"version",void 0);b.__decorate([q.reader("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],D.prototype,"readVersion",null);return D=b.__decorate([T.subclass("esri.layers.mixins.ArcGISMapService")],
D)};Object.defineProperty(t,"__esModule",{value:!0})})},"esri/core/Version":function(){define(["exports","./Error"],function(t,p){let b=function(){function d(l,e,L=""){this.major=l;this.minor=e;this._context=L}var m=d.prototype;m.lessThan=function(l,e){return this.major<l||l===this.major&&this.minor<e};m.since=function(l,e){return!this.lessThan(l,e)};m.validate=function(l){if(this.major!==l.major)throw new p((this._context&&this._context+":")+"unsupported-version",`Required major ${this._context&&
this._context+" "}version is '${this.major}', but got '\${version.major}.\${version.minor}'`,{version:l});};m.clone=function(){return new d(this.major,this.minor,this._context)};d.parse=function(l,e=""){const [L,q]=l.split(".");var T=/^\s*\d+\s*$/;if(!L||!L.match||!L.match(T))throw new p((e&&e+":")+"invalid-version","Expected major version to be a number, but got '${version}'",{version:l});if(!q||!q.match||!q.match(T))throw new p((e&&e+":")+"invalid-version","Expected minor version to be a number, but got '${version}'",
{version:l});l=parseInt(L,10);T=parseInt(q,10);return new d(l,T,e)};return d}();t.Version=b;Object.defineProperty(t,"__esModule",{value:!0})})},"esri/layers/support/Sublayer":function(){define("require ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/lang ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/utils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/cast ../../core/jsonMap ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/Error ../../core/urlUtils ../../core/uuid ../../core/accessorSupport/PropertyOrigin ../../portal/support/resourceExtension ../../geometry/Extent ../../geometry ../../core/Collection ./fieldUtils ../../core/Identifiable ../../PopupTemplate ../../request ../../core/Loadable ../../symbols ../../renderers/Renderer ../../renderers/ClassBreaksRenderer ../../renderers/UniqueValueRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/SimpleRenderer ../../renderers/support/types ../../renderers/support/jsonUtils ../../core/MultiOriginJSONSupport ./Field ./FieldsIndex ./LabelClass ./FeatureType ./source/MapLayerSource ./source/DataLayerSource ../../support/popupUtils ../../tasks/support/Query ../../core/HandleOwner".split(" "),
function(t,p,b,d,m,l,e,L,q,T,ja,U,ma,O,Y,aa,fa,V,S,D,h,z,M,k,u,y,B,r,w,x,P,W,Q,ba,ha,ca,na,oa,H,ka,ia,Z,f,F,J,A,G){function X(C){return C&&"esriSMS"===C.type}function N(C,R,n){var a;return{ignoreOrigin:!0,enabled:n?"map-image"===(null==(a=n.layer)?void 0:a.type)&&(n.writeSublayerStructure||this.originIdOf(R)>=V.nameToId(n.origin)):!1}}function E(C,R,n){var a;return{enabled:n?"tile"===(null==(a=n.layer)?void 0:a.type)&&this._isOverridden(R):!1}}function K(C,R,n){return{ignoreOrigin:!0,enabled:n&&n.writeSublayerStructure||
!1}}function da(C,R,n){return{ignoreOrigin:!0,enabled:n?n.writeSublayerStructure||this.originIdOf(R)>=V.nameToId(n.origin):!1}}var qa;const ra=l.getLogger("esri.layers.support.Sublayer");let sa=0;const la=new Set;la.add("layer");la.add("parent");la.add("loaded");la.add("loadStatus");la.add("loadError");la.add("loadWarnings");d=qa=function(C){function R(a){a=C.call(this,a)||this;a.capabilities=void 0;a.fields=null;a.fullExtent=null;a.globalIdField=null;a.legendEnabled=!0;a.objectIdField=null;a.popupEnabled=
!0;a.popupTemplate=null;a.sourceJSON=null;a.title=null;a.typeIdField=null;a.types=null;return a}p._inheritsLoose(R,C);var n=R.prototype;n.load=async function(a){this.addResolvingPromise((async()=>{var c;if(!this.layer&&!this.url)throw new Y("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let g=null;if(!this.layer||2<this.originIdOf("url")||"data-layer"===(null==(c=this.source)?void 0:c.type))g=(await y(this.url,{responseType:"json",query:{f:"json"},
...a})).data;else{var v;c=this.id;"map-layer"===(null==(v=this.source)?void 0:v.type)&&(c=this.source.mapLayerId);g=await this.layer.fetchSublayerInfo(c,a)}g&&(this.sourceJSON=g,this.read({layerDefinition:g},{origin:"service"}))})());return this};n.readCapabilities=function(a,c){c=c.layerDefinition||c;a=(a=c.capabilities||a)?a.toLowerCase().split(",").map(g=>g.trim()):[];return{exportMap:{supportsModification:!!c.canModifyLayer},operations:{supportsQuery:-1!==a.indexOf("query")}}};n.readGlobalIdFieldFromService=
function(a,c){c=c.layerDefinition||c;if(c.globalIdField)return c.globalIdField;if(c.fields)for(const g of c.fields)if("esriFieldTypeGlobalID"===g.type)return g.name};n.writeLabelingInfo=function(a,c,g,v){a&&a.length&&(c.layerDefinition={drawingInfo:{labelingInfo:a.map(I=>I.write({},v))}})};n.readMinScale=function(a,c){return c.minScale||c.layerDefinition&&c.layerDefinition.minScale||0};n.readMaxScale=function(a,c){return c.maxScale||c.layerDefinition&&c.layerDefinition.maxScale||0};n.readObjectIdFieldFromService=
function(a,c){c=c.layerDefinition||c;if(c.objectIdField)return c.objectIdField;if(c.fields)for(const g of c.fields)if("esriFieldTypeOID"===g.type)return g.name};n.readOpacity=function(a,c){a=c.layerDefinition;return 1-.01*(null!=a.transparency?a.transparency:a.drawingInfo.transparency)};n.writeOpacity=function(a,c,g,v){c.layerDefinition={drawingInfo:{transparency:100-100*a}}};n.writeParent=function(a,c){c.parentLayerId=this.parent&&this.parent!==this.layer?e.ensureInteger(this.parent.id):-1};n.castSublayers=
function(a){return e.ensureType(z.ofType(qa),a)};n.writeSublayers=function(a,c,g){this.get("sublayers.length")&&(c[g]=this.sublayers.map(v=>v.id).toArray().reverse())};n.readTypeIdField=function(a,c){c=c.layerDefinition||c;if(a=c.typeIdField)if(c=M.getField(c.fields,a))return c.name;return null};n.writeVisible=function(a,c,g,v){c[g]=this.getAtOrigin("defaultVisibility","service")||a};n.clone=function(){const {store:a}=L.getProperties(this),c=new qa;L.getProperties(c).store=a.clone(la);this.commitProperty("url");
c._lastParsedUrl=this._lastParsedUrl;return c};n.createPopupTemplate=function(a){return J.createPopupTemplate(this,a)};n.createQuery=function(){return new A({returnGeometry:!0,where:this.definitionExpression||"1\x3d1"})};n.createFeatureLayer=async function(){var a,c;if(this.hasOwnProperty("sublayers"))return null;const g=null==(a=this.layer)?void 0:a.parsedUrl;a=new (await new Promise(function(v,I){t(["../FeatureLayer"],function(ea){v(Object.freeze({__proto__:null,"default":ea}))},I)})).default({url:g.path});
g&&this.source&&("map-layer"===this.source.type?a.layerId=this.source.mapLayerId:a.dynamicDataSource=this.source);null!=this.layer.refreshInterval&&(a.refreshInterval=this.layer.refreshInterval);this.definitionExpression&&(a.definitionExpression=this.definitionExpression);2<this.originIdOf("labelingInfo")&&(a.labelingInfo=m.clone(this.labelingInfo));0<this.originIdOf("labelsVisible")&&(a.labelsVisible=this.labelsVisible);0<this.originIdOf("legendEnabled")&&(a.legendEnabled=this.legendEnabled);0<this.originIdOf("visible")&&
(a.visible=this.visible);0<this.originIdOf("minScale")&&(a.minScale=this.minScale);0<this.originIdOf("maxScale")&&(a.maxScale=this.maxScale);0<this.originIdOf("opacity")&&(a.opacity=this.opacity);0<this.originIdOf("popupTemplate")&&(a.popupTemplate=m.clone(this.popupTemplate));2<this.originIdOf("renderer")&&(a.renderer=m.clone(this.renderer));"data-layer"===(null==(c=this.source)?void 0:c.type)&&(a.dynamicDataSource=this.source.clone());0<this.originIdOf("title")&&(a.title=this.title);"map-image"===
this.layer.type&&0<this.layer.originIdOf("customParameters")&&(a.customParameters=this.layer.customParameters);"tile"===this.layer.type&&0<this.layer.originIdOf("customParameters")&&(a.customParameters=this.layer.customParameters);return a};n.getFeatureType=function(a){const {typeIdField:c,types:g}=this;if(!c||!a)return null;const v=a.attributes?a.attributes[c]:void 0;if(null==v)return null;let I=null;g.some(ea=>{const {id:pa}=ea;if(null==pa)return!1;pa.toString()===v.toString()&&(I=ea);return!!I});
return I};n.getFieldDomain=function(a,c){return(c=this.getFeatureType(c&&c.feature))&&(c=c.domains&&c.domains[a])&&"inherited"!==c.type?c:this._getLayerDomain(a)};n.queryFeatures=function(a=this.createQuery(),c){return this.load().then(()=>{if(!this.get("capabilities.operations.supportsQuery"))throw new Y("Sublayer.queryFeatures","this layer doesn't support queries.");return Promise.all([new Promise(function(g,v){t(["../../rest/query/operations/query"],g,v)}),new Promise(function(g,v){t(["../../tasks/support/FeatureSet"],
function(I){g(Object.freeze({__proto__:null,"default":I}))},v)})])}).then(([{executeQuery:g},{default:v}])=>g(this.url,A.from(a),this.layer?this.layer.spatialReference:null,{...c,query:{...this.layer.customParameters}}).then(I=>v.fromJSON(I.data))).then(g=>{g&&g.features&&g.features.forEach(v=>{v.sourceLayer=this});return g})};n.toExportImageJSON=function(){var a;const c={id:this.id,source:(null==(a=this.source)?void 0:a.toJSON())||{mapLayerId:this.id,type:"mapLayer"}};this.definitionExpression&&
(c.definitionExpression=this.definitionExpression);const g=["renderer","labelingInfo","opacity","labelsVisible"].reduce((v,I)=>{v[I]=this.originIdOf(I);return v},{});Object.keys(g).some(v=>2<g[v])&&(a=c.drawingInfo={},2<g.renderer&&(a.renderer=this.renderer?this.renderer.toJSON():null),2<g.labelsVisible&&(a.showLabels=this.labelsVisible),this.labelsVisible&&2<g.labelingInfo&&(a.labelingInfo=this.labelingInfo?this.labelingInfo.map(v=>v.write({},{origin:"service",layer:this.layer})):null,a.showLabels=
!0),2<g.opacity&&(a.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(a.renderer));return c};n._assignDefaultSymbolColors=function(a){this._forEachSimpleMarkerSymbols(a,c=>{c.color||"esriSMSX"!==c.style&&"esriSMSCross"!==c.style||(c.color=c.outline&&c.outline.color?c.outline.color:[0,0,0,0])})};n._forEachSimpleMarkerSymbols=function(a,c){if(a){const g="uniqueValueInfos"in a?a.uniqueValueInfos:"classBreakInfos"in a?a.classBreakInfos:[];for(const v of g)X(v.symbol)&&c(v.symbol);"symbol"in
a&&X(a.symbol)&&c(a.symbol);"defaultSymbol"in a&&X(a.defaultSymbol)&&c(a.defaultSymbol)}};n._setAndNotifyLayer=function(a,c){const g=this.layer,v=this._get(a);let I,ea;switch(a){case "definitionExpression":I="supportsSublayerDefinitionExpression";case "minScale":case "maxScale":case "visible":I="supportsSublayerVisibility";break;case "labelingInfo":case "labelsVisible":case "opacity":case "renderer":case "source":I="supportsDynamicLayers",ea="supportsModification"}const pa=L.getProperties(this).getDefaultOrigin();
if("service"!==pa){if(I&&!1===this.get(`layer.capabilities.exportMap.${I}`)){this._logLockedError(a,`capability not available 'layer.capabilities.exportMap.${I}'`);return}if(ea&&!1===this.get(`capabilities.exportMap.${ea}`)){this._logLockedError(a,`capability not available 'capabilities.exportMap.${ea}'`);return}}"source"===a&&"not-loaded"!==this.loadStatus?this._logLockedError(a,"'source' can't be changed after calling sublayer.load()"):(this._set(a,c),"service"!==pa&&v!==c&&g&&g.emit&&g.emit("sublayer-update",
{propertyName:a,target:this}))};n._handleSublayersChange=function(a,c){c&&(c.forEach(g=>{g.parent=null;g.layer=null}),this.handles.removeAll());a&&(a.forEach(g=>{g.parent=this;g.layer=this.layer}),this.handles.add([a.on("after-add",({item:g})=>{g.parent=this;g.layer=this.layer}),a.on("after-remove",({item:g})=>{g.parent=null;g.layer=null}),a.on("before-changes",g=>{const v=this.get("layer.capabilities.exportMap.supportsSublayersChanges");null==v||v||(ra.error(new Y("sublayer:sublayers-non-modifiable",
"Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),g.preventDefault())})]))};n._logLockedError=function(a,c){ra.error(new Y("sublayer:locked",`Property '${a}' can't be changed on Sublayer from the layer '${this.layer.id}'`,{reason:c,sublayer:this,layer:this.layer}))};n._getLayerDomain=function(a){return(a=this.fieldsIndex.get(a))?a.domain:null};p._createClass(R,[{key:"definitionExpression",set:function(a){this._setAndNotifyLayer("definitionExpression",
a)}},{key:"fieldsIndex",get:function(){return new ka(this.fields||[])}},{key:"id",get:function(){const a=this._get("id");return null==a?sa++:a},set:function(a){this._get("id")!==a&&(!1===this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"):this._set("id",a))}},{key:"labelingInfo",set:function(a){this._setAndNotifyLayer("labelingInfo",a)}},{key:"labelsVisible",set:function(a){this._setAndNotifyLayer("labelsVisible",
a)}},{key:"layer",set:function(a){this._set("layer",a);this.sublayers&&this.sublayers.forEach(c=>c.layer=a)}},{key:"listMode",set:function(a){this._set("listMode",a)}},{key:"minScale",set:function(a){this._setAndNotifyLayer("minScale",a)}},{key:"maxScale",set:function(a){this._setAndNotifyLayer("maxScale",a)}},{key:"opacity",set:function(a){this._setAndNotifyLayer("opacity",a)}},{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},{key:"renderer",set:function(a){if(a)for(const c of a.getSymbols())if(r.isSymbol3D(c)){ra.warn("Sublayer renderer should use 2D symbols");
break}this._setAndNotifyLayer("renderer",a)}},{key:"source",get:function(){return this._get("source")||new f.MapLayerSource({mapLayerId:this.id})},set:function(a){this._setAndNotifyLayer("source",a)}},{key:"sublayers",set:function(a){this._handleSublayersChange(a,this._get("sublayers"));this._set("sublayers",a)}},{key:"url",get:function(){var a,c;const g=null!=(a=null==(c=this.layer)?void 0:c.parsedUrl)?a:this._lastParsedUrl;a=this.source;if(!g)return null;this._lastParsedUrl=g;if("map-layer"===(null==
a?void 0:a.type))return`${g.path}/${a.mapLayerId}`;a={layer:JSON.stringify({source:this.source})};return`${g.path}/dynamicLayer?${aa.objectToQuery(a)}`},set:function(a){a?this._override("url",a):this._clearOverride("url")}},{key:"visible",set:function(a){this._setAndNotifyLayer("visible",a)}}]);return R}(G.HandleOwnerMixin(oa.MultiOriginJSONMixin(k.IdentifiableMixin(B))));d.test={isMapImageLayerOverridePolicy:C=>C===K||C===N,isTileImageLayerOverridePolicy:C=>C===E};b.__decorate([q.property({readOnly:!0})],
d.prototype,"capabilities",void 0);b.__decorate([U.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],d.prototype,"readCapabilities",null);b.__decorate([q.property({type:String,value:null,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression",overridePolicy:N}}})],d.prototype,"definitionExpression",null);b.__decorate([q.property({type:[H],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],
d.prototype,"fields",void 0);b.__decorate([q.property({readOnly:!0})],d.prototype,"fieldsIndex",null);b.__decorate([q.property({type:D,json:{read:{source:"layerDefinition.extent"}}})],d.prototype,"fullExtent",void 0);b.__decorate([q.property({type:String})],d.prototype,"globalIdField",void 0);b.__decorate([U.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],d.prototype,"readGlobalIdFieldFromService",null);b.__decorate([q.property({type:e.Integer,json:{write:{ignoreOrigin:!0}}})],
d.prototype,"id",null);b.__decorate([q.property({value:null,type:[ia],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:K}}})],d.prototype,"labelingInfo",null);b.__decorate([O.writer("labelingInfo")],d.prototype,"writeLabelingInfo",null);b.__decorate([q.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:K}}})],
d.prototype,"labelsVisible",null);b.__decorate([q.property({value:null})],d.prototype,"layer",null);b.__decorate([q.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:da}}})],d.prototype,"legendEnabled",void 0);b.__decorate([q.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],d.prototype,"listMode",null);b.__decorate([q.property({type:Number,
value:0,json:{write:{overridePolicy:K}}})],d.prototype,"minScale",null);b.__decorate([U.reader("minScale",["minScale","layerDefinition.minScale"])],d.prototype,"readMinScale",null);b.__decorate([q.property({type:Number,value:0,json:{write:{overridePolicy:K}}})],d.prototype,"maxScale",null);b.__decorate([U.reader("maxScale",["maxScale","layerDefinition.maxScale"])],d.prototype,"readMaxScale",null);b.__decorate([q.property({type:String})],d.prototype,"objectIdField",void 0);b.__decorate([U.reader("service",
"objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],d.prototype,"readObjectIdFieldFromService",null);b.__decorate([q.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:K}}})],d.prototype,"opacity",null);b.__decorate([U.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],d.prototype,"readOpacity",null);b.__decorate([O.writer("opacity")],d.prototype,"writeOpacity",null);b.__decorate([q.property({json:{type:e.Integer,
write:{target:"parentLayerId",allowNull:!0,overridePolicy:K}}})],d.prototype,"parent",void 0);b.__decorate([O.writer("parent")],d.prototype,"writeParent",null);b.__decorate([q.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader(C,R){return!R.disablePopup}},write:{target:"disablePopup",overridePolicy:da,writer(C,R,n){R[n]=!C}}}})],d.prototype,"popupEnabled",void 0);b.__decorate([q.property({type:u,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:da}}})],
d.prototype,"popupTemplate",void 0);b.__decorate([q.property({readOnly:!0})],d.prototype,"defaultPopupTemplate",null);b.__decorate([q.property({types:ca.rendererTypes,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:K},origins:{"web-scene":{types:ca.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:K}}}}})],d.prototype,"renderer",null);b.__decorate([q.property({types:{key:"type",base:null,typeMap:{"data-layer":F.DataLayerSource,
"map-layer":f.MapLayerSource}},cast(C){if(C){if("mapLayerId"in C)return e.ensureClass(f.MapLayerSource,C);if("dataSource"in C)return e.ensureClass(F.DataLayerSource,C)}return C},json:{name:"layerDefinition.source",write:{overridePolicy:K}}})],d.prototype,"source",null);b.__decorate([q.property()],d.prototype,"sourceJSON",void 0);b.__decorate([q.property({value:null,json:{type:[e.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:K}}})],d.prototype,"sublayers",null);b.__decorate([T.cast("sublayers")],
d.prototype,"castSublayers",null);b.__decorate([O.writer("sublayers")],d.prototype,"writeSublayers",null);b.__decorate([q.property({type:String,json:{read:{source:"name"},write:{target:"name",allowNull:!0,overridePolicy:da}}})],d.prototype,"title",void 0);b.__decorate([q.property({type:String})],d.prototype,"typeIdField",void 0);b.__decorate([U.reader("typeIdField",["layerDefinition.typeIdField"])],d.prototype,"readTypeIdField",null);b.__decorate([q.property({type:[Z],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],
d.prototype,"types",void 0);b.__decorate([q.property({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:E}}})],d.prototype,"url",null);b.__decorate([q.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:K}}})],d.prototype,"visible",null);b.__decorate([O.writer("visible")],d.prototype,"writeVisible",null);return d=qa=b.__decorate([ma.subclass("esri.layers.support.Sublayer")],d)})},"esri/layers/support/sublayerUtils":function(){define(["exports"],
function(t){function p(b,d){if(!b||!b.length)return!0;d=d.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).map(e=>e.id).toArray();if(b.length>d.length)return!1;let m=0;const l=d.length;for(const {id:e}of b){for(;m<l&&d[m]!==e;)m++;if(m>=l)return!1}return!0}t.isExportDynamic=function(b,d,m){return b.some(l=>{const e=l.source;return!(!e||"map-layer"===e.type&&e.mapLayerId===l.id&&(!e.gdbVersion||e.gdbVersion===m.gdbVersion))||2<l.originIdOf("renderer")||2<l.originIdOf("labelingInfo")||
2<l.originIdOf("opacity")||2<l.originIdOf("labelsVisible")})?!0:!p(b,d)};t.isSublayerOverhaul=function(b){return!!b&&b.some(d=>null!=d.minScale||d.layerDefinition&&null!=d.layerDefinition.minScale)};t.shouldWriteSublayerStructure=function(b,d,m){return d.flatten(({sublayers:l})=>l).length!==b.length||b.some(l=>l.originIdOf("minScale")>m||l.originIdOf("maxScale")>m||l.originIdOf("renderer")>m||l.originIdOf("labelingInfo")>m||l.originIdOf("opacity")>m||l.originIdOf("labelsVisible")>m||l.originIdOf("source")>
m)?!0:!p(b,d)};Object.defineProperty(t,"__esModule",{value:!0})})},"esri/layers/mixins/SublayersOwner":function(){define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/utils ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/Error ../../core/urlUtils ../../core/uuid ../../core/accessorSupport/PropertyOrigin ../../portal/support/resourceExtension ../../core/Collection ../../core/CollectionFlattener ../support/Sublayer ../support/sublayerUtils".split(" "),
function(t,p,b,d,m,l,e,L,q,T,ja,U,ma,O,Y,aa,fa,V,S){function D(k,u){const y=[],B={};if(!k)return y;k.forEach(r=>{const w=new V;w.read(r,u);B[w.id]=w;null!=r.parentLayerId&&-1!==r.parentLayerId?(r=B[r.parentLayerId],r.sublayers||(r.sublayers=[]),r.sublayers.unshift(w)):y.unshift(w)});return y}function h(k,u){k&&k.forEach(y=>{u(y);y.sublayers&&y.sublayers.length&&h(y.sublayers,u)})}const z=m.getLogger("esri.layers.TileLayer"),M=aa.ofType(V);t.SublayersOwner=k=>{k=function(u){function y(...r){var w=
u.call(this,...r)||this;w.allSublayers=new fa({root:p._assertThisInitialized(w),rootCollectionNames:["sublayers"],getChildrenFunction(x){return x.sublayers}});w.sublayersSourceJSON={[2]:{},[3]:{},[4]:{},[5]:{}};w.watch("sublayers",(x,P)=>w._handleSublayersChange(x,P),!0);return w}p._inheritsLoose(y,u);var B=y.prototype;B.readSublayers=function(r,w){if(w&&r){var {sublayersSourceJSON:x}=this,P=O.nameToId(w.origin);if(!(2>P||(x[P]={context:w,visibleLayers:r.visibleLayers||x[P].visibleLayers,layers:r.layers||
x[P].layers},2<P))){this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);var {sublayers:W,origin:Q}=this.createSublayersForOrigin("web-document");r=e.getProperties(this);r.setDefaultOrigin(Q);this._set("sublayers",new M(W));r.setDefaultOrigin("user")}}};B.findSublayerById=function(r){return this.allSublayers.find(w=>w.id===r)};B.createServiceSublayers=function(){return this.createSublayersForOrigin("service").sublayers};B.createSublayersForOrigin=function(r){const w="web-document"===
r?O.nameToId("web-map"):O.nameToId(r);let x=2;r=this.sublayersSourceJSON[2].layers;let P=this.sublayersSourceJSON[2].context,W=null;var Q=[3,4,5].filter(H=>H<=w);for(var ba of Q)Q=this.sublayersSourceJSON[ba],S.isSublayerOverhaul(Q.layers)&&(x=ba,r=Q.layers,P=Q.context,Q.visibleLayers&&(W={visibleLayers:Q.visibleLayers,context:Q.context}));ba=[3,4,5].filter(H=>H>x&&H<=w);let ha=null;for(var ca of ba){const {layers:H,visibleLayers:ka,context:ia}=this.sublayersSourceJSON[ca];H&&(ha={layers:H,context:ia});
ka&&(W={visibleLayers:ka,context:ia})}ca=D(r,P);const na=new Map,oa=new Set;if(ha)for(const H of ha.layers)na.set(H.id,H);if(W)for(const H of W.visibleLayers)oa.add(H);h(ca,H=>{ha&&H.read(na.get(H.id),ha.context);W&&H.read({defaultVisibility:oa.has(H.id)},W.context)});return{origin:O.idToName(x),sublayers:new M({items:ca})}};B.read=function(r,w){u.prototype.read.call(this,r,w);this.readSublayers(r,w)};B._handleSublayersChange=function(r,w){w&&(w.forEach(x=>{x.parent=null;x.layer=null}),this.handles.remove("sublayers-owner"));
r&&(r.forEach(x=>{x.parent=this;x.layer=this}),this.handles.add([r.on("after-add",({item:x})=>{x.parent=this;x.layer=this}),r.on("after-remove",({item:x})=>{x.parent=null;x.layer=null})],"sublayers-owner"),"tile"===this.type&&this.handles.add(r.on("before-changes",x=>{z.error(new ja("tilelayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:this}));x.preventDefault()}),"sublayers-owner"))};return y}(k);b.__decorate([L.property({readOnly:!0})],
k.prototype,"allSublayers",void 0);b.__decorate([L.property({readOnly:!0,type:aa.ofType(V)})],k.prototype,"serviceSublayers",void 0);b.__decorate([L.property({value:null,type:M,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],k.prototype,"sublayers",void 0);b.__decorate([L.property({readOnly:!0})],k.prototype,"sublayersSourceJSON",void 0);return k=b.__decorate([T.subclass("esri.layers.mixins.SublayersOwner")],k)};t.forEachSublayer=h;Object.defineProperty(t,"__esModule",{value:!0})})},"esri/layers/support/ExportImageParameters":function(){define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/Accessor ./commonProperties ../../core/HandleOwner ./sublayerUtils".split(" "),
function(t,p,b,d,m,l,e,L,q,T,ja,U,ma,O,Y,aa){const fa={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};t.ExportImageParameters=function(V){function S(h){h=V.call(this,h)||this;h.scale=0;return h}p._inheritsLoose(S,V);var D=S.prototype;D.destroy=function(){this.layer=null};D.toJSON=function(){var h=
this.layer;h={dpi:h.dpi,format:h.imageFormat,transparent:h.imageTransparency,gdbVersion:h.gdbVersion||null};this.hasDynamicLayers&&this.dynamicLayers?h.dynamicLayers=this.dynamicLayers:h={...h,layers:this.layers,layerDefs:this.layerDefs};return h};p._createClass(S,[{key:"dynamicLayers",get:function(){if(!this.hasDynamicLayers)return null;const h=this.visibleSublayers.map(z=>z.toExportImageJSON());return h.length?JSON.stringify(h):null}},{key:"hasDynamicLayers",get:function(){return this.layer&&aa.isExportDynamic(this.visibleSublayers,
this.layer.serviceSublayers,this.layer)}},{key:"layer",set:function(h){this._get("layer")!==h&&(this._set("layer",h),this.handles.remove("layer"),h&&this.handles.add([h.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),h.on("sublayer-update",z=>this.notifyChange(fa[z.propertyName]))],"layer"))}},{key:"layers",get:function(){const h=this.visibleSublayers;return h?h.length?"show:"+h.map(z=>z.id).join(","):"show:-1":null}},{key:"layerDefs",get:function(){const h=this.visibleSublayers.filter(z=>
null!=z.definitionExpression);return h.length?JSON.stringify(h.reduce((z,M)=>{z[M.id]=M.definitionExpression;return z},{})):null}},{key:"version",get:function(){this.commitProperty("layers");this.commitProperty("layerDefs");this.commitProperty("dynamicLayers");this.commitProperty("timeExtent");const h=this.layer;h&&(h.commitProperty("dpi"),h.commitProperty("imageFormat"),h.commitProperty("imageTransparency"),h.commitProperty("gdbVersion"));return(this._get("version")||0)+1}},{key:"visibleSublayers",
get:function(){const h=[];if(!this.layer)return h;var z=this.layer.sublayers;const M=k=>{const u=this.scale,y=0===k.minScale||u<=k.minScale,B=0===k.maxScale||u>=k.maxScale;k.visible&&(0===u||y&&B)&&(k.sublayers?k.sublayers.forEach(M):h.unshift(k))};z&&z.forEach(M);z=this._get("visibleSublayers");return!z||z.length!==h.length||z.some((k,u)=>h[u]!==k)?h:z}}]);return S}(Y.HandleOwnerMixin(ma));b.__decorate([e.property({readOnly:!0})],t.ExportImageParameters.prototype,"dynamicLayers",null);b.__decorate([e.property({readOnly:!0})],
t.ExportImageParameters.prototype,"hasDynamicLayers",null);b.__decorate([e.property()],t.ExportImageParameters.prototype,"layer",null);b.__decorate([e.property({readOnly:!0})],t.ExportImageParameters.prototype,"layers",null);b.__decorate([e.property({readOnly:!0})],t.ExportImageParameters.prototype,"layerDefs",null);b.__decorate([e.property({type:Number})],t.ExportImageParameters.prototype,"scale",void 0);b.__decorate([e.property(O.combinedViewLayerTimeExtentProperty)],t.ExportImageParameters.prototype,
"timeExtent",void 0);b.__decorate([e.property({readOnly:!0})],t.ExportImageParameters.prototype,"version",null);b.__decorate([e.property({readOnly:!0})],t.ExportImageParameters.prototype,"visibleSublayers",null);t.ExportImageParameters=b.__decorate([q.subclass("esri.layers.mixins.ExportImageParameters")],t.ExportImageParameters);Object.defineProperty(t,"__esModule",{value:!0})})},"*noref":1}});
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/has ../core/maybe ../core/Logger ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/property ../core/jsonMap ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../core/Error ../core/urlUtils ../core/uuid ../core/accessorSupport/PropertyOrigin ../portal/support/resourceExtension ../core/promiseUtils ../geometry/Extent ../request ../core/loadAll ./Layer ../TimeExtent ../core/MultiOriginJSONSupport ./support/commonProperties ./mixins/OperationalLayer ./mixins/ArcGISService ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ../core/HandleOwner ../geometry/support/scaleUtils ./mixins/ArcGISMapService ./support/Sublayer ./support/sublayerUtils ./mixins/SublayersOwner ./support/ExportImageParameters".split(" "),function(t,
p,b,d,m,l,e,L,q,T,ja,U,ma,O,Y,aa,fa,V,S,D,h,z,M,k,u,y,B,r,w,x,P,W,Q,ba,ha,ca,na,oa,H){b=function(ka){function ia(...f){f=ka.call(this,...f)||this;f.alwaysRefetch=!1;f.dpi=96;f.gdbVersion=null;f.imageFormat="png24";f.imageMaxHeight=2048;f.imageMaxWidth=2048;f.imageTransparency=!0;f.isReference=null;f.labelsVisible=!1;f.operationalLayerType="ArcGISMapServiceLayer";f.sourceJSON=null;f.sublayers=null;f.type="map-image";f.url=null;return f}t._inheritsLoose(ia,ka);var Z=ia.prototype;Z.normalizeCtorArgs=
function(f,F){return"string"===typeof f?{url:f,...F}:f};Z.load=function(f){const F=d.isSome(f)?f.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},f).then(()=>this._fetchService(F),()=>this._fetchService(F)));return Promise.resolve(this)};Z.readImageFormat=function(f,F){return(f=F.supportedImageFormatTypes)&&-1<f.indexOf("PNG32")?"png32":"png24"};Z.writeSublayers=function(f,F,J,A){if(this.loaded&&f){f=f.slice().reverse().flatten(({sublayers:E})=>E&&E.toArray().reverse()).toArray();
J=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const E=Y.nameToId(A.origin);3===E?(J=this.createSublayersForOrigin("service").sublayers,J=na.shouldWriteSublayerStructure(f,J,2)):3<E&&(J=this.createSublayersForOrigin("portal-item"),J=na.shouldWriteSublayerStructure(f,J.sublayers,Y.nameToId(J.origin)))}var G=[],X={writeSublayerStructure:J,...A},N=J;f.forEach(E=>{const K=E.write({},X);G.push(K);N=N||"user"===E.originOf("visible")});
G.some(E=>1<Object.keys(E).length)&&(F.layers=G);N&&(F.visibleLayers=f.filter(E=>E.visible).map(E=>E.id))}};Z.createExportImageParameters=function(f,F,J,A){var G=A&&A.pixelRatio||1;f&&10<=this.version&&(f=f.clone().shiftCentralMeridian());var X=new H.ExportImageParameters({layer:this,scale:ba.getScale({extent:f,width:F})*G});const N=X.toJSON();X.destroy();X=!A||!A.rotation||10.3>this.version?{}:{rotation:-A.rotation};var E=f&&f.spatialReference;E=E.wkid||JSON.stringify(E.toJSON());N.dpi*=G;G={};if(null!=
A&&A.timeExtent){const {start:K,end:da}=A.timeExtent.toJSON();G.time=K&&da&&K===da?""+K:`${null==K?"null":K},${null==da?"null":da}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(G.time="null,null");return{bbox:f&&f.xmin+","+f.ymin+","+f.xmax+","+f.ymax,bboxSR:E,imageSR:E,size:F+","+J,...N,...X,...G}};Z.fetchImage=async function(f,F,J,A){const G={responseType:"image"};A&&A.timestamp&&(G.query={...G.query,_ts:A.timestamp});A&&A.signal&&(G.signal=A.signal);this.customParameters&&Object.keys(this.customParameters).length&&
(G.query={...this.customParameters,...G.query});const X=this.parsedUrl.path+"/export";f={...this.parsedUrl.query,...this.createExportImageParameters(f,F,J,A),f:"image",_ts:this.alwaysRefetch?Date.now():null};if(null!=f.dynamicLayers&&!this.capabilities.exportMap.supportsDynamicLayers)return Promise.reject(new U("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,
{query:f}));G.query=G.query?{...f,...G.query}:f;return S(X,G).then(N=>N.data).catch(N=>{if(fa.isAbortError(N))throw N;throw new U("mapimagelayer:image-fetch-error",`Unable to load image: ${X}`,{error:N});})};Z.fetchRecomputedExtents=async function(f={}){({data:f}=await S(this.url,{...f,query:{returnUpdates:!0,f:"json"}}));const {extent:F,fullExtent:J,timeExtent:A}=f;f=F||J;return{fullExtent:f&&V.fromJSON(f),timeExtent:A&&z.fromJSON({start:A[0],end:A[1]})}};Z.loadAll=function(){return D.loadAll(this,
f=>{f(this.allSublayers)})};Z._fetchService=async function(f){if(this.sourceJSON)this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});else{var {data:F,ssl:J}=await S(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},signal:f});J&&(this.url=this.url.replace(/^http:/i,"https:"));this.sourceJSON=F;this.read(F,{origin:"service",url:this.parsedUrl})}};return ia}(B.BlendLayer(W.TemporalLayer(P.ScaleRangeLayer(x.RefreshableLayer(oa.SublayersOwner(ha.ArcGISMapService(y.ArcGISService(u.OperationalLayer(w.PortalLayer(M.MultiOriginJSONMixin(r.CustomParametersMixin(Q.HandleOwnerMixin(h)))))))))))));
p.__decorate([e.property()],b.prototype,"alwaysRefetch",void 0);p.__decorate([e.property()],b.prototype,"dpi",void 0);p.__decorate([e.property()],b.prototype,"gdbVersion",void 0);p.__decorate([e.property()],b.prototype,"imageFormat",void 0);p.__decorate([q.reader("imageFormat",["supportedImageFormatTypes"])],b.prototype,"readImageFormat",null);p.__decorate([e.property({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],b.prototype,"imageMaxHeight",void 0);p.__decorate([e.property({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],
b.prototype,"imageMaxWidth",void 0);p.__decorate([e.property()],b.prototype,"imageTransparency",void 0);p.__decorate([e.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],b.prototype,"isReference",void 0);p.__decorate([e.property({json:{read:!1,write:!1}})],b.prototype,"labelsVisible",void 0);p.__decorate([e.property({type:["ArcGISMapServiceLayer"]})],b.prototype,"operationalLayerType",void 0);p.__decorate([e.property({json:{read:!1,write:!1}})],b.prototype,
"popupEnabled",void 0);p.__decorate([e.property()],b.prototype,"sourceJSON",void 0);p.__decorate([e.property({json:{write:{ignoreOrigin:!0}}})],b.prototype,"sublayers",void 0);p.__decorate([ja.writer("sublayers",{layers:{type:[ca]},visibleLayers:{type:[l.Integer]}})],b.prototype,"writeSublayers",null);p.__decorate([e.property({type:["show","hide","hide-children"]})],b.prototype,"listMode",void 0);p.__decorate([e.property({json:{read:!1},readOnly:!0,value:"map-image"})],b.prototype,"type",void 0);
p.__decorate([e.property(k.url)],b.prototype,"url",void 0);return b=p.__decorate([T.subclass("esri.layers.MapImageLayer")],b)});