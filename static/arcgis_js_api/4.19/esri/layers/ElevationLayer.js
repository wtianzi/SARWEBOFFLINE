// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/has ../core/maybe ../core/Logger ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/property ../core/jsonMap ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/Error ../core/urlUtils ../core/uuid ../portal/support/resourceExtension ../core/promiseUtils ../request ./Layer ../core/MultiOriginJSONSupport ../geometry/HeightModelInfo ./support/commonProperties ./mixins/OperationalLayer ./mixins/ArcGISService ./mixins/PortalLayer ./mixins/ArcGISCachedService ./support/LercDecoder".split(" "),
function(p,q,e,d,r,x,M,g,N,y,z,A,B,O,P,n,t,C,D,E,F,G,H,I,J,u){const v=x.getLogger("esri.layers.ElevationLayer");d=function(w){function m(...a){a=w.call(this,...a)||this;a.copyright=null;a.heightModelInfo=null;a.path=null;a.opacity=1;a.operationalLayerType="ArcGISTiledElevationServiceLayer";a.sourceJSON=null;a.type="elevation";a.url=null;a.version=null;a._lercDecoder=u.acquireDecoder();return a}q._inheritsLoose(m,w);var h=m.prototype;h.normalizeCtorArgs=function(a,c){return"string"===typeof a?{url:a,
...c}:a};h.destroy=function(){u.releaseDecoder(this._lercDecoder);this._lercDecoder=null};h.readVersion=function(a,c){(a=c.currentVersion)||(a=9.3);return a};h.load=function(a){const c=r.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:f=>{for(let b=0;b<f.typeKeywords.length;b++)if("elevation 3d layer"===f.typeKeywords[b].toLowerCase())return!0;throw new A("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",
{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"});}},a).then(()=>this._fetchImageService(c),()=>this._fetchImageService(c)));return Promise.resolve(this)};h.fetchTile=function(a,c,f,b){b=b||{signal:null};const l=r.isSome(b.signal)?b.signal:b.signal=n.createAbortController().signal,K={responseType:"array-buffer",signal:l},L={noDataValue:b.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(a,c,f,b)).then(()=>t(this.getTileUrl(a,c,f),K)).then(k=>
this._lercDecoder.decode(k.data,L,l)).then(k=>({values:k.pixelData,width:k.width,height:k.height,maxZError:k.fileInfo.maxZError,noDataValue:k.noDataValue,minValue:k.minValue,maxValue:k.maxValue}))};h.getTileUrl=function(a,c,f){const b=B.objectToQuery({...this.parsedUrl.query,blankTile:!this.tilemapCache&&this.supportsBlankTile?!1:null});return`${this.parsedUrl.path}/tile/${a}/${c}/${f}${b?"?"+b:""}`};h.queryElevation=async function(a,c){const {ElevationQuery:f}=await new Promise(function(b,l){p(["./support/ElevationQuery"],
b,l)});n.throwIfAborted(c);return(new f).query(this,a,c)};h.createElevationSampler=async function(a,c){const {ElevationQuery:f}=await new Promise(function(b,l){p(["./support/ElevationQuery"],b,l)});n.throwIfAborted(c);return(new f).createSampler(this,a,c)};h._fetchTileAvailability=function(a,c,f,b){return this.tilemapCache?this.tilemapCache.fetchAvailability(a,c,f,b):Promise.resolve("unknown")};h._fetchImageService=async function(a){if(this.sourceJSON)return this.sourceJSON;a=await t(this.parsedUrl.path,
{query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:a});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));this.sourceJSON=a.data;this.read(a.data,{origin:"service",url:this.parsedUrl})};q._createClass(m,[{key:"minScale",get:function(){},set:function(a){this.constructed&&v.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}},{key:"maxScale",get:function(){},set:function(a){this.constructed&&v.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}}]);
return m}(J.ArcGISCachedService(H.ArcGISService(G.OperationalLayer(I.PortalLayer(D.MultiOriginJSONMixin(C))))));e.__decorate([g.property({json:{read:{source:"copyrightText"}}})],d.prototype,"copyright",void 0);e.__decorate([g.property({readOnly:!0,type:E})],d.prototype,"heightModelInfo",void 0);e.__decorate([g.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],d.prototype,"path",void 0);e.__decorate([g.property({type:["show","hide"]})],d.prototype,"listMode",void 0);
e.__decorate([g.property({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],d.prototype,"minScale",null);e.__decorate([g.property({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],d.prototype,"maxScale",null);e.__decorate([g.property({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],d.prototype,"opacity",void 0);e.__decorate([g.property({type:["ArcGISTiledElevationServiceLayer"]})],
d.prototype,"operationalLayerType",void 0);e.__decorate([g.property()],d.prototype,"sourceJSON",void 0);e.__decorate([g.property({json:{read:!1},value:"elevation",readOnly:!0})],d.prototype,"type",void 0);e.__decorate([g.property(F.url)],d.prototype,"url",void 0);e.__decorate([g.property()],d.prototype,"version",void 0);e.__decorate([y.reader("version",["currentVersion"])],d.prototype,"readVersion",null);return d=e.__decorate([z.subclass("esri.layers.ElevationLayer")],d)});