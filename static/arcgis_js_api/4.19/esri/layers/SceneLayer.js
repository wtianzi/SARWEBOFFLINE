// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/has ../core/maybe ../core/Logger ../core/accessorSupport/ensureType ../core/accessorSupport/utils ../core/accessorSupport/decorators/property ../core/jsonMap ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/Error ../core/urlUtils ../core/uuid ../portal/support/resourceExtension ../core/promiseUtils ./support/fieldUtils ../PopupTemplate ../request ./Layer ../renderers/Renderer ../renderers/ClassBreaksRenderer ../renderers/UniqueValueRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/SimpleRenderer ../renderers/support/types ../renderers/support/jsonUtils ../core/MultiOriginJSONSupport ../core/watchUtils ./support/commonProperties ./mixins/OperationalLayer ./support/FieldsIndex ./mixins/ArcGISService ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./support/FeatureReduction ./support/LabelClass ./support/FeatureReductionSelection ./support/fieldProperties ./support/labelingInfo ./support/LayerFloorInfo ../renderers/support/styleUtils ../support/popupUtils ../tasks/support/Query ./support/capabilities ./support/I3SLayerDefinitions ./mixins/SceneService ./support/FetchAssociatedFeatureLayer ./support/RangeInfo".split(" "),
function(B,w,e,u,l,C,ka,D,f,la,p,E,k,F,ma,na,x,y,G,H,c,oa,pa,qa,ra,sa,ta,ua,I,va,J,K,m,L,M,N,O,P,Q,R,S,T,z,U,V,W,X,Y,q,Z,aa,ba){const ca=["3DObject","Point"],n=C.getLogger("esri.layers.SceneLayer");u=T.defineFieldProperties();c=function(v){function t(...a){a=v.call(this,...a)||this;a.featureReduction=null;a.rangeInfos=null;a.operationalLayerType="ArcGISSceneServiceLayer";a.type="scene";a.fields=null;a.floorInfo=null;a.outFields=null;a.nodePages=null;a.materialDefinitions=null;a.textureSetDefinitions=
null;a.geometryDefinitions=null;a.serviceUpdateTimeStamp=null;a.definitionExpression=null;a.path=null;a.labelsVisible=!0;a.labelingInfo=null;a.legendEnabled=!0;a.cachedDrawingInfo={color:!1};a.editingEnabled=!0;a.popupEnabled=!0;a.popupTemplate=null;a.objectIdField=null;a.globalIdField=null;a._fieldUsageInfo={};a.screenSizePerspectiveEnabled=!0;return a}w._inheritsLoose(t,v);var g=t.prototype;g.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,...b}:a};g.getField=function(a){return this.fieldsIndex.get(a)};
g.getFieldDomain=function(a){return(a=this.getField(a))&&a.domain?a.domain:null};g.readNodePages=function(a,b,d){"Point"===b.layerType&&(a=b.pointNodePages);return null==a||"object"!==typeof a?null:q.I3SNodePageDefinition.fromJSON(a,d)};g.readCachedDrawingInfo=function(a){if(null==a||"object"!==typeof a)a={};null==a.color&&(a.color=!1);return a};g.readObjectIdField=function(a,b){!a&&b.fields&&b.fields.some(d=>{"esriFieldTypeOID"===d.type&&(a=d.name);return!!a});return a||void 0};g.readGlobalIdField=
function(a,b){!a&&b.fields&&b.fields.some(d=>{"esriFieldTypeGlobalID"===d.type&&(a=d.name);return!!a});return a||void 0};g.readProfile=function(a,b){a=b.store.profile;if(null!=a&&A[a])return A[a];n.error("Unknown or missing profile",{profile:a,layer:this});return"mesh-pyramids"};g.load=function(a){const b=l.isSome(a)?a.signal:null;a=this.loadFromPortal({supportedTypes:["Scene Service"]},a).catch(x.throwIfAbortError).then(()=>this._fetchService(b)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,
b),this._setAssociatedFeatureLayer(b)])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>V.loadStyleRenderer(this,{origin:"service"},b)).then(()=>y.fixRendererFields(this.renderer,this.fields));this.addResolvingPromise(a);return Promise.resolve(this)};g.createQuery=function(){const a=new X;"mesh"!==this.geometryType&&(a.returnGeometry=!0,a.returnZ=!0);a.where=this.definitionExpression||"1\x3d1";a.sqlFormat="standard";
return a};g.queryExtent=function(a,b){return this._getAssociatedLayerForQuery().then(d=>d.queryExtent(a||this.createQuery(),b))};g.queryFeatureCount=function(a,b){return this._getAssociatedLayerForQuery().then(d=>d.queryFeatureCount(a||this.createQuery(),b))};g.queryFeatures=function(a,b){return this._getAssociatedLayerForQuery().then(d=>d.queryFeatures(a||this.createQuery(),b)).then(d=>{if(d&&d.features)for(const h of d.features)h.layer=this,h.sourceLayer=this;return d})};g.queryObjectIds=function(a,
b){return this._getAssociatedLayerForQuery().then(d=>d.queryObjectIds(a||this.createQuery(),b))};g.getFieldUsageInfo=function(a){const b={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[a]||b:(n.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),b)};g.createPopupTemplate=function(a){return W.createPopupTemplate(this,a)};g._getAssociatedLayerForQuery=function(){const a=this.associatedLayer;return l.isSome(a)&&
a.loaded?Promise.resolve(a):this._loadAssociatedLayerForQuery()};g._loadAssociatedLayerForQuery=async function(){await this.load();if(l.isNone(this.associatedLayer))throw new k("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(a){throw new k("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:a});}return this.associatedLayer};
g.hasCachedStatistics=function(a){return null!=this.statisticsInfo&&this.statisticsInfo.some(b=>b.name===a)};g.queryCachedStatistics=async function(a,b){await this.load(b);if(!this.statisticsInfo)throw new k("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const d=this.fieldsIndex.get(a);if(!d)throw new k("scenelayer:field-unexisting",`Field '${a}' does not exist on the layer`);for(const h of this.statisticsInfo)if(h.name===d.name)return a=F.join(this.parsedUrl.path,
h.href),H(a,{query:{f:"json"},responseType:"json",signal:b?b.signal:null}).then(r=>r.data);throw new k("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available");};g.saveAs=async function(a,b){return this._debouncedSaveOperations(1,{...b,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},a)};g.save=async function(){return this._debouncedSaveOperations(0,{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"})};g.applyEdits=async function(a,
b){const d=await new Promise(function(h,r){B(["./graphics/editingSupport"],h,r)});await this.load();if(l.isNone(this.associatedLayer))throw new k(`${this.type}-layer:not-editable`,"Service is not editable");await this.associatedLayer.load();return d.applyEdits(this,this.associatedLayer.source,a,b)};g.on=function(a,b){return v.prototype.on.call(this,a,b)};g.validateLayer=function(a){if(a.layerType&&-1===ca.indexOf(a.layerType))throw new k("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",
{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new k("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(1<this.version.major)throw new k("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});{a=this.normalReferenceFrame;var b=this.spatialReference;let d=!1,h=!1;if(null==a)h=d=!0;else switch(b=
b&&b.isGeographic,a){case "east-north-up":case "earth-centered":d=!0;h=b;break;case "vertex-reference-frame":d=!0;h=!b;break;default:d=!1}if(!d)throw new k("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!h)throw new k("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.");}};g._getTypeKeywords=function(){const a=[];if("points"===this.profile)a.push("Point");else if("mesh-pyramids"===this.profile)a.push("3DObject");
else throw new k("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);return a};g._populateFieldUsageInfo=function(){this._fieldUsageInfo={};if(this.fields)for(const a of this.fields){const b=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(h=>h.name===a.name)),d=!!(l.isSome(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some(h=>h&&a.name===h.name));this._fieldUsageInfo[a.name]={supportsLabelingInfo:b,
supportsRenderer:b,supportsPopupTemplate:b||d,supportsLayerQuery:d}}};g._applyAssociatedLayerOverrides=function(){this._applyAssociatedLayerFieldsOverrides();this._applyAssociatedLayerPopupOverrides()};g._applyAssociatedLayerFieldsOverrides=function(){if(!l.isNone(this.associatedLayer)&&this.associatedLayer.fields){var a=null;for(const b of this.associatedLayer.fields){const d=this.getField(b.name);d?(!d.domain&&b.domain&&(d.domain=b.domain.clone()),d.editable=b.editable,d.nullable=b.nullable,d.length=
b.length):(a||(a=this.fields?this.fields.slice():[]),a.push(b.clone()))}a&&this._set("fields",a)}};g._applyAssociatedLayerPopupOverrides=function(){if(!l.isNone(this.associatedLayer)){var a=["popupTemplate","popupEnabled"],b=D.getProperties(this);for(let d=0;d<a.length;d++){const h=a[d];this._buddyIsMoreImportant(h)&&(b.setDefaultOrigin(this.associatedLayer.originOf(h)),b.set(h,this.associatedLayer[h]),b.setDefaultOrigin("user"))}}};g._setAssociatedFeatureLayer=async function(a){if(-1!==["mesh-pyramids",
"points"].indexOf(this.profile)){a=new aa.FetchAssociatedFeatureLayer(this.parsedUrl,this.portalItem,a);try{this.associatedLayer=await a.fetch()}catch(b){x.isAbortError(b)||this._logWarningOnPopupEnabled()}}};g._logWarningOnPopupEnabled=function(){K.whenValidOnce(this,["popupTemplate","popupEnabled"],()=>this.popupEnabled&&null!=this.popupTemplate).then(()=>()=>{const a=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?n.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${a}`):
n.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${a}`)})};g._buddyIsMoreImportant=function(a){if(l.isNone(this.associatedLayer))return!1;const b=this.originIdOf(a);a=this.associatedLayer.originIdOf(a);return null!=a&&2>=a?null==b||2>b:null!=a&&3>=a?null==b||3>b:!1};g._validateElevationInfo=function(){const a=this.elevationInfo;a&&("mesh-pyramids"===this.profile&&"absolute-height"!==a.mode&&n.warn(".elevationInfo\x3d","Mesh scene layers only support absolute-height elevation mode"),
a.featureExpressionInfo&&"0"!==a.featureExpressionInfo.expression&&n.warn(".elevationInfo\x3d","Scene layers do not support featureExpressionInfo"))};w._createClass(t,[{key:"fieldsIndex",get:function(){return new M(this.fields)}},{key:"elevationInfo",set:function(a){this._set("elevationInfo",a);this.loaded&&this._validateElevationInfo()}},{key:"geometryType",get:function(){return da[this.profile]||"mesh"}},{key:"renderer",set:function(a){y.fixRendererFields(a,this.fields);this._set("renderer",a)}},
{key:"capabilities",get:function(){var a=l.isSome(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:Y.zeroCapabilities;const {query:b,editing:{supportsGlobalId:d,supportsRollbackOnFailure:h,supportsUploadWithItemId:r},data:{supportsZ:ea,supportsM:fa,isVersioned:ha},operations:{supportsEditing:ia,supportsUpdate:ja}}=a;a=a.operations.supportsChangeTracking;return{query:b,editing:{supportsGlobalId:d,supportsRollbackOnFailure:h,supportsGeometryUpdate:!1,supportsUploadWithItemId:r},
data:{supportsZ:ea,supportsM:fa,isVersioned:ha},operations:{supportsEditing:ia&&a,supportsAdd:!1,supportsDelete:!1,supportsUpdate:ja&&a}}}},{key:"defaultPopupTemplate",get:function(){return l.isSome(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}},{key:"displayField",get:function(){return l.isSome(this.associatedLayer)?this.associatedLayer.displayField:null}}]);return t}(Z.SceneService(N.ArcGISService(L.OperationalLayer(O.PortalLayer(P.ScaleRangeLayer(J.MultiOriginJSONMixin(c)))))));
e.__decorate([f.property({types:{key:"type",base:Q["default"],typeMap:{selection:S}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],c.prototype,"featureReduction",void 0);e.__decorate([f.property({type:[ba["default"]],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],c.prototype,"rangeInfos",void 0);e.__decorate([f.property({json:{read:!1}})],
c.prototype,"associatedLayer",void 0);e.__decorate([f.property({type:["show","hide"]})],c.prototype,"listMode",void 0);e.__decorate([f.property({type:["ArcGISSceneServiceLayer"]})],c.prototype,"operationalLayerType",void 0);e.__decorate([f.property({json:{read:!1},readOnly:!0})],c.prototype,"type",void 0);e.__decorate([f.property({...u.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],c.prototype,"fields",void 0);e.__decorate([f.property({readOnly:!0})],c.prototype,"fieldsIndex",null);
e.__decorate([f.property({type:U,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],c.prototype,"floorInfo",void 0);e.__decorate([f.property(u.outFields)],c.prototype,"outFields",void 0);e.__decorate([f.property({type:q.I3SNodePageDefinition,readOnly:!0,json:{read:!1}})],c.prototype,"nodePages",void 0);e.__decorate([p.reader("service","nodePages",["nodePages","pointNodePages"])],c.prototype,"readNodePages",null);e.__decorate([f.property({type:[q.I3SMaterialDefinition],
readOnly:!0})],c.prototype,"materialDefinitions",void 0);e.__decorate([f.property({type:[q.I3STextureSetDefinition],readOnly:!0})],c.prototype,"textureSetDefinitions",void 0);e.__decorate([f.property({type:[q.I3SGeometryDefinition],readOnly:!0})],c.prototype,"geometryDefinitions",void 0);e.__decorate([f.property({readOnly:!0})],c.prototype,"serviceUpdateTimeStamp",void 0);e.__decorate([f.property({readOnly:!0})],c.prototype,"attributeStorageInfo",void 0);e.__decorate([f.property({readOnly:!0})],c.prototype,
"statisticsInfo",void 0);e.__decorate([f.property({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],c.prototype,"definitionExpression",void 0);e.__decorate([f.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],c.prototype,"path",void 0);e.__decorate([f.property(m.elevationInfo)],c.prototype,"elevationInfo",null);e.__decorate([f.property({type:String})],c.prototype,"geometryType",null);e.__decorate([f.property(m.labelsVisible)],
c.prototype,"labelsVisible",void 0);e.__decorate([f.property({type:[R],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:z.reader},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:z.reader},write:!0}})],c.prototype,"labelingInfo",void 0);e.__decorate([f.property(m.legendEnabled)],c.prototype,"legendEnabled",void 0);e.__decorate([f.property(m.opacityDrawingInfo)],c.prototype,"opacity",void 0);e.__decorate([f.property({types:I.webSceneRendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},
name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],c.prototype,"renderer",null);e.__decorate([f.property({json:{read:!1}})],c.prototype,"cachedDrawingInfo",void 0);e.__decorate([p.reader("service","cachedDrawingInfo")],c.prototype,"readCachedDrawingInfo",null);e.__decorate([f.property({readOnly:!0,json:{read:!1}})],c.prototype,"capabilities",null);e.__decorate([f.property({type:Boolean,json:{read:!1}})],c.prototype,"editingEnabled",void 0);e.__decorate([f.property(m.popupEnabled)],
c.prototype,"popupEnabled",void 0);e.__decorate([f.property({type:G,json:{name:"popupInfo",write:!0}})],c.prototype,"popupTemplate",void 0);e.__decorate([f.property({readOnly:!0,json:{read:!1}})],c.prototype,"defaultPopupTemplate",null);e.__decorate([f.property({type:String,json:{read:!1}})],c.prototype,"objectIdField",void 0);e.__decorate([p.reader("service","objectIdField",["objectIdField","fields"])],c.prototype,"readObjectIdField",null);e.__decorate([f.property({type:String,json:{read:!1}})],
c.prototype,"globalIdField",void 0);e.__decorate([p.reader("service","globalIdField",["globalIdField","fields"])],c.prototype,"readGlobalIdField",null);e.__decorate([f.property({readOnly:!0,type:String,json:{read:!1}})],c.prototype,"displayField",null);e.__decorate([f.property({type:String,json:{read:!1}})],c.prototype,"profile",void 0);e.__decorate([p.reader("service","profile",["store.profile"])],c.prototype,"readProfile",null);e.__decorate([f.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},
read:!1}})],c.prototype,"normalReferenceFrame",void 0);e.__decorate([f.property(m.screenSizePerspectiveEnabled)],c.prototype,"screenSizePerspectiveEnabled",void 0);c=e.__decorate([E.subclass("esri.layers.SceneLayer")],c);const A={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},da={"mesh-pyramids":"mesh",points:"point",
lines:"polyline",polygons:"polygon"};return c});