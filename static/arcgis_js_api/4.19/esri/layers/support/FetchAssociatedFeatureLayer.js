// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("exports ../../core/maybe ../../core/promiseUtils ../../kernel ../../request ../../portal/Portal ../../portal/PortalItem ../FeatureLayer".split(" "),function(l,e,h,r,k,t,u,m){let v=function(){function n(a,b,c){this.parsedUrl=a;this.portalItem=b;this.signal=c;this.rootDocument=null;if(a=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i))this.urlParts={root:a[1],layerId:parseInt(a[2],10)}}var d=n.prototype;d.fetch=async function(){var a;if(!this.urlParts)return null;const b=
null!=(a=this.portalItem)?a:await this.portalItemFromServiceItemId();if(e.isNone(b))return this.loadFromUrl();a=await this.findAndLoadRelatedPortalItem(b);return e.isNone(a)?null:this.loadFeatureLayerFromPortalItem(a)};d.fetchPortalItem=async function(){var a;if(!this.urlParts)return null;const b=null!=(a=this.portalItem)?a:await this.portalItemFromServiceItemId();return e.isNone(b)?null:this.findAndLoadRelatedPortalItem(b)};d.fetchRootDocument=async function(){if(e.isSome(this.rootDocument))return this.rootDocument;
if(e.isNone(this.urlParts))return this.rootDocument={},{};const a={query:{f:"json"},responseType:"json",signal:this.signal},b=`${this.urlParts.root}/SceneServer`;try{this.rootDocument=(await k(b,a)).data}catch{this.rootDocument={}}return this.rootDocument};d.fetchServiceOwningPortalUrl=async function(){var a;const b=null==(a=r.id)?void 0:a.findServerInfo(this.parsedUrl.path);if(null!=b&&b.owningSystemUrl)return b.owningSystemUrl;a=this.parsedUrl.path.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const c=
(await k(a,{query:{f:"json"},responseType:"json",signal:this.signal})).data.owningSystemUrl;if(c)return c}catch(c){h.throwIfAbortError(c)}return null};d.findAndLoadRelatedPortalItem=async function(a){try{return(await a.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:this.signal})).find(b=>"Feature Service"===b.type)||null}catch(b){return h.throwIfAbortError(b),null}};d.loadFeatureLayerFromPortalItem=async function(a){await a.load({signal:this.signal});const b=await this.findMatchingAssociatedSublayerUrl(a.url);
return(new m({url:b,portalItem:a})).load({signal:this.signal})};d.loadFromUrl=async function(){const a=await this.findMatchingAssociatedSublayerUrl(`${this.urlParts.root}/FeatureServer`);return(new m({url:a})).load({signal:this.signal})};d.findMatchingAssociatedSublayerUrl=async function(a){a=a.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1");var b={query:{f:"json"},responseType:"json",authMode:"no-prompt",signal:this.signal};const c=this.urlParts.layerId;var f=this.fetchRootDocument();b=k(a,b);
const [p,q]=await Promise.all([b,f]);f=q&&q.layers;b=p.data&&p.data.layers;if(!Array.isArray(b))throw Error("expected layers array");if(!Array.isArray(f)){if(c<b.length)return`${a}/${b[c].id}`}else for(let g=0;g<Math.min(f.length,b.length);g++)if(f[g].id===c)return`${a}/${b[g].id}`;throw Error("could not find matching associated sublayer");};d.portalItemFromServiceItemId=async function(){var a=(await this.fetchRootDocument()).serviceItemId;if(!a)return null;a=new u({id:a});const b=await this.fetchServiceOwningPortalUrl();
e.isSome(b)&&(a.portal=new t({url:b}));try{return a.load({signal:this.signal})}catch(c){return h.throwIfAbortError(c),null}};return n}();l.FetchAssociatedFeatureLayer=v;Object.defineProperty(l,"__esModule",{value:!0})});