// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/maybe ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/Error ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../core/promiseUtils ../../../core/JSONSupport ../../../geometry/Point ../../../geometry/Extent ../../../geometry ../../../request ../../../core/Promise ../arcgisLayerUrl ../commonProperties ../TileInfo ../rasterFormats/RasterCodec ../rasterFunctions/pixelUtils ../RasterStorageInfo ../rasterFunctions/rasterProjectionHelper ./RawBlockCache".split(" "),
function(J,y,u,A,T,ea,B,fa,U,K,ha,ia,ja,L,V,I,M,ka,W,X,Y,Z,N,aa,O,ba,v,w){u=function(P){function F(){var a=P.apply(this,arguments)||this;a.rasterJobHandler=null;a.datasetName=null;a.datasetFormat=null;a.rasterInfo=null;a.ioConfig={sampling:"closest"};return a}J._inheritsLoose(F,P);var n=F.prototype;n.init=async function(){const a=v.load();this.addResolvingPromise(a);await this.when()};n.normalizeCtorArgs=function(a){a&&a.ioConfig&&(a={...a,ioConfig:{resolution:null,bandIds:null,sampling:"closest",
tileInfo:N.create(),...a.ioConfig}});return a};n.open=async function(a){throw new K("BaseRaster:open-not-implemented","open() is not implemented");};n.fetchTile=async function(a,b,f,e={}){var d;const {tileInfo:c}=e;a=c.lodAt(a);b=this.getTileExtent({x:a.resolution,y:a.resolution},b,f,c.origin,c.spatialReference,c.size);null!=(d=e.multidimensionalDefinition)&&d.length&&A.isSome(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)||
0});return this.fetchPixels(b,c.size[0],c.size[1],e)};n.identify=async function(a,b={}){const {spatialReference:f,extent:e}=this.rasterInfo;var {datumTransformation:d}=b;d=v.projectPoint(a,f,d);if(!e.intersects(d)||A.isSome(this.rasterInfo.transform)&&(d=this.rasterInfo.transform.inverseTransform(d),!this.rasterInfo.nativeExtent.intersects(d)))return{location:d,value:null};let c=0;if(b.srcResolution)c=v.snapPyramid(b.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(c=await this.computeBestPyramidLevelForLocation(a,
b),null==c)return{location:d,value:null};a=this.identifyPixelLocation(d,c,null);if(null===a)return{location:d,value:null};const {row:g,col:h,rowOffset:l,colOffset:k}=a;a=w.getRasterId(this.url,b.sliceId);const m=`${c}/${g}/${h}`;let p=w.getBlock(a,null,m);A.isSome(p)||(p=this.fetchRawTile(c,g,h,b),w.putBlock(a,null,m,p));b=await p;if(!(b&&b.pixels&&0<b.pixels.length))return{location:d,value:null};const r=l*this.rasterInfo.storageInfo.blockHeight+k;b=!b.mask||b.mask[r]?b.pixels.map(t=>t[r]):null;return{location:d,
value:b,pyramidLevel:c}};n.fetchPixels=async function(a,b,f,e={}){a=a.clone().normalize()[0];var d=this.rasterInfo.spatialReference,c=!a.spatialReference.equals(d),{datumTransformation:g}=e,h=new I({x:(a.xmax-a.xmin)/b,y:(a.ymax-a.ymin)/f,spatialReference:a.spatialReference}),l=e.srcResolution||(c?v.projectResolution(h,d,a,g):h);if(!l)return null;const {pyramidLevel:k,pyramidResolution:m,excessiveReading:p}=v.snapPyramid(l,this.rasterInfo,this.ioConfig.sampling);if(p)return null;var r=this.rasterInfo.storageInfo;
d=c?v.projectExtent(a,d,g):a;const t=A.unwrap(this.rasterInfo.transform);t&&(d=t.inverseTransform(d));if(null==d)return null;var q=Math.ceil((d.xmax-d.xmin)/m.x-.1),z=Math.ceil((d.ymax-d.ymin)/m.y-.1);if(8<q/b||8<z/f)return null;q=await this.fetchRawPixels(k,{x:Math.floor((d.xmin-r.origin.x)/m.x+.1),y:Math.floor((r.origin.y-d.ymax)/m.y+.1)},{width:q,height:z},e);if(!q)return null;z=0<k?r.pyramidBlockWidth:r.blockWidth;r=0<k?r.pyramidBlockHeight:r.blockHeight;if(!c&&1===q.pixelBlocks.length&&z===b&&
r===f&&l.x===h.x&&l.y===h.y)return{extent:a,srcExtent:d,pixelBlock:q.pixelBlocks[0]};c=v.getProjectionOffsetGrid(a,q.extent,h,g,t);g=!e.requestRawData;h={rows:c.spacing[0],cols:c.spacing[1]};const {pixelBlocks:C,mosaicSize:D,isPartiallyFilled:G}=q;this.rasterJobHandler?b=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:C,srcMosaicSize:D,destDimension:g?{width:b,height:f}:null,coefs:g?c.coefficients:null,sampleSpacing:g?h:null,interpolation:e.interpolation},e):(l=O.mosaic(C,D),b=g?O.approximateTransform(l,
{width:b,height:f},c.coefficients,h,e.interpolation):l);return e.requestRawData?{srcExtent:d,pixelBlock:b,transformGrid:c,extent:a,isPartiallyFilled:G}:{srcExtent:d,extent:a,pixelBlock:b}};n.fetchRawPixels=async function(a,b,f,e){const {origin:d,blockBoundary:c}=this.rasterInfo.storageInfo,{blockWidth:g,blockHeight:h}=this.getBlockWidthHeight(a);let {x:l,y:k}=b,{width:m,height:p}=f;e.buffer&&(l-=e.buffer.cols,k-=e.buffer.rows,m+=2*e.buffer.cols,p+=2*e.buffer.rows);b=Math.floor(l/g);f=Math.floor(k/
h);const r=Math.floor((l+m-1)/g),t=Math.floor((k+p-1)/h);var q=c[a];if(!q)return null;const {minRow:z,minCol:C,maxCol:D,maxRow:G}=q;if(t<z||r<C||f>G||b>D)return null;q=[];let H,Q=!1;for(var x=f;x<=t;x++)for(let E=b;E<=r;E++)x>=z&&E>=C&&G>=x&&D>=E?(H=this._fetchRawTile(a,x,E,e),this.ioConfig.allowPartialFill&&(H=new Promise(R=>{H.then(ca=>R(ca)).catch(()=>{Q=!0;R(null)})})),q.push(H)):q.push(null);if(0===q.length)return null;e=await Promise.all(q);q={height:(t-f+1)*g,width:(r-b+1)*h};const {nativePixelSize:S,
spatialReference:da}=this.rasterInfo;x=S.x*2**a;a=S.y*2**a;return{extent:new M({xmin:d.x+b*g*x,xmax:d.x+(r+1)*g*x,ymin:d.y-(t+1)*h*a,ymax:d.y-f*h*a,spatialReference:da}),pixelBlocks:e,mosaicSize:q,isPartiallyFilled:Q}};n.fetchRawTile=async function(a,b,f,e){throw new K("BaseRaster:read-not-implemented","fetchRawTile() is not implemented");};n.computeExtent=function(a){return v.projectExtent(this.rasterInfo.extent,a)};n.decodePixelBlock=function(a,b){return!this.rasterJobHandler||b.useCanvas?aa.decode(a,
b):this.rasterJobHandler.decode({data:a,options:b})};n.request=async function(a,b,f){var e,d;const {customFetchParameters:c}=this.ioConfig,{range:g,query:h,headers:l}=b;f=null!=(e=null!=(d=f)?d:b.retryCount)?e:this.ioConfig.retryCount;e=g?{Range:`bytes=${g.from}-${g.to}`}:null;try{return await W(a,{...b,query:{...h,...c},headers:{...l,...e}})}catch(k){if(0<f)return f--,this.request(a,b,f);throw k;}};n.getSliceIndex=function(a){const {multidimensionalInfo:b}=this.rasterInfo;if(!A.isSome(b)||null==
a||!a.length)return null;let f=0;const e=a[0].variableName;for(let g=0;g<b.variables.length;g++){var d=b.variables[g];const h=d.dimensions;if(d.name!==e){f+=h.map(k=>this._getDimensionValuesCount(k)).reduce((k,m)=>k+m);break}d=h.map(k=>this._getDimensionValuesCount(k));const l=h.length;for(let k=0;k<l;k++){var c=a.filter(m=>m.dimensionName===h[k].name)[0];if(null==c)return null;c=Array.isArray(c.values[0])?c.values[0][0]:c.values[0];c=this._getIndexFromDimensions(c,h[k]);if(-1===c)return null;d.shift();
f=k===l-1?f+c:f+c*d.reduce((m,p)=>m+p)}}return f};n.updateTileInfo=function(){const {storageInfo:a,spatialReference:b,extent:f,pixelSize:e}=this.rasterInfo;if(!a.tileInfo){const c=[];var d=a.maximumPyramidLevel||0;let g=Math.max(e.x,e.y),h=1/.0254*96*g;for(let l=0;l<=d;l++)c.push({level:d-l,resolution:g,scale:h}),g*=2,h*=2;d=new I({x:f.xmin,y:f.ymax,spatialReference:b});a.tileInfo=new N({origin:d,size:[a.blockWidth,a.blockHeight],spatialReference:b,lods:c});a.isVirtualTileInfo=!0}};n.createRemoteDatasetStorageInfo=
function(a,b=512,f=512,e){const {width:d,height:c,nativeExtent:g,pixelSize:h,spatialReference:l}=a,k=new I({x:g.xmin,y:g.ymax,spatialReference:l});null==e&&(e=Math.max(0,Math.round(Math.log(Math.max(d,c))/Math.LN2-8)));const m=this._computeBlockBoundary(g,h,e,512,512);a.storageInfo=new ba({blockWidth:b,blockHeight:f,pyramidBlockWidth:b,pyramidBlockHeight:f,origin:k,firstPyramidLevel:1,maximumPyramidLevel:e,blockBoundary:m})};n.computeBestPyramidLevelForLocation=async function(a,b){return 0};n.identifyPixelLocation=
function(a,b,f){const {spatialReference:e,nativePixelSize:d,nativeExtent:c}=this.rasterInfo,{blockWidth:g,blockHeight:h,maximumPyramidLevel:l,pyramidScalingFactor:k,origin:m}=this.rasterInfo.storageInfo;a=v.projectPoint(a,e,f);if(!c.intersects(a)||0>b||b>l)return null;var p=k**b;f=(m.y-a.y)/(p*d.y)/h;p=(a.x-m.x)/(p*d.x)/g;return{pyramidLevel:b,row:Math.floor(f),col:Math.floor(p),rowOffset:Math.min(h-1,Math.floor((f-Math.floor(f))*h)),colOffset:Math.min(g-1,Math.floor((p-Math.floor(p))*g)),srcLocation:a}};
n.getTileExtent=function(a,b,f,e,d,c){const [g,h]=c;f=e.x+f*g*a.x;b=e.y-b*h*a.y;return new M({xmin:f,xmax:f+g*a.x,ymin:b-h*a.y,ymax:b,spatialReference:d})};n.getBlockWidthHeight=function(a){return{blockWidth:0<a?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:0<a?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}};n.isBlockOutside=function(a,b,f){a=this.rasterInfo.storageInfo.blockBoundary[a];return!a||a.maxRow<
b||a.maxCol<f||a.minRow>b||a.minCol>f};n._computeBlockBoundary=function(a,b,f,e,d){let {x:c,y:g}=b;b=a.xmin;const h=a.ymax,l=[{minCol:Math.floor((a.xmin-b+.1*c)/e/c),maxCol:Math.floor((a.xmax-b-.1*c)/e/c),minRow:Math.floor((h-a.ymax+.1*g)/d/g),maxRow:Math.floor((h-a.ymin-.1*g)/d/g)}];if(0<f)for(let k=0;k<f;k++)c*=2,g*=2,l.push({minCol:Math.floor((a.xmin-b+.1*c)/e/c),maxCol:Math.floor((a.xmax-b-.1*c)/e/c),minRow:Math.floor((h-a.ymax+.1*g)/d/c),maxRow:Math.floor((h-a.ymin-.1*g)/d/c)});return l};n._fetchRawTile=
function(a,b,f,e){var d=this.rasterInfo.storageInfo.blockBoundary[a];if(!d)return Promise.resolve(null);const {minRow:c,minCol:g,maxCol:h,maxRow:l}=d;if(b<c||f<g||b>l||f>h)return Promise.resolve(null);const k=w.getRasterId(this.url,e.sliceId),m=`${a}/${b}/${f}`;d=w.getBlock(k,e.registryId,m);if(!A.isSome(d)){const p=L.createAbortController();d=this.fetchRawTile(a,b,f,{...e,signal:p.signal});w.putBlock(k,e.registryId,m,d,p);d.catch(()=>{w.deleteBlock(k,e.registryId,m)})}if(e.signal)L.onAbort(e,()=>
{w.decreaseRefCount(k,e.registryId,m)});return d};n._getIndexFromDimensions=function(a,b){const {extent:f,interval:e,unit:d,values:c}=b;if(null!=c&&c.length)return Array.isArray(c[0])?c.findIndex(k=>k[0]<=a&&k[1]>=a):c.indexOf(a);if(a>f[1])return-1;const g=f[0];let h=-1;if("ISO8601"===d){var l;switch((null==(l=b.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case "seconds":h=Math.round((a-g)/1E3/e);break;case "minutes":h=Math.round((a-g)/6E4/e);break;case "hours":h=Math.round((a-g)/36E5/e);break;
case "days":h=Math.round((a-g)/864E5/e);break;case "years":h=Math.round(((new Date(a)).getUTCFullYear()-(new Date(g)).getUTCFullYear())/e);break;case "decades":h=Math.round(((new Date(a)).getUTCFullYear()-(new Date(g)).getUTCFullYear())/10/e)}return h}return Math.round((a-g)/e)};n._getDimensionValuesCount=function(a){const {extent:b,interval:f,unit:e,values:d}=a;let c=(null==d?void 0:d.length)||0;if(c)return c;const g=b[0];if(0===c&&"ISO8601"===e){var h;switch((null==(h=a.intervalUnit)?void 0:h.toLowerCase())||
"seconds"){case "seconds":c=Math.round((b[1]-b[0])/1E3/f);break;case "minutes":c=Math.round((b[1]-b[0])/6E4/f);break;case "hours":c=Math.round((b[1]-b[0])/36E5/f);break;case "days":c=Math.round((b[1]-b[0])/864E5/f);break;case "years":c=Math.round(((new Date(b[1])).getUTCFullYear()-(new Date(g)).getUTCFullYear())/f);break;case "decades":c=Math.round(((new Date(b[1])).getUTCFullYear()-(new Date(g)).getUTCFullYear())/10/f)}return c}return Math.round((b[1]-b[0])/f)};J._createClass(F,[{key:"url",set:function(a){this._set("url",
Y.sanitizeUrl(a,T.getLogger(this.declaredClass)))}}]);return F}(X.EsriPromiseMixin(V.JSONSupport));y.__decorate([B.property(Z.url)],u.prototype,"url",null);y.__decorate([B.property({type:String,json:{write:!0}})],u.prototype,"datasetName",void 0);y.__decorate([B.property({type:String,json:{write:!0}})],u.prototype,"datasetFormat",void 0);y.__decorate([B.property()],u.prototype,"rasterInfo",void 0);y.__decorate([B.property()],u.prototype,"ioConfig",void 0);y.__decorate([B.property()],u.prototype,"sourceJSON",
void 0);return u=y.__decorate([U.subclass("esri.layers.support.rasterDatasets.BaseRaster")],u)});