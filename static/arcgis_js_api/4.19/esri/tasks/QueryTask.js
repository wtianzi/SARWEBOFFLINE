// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/has ../core/maybe ../core/Logger ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/property ../core/jsonMap ../core/accessorSupport/decorators/subclass ../core/urlUtils ../core/uuid ../portal/support/resourceExtension ./support/FeatureSet ../layers/support/source/DataLayerSource ./support/Query ./support/RelationshipQuery ../rest/query/executeAttachmentQuery ../rest/query/executeForCount ../rest/query/executeForExtent ../rest/query/executeForIds ../rest/query/executeQueryJSON ../rest/query/executeQueryPBF ../rest/query/executeRelationshipQuery ./Task".split(" "),
function(u,f,v,l,e,G,g,H,w,I,J,K,x,m,y,n,z,A,B,C,D,E,p,F){e=function(q){function k(a){a=q.call(this,a)||this;a.dynamicDataSource=null;a.format="json";a.gdbVersion=null;a.sourceSpatialReference=null;return a}u._inheritsLoose(k,q);var c=k.prototype;c.execute=function(a,b){return this.executeJSON(a,b).then(d=>x.fromJSON(d))};c.executeJSON=async function(a,b){var d;b={...this.requestOptions,...b};const r=this._normalizeQuery(a);a=null!=(null==(d=a.outStatistics)?void 0:d[0]);d=v("featurelayer-pbf-statistics");
d=!a||d;let h;if("pbf"===this.format&&d)try{h=await E.executeRawQueryPBF(this.url,r,b)}catch(t){if("query:parsing-pbf"===t.name)this.format="json";else throw t;}"json"!==this.format&&d||(h=await D.executeRawQueryJSON(this.url,r,b));this._normalizeFields(h.fields);return h};c.executeForCount=function(a,b){b={...this.requestOptions,...b};a=this._normalizeQuery(a);return A.executeForCount(this.url,a,b)};c.executeForExtent=function(a,b){b={...this.requestOptions,...b};a=this._normalizeQuery(a);return B.executeForExtent(this.url,
a,b)};c.executeForIds=function(a,b){b={...this.requestOptions,...b};a=this._normalizeQuery(a);return C.executeForIds(this.url,a,b)};c.executeRelationshipQuery=function(a,b){a=n.from(a);b={...this.requestOptions,...b};if(this.gdbVersion||this.dynamicDataSource)a=a.clone(),a.gdbVersion=a.gdbVersion||this.gdbVersion,a.dynamicDataSource=a.dynamicDataSource||this.dynamicDataSource;return p.executeRelationshipQuery(this.url,a,b)};c.executeRelationshipQueryForCount=function(a,b){a=n.from(a);b={...this.requestOptions,
...b};if(this.gdbVersion||this.dynamicDataSource)a=a.clone(),a.gdbVersion=a.gdbVersion||this.gdbVersion,a.dynamicDataSource=a.dynamicDataSource||this.dynamicDataSource;return p.executeRelationshipQueryForCount(this.url,a,b)};c.executeAttachmentQuery=function(a,b){return z.executeAttachmentQuery(this.url,a,{...this.requestOptions,...b})};c._normalizeQuery=function(a){var b=y.from(a);b.sourceSpatialReference=b.sourceSpatialReference||this.sourceSpatialReference;if(!this.gdbVersion&&!this.dynamicDataSource)return b;
b=b===a?b.clone():b;b.gdbVersion=a.gdbVersion||this.gdbVersion;b.dynamicDataSource=a.dynamicDataSource?m.DataLayerSource.from(a.dynamicDataSource):this.dynamicDataSource;return b};c._normalizeFields=function(a){if(l.isSome(this.fieldsIndex)&&l.isSome(a))for(const b of a)(a=this.fieldsIndex.get(b.name))&&Object.assign(b,a.toJSON())};return k}(F);f.__decorate([g.property({type:m.DataLayerSource})],e.prototype,"dynamicDataSource",void 0);f.__decorate([g.property()],e.prototype,"fieldsIndex",void 0);
f.__decorate([g.property()],e.prototype,"format",void 0);f.__decorate([g.property()],e.prototype,"gdbVersion",void 0);f.__decorate([g.property()],e.prototype,"sourceSpatialReference",void 0);return e=f.__decorate([w.subclass("esri.tasks.QueryTask")],e)});