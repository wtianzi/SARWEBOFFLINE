// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/Accessor ../../geometry/support/jsonUtils ../../geometry".split(" "),function(l,d,b,r,t,e,m,n,u,v,w,p,g,h){const q=new m.JSONMap({9001:"meters",9002:"feet",9036:"kilometers",
9093:"miles",109012:"nautical-miles",109001:"yards"});b=function(k){function f(a){a=k.call(this,a)||this;a.geometry1=null;a.geometry2=null;a.distanceUnit=null;a.geodesic=null;return a}l._inheritsLoose(f,k);f.prototype.toJSON=function(){const a={};var c=this.geometry1;c&&(a.geometry1=JSON.stringify({geometryType:g.getJsonType(c),geometry:c}),a.sr=JSON.stringify(this.geometry1.spatialReference.toJSON()));if(c=this.geometry2)a.geometry2=JSON.stringify({geometryType:g.getJsonType(c),geometry:c});this.distanceUnit&&
(a.distanceUnit=q.toJSON(this.distanceUnit));this.geodesic&&(a.geodesic=this.geodesic);return a};return f}(p);d.__decorate([e.property({types:h.geometryTypes,json:{write:!0}})],b.prototype,"geometry1",void 0);d.__decorate([e.property({types:h.geometryTypes,json:{write:!0}})],b.prototype,"geometry2",void 0);d.__decorate([e.property({type:String,json:{write:!0}})],b.prototype,"distanceUnit",void 0);d.__decorate([e.property({type:Boolean,json:{write:!0}})],b.prototype,"geodesic",void 0);return b=d.__decorate([n.subclass("esri.tasks.support.DistanceParameters")],
b)});