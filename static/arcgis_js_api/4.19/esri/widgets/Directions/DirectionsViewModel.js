// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/Error ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/promiseUtils ../../core/Evented ../../core/Collection ../../intl/locale ../../Color ../../symbols/SimpleLineSymbol ../../symbols/PictureMarkerSymbol ../../symbols/SimpleMarkerSymbol ../../symbols ../../Graphic ../../core/Handles ../../core/watchUtils ../../tasks/support/FeatureSet ../../layers/GraphicsLayer ../../tasks/RouteTask ../support/GoTo ../../geometry/support/graphicsUtils ../../tasks/support/RouteParameters ./support/directionsUtils".split(" "),
function(E,g,f,N,O,da,h,ea,P,w,fa,ha,ia,F,Q,G,R,S,T,H,A,ja,U,V,B,W,C,I,X,Y,J,v){const Z=O.getLogger("esri.widgets.Directions.DirectionsViewModel"),K={first:new A({color:[105,220,255,1],size:19,outline:{color:[51,51,51,1],width:3}}),middle:new A({color:[51,51,51,1],size:12,outline:{color:[105,220,255,1],width:3}}),last:new H({width:23,height:23,url:`data:image/svg+xml;base64,${btoa('\x3csvg width\x3d"30" height\x3d"30" viewBox\x3d"0 0 30 30" xmlns\x3d"http://www.w3.org/2000/svg"\x3e\x3cg fill-rule\x3d"nonzero" fill\x3d"none"\x3e\x3cpath d\x3d"M15.15.3C6.9.3.3 6.9.3 15.15S6.9 29.7 15.15 29.7 29.7 23.1 29.7 15.15C29.7 6.9 23.25.3 15.15.3z" fill\x3d"#333"/\x3e\x3cpath d\x3d"M15 4.8C9.3 4.8 4.8 9.45 4.8 15c0 5.55 4.65 10.2 10.2 10.2 5.55 0 10.2-4.5 10.2-10.2 0-5.55-4.5-10.2-10.2-10.2z" fill\x3d"#69DCFF"/\x3e\x3cpath fill\x3d"#333" d\x3d"M10.5 10.5h9v9h-9z"/\x3e\x3c/g\x3e\x3c/svg\x3e')}`}),
unlocated:new H({height:18,width:18,url:`data:image/svg+xml;base64,${btoa('\x3csvg width\x3d"20" height\x3d"20" viewBox\x3d"0 0 20 20" xmlns\x3d"http://www.w3.org/2000/svg"\x3e\x3cg fill\x3d"none" fill-rule\x3d"evenodd"\x3e\x3cpath d\x3d"M10.1.2C4.6.2.2 4.6.2 10.1s4.4 9.7 9.9 9.7 9.7-4.4 9.7-9.7c0-5.5-4.3-9.9-9.7-9.9z" fill\x3d"#333" fill-rule\x3d"nonzero"/\x3e\x3cpath d\x3d"M10 2.7c-4.08 0-7.3 3.328-7.3 7.3s3.328 7.3 7.3 7.3 7.3-3.22 7.3-7.3c0-3.972-3.22-7.3-7.3-7.3z" fill\x3d"#69DCFF" fill-rule\x3d"nonzero"/\x3e\x3cpath d\x3d"M11.414 10l5.304-5.303-1.415-1.415L10 8.586 4.697 3.282 3.282 4.697 8.586 10l-5.304 5.303 1.415 1.415L10 11.414l5.303 5.304 1.415-1.415L11.414 10z" fill\x3d"#333"/\x3e\x3c/g\x3e\x3c/svg\x3e')}`}),
waypoint:new A({color:[255,255,255,1],size:10,outline:{color:[20,89,127,1],width:2.5}})};f=function(L){function x(a){a=L.call(this,a)||this;a._handles=new V;a._routeLayer=new C({listMode:"hide"});a._highlightLayer=new C({listMode:"hide"});a._stopId=9999;a._stopLayer=new C({listMode:"hide"});a._serviceDescriptionLoadStatus=0;a.apiKey=void 0;a.departureTime="now";a.lastRoute=null;a.routeSymbol=new T({color:[105,220,255,1],width:7,cap:"round",join:"round"});a.routeParameters=new J({doNotLocateOnRestrictedElements:!0,
ignoreInvalidLocations:!0,directionsOutputType:"complete",findBestSequence:!1,preserveFirstStop:!0,preserveLastStop:!0,restrictUTurns:"at-dead-ends-and-intersections",directionsLengthUnits:"kilometers",returnBarriers:!1,returnDirections:!0,returnPolygonBarriers:!1,returnPolylineBarriers:!1,returnRoutes:!1,returnStops:!0,returnZ:!0,startTime:null,startTimeIsUTC:!0,stops:null,useHierarchy:!0,useTimeWindows:!1});a.routeServiceUrl="https://route-api.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World";
a.serviceDescription=null;a.error=null;a.stops=new G;a.view=null;return a}E._inheritsLoose(x,L);var m=x.prototype;m.initialize=function(){this._handles.add([B.on(this,"stops","change",()=>{this.clearResults();this._addStopsToLayer()}),B.init(this,"view.map",(a,c)=>{const d=[this._routeLayer,this._stopLayer,this._highlightLayer];c&&c.removeMany(d);a&&a.addMany(d)}),B.watch(this,"lastRoute",()=>this._addRouteToLayer())])};m.destroy=function(){this.stops.destroy();const a=this.get("view.map");a&&a.removeMany([this._routeLayer,
this._stopLayer,this._highlightLayer])};m.load=async function(){if(!this.serviceDescription)try{this._serviceDescriptionLoadStatus=1,this.notifyChange("state"),await this._loadServiceDescription(),this._serviceDescriptionLoadStatus=2,this.notifyChange("state")}catch(c){var a="identity-manager:user-aborted"===c.name;this._serviceDescriptionLoadStatus=a?4:3;this.notifyChange("state");if(!a)throw a=new w("directions-view-model:service-metadata-unavailable","Cannot load route service metadata",{error:c}),
this._set("error",a),a;}};m.highlightSegment=function(a){const {view:c,_highlightLayer:d}=this;if(c&&!N.isNone(a.symbol)){this.clearHighlights();var e=a.symbol.clone();e.color=new S([0,0,0,.8]);e.width=Math.ceil(e.width/2);a=new U({geometry:a.geometry,symbol:e});d.graphics.add(a)}};m.clearHighlights=function(){this._highlightLayer.graphics.removeAll()};m.centerAt=function(a){const {view:c}=this;c&&this.callGoTo({target:a})};m.clearResults=function(){this._set("lastRoute",null)};m.getDirections=function(){var {state:a}=
this;if("unauthenticated"===a||"initializing"===a||"disabled"===a||3===this._serviceDescriptionLoadStatus)return Promise.reject(new w("directions-view-model:not-loaded","Cannot get directions until view model loads."));this._set("error",null);this._activeRouteController&&(this._activeRouteController.abort(),this._activeRouteController=null);const {apiKey:c,departureTime:d}=this;a="now"===d;const e="now"===d?new Date:d;if(e&&!a){const k=6E4*e.getTimezoneOffset();e.setTime(e.getTime()-k)}const n=this.routeParameters.clone();
n.set({startTime:e,startTimeIsUTC:a,directionsLanguage:this._directionsLanguage,apiKey:c});this.selectedTravelMode&&(n.travelMode=this.selectedTravelMode);if(1>=this.stops.length)return a=new w("directions-view-model:not-enough-stops","Not enough stops for routing"),this._set("error",a),Promise.reject(a);a=new AbortController;const {signal:y}=a;this._activeRouteController=a;a=this._enqueue(()=>{const k=this.stops.clone().toArray(),u={},M=b=>{const t=b&&b.routeResults&&b.routeResults[0]&&b.routeResults[0].stops||
[];(b&&b.routeResults&&b.routeResults[0]&&b.routeResults[0].directions&&b.routeResults[0].directions.features||[]).map(l=>{for(let p=0;p<k.length;p++)if(-1<l.attributes.text.indexOf(k[p].attributes.Name)){const z=k[p].attributes.Name;l.attributes.text=l.attributes.text.replace(z,u[z]);l._associatedStop=k[p];break}});k.map(l=>l.attributes.Name=u[l.attributes.Name]);t.map(l=>{l.attributes.Name=u[l.attributes.Name]})},ba=b=>{if(b&&b.routeResults&&b.routeResults[0]){b=b.routeResults[0];const t=b.stops||
[],l=this.stops.clone().toArray();let p=b.directions&&b.directions.routeName||b.routeName||"";t.map((z,aa)=>{const q=z.attributes,r=l[aa].attributes;p=p.replace(q.Name,r.Name);Object.keys(q).forEach(D=>{0===D.indexOf("Cumul_")&&(r[D]=q[D])});r.ArriveCurbApproach=q.ArriveCurbApproach;r.ArriveTime=q.ArriveTime;r.ArriveTimeUTC=q.ArriveTimeUTC;r.DepartCurbApproach=q.DepartCurbApproach;r.DepartTime=q.DepartTime;r.DepartTimeUTC=q.DepartTimeUTC;r.Sequence=q.Sequence;r.Status=q.Status});b.directions&&(b.directions.routeName=
p);null!==b.route&&(b.route.attributes.Name=p);b.routeName=p}},ca=b=>{b=b&&b.routeResults&&b.routeResults[0]&&b.routeResults[0].stops||[];const t=this.stops.toArray();let l=b.length===t.length,p=0;for(;l&&p<b.length;)l=l&&u[b[p].attributes.Name]===t[p++].attributes.Name;return l};(()=>{k.map(b=>{b=b.attributes;const t=`${(b.Name||"[not yet geocoded]").substr(0,100)}_#${++this._stopId}`;u[t]=b.Name;b.Name=t})})();n.stops=new W({features:k});return this._routeTask.solve(n,{signal:y}).then(b=>{if(ca(b))return ba(b),
M(b),this._set("lastRoute",b),b;Z.warn("Response stops don't match current stops of the ViewModel, invalidating the results.");this._set("lastRoute",null);return null}).catch(b=>{M(null);throw b;})}).then(k=>{this._activeRouteController=null;this.notifyChange("state");this.zoomToRoute();return k}).catch(k=>{this._activeRouteController=null;this.notifyChange("state");if(!F.isAbortError(k))throw k=new w("directions-view-model:unable-to-route","Unable to route to these addresses",{error:k}),this._set("error",
k),k;});this.notifyChange("state");return a};m.getCostAttribute=function(a){const c=this.serviceDescription&&this.serviceDescription.networkDataset.networkAttributes||[];let d="";for(let e=0;e<c.length;e++)if(c[e].name===a&&"esriNAUTCost"===c[e].usageType){d=c[e];break}return d};m.reset=function(){this.stops.removeAll();this.clearHighlights();this._set("lastRoute",null)};m.zoomToRoute=function(){const {directionLines:a,view:c}=this;if(a&&c){var d=Y.graphicsExtent(a);this.callGoTo({target:d.expand(d.width>
d.height?2:1)})}};m._loadServiceDescription=async function(){const a=await this._routeTask.getServiceDescription(this.apiKey);this._set("serviceDescription",a)};m._enqueue=function(a){this._requestQueueTail||(this._requestQueueTail=Promise.resolve());const c=new Promise((d,e)=>{this._requestQueueTail.catch(()=>{}).then(()=>{try{const n=a.call(this);F.isPromiseLike(n)?n.then(d,e):d(n)}catch(n){e(n)}})});return this._requestQueueTail=c};m._addStopsToLayer=function(){this._stopLayer.graphics.removeAll();
const a=this.stops.clone().map((c,d)=>{const {first:e,middle:n,last:y,unlocated:k,waypoint:u}=this.stopSymbols;v.isWaypoint(c)?c.symbol=u:c.symbol=void 0===c.attributes.Status?0===d?e:d===this.stops.length-1?y:n:v.isWaypoint(c)?u:v.isStopLocated(c)?v.isFirstStop(c)?e:v.isLastStop(c)?y:n:k;return c});this._stopLayer.graphics.addMany(a)};m._addRouteToLayer=function(){this._routeLayer.graphics.removeAll();const {directionLines:a}=this;a&&(a.forEach(c=>{c.symbol=this.routeSymbol}),this._routeLayer.graphics.addMany(a))};
E._createClass(x,[{key:"_directionsLanguage",get:function(){const {routeParameters:a,serviceDescription:c}=this,{directionsSupportedLanguages:d}=c;if(d){var e=(a.directionsLanguage||R.getLocale()).slice(0,2);return d.find(n=>n.toLowerCase().slice(0,2)===e)}}},{key:"_routeTask",get:function(){return new I(this.routeServiceUrl)}},{key:"impedanceAttribute",get:function(){const a=this.get("routeParameters.travelMode.impedanceAttributeName")||this.get("routeParameters.impedanceAttribute")||this.get("serviceDescription.impedance");
return this.getCostAttribute(a)}},{key:"maxStops",set:function(a){this._set("maxStops",2>=a?2:50<a?50:a)}},{key:"selectedTravelMode",get:function(){var {serviceDescription:a}=this;if(!a)return null;const {defaultTravelMode:c,supportedTravelModes:d=[]}=a;a=null;for(let e=0;e<d.length;e++)d[e].id===c&&(a=d[e]);return a||d[0]||null},set:function(a){void 0===a?this._clearOverride("selectedTravelMode"):this._override("selectedTravelMode",a)}},{key:"state",get:function(){const a=this._serviceDescriptionLoadStatus;
return 4===a?"unauthenticated":0===a?"disabled":1===a?"initializing":this._activeRouteController?"routing":3===a||this.error?"error":"ready"}},{key:"stopSymbols",set:function(a){this._set("stopSymbols",{...K,...a})}},{key:"timeAttribute",get:function(){const a=this.get("routeParameters.travelMode.timeAttributeName")||this.get("routeParameters.directionsTimeAttribute")||this.get("serviceDescription.directionsTimeAttribute");return this.getCostAttribute(a)}},{key:"travelModes",get:function(){return this.get("serviceDescription.supportedTravelModes")||
[]}}]);return x}(X.GoToMixin(Q.EventedAccessor));g.__decorate([h.property()],f.prototype,"_directionsLanguage",null);g.__decorate([h.property({type:I})],f.prototype,"_routeTask",null);g.__decorate([h.property()],f.prototype,"apiKey",void 0);g.__decorate([h.property()],f.prototype,"departureTime",void 0);g.__decorate([h.property({aliasOf:"lastRoute.routeResults.0.directions.features"})],f.prototype,"directionLines",void 0);g.__decorate([h.property({readOnly:!0})],f.prototype,"impedanceAttribute",null);
g.__decorate([h.property({readOnly:!0})],f.prototype,"lastRoute",void 0);g.__decorate([h.property({value:50})],f.prototype,"maxStops",null);g.__decorate([h.property()],f.prototype,"routeSymbol",void 0);g.__decorate([h.property({type:J})],f.prototype,"routeParameters",void 0);g.__decorate([h.property()],f.prototype,"routeServiceUrl",void 0);g.__decorate([h.property()],f.prototype,"selectedTravelMode",null);g.__decorate([h.property({readOnly:!0})],f.prototype,"serviceDescription",void 0);g.__decorate([h.property({readOnly:!0})],
f.prototype,"state",null);g.__decorate([h.property()],f.prototype,"error",void 0);g.__decorate([h.property({type:G})],f.prototype,"stops",void 0);g.__decorate([h.property({value:K})],f.prototype,"stopSymbols",null);g.__decorate([h.property({readOnly:!0})],f.prototype,"timeAttribute",null);g.__decorate([h.property()],f.prototype,"travelModes",null);g.__decorate([h.property()],f.prototype,"view",void 0);g.__decorate([h.property()],f.prototype,"getDirections",null);g.__decorate([h.property()],f.prototype,
"zoomToRoute",null);return f=g.__decorate([P.subclass("esri.widgets.Directions.DirectionsViewModel")],f)});