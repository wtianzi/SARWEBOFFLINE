// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/Logger ../../../core/promiseUtils ../../../layers/FeatureLayer ./featureUtils".split(" "),function(r,q,t,u,v,l){function w(c){return`<ul class="esri-widget__list">${c.map(a=>`<li>${"string"===typeof a?l.applyTextFormattingHTML(l.htmlEntities(a)):a}</li>`).join("")}</ul>`}function x(c){return`<table class="esri-widget__table">${c.keys().map(a=>{var d=c.field(a);d="string"===typeof d?l.applyTextFormattingHTML(l.htmlEntities(d)):d;return`<tr><th>${a}</th><td>${d}</td></tr>`}).join("")}</table>`}
function y({aggregatedFeatures:c,arcadeUtils:a,featureSetVars:d,context:e,viewInfo:b,map:k,graphic:h}){d.forEach(g=>{g=g.toLowerCase();var f={map:k,spatialReference:b.sr};"$map"===g&&(e.vars[g]=a.convertMapToFeatureSetCollection(f));"$layer"===g&&(e.vars[g]=a.convertFeatureLayerToFeatureSet(h.sourceLayer,b.sr));"$datastore"===g&&(e.vars[g]=a.convertServiceUrlToWorkspace(h.sourceLayer.url,b.sr));if("$aggregatedfeatures"===g){f=h.layer;const {fields:n,objectIdField:p,geometryType:m,spatialReference:z,
displayField:A}=f;f=new v({fields:n,objectIdField:p,geometryType:m,spatialReference:z,displayField:A,..."feature"===f.type?{templates:f.templates,typeIdField:f.typeIdField,types:f.types}:null,source:c});e.vars[g]=a.convertFeatureLayerToFeatureSet(f,b.sr)}})}function B(){return new Promise(function(c,a){r(["../../../support/arcadeUtils"],c,a)})}async function C({graphic:c,view:a}){const {isAggregate:d,layer:e}=c;if(!d||!e||"2d"!==(null==a?void 0:a.type))return[];a=await a.whenLayerView(e);if(!a.createQuery||
!a.queryFeatures)return[];const b=a.createQuery();b.aggregateIds=[c.getObjectId()];({features:c}=await a.queryFeatures(b));return c}async function D({expressionAttributes:c,info:a,arcadeUtils:d,spatialReference:e,map:b,graphic:k,view:h}){const g=`expression/${a.name}`,f=d.createSyntaxTree(a.expression),n=E.filter(m=>d.hasVariable(f,m));await d.loadScriptDependencies(f,!0,n);const p=d.getViewInfo({spatialReference:e});e=d.createExecContext(k,p);e.useAsync=!0;h=await C({graphic:k,view:h});y({aggregatedFeatures:h,
arcadeUtils:d,featureSetVars:n,context:e,viewInfo:p,map:b,graphic:k});b=d.createFunction(f,e);b=await d.executeAsyncFunction(b,e).catch(m=>F.error("arcade-execution-error",{error:m,graphic:k,expressionInfo:a}));c[g]="string"===typeof b?l.applyTextFormattingHTML(l.htmlEntities(b)):Array.isArray(b)?w(b):b&&"esri.arcade.Dictionary"===b.declaredClass?x(b):b}const E=["$datastore","$map","$layer","$aggregatedfeatures"],F=t.getLogger("esri.widgets.Feature.support.arcadeFeatureUtils");q.createFormattedExpressions=
async function({popupTemplate:c,spatialReference:a,graphic:d,map:e,view:b}){c=c.expressionInfos;const k=[],h={};if(!c||!c.length)return h;const g=await B();for(const f of c)k.push(D({expressionAttributes:h,info:f,arcadeUtils:g,spatialReference:a,map:e,graphic:d,view:b}));await u.eachAlways(k);return h};Object.defineProperty(q,"__esModule",{value:!0})});