// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/Error ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/promiseUtils ../../geometry/support/webMercatorUtils ../../geometry/Point ../../geometry ../../core/Collection ../../support/actions/ActionBase ../../support/actions/ActionButton ../../support/actions/ActionToggle ../../symbols/SimpleFillSymbol ../../symbols ../../Graphic ../../core/Handles ../../layers/Layer ../../core/watchUtils ../Feature/FeatureViewModel ../support/AnchorElementViewModel ../../symbols/support/symbolUtils ../../views/input/InputManager ../../views/support/layerViewUtils ./actions ./actionUtils ../support/GoTo".split(" "),
function(y,d,c,z,D,X,e,Y,E,A,Z,aa,ba,F,G,H,ca,I,J,K,L,M,da,N,O,P,p,Q,R,S,T,U,w,t,V){const u=I.ofType({key:"type",defaultKeyValue:"button",base:J,typeMap:{button:K,toggle:L}}),B=D.getLogger("esri.widgets.Popup.PopupViewModel");c=function(C){function x(a){a=C.call(this,a)||this;a._handles=new O;a._pendingPromises=new Set;a._fetchFeaturesController=null;a._selectedClusterFeature=null;a.featurePage=null;a.featuresPerPage=20;a.actions=new u;a.defaultPopupTemplateEnabled=!1;a.autoCloseEnabled=!1;a.autoOpenEnabled=
!0;a.browseClusterEnabled=!1;a.content=null;a.featureViewModels=[];a.highlightEnabled=!0;a.includeDefaultActions=!0;a.selectedClusterBoundaryFeature=new N({symbol:new M({outline:{width:1.5,color:"cyan"},style:"none"})});a.title=null;a.updateLocationEnabled=!1;a.view=null;a.visible=!1;a.zoomFactor=4;a.zoomToLocation=null;return a}y._inheritsLoose(x,C);var f=x.prototype;f.initialize=function(){this._handles.add([p.init(this,["autoOpenEnabled","view"],()=>this._autoOpenEnabledChange()),this.on("view-change",
()=>this._autoClose()),p.watch(this,["highlightEnabled","selectedFeature","visible","view"],()=>this._highlightFeature()),p.watch(this,"view.animation.state",a=>this._animationStateChange(a)),p.watch(this,"location",a=>this._locationChange(a)),p.watch(this,"selectedFeature",a=>this._selectedFeatureChange(a)),p.watch(this,["selectedFeatureIndex","featureCount","featuresPerPage"],()=>this._selectedFeatureIndexChange()),p.watch(this,["featurePage","selectedFeatureIndex","featureCount","featuresPerPage, featureViewModels"],
()=>this._setGraphicOnFeatureViewModels()),p.watch(this,"featureViewModels",()=>this._featureViewModelsChange()),this.on("trigger-action",a=>t.triggerAction({event:a,view:this.view})),p.whenFalse(this,"waitingForResult",()=>this._waitingForResultChange()),p.watch(this,["features","view","view.map","view.spatialReference"],()=>this._updateFeatureVMs()),p.watch(this,["view.scale"],this._viewScaleChange),p.whenFalse(this,"visible",()=>this.browseClusterEnabled=!1),p.watch(this,"browseClusterEnabled",
a=>a?this.enableClusterBrowsing():this.disableClusterBrowsing())])};f.destroy=function(){this._cancelFetchingFeatures();this._handles.destroy();this._handles=null;this._pendingPromises.clear();this.browseClusterEnabled=!1;this.view=null};f.centerAtLocation=function(){var {view:a}=this;const b=t.getSelectedTarget(this);return b?this.callGoTo({target:{target:b,scale:a.scale}}):(a=new A("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:b,view:a}),
B.error(a),Promise.reject(a))};f.clear=function(){this.set({promises:[],features:[],content:null,title:null,location:null})};f.fetchFeatures=function(a,b){const {view:g}=this;return g&&a?g.fetchPopupFeatures(a,{event:b&&b.event,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,signal:b&&b.signal}):(a=new A("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",{screenPoint:a,view:g}),B.error(a),Promise.reject(a))};f.open=function(a){a={updateLocationEnabled:!1,
promises:[],fetchFeatures:!1,...a,visible:!0};const {fetchFeatures:b}=a;delete a.fetchFeatures;b&&this._setFetchFeaturesPromises(a.location);this.set(a)};f.triggerAction=function(a){(a=this.allActions.getItemAt(a))&&!a.disabled&&this.emit("trigger-action",{action:a})};f.next=function(){this.selectedFeatureIndex+=1;return this};f.previous=function(){--this.selectedFeatureIndex;return this};f.disableClusterBrowsing=function(){t.removeClusteredFeaturesForBrowsing(this);this._clearBrowsedClusterGraphics()};
f.enableClusterBrowsing=async function(){await t.displayClusterExtent(this);await t.browseAggregateFeatures(this)};f._animationStateChange=function(a){this.zoomToLocation||(w.zoomToFeature.disabled="waiting-for-target"===a)};f._clearBrowsedClusterGraphics=function(){var a;const b=null==(a=this.view)?void 0:a.graphics;b&&(b.remove(this.selectedClusterBoundaryFeature),b.remove(this._selectedClusterFeature));this._selectedClusterFeature=null;this.selectedClusterBoundaryFeature.geometry=null};f._viewScaleChange=
function(){var a;if(null!=(a=this.selectedFeature)&&a.isAggregate||this.browseClusterEnabled)this.visible=this.browseClusterEnabled=!1};f._locationChange=function(a){const {selectedFeature:b,updateLocationEnabled:g}=this;g&&a&&(!b||b.geometry)&&this.centerAtLocation()};f._selectedFeatureIndexChange=function(){this.featurePage=1<this.featureCount?Math.floor(this.selectedFeatureIndex/this.featuresPerPage)+1:null};f._featureViewModelsChange=function(){this.featurePage=1<this.featureCount?1:null};f._setGraphicOnFeatureViewModels=
function(){const {features:a,featureCount:b,featurePage:g,featuresPerPage:h,featureViewModels:l}=this;if(null!==g){var k=((g-1)*h+b)%b;l.slice(k,k+h).forEach((m,n)=>{m&&!m.graphic&&(m.graphic=a[k+n])})}};f._selectedFeatureChange=async function(a){if(a){var {location:b,updateLocationEnabled:g,view:h}=this;this.browseClusterEnabled?(this._selectedClusterFeature&&(h.graphics.remove(this._selectedClusterFeature),this._selectedClusterFeature=null),a.isAggregate||(a.symbol=await S.getDisplayedSymbol(a),
this._selectedClusterFeature=a,h.graphics.add(this._selectedClusterFeature))):!g&&b||!a.geometry?g&&!a.geometry&&this.centerAtLocation().then(()=>{this.location=h.center.clone()}):this.location=z.unwrap(this._getPointFromGeometry(a.geometry))}};f._waitingForResultChange=function(){!this.featureCount&&this.promises&&(this.visible=!1)};f._setFetchFeaturesPromises=function(a){return this._fetchFeaturesWithController(this._getScreenPoint(a||this.location)).then(b=>{const {clientOnlyGraphics:g,promisesPerLayerView:h}=
b;b=Promise.resolve(g);const l=h.map(k=>k.promise);this.promises=[b,...l]})};f._destroyFeatureVMs=function(){this.featureViewModels.forEach(a=>a&&!a.destroyed&&a.destroy());this._set("featureViewModels",[])};f._updateFeatureVMs=function(){const {selectedFeature:a,features:b,featureViewModels:g}=this;null!=a&&a.isAggregate||(this.browseClusterEnabled=!1);this._destroyFeatureVMs();if(b&&b.length){var h=g.slice(0),l=[];b.forEach((k,m)=>{if(k){var n=null;h.some((v,W)=>{v&&v.graphic===k&&(n=v,h.splice(W,
1));return!!n});if(n)l[m]=n;else{var q,r;const v=new Q({defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,spatialReference:null==(q=this.view)?void 0:q.spatialReference,graphic:k===a?k:null,map:null==(r=this.view)?void 0:r.map,view:this.view});l[m]=v}}});h.forEach(k=>k&&!k.destroyed&&k.destroy());this._set("featureViewModels",l)}};f._getScreenPoint=function(a){const {view:b}=this;return b&&a&&"function"===typeof b.toScreen?b.toScreen(a):null};f._autoOpenEnabledChange=function(){const {_handles:a,
autoOpenEnabled:b}=this;a.remove("auto-fetch-features");if(b&&this.view){const g=this.view.on("click",h=>{"mouse"===h.pointerType&&0!==h.button||this._fetchFeaturesAndOpen(h)},T.ViewEventPriorities.WIDGET);a.add(g,"auto-fetch-features")}};f._cancelFetchingFeatures=function(){const a=this._fetchFeaturesController;a&&a.abort();this._fetchFeaturesController=null;this.notifyChange("waitingForResult")};f._fetchFeaturesWithController=function(a,b){this._cancelFetchingFeatures();const g=F.createAbortController(),
{signal:h}=g;this._fetchFeaturesController=g;this.notifyChange("waitingForResult");a=this.fetchFeatures(a,{signal:h,event:b});a.catch(()=>{}).then(()=>{this._fetchFeaturesController=null;this.notifyChange("waitingForResult")});return a};f._fetchFeaturesAndOpen=function(a){const {screenPoint:b,mapPoint:g}=a,{view:h}=this;this._fetchFeaturesWithController(b,a).then(l=>{const {clientOnlyGraphics:k,promisesPerLayerView:m,location:n}=l,q=[Promise.resolve(k),...m.map(r=>r.promise)];h.popup.open({location:n||
g,promises:q});return l})};f._updatePendingPromises=function(a){a&&this._pendingPromises.has(a)&&(this._pendingPromises.delete(a),this.notifyChange("pendingPromisesCount"))};f._autoClose=function(){this.autoCloseEnabled&&(this.visible=!1)};f._getPointFromGeometry=function(a){return z.isNone(a)?null:"point"===a.type?a:"extent"===a.type?a.center:"polygon"===a.type?a.centroid:"multipoint"===a.type||"polyline"===a.type?a.extent.center:null};f._getLayerView=async function(a,b){await a.when();return a.whenLayerView(b)};
f._highlightFeature=async function(){this._handles.remove("highlight");const {selectedFeature:a,highlightEnabled:b,view:g,visible:h}=this;if(a&&g&&b&&h){var {layer:l,sourceLayer:k}=a;if(l&&l instanceof P){"map-notes"===(null==k?void 0:k.type)&&(l=k);var m=this._getLayerView(g,l);this._highlightPromise=m;var n=await m;if(n&&U.highlightsSupported(n)&&this._highlightPromise===m&&this.selectedFeature&&this.highlightEnabled&&this.visible){m="objectIdField"in l&&l.objectIdField;var q=a.attributes;n=n.highlight(q&&
m&&q[m]||a);this._handles.add(n,"highlight")}}}};f._updateFeatures=function(a){const {features:b}=this;a&&a.length&&(b.length?(a=a.filter(g=>-1===b.indexOf(g)),this.features=b.concat(a)):this.features=a)};y._createClass(x,[{key:"isLoadingFeature",get:function(){return this.featureViewModels.some(a=>a.waitingForContent)}},{key:"active",get:function(){return!(!this.visible||this.waitingForResult)}},{key:"allActions",get:function(){const a=this._get("allActions")||new u;a.removeAll();const {actions:b,
defaultActions:g,defaultPopupTemplateEnabled:h,includeDefaultActions:l,selectedFeature:k}=this;var m=l?g.concat(b):b;const n=k&&("function"===typeof k.getEffectivePopupTemplate&&k.getEffectivePopupTemplate(h)||k.popupTemplate),q=n&&n.actions;(m=n&&n.overwriteActions?q:q?q.concat(m):m)&&m.filter(Boolean).forEach(r=>a.add(r));return a}},{key:"defaultActions",get:function(){var a;const b=this._get("defaultActions")||new u;b.removeAll();b.addMany(null!=(a=this.selectedFeature)&&a.isAggregate?[w.zoomToClusteredFeatures.clone(),
w.browseClusteredFeatures.clone()]:[w.zoomToFeature.clone()]);return b}},{key:"featureCount",get:function(){return this.features.length}},{key:"features",get:function(){return this._get("features")||[]},set:function(a){a=a||[];this._set("features",a);const {pendingPromisesCount:b,promiseCount:g,selectedFeatureIndex:h}=this,l=g&&a.length;l&&b&&-1===h?this.selectedFeatureIndex=0:l&&-1!==h||(this.selectedFeatureIndex=a.length?0:-1)}},{key:"location",get:function(){return this._get("location")||null},
set:function(a){const b=this.get("view.spatialReference.isWebMercator");a&&a.get("spatialReference.isWGS84")&&b&&(a=G.geographicToWebMercator(a));this._set("location",a)}},{key:"pendingPromisesCount",get:function(){return this._pendingPromises.size}},{key:"waitingForResult",get:function(){return!(!(this._fetchFeaturesController||0<this.pendingPromisesCount)||0!==this.featureCount)}},{key:"promiseCount",get:function(){return this.promises.length}},{key:"promises",get:function(){return this._get("promises")||
[]},set:function(a){this._pendingPromises.clear();this.features=[];Array.isArray(a)&&a.length?(this._set("promises",a),a=a.slice(0),a.forEach(b=>{this._pendingPromises.add(b);b.then(g=>{this._pendingPromises.has(b)&&this._updateFeatures(g);this._updatePendingPromises(b)},()=>this._updatePendingPromises(b))})):this._set("promises",[]);this.notifyChange("pendingPromisesCount")}},{key:"selectedFeature",get:function(){const {features:a,selectedFeatureIndex:b}=this;return-1===b?null:a[b]||null}},{key:"selectedFeatureIndex",
get:function(){const a=this._get("selectedFeatureIndex");return"number"===typeof a?a:-1},set:function(a){const {featureCount:b}=this;a=isNaN(a)||-1>a||!b?-1:(a+b)%b;this._set("selectedFeatureIndex",a)}},{key:"selectedFeatureViewModel",get:function(){return this.featureViewModels[this.selectedFeatureIndex]||null}},{key:"state",get:function(){return this.get("view.ready")?"ready":"disabled"}}]);return x}(V.GoToMixin(R));d.__decorate([e.property()],c.prototype,"featurePage",void 0);d.__decorate([e.property()],
c.prototype,"featuresPerPage",void 0);d.__decorate([e.property()],c.prototype,"isLoadingFeature",null);d.__decorate([e.property({type:u})],c.prototype,"actions",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"active",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"allActions",null);d.__decorate([e.property({type:Boolean})],c.prototype,"defaultPopupTemplateEnabled",void 0);d.__decorate([e.property()],c.prototype,"autoCloseEnabled",void 0);d.__decorate([e.property()],c.prototype,
"autoOpenEnabled",void 0);d.__decorate([e.property()],c.prototype,"browseClusterEnabled",void 0);d.__decorate([e.property()],c.prototype,"content",void 0);d.__decorate([e.property({type:u,readOnly:!0})],c.prototype,"defaultActions",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"featureCount",null);d.__decorate([e.property()],c.prototype,"features",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"featureViewModels",void 0);d.__decorate([e.property()],c.prototype,"highlightEnabled",
void 0);d.__decorate([e.property()],c.prototype,"includeDefaultActions",void 0);d.__decorate([e.property({type:H})],c.prototype,"location",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"pendingPromisesCount",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"selectedClusterBoundaryFeature",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"waitingForResult",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"promiseCount",null);d.__decorate([e.property()],
c.prototype,"promises",null);d.__decorate([e.property({value:null,readOnly:!0})],c.prototype,"selectedFeature",null);d.__decorate([e.property({value:-1})],c.prototype,"selectedFeatureIndex",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"selectedFeatureViewModel",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"state",null);d.__decorate([e.property()],c.prototype,"title",void 0);d.__decorate([e.property()],c.prototype,"updateLocationEnabled",void 0);d.__decorate([e.property()],
c.prototype,"view",void 0);d.__decorate([e.property()],c.prototype,"visible",void 0);d.__decorate([e.property()],c.prototype,"zoomFactor",void 0);d.__decorate([e.property()],c.prototype,"zoomToLocation",void 0);d.__decorate([e.property()],c.prototype,"centerAtLocation",null);return c=d.__decorate([E.subclass("esri.widgets.Popup.PopupViewModel")],c)});