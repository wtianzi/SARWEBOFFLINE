// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/handleUtils ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../Color ../../chunks/vec3 ../../geometry/projectionEllipsoid ../../core/unitUtils ../../core/watchUtils ../../core/memoize ../../core/SetUtils ../../chunks/vec4f64 ../../views/3d/support/geometryUtils ../../views/3d/webgl-engine/lib/Intersector ./ElevationProfileLine ../../layers/support/ElevationQuery".split(" "),
function(A,f,e,g,V,W,I,k,X,J,Y,Z,aa,B,C,K,L,w,M,N,D,E,O,P,Q){function R({view:h,inputGraphicUid:l,maxIntersectionDistance:t},a){for(let b=0;b<a.length;b++){const d=a[b];if(d.distanceInRenderSpace>t)continue;const c=d.toGraphic(h);if(g.isNone(c)||F(c)!==l)return d}return null}function F(h){if(h.layer&&"objectIdField"in h.layer){const l=h.attributes[h.layer.objectIdField];if(l)return`o-${h.layer.id}-${l}`}return`u-${h.uid}`}e=function(h){function l(a){a=h.call(this,a)||this;a.type="view";a.color=new B("#cf4ccf");
a.include=null;a.exclude=null;a.numSamplesForPreview=50;a.numSamplesPerChunk=25;a._getQueryElevationDependencies=M.memoize((b,d,c,m,u,n,p)=>({inputGraphicUid:g.isSome(b)?F(b):null,visibleLayers:d,maxIntersectionDistance:c,intersectOptions:m,view:u,stationary:n,spatialReference:p}));a._vecA=D.create();a._vecB=D.create();a._ray=E.ray.create();return a}A._inheritsLoose(l,h);var t=l.prototype;t.queryElevation=async function(a,{noDataValue:b,signal:d}){const c=this.queryElevationDependencies;if(g.isNone(c))throw Error("ElevationProfileLineInput: no dependencies");
const {intersectOptions:m,view:u,spatialReference:n}=c,p=u.renderCoordsHelper,S=u.sceneIntersectionHelper,G=this._intersector,x=this._vecA,v=this._vecA,q=this._vecB,T=this._ray;a=await Q.GeometryDescriptor.fromGeometry(a).project(n,d);d=a.coordinates;const U=d.length;for(let y=0;y<U;++y){var H;const r=d[y];C.set(q,r.x,r.y,null!=(H=r.z)?H:0);p.toRenderCoords(q,n,q);C.copy(x,q);p.setAltitude(2E5,x);var z=E.ray.fromPoints(x,q,T);S.computeIntersection(z,G,m);(z=R(c,G.results.all))?(z.getIntersectionPoint(v),
p.fromRenderCoords(v,v,n),r.z=v[2]):r.z=b}return{geometry:a.export(),noDataValue:b}};t.attach=function(a){const b=()=>this._onChange();return I.handlesGroup([h.prototype.attach.call(this,a),this.watch("queryElevationDependencies",b),w.on(this,"include","change",b,b,b),w.on(this,"exclude","change",b,b,b),w.on(a,"view.elevationProvider","elevation-change",b)])};A._createClass(l,[{key:"minDemResolution",get:function(){var a,b,d;const c=null==(a=this._viewModel)?void 0:a.view;return g.isNone(c)||"3d"!==
c.type?null:(a=null==(b=c.pointsOfInterest)?void 0:null==(d=b.focus)?void 0:d.renderLocation)?c.state.camera.computeRenderPixelSizeAt(a)*L.getMetersPerVerticalUnitForSR(c.spatialReference):null}},{key:"queryElevationDependencies",get:function(){return g.applySome(this._view,a=>this._getQueryElevationDependencies(this._viewModel.input,this._visibleLayers,this._maxIntersectionDistance,this._intersectOptions,a,a.stationary,a.spatialReference))}},{key:"_visibleLayers",get:function(){const a=g.applySome(this._view,
b=>{var d,c;return null==(d=b.map)?void 0:null==(c=d.allLayers)?void 0:c.filter(m=>m.visible).toArray()});return g.unwrapOr(a,[])}},{key:"_intersectOptions",get:function(){var a=this._view;if(g.isNone(a))return{};const b=a.externalToInternalIntersectOptions({include:this.include,exclude:this.exclude});a=a.externalToInternalIntersectOptions({exclude:this._pointCloudLayers});b.exclude=N.union(b.exclude,a.exclude);return b}},{key:"_pointCloudLayers",get:function(){const a=this._view;return g.isNone(a)?
[]:a.allLayerViews.toArray().filter(b=>"point-cloud"===b.layer.type).map(b=>b.layer)}},{key:"_view",get:function(){const a=this._viewModel.view;return g.isSome(a)&&"3d"===a.type?a:null}},{key:"_maxIntersectionDistance",get:function(){const a=this._view;return g.isNone(a)||!a.renderCoordsHelper?Number.POSITIVE_INFINITY:K.getReferenceEllipsoid(a.spatialReference).radius/a.renderCoordsHelper.unitInMeters}},{key:"_intersector",get:function(){var a=this._view;if(g.isNone(a))return null;a=new O.Intersector(a.state.mode);
const b=a.options;b.hud=!1;b.invisibleTerrain=!1;b.backfacesTerrain=!1;b.selectionMode=!1;b.store=2;return a}}]);return l}(P.ElevationProfileLine);f.__decorate([k.property({type:B,nonNullable:!0})],e.prototype,"color",void 0);f.__decorate([k.property()],e.prototype,"include",void 0);f.__decorate([k.property()],e.prototype,"exclude",void 0);f.__decorate([k.property({readOnly:!0})],e.prototype,"minDemResolution",null);f.__decorate([k.property()],e.prototype,"queryElevationDependencies",null);f.__decorate([k.property()],
e.prototype,"_visibleLayers",null);f.__decorate([k.property()],e.prototype,"_intersectOptions",null);f.__decorate([k.property()],e.prototype,"_pointCloudLayers",null);f.__decorate([k.property()],e.prototype,"_view",null);f.__decorate([k.property()],e.prototype,"_maxIntersectionDistance",null);f.__decorate([k.property()],e.prototype,"_intersector",null);return e=f.__decorate([J.subclass("esri.widgets.ElevationProfile.ElevationProfileLineView")],e)});