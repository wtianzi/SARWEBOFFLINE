// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.19/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/Error ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../geometry/Extent ../../core/Collection ../../intl/date ../../request ../../intl ../../core/Loadable ../../portal/Portal ../../core/Handles ../../Viewpoint ../../tasks/support/fileFormat ../../tasks/support/layoutTemplate ../../tasks/PrintTask ../../views/2d/viewpointUtils ../../tasks/support/PrintParameters ./CustomTemplate".split(" "),
function(w,g,e,O,P,h,Q,E,r,R,S,T,F,G,x,H,U,I,y,J,K,z,A,B,L,M,C){function N(k){k.layoutOptions||(k.layoutOptions={});k.layoutOptions.customTextElements||(k.layoutOptions.customTextElements=[]);k.layoutOptions.customTextElements.find(p=>"date"in p)||({customTextElements:k}=k.layoutOptions,k.push({date:x.formatDate(Date.now(),x.convertDateFormatToIntlOptions("short-date"))}))}const D=G.ofType(C);e=function(k){function p(a){a=k.call(this,a)||this;a._handles=new J;a._viewpoint=null;a.allowedFormats="all";
a.allowedLayouts="all";a.defaultTemplates=new D;a.includeDefaultTemplates=!0;a.effectivePrintServiceUrl=null;a.error=null;a.portal=y.getDefault();a.printServiceUrl=null;a.scaleEnabled=!1;a.templatesInfo=null;a.updateDelay=1E3;a.view=null;a.print=a.print.bind(w._assertThisInitialized(a));return a}w._inheritsLoose(p,k);var n=p.prototype;n.destroy=function(){this._handles.destroy();this.view=this._handles=null};n.load=async function(a){this.addResolvingPromise(this._loadResources(a).catch(c=>this.error=
c));return this};n.print=function(a){let c;if(!this.view)return Promise.reject(new r("print:view-required","view is not set"));this.scaleEnabled?(this._viewpoint||(this._viewpoint=this.view.viewpoint.clone()),c=this._getExtent(this._viewpoint,a.outScale)):(this._viewpoint=null,c=this._getExtent(this.view.viewpoint));N(a);a=new M({view:this.view,template:a,extent:c});return this.printTask.execute(a).catch(f=>Promise.reject(new r("print:export-error","print-task:cim-symbol-unsupported"===f.name?f.message:
"An error occurred while exporting the web map.",{error:f})))};n._loadResources=async function(a){let c=[];var {printServiceUrl:f}=this;if(!f){var t;if(this.destroyed)return;({portal:f}=this);try{await f.load(a)}catch(b){throw new r("print:could-not-load-portal","Cannot load print resource information from portal",{url:this.effectivePrintServiceUrl});}if(f=null==(t=f.helperServices)?void 0:t.printTask){var d;this._set("effectivePrintServiceUrl",f.url);c=(null!=(d=null==f?void 0:f.templates)?d:[]).map(b=>
C.fromJSON(b))}}0<c.length&&this.defaultTemplates.addMany(c);await this._loadServiceDescription(a)};n._loadServiceDescription=async function(a){a=await this._getPrintTemplatesFromService(a);this._set("templatesInfo",a)};n._getPrintTemplatesFromService=function(a){if(-1===this.effectivePrintServiceUrl.toLowerCase().split("/").indexOf("gpserver"))throw new r("print:invalid-print-service-url","Can't fetch print templates information from provided URL",{url:this.effectivePrintServiceUrl});return H(this.effectivePrintServiceUrl,
{...a,query:{f:"json"},timeout:6E4}).then(c=>{c=c&&c.data;let f=null,t=null;(c&&c.parameters).forEach(d=>{var b=d.choiceList&&d.choiceList.slice(),q;b&&b.length&&d.defaultValue&&(q=b.indexOf(d.defaultValue));-1<q&&(b.splice(q,1),b.unshift(d.defaultValue));q=(m,u)=>{const l="all"===u?m:m.filter(v=>-1<u.indexOf(v));return 0===l.length?m:l};if("Format"===d.name)b=q(b.map(z.fromJSON),this.allowedFormats),d=z.fromJSON(d.defaultValue),f={defaultValue:b.includes(d)?d:b[0],choiceList:b};else if("Layout_Template"===
d.name){b=b.filter(l=>"map_only"!==l.toLowerCase());let m,u;b.some((l,v)=>{l=l.toLowerCase();if(-1<l.indexOf("letter")&&-1<l.indexOf("landscape"))return m=v,!0;-1<l.indexOf("a4")&&-1<l.indexOf("landscape")&&(m=v);return!1});m&&(u=b[m],b.splice(m,1),b.unshift(u));b=q(b.map(A.fromJSON),this.allowedLayouts);d=A.fromJSON(d.defaultValue);t={defaultValue:b.includes(d)?d:b[0],choiceList:b}}});this.error=null;return{format:f,layout:t}}).catch(c=>{throw new r("print:unavailable-service-info","Can't fetch templates info from service",
{error:c});})};n._getExtent=function(a,c){c=c||this.view.scale;const f=this.get("view.size");a=a?a.targetGeometry:null;return L.getExtent(new F,new K({scale:c,targetGeometry:a}),f)};w._createClass(p,[{key:"printTask",get:function(){return new B(this.effectivePrintServiceUrl,{updateDelay:this.updateDelay})}},{key:"state",get:function(){return"loading"===this.loadStatus?"initializing":this.error||"failed"===this.loadStatus?"error":this.get("view.ready")&&"loaded"===this.loadStatus?"ready":"disabled"}}]);
return p}(I);g.__decorate([h.property()],e.prototype,"allowedFormats",void 0);g.__decorate([h.property()],e.prototype,"allowedLayouts",void 0);g.__decorate([h.property({type:D})],e.prototype,"defaultTemplates",void 0);g.__decorate([h.property()],e.prototype,"includeDefaultTemplates",void 0);g.__decorate([h.property({aliasOf:{source:"printServiceUrl",overridable:!0},readOnly:!0})],e.prototype,"effectivePrintServiceUrl",void 0);g.__decorate([h.property()],e.prototype,"error",void 0);g.__decorate([h.property({type:y})],
e.prototype,"portal",void 0);g.__decorate([h.property()],e.prototype,"printServiceUrl",void 0);g.__decorate([h.property({type:B})],e.prototype,"printTask",null);g.__decorate([h.property({readOnly:!0})],e.prototype,"state",null);g.__decorate([h.property()],e.prototype,"scaleEnabled",void 0);g.__decorate([h.property({readOnly:!0})],e.prototype,"templatesInfo",void 0);g.__decorate([h.property()],e.prototype,"updateDelay",void 0);g.__decorate([h.property()],e.prototype,"view",void 0);return e=g.__decorate([E.subclass("esri.widgets.Print.PrintViewModel")],
e)});